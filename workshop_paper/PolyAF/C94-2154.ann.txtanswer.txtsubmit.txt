Citance Number: 1 | Reference Article:  C94-2154.txt | Citing Article:  E95-1024-parscit-section.txt | Citation Marker Offset:  21636-21682 | Citation Marker:  Gerdemann and  King ... 1994 | Citation Offset:  21506-21601 | Citation Text:  This test grammar is based on the implementation of an analysis of partial vP topicalization ... in the Troll system (Gerdemann and King, 1994) | Reference Offset: ['9925-10011', '10013-10051'] | Reference Text:  The Troll system, which is based on this idea, effectively inqflements type resolution...Why does type resohttion succeed where | Discourse Facet: Aim_Citation |  Annotator:  a |
Citance Number: 2 | Reference Article:  C94-2154.txt | Citing Article:  J99-1002-parscit-section.txt | Citation Marker Offset:  53512-53544 | Citation Marker:  Gerdemann and King 1994 | Citation Offset:  53179-53288 | Citation Text:  there are a number of different constraint languages within feature structure frameworks (e.g., ... Gerdemann and King 1994; | Reference Offset: ['9791-9923', '9925-10011'] | Reference Text:  C, erdemann ,% King [8] have also shown that a feature strtlcture l]leets all encoded FCRs ifl" the feature structure is satisfiable...The Troll system, which is based on this idea, effectively inqflements type resolution | Discourse Facet: Method_Citation |  Annotator:  a |
Citance Number: 3 | Reference Article:  C94-2154.txt | Citing Article:  C94-2204-parscit-section.txt | Citation Marker Offset:  18053-18077 | Citation Marker:  GERDEMANN AND KING 1994 | Citation Offset:  18000-18766 | Citation Text:  Gerdemann and Gotz's Troll system (see [GOTz 1993], [GERDEMANN AND KING 1994] and [GERDEMANN (FC)]) employs an efficient refinement of RES to test the satisfiability of feature structures. In fact, Troll represents each feature structure as a disjunction of the resolvants of the feature structure. Loosely speaking, the resolvants of a feature structure have the same underlying finite state automaton as the feature structure, and differ only in their output fllnction. Troll exploits this property to represent each feature structure as a finite state automaton and a set of output functions. The Troll unifier is closed on these representations. Thus, though RES is computationally expensive, Troll uses RES only during compilation, never during run time | Reference Offset: ['9169-9326'] | Reference Text:  We write fS, ~vf8 and 'D~.)c$ for the collections of feature structures, resolved feature structures and disjunctive resolved feature structures respectively | Discourse Facet: Method_Citation |  Annotator:  a |
Citance Number: 4 | Reference Article:  C94-2154.txt | Citing Article:  W97-1506-parscit-section.txt | Citation Marker Offset:  1964-1982 | Citation Marker:  Gerdemann and King ... 1994 | Citation Offset:  1553-2032 | Citation Text:  Troll is a phrase structure backbone system very similar to ALE (Carpenter and Penn, 1994), but it differs from that system in that it is based on the set theoretic logic: of (King, 1989, 1994) rather than the information theoretic one of (Carpenter, 1992). The practical effect of this is that Troll implements an exhaustive typing strategy which provides the stronger kind of inferencing over descriptions (Gerdemann and King, 1993, 1994) required by standard HPSG theories | Reference Offset: ['8880-9127', '9127-9167'] | Reference Text:  Call a well-typed feature struc- ture in which all nodes are labelled with species a resolved feature structure and call a set of resolved feature structures that have the same underlying graph (that is, they differ only in their node labellings) ...a disjunctive resolved feature structure | Discourse Facet: Method_Citation |  Annotator:  a |
Citance Number: 5 | Reference Article:  C94-2154.txt | Citing Article:  C96-1076-parscit-section.txt | Citation Marker Offset:  10643-10661 | Citation Marker:  Gerdemann and King ... 1994 | Citation Offset:  10522-10988 | Citation Text:  Another example of where modularization might prove useful is in the treatment of typed feature structures presented in (Gerdemann and King, 1994). Their approach produces a set of feature structures from a satisfiability algorithm such that all of the feature structures have the same shape but the nodes may be labeled by different types. They then collapse this set down to a single feature structure where nodes are labeled with dependent disjunctions of types | Reference Offset: ['9127-9167', '9169-9326'] | Reference Text:  a disjunctive resolved feature structure...We write fS, ~vf8 and 'D~.)c$ for the collections of feature structures, resolved feature structures and disjunctive resolved feature structures respectively | Discourse Facet: Method_Citation |  Annotator:  a |
