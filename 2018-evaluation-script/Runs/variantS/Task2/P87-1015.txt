We consider the structural descriptions produced by various grammatical formalisms in terms of the complexity of the paths and the relationship between paths in the sets of structural descriptions that each system can generate.We examine both the complexity of the paths of trees in the tree sets  and the kinds of dependencies that the formalisms can impose between paths.In considering this aspect of a formalism  we hope to better understand the relationship between the structural descriptions generated by the grammars of a formalism  and the properties of semilinearity and polynomial recognizability.We have studied the structural descriptions (tree sets) that can be assigned by various grammatical systems  and classified these formalisms on the basis of two features: path complexity; and path independence.The independence of paths in the tree sets of the k tI grammatical formalism in this hierarchy can be shown by means of tree pumping lemma of the form t1ti3t .In considering the relationship between formalisms  we show that it is useful to abstract away from the details of the formalism  and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation  we describe a class of formalisms which we call Linear Context- Free Rewriting Systems  and show they are recognizable in polynomial time and generate only semilinear languages.In order to observe the similarity between these constrained systems  it is crucial to abstract away from the details of the structures and operations used by the system.By considering derivation trees  and thus abstracting away from the details of the composition operation and the structures being manipulated  we are able to state the similarities and differences between the 'This work was partially supported by NSF grants MCS42-19116-CER  MCS82-07294 and DCR-84-10413  ARO grant DAA 29-84-9-0027  and DARPA grant N00014-85-K0018.From the discussion so far it is clear that a number of formalisms involve some type of context-free rewriting (they have derivation trees that are local sets).Much of the study of grammatical systems in computational linguistics has been focused on the weak generative capacity of grammatical formalism.There has been recent interest in the application of Indexed Grammars (IG's) to natural languages.He also argues that paired English complementizers may also require structural descriptions whose path sets have nested dependencies.Gazdar (1985) argues that sharing of stacks can be used to give analyses for coordination.While the generative power of CG's is greater that of CFG's  it appears to be highly constrained.Little attention  however  has been paid to the structural descriptions that these formalisms can assign to strings  i.e. their strong generative capacity.Hence  their relationship to formalisms such as HG's and TAG's is of interest.This aspect of the formalism is both linguistically and computationally important.This property reflects an important aspect of the underlying linguistic theory associated with the formalism.These two properties of the tree sets are not only linguistically relevant  but also have computational importance.A second restriction on the formalisms is that choices during the derivation are independent of the context in the derivation.For example  Gazdar (1985) discusses the applicability of Indexed Grammars (IG's) to Natural Language in terms of the structural descriptions assigned; and Berwick (1984) discusses the strong generative capacity of Lexical-Functional Grammar (LFG) and Government and Bindings grammars (GB).Head Grammars (HG's)  introduced by Pollard (1984)  is a formalism that manipulates headed strings: i.e.  strings  one of whose symbols is distinguished as the head.TAG's can be used to give the structural descriptions discussed by Gazdar (1985) for the unbounded nested dependencies in Norwedish  for cross serial dependencies in Dutch subordinate clauses  and for the nestings of paired English complementizers.Steedman (1986) considers Categorial Grammars in which both the operations of function application and composition may be used  and in which function can specify whether they take their arguments from their right or left.Gazdar (1985) argues this is the appropriate analysis of unbounded dependencies in the hypothetical Scandinavian language Norwedish.The work of Thatcher (1973) and Rounds (1969) define formal systems that generate tree sets that are related to CFG's and IG's.The work of Rounds (1969) shows that the path sets of trees derived by IG's (like those of TAG's) are context-free languages.From Thatcher's (1973) work  it is obvious that the complexity of the set of paths from root to frontier of trees in a local set (the tree set of a CFG) is regular'.Thatcher (1973) describes a tee pumping lemma for recognizable sets related to the string pumping lemma for regular sets.We consider properties of the tree sets generated by CFG's  Tree Adjoining Grammars (TAG's)  Head Grammars (HG's)  Categorial Grammars (CG's)  and IG's.We now turn our attention to the recognition of string languages generated by these formalisms (LCFRL's).Thus  the tree sets generated by HG's are similar to those of CFG's  with each node annotated by the operation (concatenation or wrapping) used to combine the headed strings derived by the daughters of Tree Adjoining Grammars  a tree rewriting formalism  was introduced by Joshi  Levy and Takahashi (1975) and Joshi (1983/85).The semilinearity of Tree Adjoining Languages (TAL's)  MCTAL's  and Head Languages (HL's) can be proved using this property  with suitable restrictions on the composition operations.This family represents an attempt to generalize the properties shared by CFG's  HG's  TAG's  and MCTAG's.This kind of dependency arises from the use of the composition operation to compose two arbitrarily large categories.This suggests that by generalizing the notion of context-freeness in CFG's  we can define a class of grammatical formalisms that manipulate more complex structures.We are very grateful to Tony Kroc.h  Michael Pails  Sunil Shende  and Mark Steedman for valuable discussions. formalisms.In considering recognition of LCFRS's  we make further assumption concerning the contribution of each structure to the input string  and how the composition operations combine structures in this respect.The importance of this property becomes clear in contrasting theories underlying GPSG (Gazdar  Klein  Pulluna  and Sag  1985)  and GB (as described by Berwick  1984) with those underlying LFG and FUG.Gazdar (1985) considers a restriction of IG's in which no more than one nonterminal on the right-hand-side of a production can inherit the stack from the left-hand-side.It is striking that from this point of view many formalisms can be grouped together as having identically structured derivation tree sets.In this paper  we outline how such family of formalisms can be defined  and show that like CFG's  each member possesses a number of desirable linguistic and computational properties: in particular  the constant growth property and polynomial recognizability.As illustrated by MCTAG's  it is possible for a formalism to give tree sets with bounded dependent paths while still sharing the constrained rewriting properties of CFG's  HG's  and TAG's.Each member of a set of trees can be adjoined into distinct nodes of trees in a single elementary tree set  i.e  derivations always involve the adjunction of a derived auxiliary tree set into an elementary tree set.In defining LCFRS's  we hope to generalize the definition of CFG's to formalisms manipulating any structure  e.g. strings  trees  or graphs.We focus on this difference between the tree sets of CFG's and IG's  and formalize the notion of dependence between paths in a tree set in Section 3.Although this property is not structural  it depends on the structural property that sentences can be built from a finite set of clauses of bounded structure as noted by Joshi (1983/85).Similarly  for all the LCFRS's  discussed in Section 2  we can define the relationship between a structure and the sequence of substrings it spans  and the effect of the composition operations on sequences of substrings.Our goal is to define a class of formal systems  and show that any member of this class will possess certain attractive properties.It can be easily shown from Thatcher's result that the path set of every local set is a regular set.In addition  the restricted version of CG's (discussed in Section 6) generates tree sets with independent paths and we hope that it can be included in a more general definition of LCFRS's containing formalisms whose tree sets have path sets that are themselves LCFRL's (as in the case of the restricted indexed grammars  and the hierarchy defined by Weir).With the additional assumptions  inspired by Rounds (1985)  we can show that members of this class can be recognized in polynomial time.