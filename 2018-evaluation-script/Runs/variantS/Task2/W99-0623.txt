Three state-of-the-art statistical parsers are combined to produce more accurate parses  as well as new bounds on achievable Treebank parsing accuracy.The three parsers were trained and tuned by their creators on various sections of the WSJ portion of the Penn Treebank  leaving only sections 22 and 23 completely untouched during the development of any of the parsers.Under certain conditions the constituent voting and na誰ve Bayes constituent combination techniques are guaranteed to produce sets of constituents with no crossing brackets.In the interest of testing the robustness of these combining techniques  we added a fourth  simple nonlexicalized PCFG parser.The PCFG was trained from the same sections of the Penn Treebank as the other three parsers.Two general approaches are presented and two combination techniques are described for each approach.Once again we present both a non-parametric and a parametric technique for this task.Both parametric and non-parametric models are explored.We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.We have presented two general approaches to studying parser combination: parser switching and parse hybridization.Surprisingly  the non-parametric switching technique also exhibited robust behaviour in this situation.The Bayes models were able to achieve significantly higher precision than their non-parametric counterparts.The resulting parsers surpass the best previously published performance results for the Penn Treebank.The standard measures for evaluating Penn Treebank parsing performance are precision and recall of the predicted constituents.As seen by the drop in average individual parser performance baseline  the introduced parser does not perform very well.The natural language processing community is in the strong position of having many available approaches to solving some of its most fundamental problems.The machine learning community has been in a similar situation and has studied the combination of multiple classifiers (Wolpert  1992; Heath et al.  1996).The corpus-based statistical parsing community has many fast and accurate automated parsing systems  including systems produced by Collins (1997)  Charniak (1997) and Ratnaparkhi (1997).These three parsers have given the best reported parsing results on the Penn Treebank Wall Street Journal corpus (Marcus et al.  1993).This technique has the advantage of requiring no training  but it has the disadvantage of treating all parsers equally even though they may have differing accuracies or may specialize in modeling different phenomena.Similar advances have been made in machine translation (Frederking and Nirenburg  1994)  speech recognition (Fiscus  1997) and named entity recognition (Borthwick et al.  1998).Recently  combination techniques have been investigated for part of speech tagging with positive results (van Halteren et al.  1998; Brill and Wu  1998).From this we see that a finer-grained model for parser combination  at least for the features we have examined  will not give us any additional power.Their theoretical finding is simply stated: classification error rate decreases toward the noise rate exponentially in the number of independent  accurate classifiers.This is equivalent to the assumption used in probability estimation for na誰ve Bayes classifiers  namely that the attribute values are conditionally independent when the target value is given.The maximum precision row is the upper bound on accuracy if we could pick exactly the correct constituents from among the constituents suggested by the three parsers.IL+-1Proof: Assume a pair of crossing constituents appears in the output of the constituent voting technique using k parsers.The theory has also been validated empirically.The estimation of the probabilities in the model is carried out as shown in Equation 4.We performed three experiments to evaluate our techniques.Table 3 contains the results for evaluating our systems on the test set (section 22).The results in Table 2 were achieved on the development set.We have developed a general approach for combining parsers when preserving the entire structure of a parse tree is important.For example  one parser could be more accurate at predicting noun phrases than the other parsers.One hybridization strategy is to let the parsers vote on constituents' membership in the hypothesized set.In both cases the investigators were able to achieve significant improvements over the previous best tagging results.All four of the techniques studied result in parsing systems that perform better than any previously reported.We used these three parsers to explore parser combination techniques.Table 4 shows how much the Bayes switching technique uses each of the parsers on the test set.For each experiment we gave an nonparametric and a parametric technique for combining parsers.We are interested in combining the substructures of the input parses to produce a better parse.Another technique for parse hybridization is to use a na誰ve Bayes classifier to determine which constituents to include in the parse.We call this approach parse hybridization.We call this approach parser switching.We call this technique constituent voting.We call such a constituent an isolated constituent.The substructures that are unanimously hypothesized by the parsers should be preserved after combination  and the combination technique should not foolishly create substructures for which there is no supporting evidence.In general  the lemma of the previous section does not ensure that all the productions in the combined parse are found in the grammars of the member parsers.Another way to interpret this is that less than 5% of the correct constituents are missing from the hypotheses generated by the union of the three parsers.The constituent voting and na誰ve Bayes techniques are equivalent because the parameters learned in the training set did not sufficiently discriminate between the three parsers.One side of the decision making process is when we choose to believe a constituent should be in the parse  even though only one parser suggests it.