Citance Number,Reference Article,Citing Article,Citation Marker Offset,Citation Marker,Citation Offset,Citation Text,Citation Text Clean,Reference Offset,Reference Text,Discourse Facet
1,P87-1015,P01-1018,0,1987,0,"The approach that Vijay-Shanker et al (1987) and Weir (1988) take, elaborated on by Becker et al (1992), is to identify a very general class of formalisms, which they call linear context free rewriting systems (CFRSs), and define for this class a large space of structural descriptions which serves as a common ground in which the strong generative capacities of these formalisms can be compared","The approach that Vijay-Shanker et al (1987) and Weir (1988) take, elaborated on by Becker et al (1992), is to identify a very general class of formalisms, which they call linear context free rewriting systems (CFRSs), and define for this class a large space of structural descriptions which serves as a common ground in which the strong generative capacities of these formalisms can be compared","['1', '9', '232', '195', '110']","<S sid =""1"" ssid = ""1"">We consider the structural descriptions produced by various grammatical formalisms in terms of the complexity of the paths and the relationship between paths in the sets of structural descriptions that each system can generate.</S><S sid =""9"" ssid = ""7"">We examine both the complexity of the paths of trees in the tree sets  and the kinds of dependencies that the formalisms can impose between paths.</S><S sid =""232"" ssid = ""38"">In considering this aspect of a formalism  we hope to better understand the relationship between the structural descriptions generated by the grammars of a formalism  and the properties of semilinearity and polynomial recognizability.</S><S sid =""195"" ssid = ""1"">We have studied the structural descriptions (tree sets) that can be assigned by various grammatical systems  and classified these formalisms on the basis of two features: path complexity; and path independence.</S><S sid =""110"" ssid = ""16"">The independence of paths in the tree sets of the k tI grammatical formalism in this hierarchy can be shown by means of tree pumping lemma of the form t1ti3t .</S>",['Aim_Citation']
2,P87-1015,E09-1055,0,"Vijay-Shanker et al, 1987",0,"Here we use the standard definition of LCFRS (Vijay-Shanker et al, 1987) and only fix our notation; for a more thorough discussion of this formal ism, we refer to the literature. Let G be an LCFRS","Here we use the standard definition of LCFRS (Vijay-Shanker et al, 1987) and only fix our notation; for a more thorough discussion of this formal ism, we refer to the literature. Let G be an LCFRS","['2', '203', '232', '11', '116']","<S sid =""2"" ssid = ""2"">In considering the relationship between formalisms  we show that it is useful to abstract away from the details of the formalism  and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation  we describe a class of formalisms which we call Linear Context- Free Rewriting Systems  and show they are recognizable in polynomial time and generate only semilinear languages.</S><S sid =""203"" ssid = ""9"">In order to observe the similarity between these constrained systems  it is crucial to abstract away from the details of the structures and operations used by the system.</S><S sid =""232"" ssid = ""38"">In considering this aspect of a formalism  we hope to better understand the relationship between the structural descriptions generated by the grammars of a formalism  and the properties of semilinearity and polynomial recognizability.</S><S sid =""11"" ssid = ""9"">By considering derivation trees  and thus abstracting away from the details of the composition operation and the structures being manipulated  we are able to state the similarities and differences between the 'This work was partially supported by NSF grants MCS42-19116-CER  MCS82-07294 and DCR-84-10413  ARO grant DAA 29-84-9-0027  and DARPA grant N00014-85-K0018.</S><S sid =""116"" ssid = ""1"">From the discussion so far it is clear that a number of formalisms involve some type of context-free rewriting (they have derivation trees that are local sets).</S>",['Method_Citation']
3,P87-1015,W07-2214,0,"Vijay-Shanker et al, 1987",0,"There are many (structural) mildly context sensitive grammar formalisms ,e.g .mcfg ,lcfrs, mg, and they have been shown to be equivalent (Vijay-Shanker et al., 1987)","There are many (structural) mildly context sensitive grammar formalisms ,e.g .mcfg ,lcfrs, mg, and they have been shown to be equivalent (Vijay-Shanker et al., 1987)","['3', '48', '23', '56', '65']","<S sid =""3"" ssid = ""1"">Much of the study of grammatical systems in computational linguistics has been focused on the weak generative capacity of grammatical formalism.</S><S sid =""48"" ssid = ""33"">There has been recent interest in the application of Indexed Grammars (IG's) to natural languages.</S><S sid =""23"" ssid = ""8"">He also argues that paired English complementizers may also require structural descriptions whose path sets have nested dependencies.</S><S sid =""56"" ssid = ""41"">Gazdar (1985) argues that sharing of stacks can be used to give analyses for coordination.</S><S sid =""65"" ssid = ""50"">While the generative power of CG's is greater that of CFG's  it appears to be highly constrained.</S>",['Method_Citation']
4,P87-1015,P09-2003,0,nan,0,"They are in particular more powerful than linear context-free rewriting systems (LCFRS) (Vijay-Shanker et al, 1987)","They are in particular more powerful than linear context-free rewriting systems (LCFRS) (Vijay-Shanker et al, 1987)","['4', '3', '66', '195', '48']","<S sid =""4"" ssid = ""2"">Little attention  however  has been paid to the structural descriptions that these formalisms can assign to strings  i.e. their strong generative capacity.</S><S sid =""3"" ssid = ""1"">Much of the study of grammatical systems in computational linguistics has been focused on the weak generative capacity of grammatical formalism.</S><S sid =""66"" ssid = ""51"">Hence  their relationship to formalisms such as HG's and TAG's is of interest.</S><S sid =""195"" ssid = ""1"">We have studied the structural descriptions (tree sets) that can be assigned by various grammatical systems  and classified these formalisms on the basis of two features: path complexity; and path independence.</S><S sid =""48"" ssid = ""33"">There has been recent interest in the application of Indexed Grammars (IG's) to natural languages.</S>",['Aim_Citation']
5,P87-1015,P09-1111,0,"Vijay-Shanker et al, 1987",0,"Following this line, (Vijay-Shanker et al, 1987) have introduced a formalism called linear context-free rewriting systems (LCFRSs) that has received much attention in later years by the community","Following this line, (Vijay-Shanker et al, 1987) have introduced a formalism called linear context-free rewriting systems (LCFRSs) that has received much attention in later years by the community","['5', '198', '10', '123', '3']","<S sid =""5"" ssid = ""3"">This aspect of the formalism is both linguistically and computationally important.</S><S sid =""198"" ssid = ""4"">This property reflects an important aspect of the underlying linguistic theory associated with the formalism.</S><S sid =""10"" ssid = ""8"">These two properties of the tree sets are not only linguistically relevant  but also have computational importance.</S><S sid =""123"" ssid = ""8"">A second restriction on the formalisms is that choices during the derivation are independent of the context in the derivation.</S><S sid =""3"" ssid = ""1"">Much of the study of grammatical systems in computational linguistics has been focused on the weak generative capacity of grammatical formalism.</S>",['Method_Citation']
6,P87-1015,P09-1111,0,"Vijay-Shanker et al, 1987",0,"We briefly summarize here the terminology and notation that we adopt for LCFRS; for detailed definitions, see (Vijay-Shanker et al, 1987)","We briefly summarize here the terminology and notation that we adopt for LCFRS; for detailed definitions, see (Vijay-Shanker et al, 1987)","['6', '24', '35', '64', '22']","<S sid =""6"" ssid = ""4"">For example  Gazdar (1985) discusses the applicability of Indexed Grammars (IG's) to Natural Language in terms of the structural descriptions assigned; and Berwick (1984) discusses the strong generative capacity of Lexical-Functional Grammar (LFG) and Government and Bindings grammars (GB).</S><S sid =""24"" ssid = ""9"">Head Grammars (HG's)  introduced by Pollard (1984)  is a formalism that manipulates headed strings: i.e.  strings  one of whose symbols is distinguished as the head.</S><S sid =""35"" ssid = ""20"">TAG's can be used to give the structural descriptions discussed by Gazdar (1985) for the unbounded nested dependencies in Norwedish  for cross serial dependencies in Dutch subordinate clauses  and for the nestings of paired English complementizers.</S><S sid =""64"" ssid = ""49"">Steedman (1986) considers Categorial Grammars in which both the operations of function application and composition may be used  and in which function can specify whether they take their arguments from their right or left.</S><S sid =""22"" ssid = ""7"">Gazdar (1985) argues this is the appropriate analysis of unbounded dependencies in the hypothetical Scandinavian language Norwedish.</S>",['Method_Citation']
7,P87-1015,P07-1021,0,"Vijay-Shanker et al, 1987",0,"We write REGD.k/ to refer to the class of regular dependency languages with a gap-degree bounded by k. Linear Context-Free Rewriting Systems Gap-restricted dependency languages are closely related to Linear Context-Free Rewriting Systems (lcfrs) (Vijay-Shanker et al, 1987), a class of formal systems that generalizes several mildly context-sensitive grammar formalisms","Linear Context-Free Rewriting Systems Gap-restricted dependency languages are closely related to Linear Context-Free Rewriting Systems (lcfrs) (Vijay-Shanker et al, 1987), a class of formal systems that generalizes several mildly context-sensitive grammar formalisms","['7', '50', '16', '98', '24']","<S sid =""7"" ssid = ""5"">The work of Thatcher (1973) and Rounds (1969) define formal systems that generate tree sets that are related to CFG's and IG's.</S><S sid =""50"" ssid = ""35"">The work of Rounds (1969) shows that the path sets of trees derived by IG's (like those of TAG's) are context-free languages.</S><S sid =""16"" ssid = ""1"">From Thatcher's (1973) work  it is obvious that the complexity of the set of paths from root to frontier of trees in a local set (the tree set of a CFG) is regular'.</S><S sid =""98"" ssid = ""4"">Thatcher (1973) describes a tee pumping lemma for recognizable sets related to the string pumping lemma for regular sets.</S><S sid =""24"" ssid = ""9"">Head Grammars (HG's)  introduced by Pollard (1984)  is a formalism that manipulates headed strings: i.e.  strings  one of whose symbols is distinguished as the head.</S>",['Method_Citation']
8,P87-1015,N09-1061,0,"Vijay-Shanker et al, 1987",0,"This observation is in line with empirical studies in the context of dependency parsing, where the need for formalisms with higher fan-out has been observed even in standard, single language texts (Kuhlmann and Nivre, 2006) .In this paper, we present an algorithm that computes optimal decompositions of rules in the formalism of Linear Context-Free Rewriting Systems (LCFRS) (Vijay-Shanker et al, 1987)","This observation is in line with empirical studies in the context of dependency parsing, where the need for formalisms with higher fan-out has been observed even in standard, single language texts (Kuhlmann and Nivre, 2006). In this paper, we present an algorithm that computes optimal decompositions of rules in the formalism of Linear Context-Free Rewriting Systems (LCFRS) (Vijay-Shanker et al, 1987)","['8', '151', '27', '94', '208']","<S sid =""8"" ssid = ""6"">We consider properties of the tree sets generated by CFG's  Tree Adjoining Grammars (TAG's)  Head Grammars (HG's)  Categorial Grammars (CG's)  and IG's.</S><S sid =""151"" ssid = ""36"">We now turn our attention to the recognition of string languages generated by these formalisms (LCFRL's).</S><S sid =""27"" ssid = ""12"">Thus  the tree sets generated by HG's are similar to those of CFG's  with each node annotated by the operation (concatenation or wrapping) used to combine the headed strings derived by the daughters of Tree Adjoining Grammars  a tree rewriting formalism  was introduced by Joshi  Levy and Takahashi (1975) and Joshi (1983/85).</S><S sid =""94"" ssid = ""79"">The semilinearity of Tree Adjoining Languages (TAL's)  MCTAL's  and Head Languages (HL's) can be proved using this property  with suitable restrictions on the composition operations.</S><S sid =""208"" ssid = ""14"">This family represents an attempt to generalize the properties shared by CFG's  HG's  TAG's  and MCTAG's.</S>",['Results_Citation']
9,P87-1015,N09-1061,0,1987,0,"We briefly summarize the terminology and notation that we adopt for LCFRS; for detailed definitions, see Vijay-Shanker et al (1987)","We briefly summarize the terminology and notation that we adopt for LCFRS; for detailed definitions, see Vijay-Shanker et al (1987)","['9', '1', '8', '195', '110']","<S sid =""9"" ssid = ""7"">We examine both the complexity of the paths of trees in the tree sets  and the kinds of dependencies that the formalisms can impose between paths.</S><S sid =""1"" ssid = ""1"">We consider the structural descriptions produced by various grammatical formalisms in terms of the complexity of the paths and the relationship between paths in the sets of structural descriptions that each system can generate.</S><S sid =""8"" ssid = ""6"">We consider properties of the tree sets generated by CFG's  Tree Adjoining Grammars (TAG's)  Head Grammars (HG's)  Categorial Grammars (CG's)  and IG's.</S><S sid =""195"" ssid = ""1"">We have studied the structural descriptions (tree sets) that can be assigned by various grammatical systems  and classified these formalisms on the basis of two features: path complexity; and path independence.</S><S sid =""110"" ssid = ""16"">The independence of paths in the tree sets of the k tI grammatical formalism in this hierarchy can be shown by means of tree pumping lemma of the form t1ti3t .</S>",['Method_Citation']
10,P87-1015,W10-1407,0,"Vijay-Shanker et al, 1987",0,"LCFRS (Vijay-Shanker et al, 1987) are anatural extension of CFG in which a single nonterminal node can dominate more than one continuous span of terminals","LCFRS (Vijay-Shanker et al, 1987) are a natural extension of CFG in which a single nonterminal node can dominate more than one continuous span of terminals","['10', '5', '198', '68', '23']","<S sid =""10"" ssid = ""8"">These two properties of the tree sets are not only linguistically relevant  but also have computational importance.</S><S sid =""5"" ssid = ""3"">This aspect of the formalism is both linguistically and computationally important.</S><S sid =""198"" ssid = ""4"">This property reflects an important aspect of the underlying linguistic theory associated with the formalism.</S><S sid =""68"" ssid = ""53"">This kind of dependency arises from the use of the composition operation to compose two arbitrarily large categories.</S><S sid =""23"" ssid = ""8"">He also argues that paired English complementizers may also require structural descriptions whose path sets have nested dependencies.</S>",['Method_Citation']
11,P87-1015,W10-1407,0,"Vijay-Shanker et al, 1987",0,"A LCFRS (Vijay-Shanker et al, 1987) is a tuple G= (N, T, V, P, S )wherea) N is a finite set of non-terminals with a function dim: N? N that determines the fan-out of each A? N; b) T and V are disjoint finite sets of terminals and variables; c) S? N is the start symbol with dim (S)= 1; d) P is a finite set of rewriting rules A (? 1,..","A LCFRS (Vijay-Shanker et al, 1987) is a tuple G= (N, T, V, P, S ) where N is a finite set of non-terminals with a function dim: N? N that determines the fan-out of each A? N; b) T and V are disjoint finite sets of terminals and variables; c) S? N is the start symbol with dim (S)= 1; d) P is a finite set of rewriting rules A (? 1,..","['11', '2', '232', '14', '203']","<S sid =""11"" ssid = ""9"">By considering derivation trees  and thus abstracting away from the details of the composition operation and the structures being manipulated  we are able to state the similarities and differences between the 'This work was partially supported by NSF grants MCS42-19116-CER  MCS82-07294 and DCR-84-10413  ARO grant DAA 29-84-9-0027  and DARPA grant N00014-85-K0018.</S><S sid =""2"" ssid = ""2"">In considering the relationship between formalisms  we show that it is useful to abstract away from the details of the formalism  and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation  we describe a class of formalisms which we call Linear Context- Free Rewriting Systems  and show they are recognizable in polynomial time and generate only semilinear languages.</S><S sid =""232"" ssid = ""38"">In considering this aspect of a formalism  we hope to better understand the relationship between the structural descriptions generated by the grammars of a formalism  and the properties of semilinearity and polynomial recognizability.</S><S sid =""14"" ssid = ""12"">This suggests that by generalizing the notion of context-freeness in CFG's  we can define a class of grammatical formalisms that manipulate more complex structures.</S><S sid =""203"" ssid = ""9"">In order to observe the similarity between these constrained systems  it is crucial to abstract away from the details of the structures and operations used by the system.</S>",['Method_Citation']
12,P87-1015,E09-1053,0,1987,0,"In particular, we cast new light on the relationship between CCG and other mildly context-sensitive formalisms such as Tree-Adjoining Grammar (TAG; Joshi and Schabes (1997)) and Linear Context-Free Rewrite Systems (LCFRS; Vijay-Shanker et al (1987))","In particular, we cast new light on the relationship between CCG and other mildly context-sensitive formalisms such as Tree-Adjoining Grammar (TAG; Joshi and Schabes (1997)) and Linear Context-Free Rewrite Systems (LCFRS; Vijay-Shanker et al (1987))","['12', '137', '200', '22', '60']","<S sid =""12"" ssid = ""10"">We are very grateful to Tony Kroc.h  Michael Pails  Sunil Shende  and Mark Steedman for valuable discussions. formalisms.</S><S sid =""137"" ssid = ""22"">In considering recognition of LCFRS's  we make further assumption concerning the contribution of each structure to the input string  and how the composition operations combine structures in this respect.</S><S sid =""200"" ssid = ""6"">The importance of this property becomes clear in contrasting theories underlying GPSG (Gazdar  Klein  Pulluna  and Sag  1985)  and GB (as described by Berwick  1984) with those underlying LFG and FUG.</S><S sid =""22"" ssid = ""7"">Gazdar (1985) argues this is the appropriate analysis of unbounded dependencies in the hypothetical Scandinavian language Norwedish.</S><S sid =""60"" ssid = ""45"">Gazdar (1985) considers a restriction of IG's in which no more than one nonterminal on the right-hand-side of a production can inherit the stack from the left-hand-side.</S>",['Aim_Citation']
13,P87-1015,E09-1053,0,"Vijay-Shanker et al, 1987",0,"2 By this result, CCG falls in line with context-free grammars, TAG, and LCFRS, whose sets of deriva tional structures are all regular (Vijay-Shanker et al., 1987)","By this result, CCG falls in line with context-free grammars, TAG, and LCFRS, whose sets of derivational structures are all regular (Vijay-Shanker et al., 1987)","['13', '15', '116', '202', '78']","<S sid =""13"" ssid = ""11"">It is striking that from this point of view many formalisms can be grouped together as having identically structured derivation tree sets.</S><S sid =""15"" ssid = ""13"">In this paper  we outline how such family of formalisms can be defined  and show that like CFG's  each member possesses a number of desirable linguistic and computational properties: in particular  the constant growth property and polynomial recognizability.</S><S sid =""116"" ssid = ""1"">From the discussion so far it is clear that a number of formalisms involve some type of context-free rewriting (they have derivation trees that are local sets).</S><S sid =""202"" ssid = ""8"">As illustrated by MCTAG's  it is possible for a formalism to give tree sets with bounded dependent paths while still sharing the constrained rewriting properties of CFG's  HG's  and TAG's.</S><S sid =""78"" ssid = ""63"">Each member of a set of trees can be adjoined into distinct nodes of trees in a single elementary tree set  i.e  derivations always involve the adjunction of a derived auxiliary tree set into an elementary tree set.</S>",['Method_Citation']
14,P87-1015,E09-1053,0,"Vijay-Shanker et al, 1987",0,"It is important to note that while CCG derivations themselves can be seen as trees as well, they do not always form regular tree languages (Vijay-Shanker et al, 1987)","It is important to note that while CCG derivations themselves can be seen as trees as well, they do not always form regular tree languages (Vijay-Shanker et al, 1987)","['14', '119', '53', '142', '159']","<S sid =""14"" ssid = ""12"">This suggests that by generalizing the notion of context-freeness in CFG's  we can define a class of grammatical formalisms that manipulate more complex structures.</S><S sid =""119"" ssid = ""4"">In defining LCFRS's  we hope to generalize the definition of CFG's to formalisms manipulating any structure  e.g. strings  trees  or graphs.</S><S sid =""53"" ssid = ""38"">We focus on this difference between the tree sets of CFG's and IG's  and formalize the notion of dependence between paths in a tree set in Section 3.</S><S sid =""142"" ssid = ""27"">Although this property is not structural  it depends on the structural property that sentences can be built from a finite set of clauses of bounded structure as noted by Joshi (1983/85).</S><S sid =""159"" ssid = ""44"">Similarly  for all the LCFRS's  discussed in Section 2  we can define the relationship between a structure and the sequence of substrings it spans  and the effect of the composition operations on sequences of substrings.</S>",['Method_Citation']
15,P87-1015,N10-1035,0,1987,0,"On this line of investigation, mildly context-sensitive grammar formalisms have been introduced (Joshi,1985), including, among several others, the tree ad joining grammars (TAGs) of Joshi et al (1975) .Linear context-free rewriting system (LCFRS), introduced by Vijay-Shanker et al (1987), is a mildly context-sensitive formalism that allows the derivation of tuples of strings ,i.e., discontinuous phrases","On this line of investigation, mildly context-sensitive grammar formalisms have been introduced (Joshi,1985), including, among several others, the tree ad joining grammars (TAGs) of Joshi et al (1975). Linear context-free rewriting system (LCFRS), introduced by Vijay-Shanker et al (1987), is a mildly context-sensitive formalism that allows the derivation of tuples of strings, i.e., discontinuous phrases","['15', '202', '117', '116', '13']","<S sid =""15"" ssid = ""13"">In this paper  we outline how such family of formalisms can be defined  and show that like CFG's  each member possesses a number of desirable linguistic and computational properties: in particular  the constant growth property and polynomial recognizability.</S><S sid =""202"" ssid = ""8"">As illustrated by MCTAG's  it is possible for a formalism to give tree sets with bounded dependent paths while still sharing the constrained rewriting properties of CFG's  HG's  and TAG's.</S><S sid =""117"" ssid = ""2"">Our goal is to define a class of formal systems  and show that any member of this class will possess certain attractive properties.</S><S sid =""116"" ssid = ""1"">From the discussion so far it is clear that a number of formalisms involve some type of context-free rewriting (they have derivation trees that are local sets).</S><S sid =""13"" ssid = ""11"">It is striking that from this point of view many formalisms can be grouped together as having identically structured derivation tree sets.</S>",['Method_Citation']
16,P87-1015,P12-1053,0,1987,0,"CFTG are weakly equivalent to the simple macro grammars of Fischer (1968), which are a notational variant of the well-nested linear context-free rewriting systems (LCFRS) of Vijay-Shanker et al (1987) and the well-nested multiple context-free grammars (MCFG) of Seki et al (1991) .3 Thus, CFTG are mildly context-sensitive since their generated string languages are semi-linear and can be parsed in polynomial time (Go ?mez-Rodr? ?guez et al, 2010)","CFTG are weakly equivalent to the simple macro grammars of Fischer (1968), which are a notational variant of the well-nested linear context-free rewriting systems (LCFRS) of Vijay-Shanker et al (1987) and the well-nested multiple context-free grammars (MCFG) of Seki et al (1991)","['16', '50', '19', '229', '166']","<S sid =""16"" ssid = ""1"">From Thatcher's (1973) work  it is obvious that the complexity of the set of paths from root to frontier of trees in a local set (the tree set of a CFG) is regular'.</S><S sid =""50"" ssid = ""35"">The work of Rounds (1969) shows that the path sets of trees derived by IG's (like those of TAG's) are context-free languages.</S><S sid =""19"" ssid = ""4"">It can be easily shown from Thatcher's result that the path set of every local set is a regular set.</S><S sid =""229"" ssid = ""35"">In addition  the restricted version of CG's (discussed in Section 6) generates tree sets with independent paths and we hope that it can be included in a more general definition of LCFRS's containing formalisms whose tree sets have path sets that are themselves LCFRL's (as in the case of the restricted indexed grammars  and the hierarchy defined by Weir).</S><S sid =""166"" ssid = ""51"">With the additional assumptions  inspired by Rounds (1985)  we can show that members of this class can be recognized in polynomial time.</S>",['Method_Citation']
