Citance Number,Reference Article,Citing Article,Citation Marker Offset,Citation Marker,Citation Offset,Citation Text,Citation Text Clean,Reference Offset,Reference Text,Discourse Facet
2,E03-1005,N06-1045,0,"Bod, 2003",0,"Data-Oriented Parsing (DOP)? s methodology is to calculate weighted derivations, but as noted in (Bod, 2003), it is the highest ranking parse, not derivation, that is desired","Data-Oriented Parsing (DOP)'s methodology is to calculate weighted derivations, but as noted in (Bod, 2003), it is the highest ranking parse, not derivation, that is desired","['111', '105', '115', '133', '116']","<S sid =""111"" ssid = ""14"">Note that for n=1  SL-DOP is equal to Likelihood-DOP  since there is only one most probable tree to select from  and LS-DOP is equal to Simplicity-DOP  since there is only one simplest tree to select from.</S><S sid =""105"" ssid = ""8"">The derivation with the smallest sum  or highest rank  is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP  its results are still rather impressive for such a simple model.</S><S sid =""115"" ssid = ""18"">The only thing that needs to be changed for Simplicity-DOP is that all subtrees should be assigned equal probabilities.</S><S sid =""133"" ssid = ""14"">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S><S sid =""116"" ssid = ""19"">Then the shortest derivation is equal to the most probable derivation and can be computed by standard Viterbi optimization  which can be seen as follows: if each subtree has a probability p then the probability of a derivation involving n subtrees is equal to pn  and since 0<p<1  the derivation with the fewest subtrees has the greatest probability.</S>",['Method_Citation']
3,E03-1005,D07-1058,0,2003,0,"Goodman? s transform, in com bi nation with a range of heuristics, allowed Bod (2003) to run the DOP model on the Penn Treebank WSJ benchmark and obtain some of the best results obtained with a generative model","Goodman's transform, in combination with a range of heuristics, allowed Bod (2003) to run the DOP model on the Penn Treebank WSJ benchmark and obtain some of the best results obtained with a generative model","['145', '11', '53', '16', '22']","<S sid =""145"" ssid = ""10"">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid =""11"" ssid = ""8"">The DOP model  on the other hand  was the first model (to the best of our knowledge) that proposed not to train a predefined grammar on a corpus  but to directly use corpus fragments as a grammar.</S><S sid =""53"" ssid = ""5"">Let tid be the i-th subtree in the derivation d that produces tree T  then the probability of T is given by Thus DOP1 considers counts of subtrees of a wide range of sizes in computing the probability of a tree: everything from counts of single-level rules to counts of entire trees.</S><S sid =""16"" ssid = ""13"">While the models of Collins (1996) and Eisner (1996) restricted the fragments to the locality of head-words  later models showed the importance of including context from higher nodes in the tree (Charniak 1997; Johnson 1998a).</S><S sid =""22"" ssid = ""19"">DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).</S>",['Method_Citation']
4,E03-1005,D07-1058,0,"Bod, 2003",0,"Zuidema (2006a) shows that also the estimator (Bod, 2003) uses is biased and inconsistent, and will, even in the limit of infinite data, not correctly identify many possible distributions over trees","Zuidema (2006a) shows that also the estimator (Bod, 2003) uses is biased and inconsistent, and will, even in the limit of infinite data, not correctly identify many possible distributions over trees","['81', '143', '78', '28', '51']","<S sid =""81"" ssid = ""33"">The amount of probability given to two different training nodes depends on how many subtrees they have  and  given that the number of subtrees is an exponential function  this means that some training nodes could easily get hundreds or thousands of times the weight of others  even if both occur exactly once.</S><S sid =""143"" ssid = ""8"">While SL-DOP and LS-DOP have been compared before in Bod (2002)  especially in the context of musical parsing  this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules  and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid =""78"" ssid = ""30"">Moreover  Goodman's PCFG reduction may also be used to estimate the most probable parse by Viterbi n-best search which computes the n most likely derivations and then sums up the probabilities of the derivations producing the same tree.</S><S sid =""28"" ssid = ""25"">While Goodman's method does still not allow for an efficient computation of the most probable parse in DOP1  it does efficiently compute the &quot;maximum constituents parse&quot;  i.e. the parse tree which is most likely to have the largest number of correct constituents.</S><S sid =""51"" ssid = ""3"">That is  the probability of a subtree t is taken as the number of occurrences of t in the training set  I t I  divided by the total number of occurrences of all subtrees t' with the same root label as t. Let r(t) return the root label of t: The probability of a derivation ti0...0tn is computed by the product of the probabilities of its subtrees ti: = HP (t1) An important feature of DOP1 is that there may be several derivations that generate the same parse tree.</S>",['Method_Citation']
5,E03-1005,P11-1086,0,"Bod, 2003",0,"Second, we compare against a composed-rule system, which is analogous to the Data Oriented Parsing (DOP) approach in parsing (Bod, 2003)","Second, we compare against a composed-rule system, which is analogous to the Data Oriented Parsing (DOP) approach in parsing (Bod, 2003)","['91', '11', '88', '145', '47']","<S sid =""91"" ssid = ""43"">It easy to see that this is equivalent to reducing the probability of a tree by a factor of four for each pair of nonterminals it contains  resulting in the PCFG reduction in figure 4.</S><S sid =""11"" ssid = ""8"">The DOP model  on the other hand  was the first model (to the best of our knowledge) that proposed not to train a predefined grammar on a corpus  but to directly use corpus fragments as a grammar.</S><S sid =""88"" ssid = ""40"">In this paper  we will test a simple extension of Goodman's compact PCFG-reduction of DOP which has the same property as the normalization proposed in Bod (2001) in that it assigns roughly equal weight to each node in the training data.</S><S sid =""145"" ssid = ""10"">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid =""47"" ssid = ""44"">We show that a combination of a probabilistic and a simplicity metric  which chooses the simplest parse from the n likeliest parses  outperforms the use of these metrics alone.</S>",['Implication_Citation']
6,E03-1005,P04-1013,0,"Bod, 2003",0,"Our best performing model is more accurate than all these previous models except (Bod, 2003)","Our best performing model is more accurate than all these previous models except (Bod, 2003)","['6', '13', '128', '133', '107']","<S sid =""6"" ssid = ""3"">To appreciate these innovations  it should be noted that the model was radically different from all other statistical parsing models at the time.</S><S sid =""13"" ssid = ""10"">The other innovation of DOP was to take (in principle) all corpus fragments  of any size  rather than a small subset.</S><S sid =""128"" ssid = ""9"">Table 1 gives the results of these experiments and compares them with some other statistical parsers (resp.</S><S sid =""133"" ssid = ""14"">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S><S sid =""107"" ssid = ""10"">This suggests that a model which combines these two notions of best parse may boost the accuracy.</S>",['Method_Citation']
7,E03-1005,P04-1013,0,"Bod, 2003",0,"We find that the discriminative probability model is much worse than the generative one, but that training to optimize the discriminative criteria results in improved performance. Performance of the latter model on the standard test set achieves 90.1% F-measure on constituents, which is the second best current ac curacy level, and only 0.6% below the current best (Bod, 2003) .This paper has also proposed a neural network training method which optimizes a discriminative criteria even when the parameters being estimated are those of a generative probability model","Performance of the latter model on the standard test set achieves 90.1% F-measure on constituents, which is the second best current accuracy level, and only 0.6% below the current best (Bod, 2003)","['97', '45', '100', '51', '135']","<S sid =""97"" ssid = ""49"">In this paper  we will estimate the most probable parse by computing the 10 000 most probable derivations by means of Viterbi n-best  from which the most likely parse is estimated by summing up the probabilities of the derivations that generate the same parse.</S><S sid =""45"" ssid = ""42"">In the second part of this paper  we extend our experiments with a new notion of the best parse tree.</S><S sid =""100"" ssid = ""3"">In Bod (2000b)  an alternative notion for the best parse tree was proposed based on a simplicity criterion: instead of producing the most probable tree  this model produced the tree generated by the shortest derivation with the fewest training subtrees.</S><S sid =""51"" ssid = ""3"">That is  the probability of a subtree t is taken as the number of occurrences of t in the training set  I t I  divided by the total number of occurrences of all subtrees t' with the same root label as t. Let r(t) return the root label of t: The probability of a derivation ti0...0tn is computed by the product of the probabilities of its subtrees ti: = HP (t1) An important feature of DOP1 is that there may be several derivations that generate the same parse tree.</S><S sid =""135"" ssid = ""16"">In the following section first results of SL-DOP and LS-DOP with a compact PCFG-reduction. we will see that our new definition of best parse tree also outperforms the best results obtained in Bod (2001).</S>",['Method_Citation']
10,E03-1005,E06-2025,0,"Bod, 2003",0,"Similarly, (Bod, 2003) changes the way frequenciesfi are counted, with a similar effect","Similarly, (Bod, 2003) changes the way frequencies fi are counted, with a similar effect","['22', '62', '51', '45', '55']","<S sid =""22"" ssid = ""19"">DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).</S><S sid =""62"" ssid = ""14"">Let a represent the number of subtrees headed by nodes with nonterminal A  that is a =Ej aj.</S><S sid =""51"" ssid = ""3"">That is  the probability of a subtree t is taken as the number of occurrences of t in the training set  I t I  divided by the total number of occurrences of all subtrees t' with the same root label as t. Let r(t) return the root label of t: The probability of a derivation ti0...0tn is computed by the product of the probabilities of its subtrees ti: = HP (t1) An important feature of DOP1 is that there may be several derivations that generate the same parse tree.</S><S sid =""45"" ssid = ""42"">In the second part of this paper  we extend our experiments with a new notion of the best parse tree.</S><S sid =""55"" ssid = ""7"">Fortunately  there exists a compact PCFG-reduction of DOP1 that generates the same trees with the same probabilities  as shown by Goodman (1996  2002).</S>",['Method_Citation']
12,E03-1005,W06-2905,0,"Bod, 2003",0,"(henceforth, STSGs), which can represent single words, contiguous and noncontiguous MWEs, context-free rules or complete parse trees in a unified representation. My approach is closely related to work in statistical parsing known as Data-Oriented Parsing (DOP), an empirically highly successful approach with labeled recall and precision scores on the Penn Tree Bank that are among the best currently obtained (Bod, 2003)","My approach is closely related to work in statistical parsing known as Data-Oriented Parsing (DOP), an empirically highly successful approach with labeled recall and precision scores on the Penn Tree Bank that are among the best currently obtained (Bod, 2003)","['134', '100', '34', '105', '116']","<S sid =""134"" ssid = ""15"">This may be explained by the fact our best results in Bod (2001) were obtained by testing various subtree restrictions until the highest accuracy was obtained  while in the current experiment we used all subtrees as given by the PCFG-reduction.</S><S sid =""100"" ssid = ""3"">In Bod (2000b)  an alternative notion for the best parse tree was proposed based on a simplicity criterion: instead of producing the most probable tree  this model produced the tree generated by the shortest derivation with the fewest training subtrees.</S><S sid =""34"" ssid = ""31"">But even with cross-validation  ML-DOP is outperformed by the much simpler DOP1 model on both the ATIS and OVIS treebanks (Bod 2000b).</S><S sid =""105"" ssid = ""8"">The derivation with the smallest sum  or highest rank  is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP  its results are still rather impressive for such a simple model.</S><S sid =""116"" ssid = ""19"">Then the shortest derivation is equal to the most probable derivation and can be computed by standard Viterbi optimization  which can be seen as follows: if each subtree has a probability p then the probability of a derivation involving n subtrees is equal to pn  and since 0<p<1  the derivation with the fewest subtrees has the greatest probability.</S>",['Method_Citation']
13,E03-1005,W06-2905,0,"Bod, 2003",0,"Shown are results were only elementary trees with scores higher than 0.3 and 0.1 respectively are used. However, more interesting is a qualitative analysis of the STSG induced, which shows that ,un like DOP1, push-n-pull arrives at a grammar that gives high weights (and scores) to those elementary3We approximated the most probable parse as follows (fol lowing (Bod, 2003))","We approximated the most probable parse as follows (following (Bod, 2003))","['97', '26', '24', '106', '28']","<S sid =""97"" ssid = ""49"">In this paper  we will estimate the most probable parse by computing the 10 000 most probable derivations by means of Viterbi n-best  from which the most likely parse is estimated by summing up the probabilities of the derivations that generate the same parse.</S><S sid =""26"" ssid = ""23"">Sima'an (1995) gave an efficient algorithm for computing the parse tree generated by the most probable derivation  which in some cases is a reasonable approximation of the most probable parse.</S><S sid =""24"" ssid = ""21"">However  the problem of computing the most probable parse turns out to be NP-hard (Sima'an 1996)  mainly because the same parse tree can be generated by exponentially many derivations.</S><S sid =""106"" ssid = ""9"">What is more important  is  that the best parse trees predicted by Simplicity-DOP are quite different from the best parse trees predicted by Likelihood-DOP.</S><S sid =""28"" ssid = ""25"">While Goodman's method does still not allow for an efficient computation of the most probable parse in DOP1  it does efficiently compute the &quot;maximum constituents parse&quot;  i.e. the parse tree which is most likely to have the largest number of correct constituents.</S>",['Method_Citation']
14,E03-1005,P05-1022,0,"Bod, 2003",0,"This result is only slightly higher than the highest reported result for this test-set, Bod? s (.907) (Bod,2003)","This result is only slightly higher than the highest reported result for this test-set, Bod's (.907) (Bod,2003)","['133', '105', '94', '134', '106']","<S sid =""133"" ssid = ""14"">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S><S sid =""105"" ssid = ""8"">The derivation with the smallest sum  or highest rank  is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP  its results are still rather impressive for such a simple model.</S><S sid =""94"" ssid = ""46"">This paper presents the first published results with this estimator on the WSJ.</S><S sid =""134"" ssid = ""15"">This may be explained by the fact our best results in Bod (2001) were obtained by testing various subtree restrictions until the highest accuracy was obtained  while in the current experiment we used all subtrees as given by the PCFG-reduction.</S><S sid =""106"" ssid = ""9"">What is more important  is  that the best parse trees predicted by Simplicity-DOP are quite different from the best parse trees predicted by Likelihood-DOP.</S>",['Implication_Citation']
16,E03-1005,P07-1051,0,2003,0,"This assumption is in consonance with the principle of simplicity, but there are also empirical reasons for the shortest derivation assumption: in Bod (2003) and Hearne and Way (2006), it is shown that DOP models that select the preferred parse of a test sentence using the shortest derivation criterion perform very well","This assumption is in consonance with the principle of simplicity, but there are also empirical reasons for the shortest derivation assumption: in Bod (2003) and Hearne and Way (2006), it is shown that DOP models that select the preferred parse of a test sentence using the shortest derivation criterion perform very well","['51', '116', '105', '88', '145']","<S sid =""51"" ssid = ""3"">That is  the probability of a subtree t is taken as the number of occurrences of t in the training set  I t I  divided by the total number of occurrences of all subtrees t' with the same root label as t. Let r(t) return the root label of t: The probability of a derivation ti0...0tn is computed by the product of the probabilities of its subtrees ti: = HP (t1) An important feature of DOP1 is that there may be several derivations that generate the same parse tree.</S><S sid =""116"" ssid = ""19"">Then the shortest derivation is equal to the most probable derivation and can be computed by standard Viterbi optimization  which can be seen as follows: if each subtree has a probability p then the probability of a derivation involving n subtrees is equal to pn  and since 0<p<1  the derivation with the fewest subtrees has the greatest probability.</S><S sid =""105"" ssid = ""8"">The derivation with the smallest sum  or highest rank  is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP  its results are still rather impressive for such a simple model.</S><S sid =""88"" ssid = ""40"">In this paper  we will test a simple extension of Goodman's compact PCFG-reduction of DOP which has the same property as the normalization proposed in Bod (2001) in that it assigns roughly equal weight to each node in the training data.</S><S sid =""145"" ssid = ""10"">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>",['Method_Citation']
17,E03-1005,P07-1051,0,"Bod, 2003",0,"But equally important is the fact that this new DOP* model does not suffer from a decrease in parse accuracy if larger subtrees are included, whereas the original DOP model needs to be redressed by a correction factor to maintain this property (Bod 2003)","But equally important is the fact that this new DOP* model does not suffer from a decrease in parse accuracy if larger subtrees are included, whereas the original DOP model needs to be redressed by a correction factor to maintain this property (Bod 2003)","['11', '91', '79', '88', '28']","<S sid =""11"" ssid = ""8"">The DOP model  on the other hand  was the first model (to the best of our knowledge) that proposed not to train a predefined grammar on a corpus  but to directly use corpus fragments as a grammar.</S><S sid =""91"" ssid = ""43"">It easy to see that this is equivalent to reducing the probability of a tree by a factor of four for each pair of nonterminals it contains  resulting in the PCFG reduction in figure 4.</S><S sid =""79"" ssid = ""31"">While Bod (2001) needed to use a very large sample from the WSJ subtrees to do this  Goodman's method can do the same job with a more compact grammar.</S><S sid =""88"" ssid = ""40"">In this paper  we will test a simple extension of Goodman's compact PCFG-reduction of DOP which has the same property as the normalization proposed in Bod (2001) in that it assigns roughly equal weight to each node in the training data.</S><S sid =""28"" ssid = ""25"">While Goodman's method does still not allow for an efficient computation of the most probable parse in DOP1  it does efficiently compute the &quot;maximum constituents parse&quot;  i.e. the parse tree which is most likely to have the largest number of correct constituents.</S>",['Implication_Citation']
18,E03-1005,P07-1051,0,2003,0,"Of course, it is well-known that a supervised parser? s f-score decreases if it is transferred to another domain: for example, the (non-binarized) WSJ-trained DOP model in Bod (2003) decreases from around 91% to 85.5% f score if tested on the Brown corpus","Of course, it is well-known that a supervised parser's f-score decreases if it is transferred to another domain: for example, the (non-binarized) WSJ-trained DOP model in Bod (2003) decreases from around 91% to 85.5% f score if tested on the Brown corpus","['91', '11', '88', '138', '102']","<S sid =""91"" ssid = ""43"">It easy to see that this is equivalent to reducing the probability of a tree by a factor of four for each pair of nonterminals it contains  resulting in the PCFG reduction in figure 4.</S><S sid =""11"" ssid = ""8"">The DOP model  on the other hand  was the first model (to the best of our knowledge) that proposed not to train a predefined grammar on a corpus  but to directly use corpus fragments as a grammar.</S><S sid =""88"" ssid = ""40"">In this paper  we will test a simple extension of Goodman's compact PCFG-reduction of DOP which has the same property as the normalization proposed in Bod (2001) in that it assigns roughly equal weight to each node in the training data.</S><S sid =""138"" ssid = ""3"">Table 2 shows the results for sentences 100 words for various values of n. Note that there is an increase in accuracy for both SL-DOP and LS-DOP if the value of n increases from 1 to 12.</S><S sid =""102"" ssid = ""5"">In case the shortest derivation is not unique  Bod (2000b) proposes to back off to a frequency ordering of the subtrees.</S>",['Method_Citation']
19,E03-1005,W04-0305,0,"Bod, 2003",0,"A moderately larger vocabulary version (4215 tag-word pairs) of this parser achieves 89.8% F-measure on section 0, where the best current result on the testing set is 90.7% (Bod, 2003)","A moderately larger vocabulary version (4215 tag-word pairs) of this parser achieves 89.8% F-measure on section 0, where the best current result on the testing set is 90.7% (Bod, 2003)","['51', '45', '11', '50', '97']","<S sid =""51"" ssid = ""3"">That is  the probability of a subtree t is taken as the number of occurrences of t in the training set  I t I  divided by the total number of occurrences of all subtrees t' with the same root label as t. Let r(t) return the root label of t: The probability of a derivation ti0...0tn is computed by the product of the probabilities of its subtrees ti: = HP (t1) An important feature of DOP1 is that there may be several derivations that generate the same parse tree.</S><S sid =""45"" ssid = ""42"">In the second part of this paper  we extend our experiments with a new notion of the best parse tree.</S><S sid =""11"" ssid = ""8"">The DOP model  on the other hand  was the first model (to the best of our knowledge) that proposed not to train a predefined grammar on a corpus  but to directly use corpus fragments as a grammar.</S><S sid =""50"" ssid = ""2"">The probability of a parse tree is computed from the occurrencefrequencies of the subtrees in the treebank.</S><S sid =""97"" ssid = ""49"">In this paper  we will estimate the most probable parse by computing the 10 000 most probable derivations by means of Viterbi n-best  from which the most likely parse is estimated by summing up the probabilities of the derivations that generate the same parse.</S>",['Method_Citation']
20,E03-1005,P06-1109,0,2003,0,The probability of a parse tree T is the sum of the 1 This subtree probability is redressed by a simple correction factor discussed in Goodman (2003: 136) and Bod (2003),This subtree probability is redressed by a simple correction factor discussed in Goodman (2003: 136) and Bod (2003),"['30', '116', '68', '72', '134']","<S sid =""30"" ssid = ""27"">Bod (2000a) solved this problem by training the subtree probabilities by a maximum likelihood procedure based on Expectation-Maximization.</S><S sid =""116"" ssid = ""19"">Then the shortest derivation is equal to the most probable derivation and can be computed by standard Viterbi optimization  which can be seen as follows: if each subtree has a probability p then the probability of a derivation involving n subtrees is equal to pn  and since 0<p<1  the derivation with the fewest subtrees has the greatest probability.</S><S sid =""68"" ssid = ""20"">Thus  there are aj= (bk+ 1)(ci + 1) possible subtrees headed by A @j. Goodman then gives a simple small PCFG with the following property: for every subtree in the training corpus headed by A  the grammar will generate an isomorphic subderivation with probability 1/a.</S><S sid =""72"" ssid = ""24"">Goodman then shows by simple induction that subderivations headed by A with external nonterminals at the roots and leaves  internal nonterminals elsewhere have probability 1/a.</S><S sid =""134"" ssid = ""15"">This may be explained by the fact our best results in Bod (2001) were obtained by testing various subtree restrictions until the highest accuracy was obtained  while in the current experiment we used all subtrees as given by the PCFG-reduction.</S>",['Implication_Citation']
