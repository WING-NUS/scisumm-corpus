AdaBoost was first introduced in (Freund and Schapire 97); (Schapire and Singer 98) gave a generalization of AdaBoost which we will use in this paper.Several extensions of AdaBoost for multiclass problems have been suggested (Freund and Schapire 97; Schapire and Singer 98).The new algorithm  which we call CoBoost  uses labeled and unlabeled data and builds two classifiers in parallel.Limitations of (Blum and Mitchell 98): While the assumptions of (Blum and Mitchell 98) are useful in developing both theoretical results and an intuition for the problem  the assumptions are quite limited.Our first algorithm is similar to Yarowsky's  but with some important modifications motivated by (Blum and Mitchell 98).This allow the learners to &quot;bootstrap&quot; each other by filling the labels of the instances on which the other side has abstained so far.Denote the unthresholded classifiers after t — 1 rounds by git—1 and assume that it is the turn for the first classifier to be updated while the second one is kept fixed.The approach gains leverage from natural redundancy in the data: for many named-entity instances both the spelling of the name and the context in which it appears are sufficient to determine its type.N  portion of examples on which both classifiers give a label rather than abstaining)  and the proportion of these examples on which the two classifiers agree.It may be more realistic to replace the second criteria with a softer one  for example (Blum and Mitchell 98) suggest the alternative Alternatively  if Ii and 12 are probabilistic learners  it might make sense to encode the second constraint as one of minimizing some measure of the distance between the distributions given by the two learners.On each step CoBoost searches for a feature and a weight so as to minimize either 40 or 40.From here on we will refer to the named-entity string itself as the spelling of the entity  and the contextual predicate as the context.Using the virtual distribution Di (i) and pseudo-labels&quot;y. „ values for Wo  W± and W_ can be calculated for each possible weak hypothesis (i.e.  for each feature x E Xi); the weak hypothesis with minimal value for Wo + 2/WW _ can be chosen as before; and the weight for this weak hypothesis at = ln ww+411:) can be calculated.(7)  such as the likelihood function used in maximum-entropy problems and other generalized additive models (Lafferty 99).Thus at each iteration the algorithm is forced to pick features for the location  person and organization in turn for the classifier being trained.(Berland and Charniak 99) describe a method for extracting parts of objects from wholes (e.g.  &quot;speedometer&quot; from &quot;car&quot;) from a large corpus using hand-crafted patterns.Future work should also extend the approach to build a complete named entity extractor - a method that pulls proper names from text and then classifies them.(Hearst 92) describes a method for extracting hyponyms from a corpus (pairs of words in &quot;isa&quot; relations).A contextual rule considers words surrounding the string in the sentence in which it appears (e.g.  a rule that any proper name modified by an appositive whose head is president is a person).AdaBoost is given access to a weak learning algorithm  which accepts as input the training examples  along with a distribution over the instances.We make the assumption that for each example  both xi . and x2 2 alone are sufficient to determine the label yi.In the cotraining case  (Blum and Mitchell 98) argue that the task should be to induce functions Ii and f2 such that So Ii and 12 must (1) correctly classify the labeled examples  and (2) must agree with each other on the unlabeled examples.But we will show that the use of unlabeled data can drastically reduce the need for supervision.A large number of rules is needed for coverage of the domain  suggesting that a fairly large number of labeled examples should be required to train a classi- However  we show that the use of data can reduce the requirements for supervision to just 7 simple &quot;seed&quot; rules.Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.Schapire and Singer show that the training error is bounded above by Thus  in order to greedily minimize an upper bound on training error  on each iteration we should search for the weak hypothesis ht and the weight at that minimize Z.Inspection of the data shows that at n = 2500  the two classifiers both give labels on 44 281 (49.2%) of the unlabeled examples  and give the same label on 99.25% of these cases.For example  the independence assumptions mean that the model fails to capture the dependence between specific and more general features (for example the fact that the feature full.-string=New_York is always seen with the features contains (New) and The baseline method tags all entities as the most frequent class type (organization). contains (York) and is never seen with a feature such as contains (Group) ).Unfortunately  Yarowsky's method is not well understood from a theoretical viewpoint: we would like to formalize the notion of redundancy in unlabeled data  and set up the learning task as optimization of some appropriate objective function.Unfortunately  modifying the model to account for these kind of dependencies is not at all straightforward.Finally  we would like to note that it is possible to devise similar algorithms based with other objective functions than the one given in Equ.2 We now introduce a new algorithm for learning from unlabeled examples  which we will call DLCoTrain (DL stands for decision list  the term Cotrain is taken from (Blum and Mitchell 98)).It's not clear how to apply these methods in the unsupervised case  as they required cross-validation techniques: for this reason we use the simpler smoothing method shown here. input to the unsupervised algorithm is an initial  &quot;seed&quot; set of rules.The second algorithm extends ideas from boosting algorithms  designed for supervised learning tasks  to the framework suggested by (Blum and Mitchell 98).There are two differences between this method and the DL-CoTrain algorithm: spelling and contextual features  alternating between labeling and learning with the two types of features.The first method builds on results from (Yarowsky 95) and (Blum and Mitchell 98).The approach builds from an initial seed set for a category  and is quite similar to the decision list approach described in (Yarowsky 95).The algorithm can be viewed as heuristically optimizing an objective function suggested by (Blum and Mitchell 98); empirically it is shown to be quite successful in optimizing this criterion.A generative model was applied (similar to naive Bayes) with the three labels as hidden vanables on unlabeled examples  and observed variables on (seed) labeled examples.The approach uses both spelling and contextual rules.(Blum and Mitchell 98) go on to give PAC results for learning in the cotraining case.(If fewer than n rules have Precision greater than pin  we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events  hence we do not use smoothing  allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm n was fixed at 0.95 in all experiments in this paper.For a description of the application of AdaBoost to various NLP problems see the paper by Abney  Schapire  and Singer in this volume.This paper discusses the use of unlabeled examples for the problem of named entity classification.This paper discusses the use of unlabeled examples for the problem of named entity classification.An important reason for separating the two types of features is that this opens up the possibility of theoretical analysis of the use of unlabeled examples.