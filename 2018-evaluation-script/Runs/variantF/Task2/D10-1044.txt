This is a standard adaptation problem for SMT.Even when there is training data available in the domain of interest  there is often additional data from other domains that could in principle be used to improve performance.This is appropriate in cases where it is sanctioned by Bayes’ law  such as multiplying LM and TM probabilities  but for adaptation a more suitable framework is often a mixture model in which each event may be generated from some domain.This variant is tested in the experiments below.Realizing gains in practice can be challenging  however  particularly when the target domain is distant from the background data.We will also directly compare with a baseline similar to the Matsoukas et al approach in order to measure the benefit from weighting phrase pairs (or ngrams) rather than full sentences.We used it to score all phrase pairs in the OUT table  in order to provide a feature for the instance-weighting model.Phrase tables were extracted from the IN and OUT training corpora (not the dev as was used for instance weighting models)  and phrase pairs in the intersection of the IN and OUT phrase tables were used as positive examples  with two alternate definitions of negative examples: The classifier trained using the 2nd definition had higher accuracy on a development set.To approximate these baselines  we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.The corpus was wordaligned using both HMM and IBM2 models  and the phrase table was the union of phrases extracted from these separate alignments  with a length limit of 7.Moving beyond directly related work  major themes in SMT adaptation include the IR (Hildebrand et al.  2005; L¨u et al.  2007; Zhao et al.  2004) and mixture (Finch and Sumita  2008; Foster and Kuhn  2007; Koehn and Schroeder  2007; L¨u et al.  2007) approaches for LMs and TMs described above  as well as methods for exploiting monolingual in-domain text  typically by translating it automatically and then performing self training (Bertoldi and Federico  2009; Ueffing et al.  2007; Schwenk and Senellart  2009).There has also been some work on adapting the word alignment model prior to phrase extraction (Civera and Juan  2007; Wu et al.  2005)  and on dynamically choosing a dev set (Xu et al.  2007).To set β  we used the same criterion as for α  over a dev corpus: The MAP combination was used for TM probabilities only  in part due to a technical difficulty in formulating coherent counts when using standard LM smoothing techniques (Kneser and Ney  1995).3 Motivated by information retrieval  a number of approaches choose “relevant” sentence pairs from OUT by matching individual source sentences from IN (Hildebrand et al.  2005; L¨u et al.  2007)  or individual target hypotheses (Zhao et al.  2004).We extend the Matsoukas et al approach in several ways.We have already mentioned the closely related work by Matsoukas et al (2009) on discriminative corpus weighting  and Jiang and Zhai (2007) on (nondiscriminative) instance weighting.The 2nd block contains the IR system  which was tuned by selecting text in multiples of the size of the EMEA training corpus  according to dev set performance.However  when the linear LM is combined with a linear TM (lm+lin tm) or MAP TM (lm+map TM)  the results are much better than a log-linear combination for the EMEA setting  and on a par for NIST.Linear weights are difficult to incorporate into the standard MERT procedure because they are “hidden” within a top-level probability that represents the linear combination.1 Following previous work (Foster and Kuhn  2007)  we circumvent this problem by choosing weights to optimize corpus loglikelihood  which is roughly speaking the training criterion used by the LM and TM themselves.The original OUT counts co(s  t) are weighted by a logistic function wλ(s  t): To motivate weighting joint OUT counts as in (6)  we begin with the “ideal” objective for setting multinomial phrase probabilities 0 = {p(s|t)  dst}  which is the likelihood with respect to the true IN distribution pi(s  t).Matsoukas et al (2009) generalize it by learning weights on sentence pairs that are used when estimating relative-frequency phrase-pair probabilities.Phrase-level granularity distinguishes our work from previous work by Matsoukas et al (2009)  who weight sentences according to sub-corpus and genre membership.An easy way to achieve this is to put the domain-specific LMs and TMs into the top-level log-linear model and learn optimal weights with MERT (Och  2003).It was filtered to retain the top 30 translations for each source phrase using the TM part of the current log-linear model.Intuitively  as suggested by the example in the introduction  this is the right granularity to capture domain effects.The idea of distinguishing between general and domain-specific examples is due to Daum´e and Marcu (2006)  who used a maximum-entropy model with latent variables to capture the degree of specificity.In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material—though adequate for reasonable performance—is also available.We obtained positive results using a very simple phrase-based system in two different adaptation settings: using English/French Europarl to improve a performance on a small  specialized medical domain; and using non-news portions of the NIST09 training material to improve performance on the news-related corpora.We train linear mixture models for conditional phrase pair probabilities over IN and OUT so as to maximize the likelihood of an empirical joint phrase-pair distribution extracted from a development set.This is consistent with the nature of these two settings: log-linear combination  which effectively takes the intersection of IN and OUT  does relatively better on NIST  where the domains are broader and closer together.The first setting uses the European Medicines Agency (EMEA) corpus (Tiedemann  2009) as IN  and the Europarl (EP) corpus (www.statmt.org/europarl) as OUT  for English/French translation in both directions.With the additional assumption that (s  t) can be restricted to the support of co(s  t)  this is equivalent to a “flat” alternative to (6) in which each non-zero co(s  t) is set to one.Compared to the EMEA/EP setting  the two domains in the NIST setting are less homogeneous and more similar to each other; there is also considerably more IN text available.It is difficult to directly compare the Matsoukas et al results with ours  since our out-of-domain corpus is homogeneous; given heterogeneous training data  however  it would be trivial to include Matsoukas-style identity features in our instance-weighting model.However  it is robust  efficient  and easy to implement.4 To perform the maximization in (7)  we used the popular L-BFGS algorithm (Liu and Nocedal  1989)  which requires gradient information.In future work we plan to try this approach with more competitive SMT systems  and to extend instance weighting to other standard SMT components such as the LM  lexical phrase weights  and lexicalized distortion.A final alternate approach would be to combine weighted joint frequencies rather than conditional estimates  ie: cI(s  t) + w \(s  t)co(  s  t)  suitably normalized.5 Such an approach could be simulated by a MAP-style combination in which separate 0(t) values were maintained for each t. This would make the model more powerful  but at the cost of having to learn to downweight OUT separately for each t  which we suspect would require more training data for reliable performance.For comparison to information-retrieval inspired baselines  eg (L¨u et al.  2007)  we select sentences from OUT using language model perplexities from IN.Other work includes transferring latent topic distributions from source to target language for LM adaptation  (Tam et al.  2007) and adapting features at the sentence level to different categories of sentence (Finch and Sumita  2008).Finally  we intend to explore more sophisticated instanceweighting features for capturing the degree of generality of phrase pairs.Within this framework  we use features intended to capture degree of generality  including the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.Second  rather than relying on a division of the corpus into manually-assigned portions  we use features intended to capture the usefulness of each phrase pair.We used 22 features for the logistic weighting model  divided into two groups: one intended to reflect the degree to which a phrase pair belongs to general language  and one intended to capture similarity to the IN domain.For the TM  this is: where cI(s  t) is the count in the IN phrase table of pair (s  t)  po(s|t) is its probability under the OUT TM  and cI(t) = &quot;s  cI(s'  t).Our second contribution is to apply instance weighting at the level of phrase pairs.Its success depends on the two domains being relatively close  and on the OUT corpus not being so large as to overwhelm the contribution of IN.We do not adapt the alignment procedure for generating the phrase table from which the TM distributions are derived.This is not unreasonable given the application to phrase pairs from OUT  but it suggests that an interesting alternative might be to use a plain log-linear weighting function exp(Ei Aifi(s  t))  with outputs in [0  oo].We focus here instead on adapting the two most important features: the language model (LM)  which estimates the probability p(wIh) of a target word w following an ngram h; and the translation models (TM) p(slt) and p(t1s)  which give the probability of source phrase s translating to target phrase t  and vice versa.The general-language features have a slight advantage over the similarity features  and both are better than the SVM feature.