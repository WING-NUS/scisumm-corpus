While the PCFG reduction of Bod (2001) obtains state-of-the-art results on the WSJ  comparable to Charniak (2000)  Bonnema et al. 's estimator performs worse and is comparable to Collins (1996).By using these PCFG-reductions we can thus parse with all subtrees in polynomial time.Many implementations of DOP1 therefore estimate the most probable parse by Monte Carlo techniques (Bod 1998; Chappelier & Rajman 2000)  or by Viterbi n-best search (Bod 2001)  or by restricting the set of subtrees (Sima'an 1999; Chappelier et al. 2002).DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).Yet  his grammar contains more than 5 million subtrees and processing times of over 200 seconds per WSJ sentence are reported (Bod 2003).For example  Bod (2001) samples a fixed number of subtrees of each depth  which has the effect of assigning roughly equal weight to each node in the training data  and roughly exponentially less probability for larger trees (see Goodman 2002: 12).The notation A@k denotes the node at address k where A is the nonterminal labeling that node.Goodman (2002) furthermore showed how Bonnema et al. 's (1999) and Bod's (2001) estimators can be incorporated in his PCFGreduction  but did not report any experiments with these reductions.While Bod (2001) needed to use a very large sample from the WSJ subtrees to do this  Goodman's method can do the same job with a more compact grammar.Moreover  if n gets large  SL-DOP converges to Simplicity-DOP while LS-DOP converges to Likelihood-DOP.The underlying idea of combining LikelihoodDOP and Simplicity-DOP is that the parser selects the simplest tree from among the n most probable trees  where n is a free parameter.The derivation with the smallest sum  or highest rank  is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP  its results are still rather impressive for such a simple model.Bod (2000a) solved this problem by training the subtree probabilities by a maximum likelihood procedure based on Expectation-Maximization.But while the accuracy of SL-DOP decreases after n=14 and converges to Simplicity DOP  the accuracy of LS-DOP continues to increase and converges to Likelihood-DOP.However  ML-DOP suffers from overlearning if the subtrees are trained on the same treebank trees as they are derived from.DOP1 has a serious bias: its subtree estimator provides more probability to nodes with more subtrees (Bonnema et al. 1999).For the node in figure 1  the following eight PCFG rules are generated  where the number in parentheses following a rule is its probability.Bonnema et al. (1999) show that as a consequence too much weight is given to larger subtrees  and that the parse accuracy of DOP1 deteriorates if (very) large subtrees are included.The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.Tested on the OVIS corpus  Bonnema et al. 's proposal obtains results that are comparable to Sima'an (1999) -- see Bonnema et al.That is  the probability of a subtree t is taken as the number of occurrences of t in the training set  I t I  divided by the total number of occurrences of all subtrees t' with the same root label as t. Let r(t) return the root label of t: The probability of a derivation ti0...0tn is computed by the product of the probabilities of its subtrees ti: = HP (t1) An important feature of DOP1 is that there may be several derivations that generate the same parse tree.We will refer to this model as Simplicity-DOP.This paper presents the first published results with this estimator on the WSJ.We show that these PCFG-reductions result in a 60 times speedup in processing time w.r.t.This approach has now gained wide usage  as exemplified by the work of Collins (1996  1999)  Charniak (1996  1997)  Johnson (1998)  Chiang (2000)  and many others.In the second part of this paper  we extend our experiments with a new notion of the best parse tree.We can create a subtree by choosing any possible left subtree and any possible right subtree.We focused on the Labeled Precision (LP) and Labeled Recall (LR) scores  as these are commonly used to rank parsing systems.Note that for n=1  SL-DOP is equal to Likelihood-DOP  since there is only one most probable tree to select from  and LS-DOP is equal to Simplicity-DOP  since there is only one simplest tree to select from.An Efficient Implementation of a New DOP ModelThis paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.What is more important  is  that the best parse trees predicted by Simplicity-DOP are quite different from the best parse trees predicted by Likelihood-DOP.Thus  there are aj= (bk+ 1)(ci + 1) possible subtrees headed by A @j. Goodman then gives a simple small PCFG with the following property: for every subtree in the training corpus headed by A  the grammar will generate an isomorphic subderivation with probability 1/a.While Goodman's method does still not allow for an efficient computation of the most probable parse in DOP1  it does efficiently compute the &quot;maximum constituents parse&quot;  i.e. the parse tree which is most likely to have the largest number of correct constituents.Although Bod's method obtains very competitive results on the Wall Street Journal (WSJ) task  the parsing time was reported to be over 200 seconds per sentence (Bod 2003).The other innovation of DOP was to take (in principle) all corpus fragments  of any size  rather than a small subset.Collins & Duffy (2002) showed how the perceptron algorithm can be used to efficiently compute the best parse with DOP1's subtrees  reporting a 5.1% relative reduction in error rate over the model in Collins (1999) on the WSJ.Johnson (1998b  2002) showed that DOP1's subtree estimation method is statistically biased and inconsistent.But while Bod's estimator obtains state-of-the-art results on the WSJ  comparable to Charniak (2000) and Collins (2000)  Bonnema et al. 's estimator performs worse and is comparable to Collins (1996).However  during the last few years we can observe a shift towards using more and larger corpus fragments with fewer restrictions.Note that Goodman's PCFG-reduction method summarized in Section 2 applies not only to Likelihood-DOP but also to Simplicity-DOP.Let a be the number of times nonterminals of type A occur in the training data.