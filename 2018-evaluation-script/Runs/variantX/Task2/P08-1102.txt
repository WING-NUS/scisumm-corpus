Without the perceptron  the cascaded model (if we can still call it “cascaded”) performs poorly on both segmentation and Joint S&T.Instead of incorporating all features into the perceptron directly  we first trained the perceptron using character-based features  and several other sub-models using additional ones such as word or POS n-grams  then trained the outside-layer linear model using the outputs of these sub-models  including the perceptron.How can we utilize these knowledge sources effectively?The perceptron has been used in many NLP tasks  such as POS tagging (Collins  2002)  Chinese word segmentation (Ng and Low  2004; Zhang and Clark  2007) and so on.If this cascaded linear model were chosen  could more accurate generative models (LMs  word-POS co-occurrence model) be obtained by training on large scale corpus even if the corpus is not correctly labelled entirely  or by self-training on raw corpus in a similar approach to that of McClosky (2006)?It is an important measure of fluency of the translation in SMT.Table 4 shows experiments results.In all experiments  we use the averaged parameters for the perceptrons  and F-measure as the accuracy measure.In this architecture  knowledge sources that are intractable to incorporate into the perceptron  can be easily incorporated into the outside linear model.We adopt the perceptron training algorithm of Collins (2002) to learn a discriminative model mapping from inputs x ∈ X to outputs y ∈ Y   where X is the set of sentences in the training corpus and Y is the set of corresponding labelled results.Given a Chinese character sequence C1:n  the decoding procedure can proceed in a left-right fashion with a dynamic programming approach.By maintaining a stack of size N at each position i of the sequence  we can preserve the top N best candidate labelled results of subsequence C1:i during decoding.CRFs have the advantage of flexibility in representing features compared to generative ones such as HMM  and usually behaves the best in the two tasks.Following Collins  we use a function GEN(x) generating all candidate results of an input x   a representation 4) mapping each training example (x  y) ∈ X × Y to a feature vector 4)(x  y) ∈ Rd  and a parameter vector α� ∈ Rd corresponding to the feature vector. d means the dimension of the vector space  it equals to the amount of features in the model.However  can the perceptron incorporate all the knowledge used in the outside-layer linear model?As shown in Figure 1  the character-based perceptron is used as the inside-layer linear model and sends its output to the outside-layer.On the three corpora  it also outperformed the word-based perceptron model of Zhang and Clark (2007).For convenience of comparing with others  we focus only on the close test  which means that any extra resource is forbidden except the designated training corpus.For an input character sequence x  we aim to find an output F(x) satisfying: vector 4)(x  y) and the parameter vector a.In this layer  each knowledge source is treated as a feature with a corresponding weight denoting its relative importance.To alleviate overfitting on the training examples  we use the refinement strategy called “averaged parameters” (Collins  2002) to the algorithm in Algorithm 1.Using W = w1:m to denote the word sequence  T = t1:m to denote the corresponding POS sequence  P (T |W) to denote the probability that W is labelled as T  and P(W|T) to denote the probability that T generates W  we can define the cooccurrence model as follows: λwt and λtw denote the corresponding weights of the two components.The second was conducted on the Penn Chinese Treebank 5.0 (CTB5.0) to test the performance of the cascaded model on segmentation and Joint S&T.In addition  we add the score of the word count penalty as another feature to alleviate the tendency of LMs to favor shorter candidates.Templates immediately borrowed from Ng and Low (2004) are listed in the upper column named non-lexical-target.Templates in the column below are expanded from the upper ones.Note that the templates of Ng and Low (2004) have already contained some lexical-target ones.According to Ng and Low (2004)  the segmentation task can be transformed to a tagging problem by assigning each character a boundary tag of the following four types: We can extract segmentation result by splitting the labelled result into subsequences of pattern s or bm*e which denote single-character word and multicharacter word respectively.It has a two-layer architecture  with a perceptron as the core and another linear model as the outside-layer.We will describe it in detail in Section 4.In following subsections  we describe the feature templates and the perceptron training algorithm.In order to test the performance of the lexical-target templates and meanwhile determine the best iterations over the training corpus  we randomly chosen 2  000 shorter sentences (less than 50 words) as the development set and the rest as the training set (84  294 sentences)  then trained a perceptron model named NON-LEX using only nonlexical-target features and another named LEX using both the two kinds of features.Function D derives the candidate result from the word-POS pair p and the candidate q at prior position of p.To segment and tag a character sequence  there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).According to the usual practice in syntactic analysis  we choose chapters 1 − 260 (18074 sentences) as training set  chapter 271 − 300 (348 sentences) as test set and chapter 301 − 325 (350 sentences) as development set.However unlike the three features  the word LM brings very tiny improvement.With precision P and recall R  the balance F-measure is defined as: F = 2PR/(P + R).With a character-based perceptron as the core  combined with realvalued features such as language models  the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.To alleviate the drawbacks  we propose a cascaded linear model.Here the core perceptron was just the POS+ model in experiments above.Then we trained LEX on each of the four corpora for 7 iterations.Among other features  the 4-gram POS LM plays the most important role  removing this feature causes F-measure decrement of 0.33 points on segmentation and 0.71 points on Joint S&T.As predications generated from such templates depend on the current character  we name these templates lexical-target.In our experiments we trained a 3-gram word language model measuring the fluency of the segmentation result  a 4-gram POS language model functioning as the product of statetransition probabilities in HMM  and a word-POS co-occurrence model describing how much probably a word sequence coexists with a POS sequence.Figure 2 shows the growing tendency of feature space with the introduction of these features as well as the character-based ones.Experiments show that the cascaded model achieves improved accuracies on both segmentation only and joint segmentation and part-of-speech tagging.Algorithm 2 shows the decoding algorithm.Additional features most widely used are related to word or POS ngrams.However  as such features are generated dynamically during the decoding procedure  two limitation arise: on the one hand  the amount of parameters increases rapidly  which is apt to overfit on training corpus; on the other hand  exact inference by dynamic programming is intractable because the current predication relies on the results of prior predications.All feature templates and their instances are shown in Table 1.