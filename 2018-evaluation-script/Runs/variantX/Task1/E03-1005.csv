Citance Number,Reference Article,Citing Article,Citation Marker Offset,Citation Marker,Citation Offset,Citation Text,Citation Text Clean,Reference Offset,Reference Text,Discourse Facet
2,E03-1005,N06-1045,0,"Bod, 2003",0,"Data-Oriented Parsing (DOP)? s methodology is to calculate weighted derivations, but as noted in (Bod, 2003), it is the highest ranking parse, not derivation, that is desired","Data-Oriented Parsing (DOP)'s methodology is to calculate weighted derivations, but as noted in (Bod, 2003), it is the highest ranking parse, not derivation, that is desired","['130', '95', '25', '22', '87']","<S sid =""130"" ssid = ""11"">While the PCFG reduction of Bod (2001) obtains state-of-the-art results on the WSJ  comparable to Charniak (2000)  Bonnema et al. 's estimator performs worse and is comparable to Collins (1996).</S><S sid =""95"" ssid = ""47"">By using these PCFG-reductions we can thus parse with all subtrees in polynomial time.</S><S sid =""25"" ssid = ""22"">Many implementations of DOP1 therefore estimate the most probable parse by Monte Carlo techniques (Bod 1998; Chappelier & Rajman 2000)  or by Viterbi n-best search (Bod 2001)  or by restricting the set of subtrees (Sima'an 1999; Chappelier et al. 2002).</S><S sid =""22"" ssid = ""19"">DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).</S><S sid =""87"" ssid = ""39"">Yet  his grammar contains more than 5 million subtrees and processing times of over 200 seconds per WSJ sentence are reported (Bod 2003).</S>",['Implication_Citation']
3,E03-1005,D07-1058,0,2003,0,"Goodman? s transform, in com bi nation with a range of heuristics, allowed Bod (2003) to run the DOP model on the Penn Treebank WSJ benchmark and obtain some of the best results obtained with a generative model","Goodman's transform, in combination with a range of heuristics, allowed Bod (2003) to run the DOP model on the Penn Treebank WSJ benchmark and obtain some of the best results obtained with a generative model","['85', '58', '40', '79', '112']","<S sid =""85"" ssid = ""37"">For example  Bod (2001) samples a fixed number of subtrees of each depth  which has the effect of assigning roughly equal weight to each node in the training data  and roughly exponentially less probability for larger trees (see Goodman 2002: 12).</S><S sid =""58"" ssid = ""10"">The notation A@k denotes the node at address k where A is the nonterminal labeling that node.</S><S sid =""40"" ssid = ""37"">Goodman (2002) furthermore showed how Bonnema et al. 's (1999) and Bod's (2001) estimators can be incorporated in his PCFGreduction  but did not report any experiments with these reductions.</S><S sid =""79"" ssid = ""31"">While Bod (2001) needed to use a very large sample from the WSJ subtrees to do this  Goodman's method can do the same job with a more compact grammar.</S><S sid =""112"" ssid = ""15"">Moreover  if n gets large  SL-DOP converges to Simplicity-DOP while LS-DOP converges to Likelihood-DOP.</S>",['Implication_Citation']
4,E03-1005,D07-1058,0,"Bod, 2003",0,"Zuidema (2006a) shows that also the estimator (Bod, 2003) uses is biased and inconsistent, and will, even in the limit of infinite data, not correctly identify many possible distributions over trees","Zuidema (2006a) shows that also the estimator (Bod, 2003) uses is biased and inconsistent, and will, even in the limit of infinite data, not correctly identify many possible distributions over trees","['130', '25', '40', '108', '105']","<S sid =""130"" ssid = ""11"">While the PCFG reduction of Bod (2001) obtains state-of-the-art results on the WSJ  comparable to Charniak (2000)  Bonnema et al. 's estimator performs worse and is comparable to Collins (1996).</S><S sid =""25"" ssid = ""22"">Many implementations of DOP1 therefore estimate the most probable parse by Monte Carlo techniques (Bod 1998; Chappelier & Rajman 2000)  or by Viterbi n-best search (Bod 2001)  or by restricting the set of subtrees (Sima'an 1999; Chappelier et al. 2002).</S><S sid =""40"" ssid = ""37"">Goodman (2002) furthermore showed how Bonnema et al. 's (1999) and Bod's (2001) estimators can be incorporated in his PCFGreduction  but did not report any experiments with these reductions.</S><S sid =""108"" ssid = ""11"">The underlying idea of combining LikelihoodDOP and Simplicity-DOP is that the parser selects the simplest tree from among the n most probable trees  where n is a free parameter.</S><S sid =""105"" ssid = ""8"">The derivation with the smallest sum  or highest rank  is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP  its results are still rather impressive for such a simple model.</S>",['Results_Citation']
5,E03-1005,P11-1086,0,"Bod, 2003",0,"Second, we compare against a composed-rule system, which is analogous to the Data Oriented Parsing (DOP) approach in parsing (Bod, 2003)","Second, we compare against a composed-rule system, which is analogous to the Data Oriented Parsing (DOP) approach in parsing (Bod, 2003)","['30', '139', '32', '22', '40']","<S sid =""30"" ssid = ""27"">Bod (2000a) solved this problem by training the subtree probabilities by a maximum likelihood procedure based on Expectation-Maximization.</S><S sid =""139"" ssid = ""4"">But while the accuracy of SL-DOP decreases after n=14 and converges to Simplicity DOP  the accuracy of LS-DOP continues to increase and converges to Likelihood-DOP.</S><S sid =""32"" ssid = ""29"">However  ML-DOP suffers from overlearning if the subtrees are trained on the same treebank trees as they are derived from.</S><S sid =""22"" ssid = ""19"">DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).</S><S sid =""40"" ssid = ""37"">Goodman (2002) furthermore showed how Bonnema et al. 's (1999) and Bod's (2001) estimators can be incorporated in his PCFGreduction  but did not report any experiments with these reductions.</S>",['Method_Citation']
6,E03-1005,P04-1013,0,"Bod, 2003",0,"Our best performing model is more accurate than all these previous models except (Bod, 2003)","Our best performing model is more accurate than all these previous models except (Bod, 2003)","['80', '112', '79', '71', '139']","<S sid =""80"" ssid = ""32"">DOP1 has a serious bias: its subtree estimator provides more probability to nodes with more subtrees (Bonnema et al. 1999).</S><S sid =""112"" ssid = ""15"">Moreover  if n gets large  SL-DOP converges to Simplicity-DOP while LS-DOP converges to Likelihood-DOP.</S><S sid =""79"" ssid = ""31"">While Bod (2001) needed to use a very large sample from the WSJ subtrees to do this  Goodman's method can do the same job with a more compact grammar.</S><S sid =""71"" ssid = ""23"">For the node in figure 1  the following eight PCFG rules are generated  where the number in parentheses following a rule is its probability.</S><S sid =""139"" ssid = ""4"">But while the accuracy of SL-DOP decreases after n=14 and converges to Simplicity DOP  the accuracy of LS-DOP continues to increase and converges to Likelihood-DOP.</S>",['Method_Citation']
7,E03-1005,P04-1013,0,"Bod, 2003",0,"We find that the discriminative probability model is much worse than the generative one, but that training to optimize the discriminative criteria results in improved performance. Performance of the latter model on the standard test set achieves 90.1% F-measure on constituents, which is the second best current ac curacy level, and only 0.6% below the current best (Bod, 2003) .This paper has also proposed a neural network training method which optimizes a discriminative criteria even when the parameters being estimated are those of a generative probability model","Performance of the latter model on the standard test set achieves 90.1% F-measure on constituents, which is the second best current accuracy level, and only 0.6% below the current best (Bod, 2003)","['82', '140', '92', '51', '101']","<S sid =""82"" ssid = ""34"">Bonnema et al. (1999) show that as a consequence too much weight is given to larger subtrees  and that the parse accuracy of DOP1 deteriorates if (very) large subtrees are included.</S><S sid =""140"" ssid = ""5"">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid =""92"" ssid = ""44"">Tested on the OVIS corpus  Bonnema et al. 's proposal obtains results that are comparable to Sima'an (1999) -- see Bonnema et al.</S><S sid =""51"" ssid = ""3"">That is  the probability of a subtree t is taken as the number of occurrences of t in the training set  I t I  divided by the total number of occurrences of all subtrees t' with the same root label as t. Let r(t) return the root label of t: The probability of a derivation ti0...0tn is computed by the product of the probabilities of its subtrees ti: = HP (t1) An important feature of DOP1 is that there may be several derivations that generate the same parse tree.</S><S sid =""101"" ssid = ""4"">We will refer to this model as Simplicity-DOP.</S>",['Method_Citation']
10,E03-1005,E06-2025,0,"Bod, 2003",0,"Similarly, (Bod, 2003) changes the way frequenciesfi are counted, with a similar effect","Similarly, (Bod, 2003) changes the way frequencies fi are counted, with a similar effect","['94', '42', '12', '51', '45']","<S sid =""94"" ssid = ""46"">This paper presents the first published results with this estimator on the WSJ.</S><S sid =""42"" ssid = ""39"">We show that these PCFG-reductions result in a 60 times speedup in processing time w.r.t.</S><S sid =""12"" ssid = ""9"">This approach has now gained wide usage  as exemplified by the work of Collins (1996  1999)  Charniak (1996  1997)  Johnson (1998)  Chiang (2000)  and many others.</S><S sid =""51"" ssid = ""3"">That is  the probability of a subtree t is taken as the number of occurrences of t in the training set  I t I  divided by the total number of occurrences of all subtrees t' with the same root label as t. Let r(t) return the root label of t: The probability of a derivation ti0...0tn is computed by the product of the probabilities of its subtrees ti: = HP (t1) An important feature of DOP1 is that there may be several derivations that generate the same parse tree.</S><S sid =""45"" ssid = ""42"">In the second part of this paper  we extend our experiments with a new notion of the best parse tree.</S>",['Method_Citation']
12,E03-1005,W06-2905,0,"Bod, 2003",0,"(henceforth, STSGs), which can represent single words, contiguous and noncontiguous MWEs, context-free rules or complete parse trees in a unified representation. My approach is closely related to work in statistical parsing known as Data-Oriented Parsing (DOP), an empirically highly successful approach with labeled recall and precision scores on the Penn Tree Bank that are among the best currently obtained (Bod, 2003)","My approach is closely related to work in statistical parsing known as Data-Oriented Parsing (DOP), an empirically highly successful approach with labeled recall and precision scores on the Penn Tree Bank that are among the best currently obtained (Bod, 2003)","['101', '51', '139', '67', '126']","<S sid =""101"" ssid = ""4"">We will refer to this model as Simplicity-DOP.</S><S sid =""51"" ssid = ""3"">That is  the probability of a subtree t is taken as the number of occurrences of t in the training set  I t I  divided by the total number of occurrences of all subtrees t' with the same root label as t. Let r(t) return the root label of t: The probability of a derivation ti0...0tn is computed by the product of the probabilities of its subtrees ti: = HP (t1) An important feature of DOP1 is that there may be several derivations that generate the same parse tree.</S><S sid =""139"" ssid = ""4"">But while the accuracy of SL-DOP decreases after n=14 and converges to Simplicity DOP  the accuracy of LS-DOP continues to increase and converges to Likelihood-DOP.</S><S sid =""67"" ssid = ""19"">We can create a subtree by choosing any possible left subtree and any possible right subtree.</S><S sid =""126"" ssid = ""7"">We focused on the Labeled Precision (LP) and Labeled Recall (LR) scores  as these are commonly used to rank parsing systems.</S>",['Method_Citation']
13,E03-1005,W06-2905,0,"Bod, 2003",0,"Shown are results were only elementary trees with scores higher than 0.3 and 0.1 respectively are used. However, more interesting is a qualitative analysis of the STSG induced, which shows that ,un like DOP1, push-n-pull arrives at a grammar that gives high weights (and scores) to those elementary3We approximated the most probable parse as follows (fol lowing (Bod, 2003))","We approximated the most probable parse as follows (following (Bod, 2003))","['111', '0', '82', '71', '140']","<S sid =""111"" ssid = ""14"">Note that for n=1  SL-DOP is equal to Likelihood-DOP  since there is only one most probable tree to select from  and LS-DOP is equal to Simplicity-DOP  since there is only one simplest tree to select from.</S><S sid =""0"" ssid = ""0"">An Efficient Implementation of a New DOP Model</S><S sid =""82"" ssid = ""34"">Bonnema et al. (1999) show that as a consequence too much weight is given to larger subtrees  and that the parse accuracy of DOP1 deteriorates if (very) large subtrees are included.</S><S sid =""71"" ssid = ""23"">For the node in figure 1  the following eight PCFG rules are generated  where the number in parentheses following a rule is its probability.</S><S sid =""140"" ssid = ""5"">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>",['Method_Citation']
14,E03-1005,P05-1022,0,"Bod, 2003",0,"This result is only slightly higher than the highest reported result for this test-set, Bod? s (.907) (Bod,2003)","This result is only slightly higher than the highest reported result for this test-set, Bod's (.907) (Bod,2003)","['112', '145', '106', '101', '68']","<S sid =""112"" ssid = ""15"">Moreover  if n gets large  SL-DOP converges to Simplicity-DOP while LS-DOP converges to Likelihood-DOP.</S><S sid =""145"" ssid = ""10"">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid =""106"" ssid = ""9"">What is more important  is  that the best parse trees predicted by Simplicity-DOP are quite different from the best parse trees predicted by Likelihood-DOP.</S><S sid =""101"" ssid = ""4"">We will refer to this model as Simplicity-DOP.</S><S sid =""68"" ssid = ""20"">Thus  there are aj= (bk+ 1)(ci + 1) possible subtrees headed by A @j. Goodman then gives a simple small PCFG with the following property: for every subtree in the training corpus headed by A  the grammar will generate an isomorphic subderivation with probability 1/a.</S>",['Implication_Citation']
16,E03-1005,P07-1051,0,2003,0,"This assumption is in consonance with the principle of simplicity, but there are also empirical reasons for the shortest derivation assumption: in Bod (2003) and Hearne and Way (2006), it is shown that DOP models that select the preferred parse of a test sentence using the shortest derivation criterion perform very well","This assumption is in consonance with the principle of simplicity, but there are also empirical reasons for the shortest derivation assumption: in Bod (2003) and Hearne and Way (2006), it is shown that DOP models that select the preferred parse of a test sentence using the shortest derivation criterion perform very well","['58', '28', '38', '13', '106']","<S sid =""58"" ssid = ""10"">The notation A@k denotes the node at address k where A is the nonterminal labeling that node.</S><S sid =""28"" ssid = ""25"">While Goodman's method does still not allow for an efficient computation of the most probable parse in DOP1  it does efficiently compute the &quot;maximum constituents parse&quot;  i.e. the parse tree which is most likely to have the largest number of correct constituents.</S><S sid =""38"" ssid = ""35"">Although Bod's method obtains very competitive results on the Wall Street Journal (WSJ) task  the parsing time was reported to be over 200 seconds per sentence (Bod 2003).</S><S sid =""13"" ssid = ""10"">The other innovation of DOP was to take (in principle) all corpus fragments  of any size  rather than a small subset.</S><S sid =""106"" ssid = ""9"">What is more important  is  that the best parse trees predicted by Simplicity-DOP are quite different from the best parse trees predicted by Likelihood-DOP.</S>",['Method_Citation']
17,E03-1005,P07-1051,0,"Bod, 2003",0,"But equally important is the fact that this new DOP* model does not suffer from a decrease in parse accuracy if larger subtrees are included, whereas the original DOP model needs to be redressed by a correction factor to maintain this property (Bod 2003)","But equally important is the fact that this new DOP* model does not suffer from a decrease in parse accuracy if larger subtrees are included, whereas the original DOP model needs to be redressed by a correction factor to maintain this property (Bod 2003)","['28', '40', '39', '29', '130']","<S sid =""28"" ssid = ""25"">While Goodman's method does still not allow for an efficient computation of the most probable parse in DOP1  it does efficiently compute the &quot;maximum constituents parse&quot;  i.e. the parse tree which is most likely to have the largest number of correct constituents.</S><S sid =""40"" ssid = ""37"">Goodman (2002) furthermore showed how Bonnema et al. 's (1999) and Bod's (2001) estimators can be incorporated in his PCFGreduction  but did not report any experiments with these reductions.</S><S sid =""39"" ssid = ""36"">Collins & Duffy (2002) showed how the perceptron algorithm can be used to efficiently compute the best parse with DOP1's subtrees  reporting a 5.1% relative reduction in error rate over the model in Collins (1999) on the WSJ.</S><S sid =""29"" ssid = ""26"">Johnson (1998b  2002) showed that DOP1's subtree estimation method is statistically biased and inconsistent.</S><S sid =""130"" ssid = ""11"">While the PCFG reduction of Bod (2001) obtains state-of-the-art results on the WSJ  comparable to Charniak (2000)  Bonnema et al. 's estimator performs worse and is comparable to Collins (1996).</S>",['Method_Citation']
18,E03-1005,P07-1051,0,2003,0,"Of course, it is well-known that a supervised parser? s f-score decreases if it is transferred to another domain: for example, the (non-binarized) WSJ-trained DOP model in Bod (2003) decreases from around 91% to 85.5% f score if tested on the Brown corpus","Of course, it is well-known that a supervised parser's f-score decreases if it is transferred to another domain: for example, the (non-binarized) WSJ-trained DOP model in Bod (2003) decreases from around 91% to 85.5% f score if tested on the Brown corpus","['39', '22', '45', '44', '82']","<S sid =""39"" ssid = ""36"">Collins & Duffy (2002) showed how the perceptron algorithm can be used to efficiently compute the best parse with DOP1's subtrees  reporting a 5.1% relative reduction in error rate over the model in Collins (1999) on the WSJ.</S><S sid =""22"" ssid = ""19"">DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).</S><S sid =""45"" ssid = ""42"">In the second part of this paper  we extend our experiments with a new notion of the best parse tree.</S><S sid =""44"" ssid = ""41"">But while Bod's estimator obtains state-of-the-art results on the WSJ  comparable to Charniak (2000) and Collins (2000)  Bonnema et al. 's estimator performs worse and is comparable to Collins (1996).</S><S sid =""82"" ssid = ""34"">Bonnema et al. (1999) show that as a consequence too much weight is given to larger subtrees  and that the parse accuracy of DOP1 deteriorates if (very) large subtrees are included.</S>",['Method_Citation']
19,E03-1005,W04-0305,0,"Bod, 2003",0,"A moderately larger vocabulary version (4215 tag-word pairs) of this parser achieves 89.8% F-measure on section 0, where the best current result on the testing set is 90.7% (Bod, 2003)","A moderately larger vocabulary version (4215 tag-word pairs) of this parser achieves 89.8% F-measure on section 0, where the best current result on the testing set is 90.7% (Bod, 2003)","['108', '22', '0', '79', '15']","<S sid =""108"" ssid = ""11"">The underlying idea of combining LikelihoodDOP and Simplicity-DOP is that the parser selects the simplest tree from among the n most probable trees  where n is a free parameter.</S><S sid =""22"" ssid = ""19"">DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).</S><S sid =""0"" ssid = ""0"">An Efficient Implementation of a New DOP Model</S><S sid =""79"" ssid = ""31"">While Bod (2001) needed to use a very large sample from the WSJ subtrees to do this  Goodman's method can do the same job with a more compact grammar.</S><S sid =""15"" ssid = ""12"">However  during the last few years we can observe a shift towards using more and larger corpus fragments with fewer restrictions.</S>",['Results_Citation']
20,E03-1005,P06-1109,0,2003,0,The probability of a parse tree T is the sum of the 1 This subtree probability is redressed by a simple correction factor discussed in Goodman (2003: 136) and Bod (2003),This subtree probability is redressed by a simple correction factor discussed in Goodman (2003: 136) and Bod (2003),"['25', '114', '82', '89', '28']","<S sid =""25"" ssid = ""22"">Many implementations of DOP1 therefore estimate the most probable parse by Monte Carlo techniques (Bod 1998; Chappelier & Rajman 2000)  or by Viterbi n-best search (Bod 2001)  or by restricting the set of subtrees (Sima'an 1999; Chappelier et al. 2002).</S><S sid =""114"" ssid = ""17"">Note that Goodman's PCFG-reduction method summarized in Section 2 applies not only to Likelihood-DOP but also to Simplicity-DOP.</S><S sid =""82"" ssid = ""34"">Bonnema et al. (1999) show that as a consequence too much weight is given to larger subtrees  and that the parse accuracy of DOP1 deteriorates if (very) large subtrees are included.</S><S sid =""89"" ssid = ""41"">Let a be the number of times nonterminals of type A occur in the training data.</S><S sid =""28"" ssid = ""25"">While Goodman's method does still not allow for an efficient computation of the most probable parse in DOP1  it does efficiently compute the &quot;maximum constituents parse&quot;  i.e. the parse tree which is most likely to have the largest number of correct constituents.</S>",['Implication_Citation']
