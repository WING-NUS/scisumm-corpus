Citance Number,Reference Article,Citing Article,Citation Marker Offset,Citation Marker,Citation Offset,Citation Text,Citation Text Clean,Reference Offset,Reference Text,Discourse Facet
1,P87-1015,P01-1018,0,1987,0,"The approach that Vijay-Shanker et al (1987) and Weir (1988) take, elaborated on by Becker et al (1992), is to identify a very general class of formalisms, which they call linear context free rewriting systems (CFRSs), and define for this class a large space of structural descriptions which serves as a common ground in which the strong generative capacities of these formalisms can be compared","The approach that Vijay-Shanker et al (1987) and Weir (1988) take, elaborated on by Becker et al (1992), is to identify a very general class of formalisms, which they call linear context free rewriting systems (CFRSs), and define for this class a large space of structural descriptions which serves as a common ground in which the strong generative capacities of these formalisms can be compared","['6', '136', '2', '27', '89']","<S sid =""6"" ssid = ""4"">For example  Gazdar (1985) discusses the applicability of Indexed Grammars (IG's) to Natural Language in terms of the structural descriptions assigned; and Berwick (1984) discusses the strong generative capacity of Lexical-Functional Grammar (LFG) and Government and Bindings grammars (GB).</S><S sid =""136"" ssid = ""21"">These two restrictions impose the constraint that the result of composing any two structures should be a structure whose &quot;size&quot; is the sum of its constituents plus some constant For example  the operation 4  discussed in the case of CFG's (in Section 4.1) adds the constant equal to the sum of the length of the strings VI  un+râ€¢ Since we are considering formalisms with arbitrary structures it is difficult to precisely specify all of the restrictions on the composition operations that we believe would appropriately generalize the concatenation operation for the particular structures used by the formalism.</S><S sid =""2"" ssid = ""2"">In considering the relationship between formalisms  we show that it is useful to abstract away from the details of the formalism  and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation  we describe a class of formalisms which we call Linear Context- Free Rewriting Systems  and show they are recognizable in polynomial time and generate only semilinear languages.</S><S sid =""27"" ssid = ""12"">Thus  the tree sets generated by HG's are similar to those of CFG's  with each node annotated by the operation (concatenation or wrapping) used to combine the headed strings derived by the daughters of Tree Adjoining Grammars  a tree rewriting formalism  was introduced by Joshi  Levy and Takahashi (1975) and Joshi (1983/85).</S><S sid =""89"" ssid = ""74"">Hence  trees shown in Figure 8 can not be generated by any MCTAG (but can be generated by an IG) because the number of pairs of dependent paths grows with n. Since the derivation tees of TAG's  MCTAG's  and HG's are local sets  the choice of the structure used at each point in a derivation in these systems does not depend on the context at that point within the derivation.</S>",['Method_Citation']
2,P87-1015,E09-1055,0,"Vijay-Shanker et al, 1987",0,"Here we use the standard definition of LCFRS (Vijay-Shanker et al, 1987) and only fix our notation; for a more thorough discussion of this formal ism, we refer to the literature. Let G be an LCFRS","Here we use the standard definition of LCFRS (Vijay-Shanker et al, 1987) and only fix our notation; for a more thorough discussion of this formal ism, we refer to the literature. Let G be an LCFRS","['12', '164', '200', '166', '50']","<S sid =""12"" ssid = ""10"">We are very grateful to Tony Kroc.h  Michael Pails  Sunil Shende  and Mark Steedman for valuable discussions. formalisms.</S><S sid =""164"" ssid = ""49"">Although embedding this version of LCFRS's in the framework of ILFP developed by Rounds (1985) is straightforward  our motivation was to capture properties shared by a family of grammatical systems and generalize them defining a class of related formalisms.</S><S sid =""200"" ssid = ""6"">The importance of this property becomes clear in contrasting theories underlying GPSG (Gazdar  Klein  Pulluna  and Sag  1985)  and GB (as described by Berwick  1984) with those underlying LFG and FUG.</S><S sid =""166"" ssid = ""51"">With the additional assumptions  inspired by Rounds (1985)  we can show that members of this class can be recognized in polynomial time.</S><S sid =""50"" ssid = ""35"">The work of Rounds (1969) shows that the path sets of trees derived by IG's (like those of TAG's) are context-free languages.</S>",['Method_Citation']
3,P87-1015,W07-2214,0,"Vijay-Shanker et al, 1987",0,"There are many (structural) mildly context sensitive grammar formalisms ,e.g .mcfg ,lcfrs, mg, and they have been shown to be equivalent (Vijay-Shanker et al., 1987)","There are many (structural) mildly context sensitive grammar formalisms ,e.g .mcfg ,lcfrs, mg, and they have been shown to be equivalent (Vijay-Shanker et al., 1987)","['161', '49', '166', '110', '217']","<S sid =""161"" ssid = ""46"">The linear and nonerasing assumptions about the operations discussed in Section 4.1 require that each z  and yk is used exactly once to define the strings zi   z1 3.</S><S sid =""49"" ssid = ""34"">Gazdar (1985) considers a number of linguistic analyses which IG's (but not CFG's) can make  for example  the Norwedish example shown in Figure 1.</S><S sid =""166"" ssid = ""51"">With the additional assumptions  inspired by Rounds (1985)  we can show that members of this class can be recognized in polynomial time.</S><S sid =""110"" ssid = ""16"">The independence of paths in the tree sets of the k tI grammatical formalism in this hierarchy can be shown by means of tree pumping lemma of the form t1ti3t .</S><S sid =""217"" ssid = ""23"">In considering the recognition of these languages  we were forced to be more specific regarding the relationship between the structures derived by these formalisms and the substrings they span.</S>",['Method_Citation']
4,P87-1015,P09-2003,0,nan,0,"They are in particular more powerful than linear context-free rewriting systems (LCFRS) (Vijay-Shanker et al, 1987)","They are in particular more powerful than linear context-free rewriting systems (LCFRS) (Vijay-Shanker et al, 1987)","['23', '26', '109', '134', '122']","<S sid =""23"" ssid = ""8"">He also argues that paired English complementizers may also require structural descriptions whose path sets have nested dependencies.</S><S sid =""26"" ssid = ""11"">The productions of HG's are very similar to those of CFG's except that the operation used must be made explicit.</S><S sid =""109"" ssid = ""15"">A geometrical progression of language families defined by Weir (1987) involves tree sets with increasingly complex path sets.</S><S sid =""134"" ssid = ""19"">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S><S sid =""122"" ssid = ""7"">These operations  as we see below  are restricted to be size preserving (as in the case of concatenation in CFG) which implies that they will be linear and non-erasing.</S>",['Method_Citation']
5,P87-1015,P09-1111,0,"Vijay-Shanker et al, 1987",0,"Following this line, (Vijay-Shanker et al, 1987) have introduced a formalism called linear context-free rewriting systems (LCFRSs) that has received much attention in later years by the community","Following this line, (Vijay-Shanker et al, 1987) have introduced a formalism called linear context-free rewriting systems (LCFRSs) that has received much attention in later years by the community","['7', '50', '64', '200', '48']","<S sid =""7"" ssid = ""5"">The work of Thatcher (1973) and Rounds (1969) define formal systems that generate tree sets that are related to CFG's and IG's.</S><S sid =""50"" ssid = ""35"">The work of Rounds (1969) shows that the path sets of trees derived by IG's (like those of TAG's) are context-free languages.</S><S sid =""64"" ssid = ""49"">Steedman (1986) considers Categorial Grammars in which both the operations of function application and composition may be used  and in which function can specify whether they take their arguments from their right or left.</S><S sid =""200"" ssid = ""6"">The importance of this property becomes clear in contrasting theories underlying GPSG (Gazdar  Klein  Pulluna  and Sag  1985)  and GB (as described by Berwick  1984) with those underlying LFG and FUG.</S><S sid =""48"" ssid = ""33"">There has been recent interest in the application of Indexed Grammars (IG's) to natural languages.</S>",['Method_Citation']
6,P87-1015,P09-1111,0,"Vijay-Shanker et al, 1987",0,"We briefly summarize here the terminology and notation that we adopt for LCFRS; for detailed definitions, see (Vijay-Shanker et al, 1987)","We briefly summarize here the terminology and notation that we adopt for LCFRS; for detailed definitions, see (Vijay-Shanker et al, 1987)","['210', '53', '97', '92', '151']","<S sid =""210"" ssid = ""16"">We place certain restrictions on the composition operations of LCFRS's  restrictions that are shared by the composition operations of the constrained grammatical systems that we have considered.</S><S sid =""53"" ssid = ""38"">We focus on this difference between the tree sets of CFG's and IG's  and formalize the notion of dependence between paths in a tree set in Section 3.</S><S sid =""97"" ssid = ""3"">We attempt to formalize this notion in terms of the tee pumping lemma which can be used to show that a tee set does not have dependent paths.</S><S sid =""92"" ssid = ""77"">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S><S sid =""151"" ssid = ""36"">We now turn our attention to the recognition of string languages generated by these formalisms (LCFRL's).</S>",['Method_Citation']
7,P87-1015,P07-1021,0,"Vijay-Shanker et al, 1987",0,"We write REGD.k/ to refer to the class of regular dependency languages with a gap-degree bounded by k. Linear Context-Free Rewriting Systems Gap-restricted dependency languages are closely related to Linear Context-Free Rewriting Systems (lcfrs) (Vijay-Shanker et al, 1987), a class of formal systems that generalizes several mildly context-sensitive grammar formalisms","Linear Context-Free Rewriting Systems Gap-restricted dependency languages are closely related to Linear Context-Free Rewriting Systems (lcfrs) (Vijay-Shanker et al, 1987), a class of formal systems that generalizes several mildly context-sensitive grammar formalisms","['6', '229', '27', '71', '89']","<S sid =""6"" ssid = ""4"">For example  Gazdar (1985) discusses the applicability of Indexed Grammars (IG's) to Natural Language in terms of the structural descriptions assigned; and Berwick (1984) discusses the strong generative capacity of Lexical-Functional Grammar (LFG) and Government and Bindings grammars (GB).</S><S sid =""229"" ssid = ""35"">In addition  the restricted version of CG's (discussed in Section 6) generates tree sets with independent paths and we hope that it can be included in a more general definition of LCFRS's containing formalisms whose tree sets have path sets that are themselves LCFRL's (as in the case of the restricted indexed grammars  and the hierarchy defined by Weir).</S><S sid =""27"" ssid = ""12"">Thus  the tree sets generated by HG's are similar to those of CFG's  with each node annotated by the operation (concatenation or wrapping) used to combine the headed strings derived by the daughters of Tree Adjoining Grammars  a tree rewriting formalism  was introduced by Joshi  Levy and Takahashi (1975) and Joshi (1983/85).</S><S sid =""71"" ssid = ""56"">0n0'i'i0'2&quot;bin242bn I n = 711 + n2 } On the other hand  no linguistic use is made of this general form of composition and Steedman (personal communication) and Steedman (1986) argues that a more limited definition of composition is more natural.</S><S sid =""89"" ssid = ""74"">Hence  trees shown in Figure 8 can not be generated by any MCTAG (but can be generated by an IG) because the number of pairs of dependent paths grows with n. Since the derivation tees of TAG's  MCTAG's  and HG's are local sets  the choice of the structure used at each point in a derivation in these systems does not depend on the context at that point within the derivation.</S>",['Method_Citation']
8,P87-1015,N09-1061,0,"Vijay-Shanker et al, 1987",0,"This observation is in line with empirical studies in the context of dependency parsing, where the need for formalisms with higher fan-out has been observed even in standard, single language texts (Kuhlmann and Nivre, 2006) .In this paper, we present an algorithm that computes optimal decompositions of rules in the formalism of Linear Context-Free Rewriting Systems (LCFRS) (Vijay-Shanker et al, 1987)","This observation is in line with empirical studies in the context of dependency parsing, where the need for formalisms with higher fan-out has been observed even in standard, single language texts (Kuhlmann and Nivre, 2006). In this paper, we present an algorithm that computes optimal decompositions of rules in the formalism of Linear Context-Free Rewriting Systems (LCFRS) (Vijay-Shanker et al, 1987)","['6', '136', '2', '27', '130']","<S sid =""6"" ssid = ""4"">For example  Gazdar (1985) discusses the applicability of Indexed Grammars (IG's) to Natural Language in terms of the structural descriptions assigned; and Berwick (1984) discusses the strong generative capacity of Lexical-Functional Grammar (LFG) and Government and Bindings grammars (GB).</S><S sid =""136"" ssid = ""21"">These two restrictions impose the constraint that the result of composing any two structures should be a structure whose &quot;size&quot; is the sum of its constituents plus some constant For example  the operation 4  discussed in the case of CFG's (in Section 4.1) adds the constant equal to the sum of the length of the strings VI  un+râ€¢ Since we are considering formalisms with arbitrary structures it is difficult to precisely specify all of the restrictions on the composition operations that we believe would appropriately generalize the concatenation operation for the particular structures used by the formalism.</S><S sid =""2"" ssid = ""2"">In considering the relationship between formalisms  we show that it is useful to abstract away from the details of the formalism  and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation  we describe a class of formalisms which we call Linear Context- Free Rewriting Systems  and show they are recognizable in polynomial time and generate only semilinear languages.</S><S sid =""27"" ssid = ""12"">Thus  the tree sets generated by HG's are similar to those of CFG's  with each node annotated by the operation (concatenation or wrapping) used to combine the headed strings derived by the daughters of Tree Adjoining Grammars  a tree rewriting formalism  was introduced by Joshi  Levy and Takahashi (1975) and Joshi (1983/85).</S><S sid =""130"" ssid = ""15"">Each treelet (an internal node with all its children) represents the use of a rule that is encapsulated by the grammar The grammar encapsulates (either explicitly or implicitly) a finite number of rules that can be written as follows: n > 0 In the case of CFG's  for each production In the case of TAG's  a derivation step in which the derived trees RI  â€¢ â€¢ â€¢   On are adjoined into fi at rhe addresses â€¢ â€¢ â€¢ â€¢ in. would involve the use of the following rule2.</S>",['Method_Citation']
9,P87-1015,N09-1061,0,1987,0,"We briefly summarize the terminology and notation that we adopt for LCFRS; for detailed definitions, see Vijay-Shanker et al (1987)","We briefly summarize the terminology and notation that we adopt for LCFRS; for detailed definitions, see Vijay-Shanker et al (1987)","['210', '92', '53', '178', '97']","<S sid =""210"" ssid = ""16"">We place certain restrictions on the composition operations of LCFRS's  restrictions that are shared by the composition operations of the constrained grammatical systems that we have considered.</S><S sid =""92"" ssid = ""77"">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S><S sid =""53"" ssid = ""38"">We focus on this difference between the tree sets of CFG's and IG's  and formalize the notion of dependence between paths in a tree set in Section 3.</S><S sid =""178"" ssid = ""63"">We define an ATM  M  recognizing a language generated by a grammar  G  having the properties discussed in Section 43.</S><S sid =""97"" ssid = ""3"">We attempt to formalize this notion in terms of the tee pumping lemma which can be used to show that a tee set does not have dependent paths.</S>",['Results_Citation']
10,P87-1015,W10-1407,0,"Vijay-Shanker et al, 1987",0,"LCFRS (Vijay-Shanker et al, 1987) are anatural extension of CFG in which a single nonterminal node can dominate more than one continuous span of terminals","LCFRS (Vijay-Shanker et al, 1987) are a natural extension of CFG in which a single nonterminal node can dominate more than one continuous span of terminals","['60', '57', '24', '23', '208']","<S sid =""60"" ssid = ""45"">Gazdar (1985) considers a restriction of IG's in which no more than one nonterminal on the right-hand-side of a production can inherit the stack from the left-hand-side.</S><S sid =""57"" ssid = ""42"">Analogous to the sharing of stacks in IC's  Lexical-Functional Grammar's (LFG's) use the unification of unbounded hierarchical structures.</S><S sid =""24"" ssid = ""9"">Head Grammars (HG's)  introduced by Pollard (1984)  is a formalism that manipulates headed strings: i.e.  strings  one of whose symbols is distinguished as the head.</S><S sid =""23"" ssid = ""8"">He also argues that paired English complementizers may also require structural descriptions whose path sets have nested dependencies.</S><S sid =""208"" ssid = ""14"">This family represents an attempt to generalize the properties shared by CFG's  HG's  TAG's  and MCTAG's.</S>",['Method_Citation']
11,P87-1015,W10-1407,0,"Vijay-Shanker et al, 1987",0,"A LCFRS (Vijay-Shanker et al, 1987) is a tuple G= (N, T, V, P, S )wherea) N is a finite set of non-terminals with a function dim: N? N that determines the fan-out of each A? N; b) T and V are disjoint finite sets of terminals and variables; c) S? N is the start symbol with dim (S)= 1; d) P is a finite set of rewriting rules A (? 1,..","A LCFRS (Vijay-Shanker et al, 1987) is a tuple G= (N, T, V, P, S ) where N is a finite set of non-terminals with a function dim: N? N that determines the fan-out of each A? N; b) T and V are disjoint finite sets of terminals and variables; c) S? N is the start symbol with dim (S)= 1; d) P is a finite set of rewriting rules A (? 1,..","['183', '130', '160', '136', '2']","<S sid =""183"" ssid = ""68"">We assume that M is in an existential state qA  with integers i1 and i2 representing zi in the (2i â€” 1)th and 22th work tape  for 1 < i < k. For each rule p : A fp(B  C) such that fp is mapped onto the function fp defined by the following rule. jp((xi .. â€¢  rnt)  (1ii  â€¢ â€¢ â€¢ â€¢ Yn3))= (Zi   â€¢ â€¢ â€¢   Zk) M breaks xi   zk into substrings xi    xn  and yi ... y&quot; conforming to the definition of fp.</S><S sid =""130"" ssid = ""15"">Each treelet (an internal node with all its children) represents the use of a rule that is encapsulated by the grammar The grammar encapsulates (either explicitly or implicitly) a finite number of rules that can be written as follows: n > 0 In the case of CFG's  for each production In the case of TAG's  a derivation step in which the derived trees RI  â€¢ â€¢ â€¢   On are adjoined into fi at rhe addresses â€¢ â€¢ â€¢ â€¢ in. would involve the use of the following rule2.</S><S sid =""160"" ssid = ""45"">A derived structure will be mapped onto a sequence zi of substrings (not necessarily contiguous in the input)  and the composition operations will be mapped onto functions that can defined as follows3. f((zi â€¢ â€¢ â€¢   zni)  (m. â€¢ â€¢ â€¢  Yn3)) = (Z1  â€¢ â€¢ â€¢   Zn3) where each z  is the concatenation of strings from z 's and yk's.</S><S sid =""136"" ssid = ""21"">These two restrictions impose the constraint that the result of composing any two structures should be a structure whose &quot;size&quot; is the sum of its constituents plus some constant For example  the operation 4  discussed in the case of CFG's (in Section 4.1) adds the constant equal to the sum of the length of the strings VI  un+râ€¢ Since we are considering formalisms with arbitrary structures it is difficult to precisely specify all of the restrictions on the composition operations that we believe would appropriately generalize the concatenation operation for the particular structures used by the formalism.</S><S sid =""2"" ssid = ""2"">In considering the relationship between formalisms  we show that it is useful to abstract away from the details of the formalism  and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation  we describe a class of formalisms which we call Linear Context- Free Rewriting Systems  and show they are recognizable in polynomial time and generate only semilinear languages.</S>",['Method_Citation']
12,P87-1015,E09-1053,0,1987,0,"In particular, we cast new light on the relationship between CCG and other mildly context-sensitive formalisms such as Tree-Adjoining Grammar (TAG; Joshi and Schabes (1997)) and Linear Context-Free Rewrite Systems (LCFRS; Vijay-Shanker et al (1987))","In particular, we cast new light on the relationship between CCG and other mildly context-sensitive formalisms such as Tree-Adjoining Grammar (TAG; Joshi and Schabes (1997)) and Linear Context-Free Rewrite Systems (LCFRS; Vijay-Shanker et al (1987))","['6', '27', '11', '8', '95']","<S sid =""6"" ssid = ""4"">For example  Gazdar (1985) discusses the applicability of Indexed Grammars (IG's) to Natural Language in terms of the structural descriptions assigned; and Berwick (1984) discusses the strong generative capacity of Lexical-Functional Grammar (LFG) and Government and Bindings grammars (GB).</S><S sid =""27"" ssid = ""12"">Thus  the tree sets generated by HG's are similar to those of CFG's  with each node annotated by the operation (concatenation or wrapping) used to combine the headed strings derived by the daughters of Tree Adjoining Grammars  a tree rewriting formalism  was introduced by Joshi  Levy and Takahashi (1975) and Joshi (1983/85).</S><S sid =""11"" ssid = ""9"">By considering derivation trees  and thus abstracting away from the details of the composition operation and the structures being manipulated  we are able to state the similarities and differences between the 'This work was partially supported by NSF grants MCS42-19116-CER  MCS82-07294 and DCR-84-10413  ARO grant DAA 29-84-9-0027  and DARPA grant N00014-85-K0018.</S><S sid =""8"" ssid = ""6"">We consider properties of the tree sets generated by CFG's  Tree Adjoining Grammars (TAG's)  Head Grammars (HG's)  Categorial Grammars (CG's)  and IG's.</S><S sid =""95"" ssid = ""1"">Roughly speaking  we say that a tee set contains trees with dependent paths if there are two paths p.  = vim.  and g.  = in each 7 E r such that v.  is some  possibly empty  shared initial subpath; v.  and wi are not bounded in length; and there is some &quot;dependence&quot; (such as equal length) between the set of all v.  and w.  for each 7 Er.</S>",['Method_Citation']
13,P87-1015,E09-1053,0,"Vijay-Shanker et al, 1987",0,"2 By this result, CCG falls in line with context-free grammars, TAG, and LCFRS, whose sets of deriva tional structures are all regular (Vijay-Shanker et al., 1987)","By this result, CCG falls in line with context-free grammars, TAG, and LCFRS, whose sets of derivational structures are all regular (Vijay-Shanker et al., 1987)","['15', '202', '118', '161', '146']","<S sid =""15"" ssid = ""13"">In this paper  we outline how such family of formalisms can be defined  and show that like CFG's  each member possesses a number of desirable linguistic and computational properties: in particular  the constant growth property and polynomial recognizability.</S><S sid =""202"" ssid = ""8"">As illustrated by MCTAG's  it is possible for a formalism to give tree sets with bounded dependent paths while still sharing the constrained rewriting properties of CFG's  HG's  and TAG's.</S><S sid =""118"" ssid = ""3"">In the remainder of the paper  we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid =""161"" ssid = ""46"">The linear and nonerasing assumptions about the operations discussed in Section 4.1 require that each z  and yk is used exactly once to define the strings zi   z1 3.</S><S sid =""146"" ssid = ""31"">Since every CFL is known to be semilinear (Parikh  1966)  in order to show semilinearity of some language  we need only show the existence of a letter equivalent CFL Our definition of LCFRS's insists that the composition operations are linear and nonerasing.</S>",['Method_Citation']
14,P87-1015,E09-1053,0,"Vijay-Shanker et al, 1987",0,"It is important to note that while CCG derivations themselves can be seen as trees as well, they do not always form regular tree languages (Vijay-Shanker et al, 1987)","It is important to note that while CCG derivations themselves can be seen as trees as well, they do not always form regular tree languages (Vijay-Shanker et al, 1987)","['49', '13', '15', '50', '161']","<S sid =""49"" ssid = ""34"">Gazdar (1985) considers a number of linguistic analyses which IG's (but not CFG's) can make  for example  the Norwedish example shown in Figure 1.</S><S sid =""13"" ssid = ""11"">It is striking that from this point of view many formalisms can be grouped together as having identically structured derivation tree sets.</S><S sid =""15"" ssid = ""13"">In this paper  we outline how such family of formalisms can be defined  and show that like CFG's  each member possesses a number of desirable linguistic and computational properties: in particular  the constant growth property and polynomial recognizability.</S><S sid =""50"" ssid = ""35"">The work of Rounds (1969) shows that the path sets of trees derived by IG's (like those of TAG's) are context-free languages.</S><S sid =""161"" ssid = ""46"">The linear and nonerasing assumptions about the operations discussed in Section 4.1 require that each z  and yk is used exactly once to define the strings zi   z1 3.</S>",['Method_Citation']
15,P87-1015,N10-1035,0,1987,0,"On this line of investigation, mildly context-sensitive grammar formalisms have been introduced (Joshi,1985), including, among several others, the tree ad joining grammars (TAGs) of Joshi et al (1975) .Linear context-free rewriting system (LCFRS), introduced by Vijay-Shanker et al (1987), is a mildly context-sensitive formalism that allows the derivation of tuples of strings ,i.e., discontinuous phrases","On this line of investigation, mildly context-sensitive grammar formalisms have been introduced (Joshi,1985), including, among several others, the tree ad joining grammars (TAGs) of Joshi et al (1975). Linear context-free rewriting system (LCFRS), introduced by Vijay-Shanker et al (1987), is a mildly context-sensitive formalism that allows the derivation of tuples of strings, i.e., discontinuous phrases","['6', '2', '27', '136', '130']","<S sid =""6"" ssid = ""4"">For example  Gazdar (1985) discusses the applicability of Indexed Grammars (IG's) to Natural Language in terms of the structural descriptions assigned; and Berwick (1984) discusses the strong generative capacity of Lexical-Functional Grammar (LFG) and Government and Bindings grammars (GB).</S><S sid =""2"" ssid = ""2"">In considering the relationship between formalisms  we show that it is useful to abstract away from the details of the formalism  and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation  we describe a class of formalisms which we call Linear Context- Free Rewriting Systems  and show they are recognizable in polynomial time and generate only semilinear languages.</S><S sid =""27"" ssid = ""12"">Thus  the tree sets generated by HG's are similar to those of CFG's  with each node annotated by the operation (concatenation or wrapping) used to combine the headed strings derived by the daughters of Tree Adjoining Grammars  a tree rewriting formalism  was introduced by Joshi  Levy and Takahashi (1975) and Joshi (1983/85).</S><S sid =""136"" ssid = ""21"">These two restrictions impose the constraint that the result of composing any two structures should be a structure whose &quot;size&quot; is the sum of its constituents plus some constant For example  the operation 4  discussed in the case of CFG's (in Section 4.1) adds the constant equal to the sum of the length of the strings VI  un+râ€¢ Since we are considering formalisms with arbitrary structures it is difficult to precisely specify all of the restrictions on the composition operations that we believe would appropriately generalize the concatenation operation for the particular structures used by the formalism.</S><S sid =""130"" ssid = ""15"">Each treelet (an internal node with all its children) represents the use of a rule that is encapsulated by the grammar The grammar encapsulates (either explicitly or implicitly) a finite number of rules that can be written as follows: n > 0 In the case of CFG's  for each production In the case of TAG's  a derivation step in which the derived trees RI  â€¢ â€¢ â€¢   On are adjoined into fi at rhe addresses â€¢ â€¢ â€¢ â€¢ in. would involve the use of the following rule2.</S>",['Method_Citation']
16,P87-1015,P12-1053,0,1987,0,"CFTG are weakly equivalent to the simple macro grammars of Fischer (1968), which are a notational variant of the well-nested linear context-free rewriting systems (LCFRS) of Vijay-Shanker et al (1987) and the well-nested multiple context-free grammars (MCFG) of Seki et al (1991) .3 Thus, CFTG are mildly context-sensitive since their generated string languages are semi-linear and can be parsed in polynomial time (Go ?mez-Rodr? ?guez et al, 2010)","CFTG are weakly equivalent to the simple macro grammars of Fischer (1968), which are a notational variant of the well-nested linear context-free rewriting systems (LCFRS) of Vijay-Shanker et al (1987) and the well-nested multiple context-free grammars (MCFG) of Seki et al (1991)","['27', '6', '229', '11', '71']","<S sid =""27"" ssid = ""12"">Thus  the tree sets generated by HG's are similar to those of CFG's  with each node annotated by the operation (concatenation or wrapping) used to combine the headed strings derived by the daughters of Tree Adjoining Grammars  a tree rewriting formalism  was introduced by Joshi  Levy and Takahashi (1975) and Joshi (1983/85).</S><S sid =""6"" ssid = ""4"">For example  Gazdar (1985) discusses the applicability of Indexed Grammars (IG's) to Natural Language in terms of the structural descriptions assigned; and Berwick (1984) discusses the strong generative capacity of Lexical-Functional Grammar (LFG) and Government and Bindings grammars (GB).</S><S sid =""229"" ssid = ""35"">In addition  the restricted version of CG's (discussed in Section 6) generates tree sets with independent paths and we hope that it can be included in a more general definition of LCFRS's containing formalisms whose tree sets have path sets that are themselves LCFRL's (as in the case of the restricted indexed grammars  and the hierarchy defined by Weir).</S><S sid =""11"" ssid = ""9"">By considering derivation trees  and thus abstracting away from the details of the composition operation and the structures being manipulated  we are able to state the similarities and differences between the 'This work was partially supported by NSF grants MCS42-19116-CER  MCS82-07294 and DCR-84-10413  ARO grant DAA 29-84-9-0027  and DARPA grant N00014-85-K0018.</S><S sid =""71"" ssid = ""56"">0n0'i'i0'2&quot;bin242bn I n = 711 + n2 } On the other hand  no linguistic use is made of this general form of composition and Steedman (personal communication) and Steedman (1986) argues that a more limited definition of composition is more natural.</S>",['Method_Citation']
