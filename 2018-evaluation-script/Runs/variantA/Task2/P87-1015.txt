For example  Gazdar (1985) discusses the applicability of Indexed Grammars (IG's) to Natural Language in terms of the structural descriptions assigned; and Berwick (1984) discusses the strong generative capacity of Lexical-Functional Grammar (LFG) and Government and Bindings grammars (GB).These two restrictions impose the constraint that the result of composing any two structures should be a structure whose &quot;size&quot; is the sum of its constituents plus some constant For example  the operation 4  discussed in the case of CFG's (in Section 4.1) adds the constant equal to the sum of the length of the strings VI  un+r• Since we are considering formalisms with arbitrary structures it is difficult to precisely specify all of the restrictions on the composition operations that we believe would appropriately generalize the concatenation operation for the particular structures used by the formalism.In considering the relationship between formalisms  we show that it is useful to abstract away from the details of the formalism  and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation  we describe a class of formalisms which we call Linear Context- Free Rewriting Systems  and show they are recognizable in polynomial time and generate only semilinear languages.Thus  the tree sets generated by HG's are similar to those of CFG's  with each node annotated by the operation (concatenation or wrapping) used to combine the headed strings derived by the daughters of Tree Adjoining Grammars  a tree rewriting formalism  was introduced by Joshi  Levy and Takahashi (1975) and Joshi (1983/85).Hence  trees shown in Figure 8 can not be generated by any MCTAG (but can be generated by an IG) because the number of pairs of dependent paths grows with n. Since the derivation tees of TAG's  MCTAG's  and HG's are local sets  the choice of the structure used at each point in a derivation in these systems does not depend on the context at that point within the derivation.We are very grateful to Tony Kroc.h  Michael Pails  Sunil Shende  and Mark Steedman for valuable discussions. formalisms.Although embedding this version of LCFRS's in the framework of ILFP developed by Rounds (1985) is straightforward  our motivation was to capture properties shared by a family of grammatical systems and generalize them defining a class of related formalisms.The importance of this property becomes clear in contrasting theories underlying GPSG (Gazdar  Klein  Pulluna  and Sag  1985)  and GB (as described by Berwick  1984) with those underlying LFG and FUG.With the additional assumptions  inspired by Rounds (1985)  we can show that members of this class can be recognized in polynomial time.The work of Rounds (1969) shows that the path sets of trees derived by IG's (like those of TAG's) are context-free languages.The linear and nonerasing assumptions about the operations discussed in Section 4.1 require that each z  and yk is used exactly once to define the strings zi   z1 3.Gazdar (1985) considers a number of linguistic analyses which IG's (but not CFG's) can make  for example  the Norwedish example shown in Figure 1.The independence of paths in the tree sets of the k tI grammatical formalism in this hierarchy can be shown by means of tree pumping lemma of the form t1ti3t .In considering the recognition of these languages  we were forced to be more specific regarding the relationship between the structures derived by these formalisms and the substrings they span.He also argues that paired English complementizers may also require structural descriptions whose path sets have nested dependencies.The productions of HG's are very similar to those of CFG's except that the operation used must be made explicit.A geometrical progression of language families defined by Weir (1987) involves tree sets with increasingly complex path sets.These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).These operations  as we see below  are restricted to be size preserving (as in the case of concatenation in CFG) which implies that they will be linear and non-erasing.The work of Thatcher (1973) and Rounds (1969) define formal systems that generate tree sets that are related to CFG's and IG's.Steedman (1986) considers Categorial Grammars in which both the operations of function application and composition may be used  and in which function can specify whether they take their arguments from their right or left.There has been recent interest in the application of Indexed Grammars (IG's) to natural languages.We place certain restrictions on the composition operations of LCFRS's  restrictions that are shared by the composition operations of the constrained grammatical systems that we have considered.We focus on this difference between the tree sets of CFG's and IG's  and formalize the notion of dependence between paths in a tree set in Section 3.We attempt to formalize this notion in terms of the tee pumping lemma which can be used to show that a tee set does not have dependent paths.We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.We now turn our attention to the recognition of string languages generated by these formalisms (LCFRL's).In addition  the restricted version of CG's (discussed in Section 6) generates tree sets with independent paths and we hope that it can be included in a more general definition of LCFRS's containing formalisms whose tree sets have path sets that are themselves LCFRL's (as in the case of the restricted indexed grammars  and the hierarchy defined by Weir).0n0'i'i0'2&quot;bin242bn I n = 711 + n2 } On the other hand  no linguistic use is made of this general form of composition and Steedman (personal communication) and Steedman (1986) argues that a more limited definition of composition is more natural.Each treelet (an internal node with all its children) represents the use of a rule that is encapsulated by the grammar The grammar encapsulates (either explicitly or implicitly) a finite number of rules that can be written as follows: n > 0 In the case of CFG's  for each production In the case of TAG's  a derivation step in which the derived trees RI  • • •   On are adjoined into fi at rhe addresses • • • • in. would involve the use of the following rule2.We define an ATM  M  recognizing a language generated by a grammar  G  having the properties discussed in Section 43.Gazdar (1985) considers a restriction of IG's in which no more than one nonterminal on the right-hand-side of a production can inherit the stack from the left-hand-side.Analogous to the sharing of stacks in IC's  Lexical-Functional Grammar's (LFG's) use the unification of unbounded hierarchical structures.Head Grammars (HG's)  introduced by Pollard (1984)  is a formalism that manipulates headed strings: i.e.  strings  one of whose symbols is distinguished as the head.This family represents an attempt to generalize the properties shared by CFG's  HG's  TAG's  and MCTAG's.We assume that M is in an existential state qA  with integers i1 and i2 representing zi in the (2i — 1)th and 22th work tape  for 1 < i < k. For each rule p : A fp(B  C) such that fp is mapped onto the function fp defined by the following rule. jp((xi .. •  rnt)  (1ii  • • • • Yn3))= (Zi   • • •   Zk) M breaks xi   zk into substrings xi    xn  and yi ... y&quot; conforming to the definition of fp.A derived structure will be mapped onto a sequence zi of substrings (not necessarily contiguous in the input)  and the composition operations will be mapped onto functions that can defined as follows3. f((zi • • •   zni)  (m. • • •  Yn3)) = (Z1  • • •   Zn3) where each z  is the concatenation of strings from z 's and yk's.By considering derivation trees  and thus abstracting away from the details of the composition operation and the structures being manipulated  we are able to state the similarities and differences between the 'This work was partially supported by NSF grants MCS42-19116-CER  MCS82-07294 and DCR-84-10413  ARO grant DAA 29-84-9-0027  and DARPA grant N00014-85-K0018.We consider properties of the tree sets generated by CFG's  Tree Adjoining Grammars (TAG's)  Head Grammars (HG's)  Categorial Grammars (CG's)  and IG's.Roughly speaking  we say that a tee set contains trees with dependent paths if there are two paths p.  = vim.  and g.  = in each 7 E r such that v.  is some  possibly empty  shared initial subpath; v.  and wi are not bounded in length; and there is some &quot;dependence&quot; (such as equal length) between the set of all v.  and w.  for each 7 Er.In this paper  we outline how such family of formalisms can be defined  and show that like CFG's  each member possesses a number of desirable linguistic and computational properties: in particular  the constant growth property and polynomial recognizability.As illustrated by MCTAG's  it is possible for a formalism to give tree sets with bounded dependent paths while still sharing the constrained rewriting properties of CFG's  HG's  and TAG's.In the remainder of the paper  we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.Since every CFL is known to be semilinear (Parikh  1966)  in order to show semilinearity of some language  we need only show the existence of a letter equivalent CFL Our definition of LCFRS's insists that the composition operations are linear and nonerasing.It is striking that from this point of view many formalisms can be grouped together as having identically structured derivation tree sets.