We adopt the perceptron training algorithm of Collins (2002) to learn a discriminative model mapping from inputs x ∈ X to outputs y ∈ Y   where X is the set of sentences in the training corpus and Y is the set of corresponding labelled results.Similar trend appeared in experiments of Ng and Low (2004)  where they conducted experiments on CTB 3.0 and achieved Fmeasure 0.919 on Joint S&T  a ratio of 96% to the F-measure 0.952 on segmentation.Shown in Figure 1  the cascaded model has a two-layer architecture  with a characterbased perceptron as the core combined with other real-valued features such as language models.To alleviate overfitting on the training examples  we use the refinement strategy called “averaged parameters” (Collins  2002) to the algorithm in Algorithm 1.The authors were supported by National Natural Science Foundation of China  Contracts 60736014 and 60573188  and 863 State Key Project No.The perceptron has been used in many NLP tasks  such as POS tagging (Collins  2002)  Chinese word segmentation (Ng and Low  2004; Zhang and Clark  2007) and so on.On the three corpora  it also outperformed the word-based perceptron model of Zhang and Clark (2007).In order to perform POS tagging at the same time  we expand boundary tags to include POS information by attaching a POS to the tail of a boundary tag as a postfix following Ng and Low (2004).In addition  all knowledge sources we used in the core perceptron and the outside-layer linear model come from the training corpus  whereas many open knowledge sources (lexicon etc.) can be used to improve performance (Ng and Low  2004).Templates immediately borrowed from Ng and Low (2004) are listed in the upper column named non-lexical-target.The feature templates we adopted are selected from those of Ng and Low (2004).Note that the templates of Ng and Low (2004) have already contained some lexical-target ones.This is a substitute method to use both local and non-local features  and it would be especially useful when the training corpus is very large.In addition  we add the score of the word count penalty as another feature to alleviate the tendency of LMs to favor shorter candidates.If this cascaded linear model were chosen  could more accurate generative models (LMs  word-POS co-occurrence model) be obtained by training on large scale corpus even if the corpus is not correctly labelled entirely  or by self-training on raw corpus in a similar approach to that of McClosky (2006)?Since the typical approach of discriminative models treats segmentation as a labelling problem by assigning each character a boundary tag (Xue and Shen  2003)  Joint S&T can be conducted in a labelling fashion by expanding boundary tags to include POS information (Ng and Low  2004).To cope with this problem  we propose a cascaded linear model inspired by the log-linear model (Och and Ney  2004) widely used in statistical machine translation to incorporate different kinds of knowledge sources.We proposed a cascaded linear model for Chinese Joint S&T.Experiments show that the cascaded model achieves improved accuracies on both segmentation only and joint segmentation and part-of-speech tagging.It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.Line 4 scans words of all possible lengths l (l = 1.. min(i  K)  where i points to the current considering character).In following subsections  we describe the feature templates and the perceptron training algorithm.Besides the usual character-based features  additional features dependent on POS’s or words can also be employed to improve the performance.Line 8 considers each candidate result in N-best list at prior position of the current word.Test results listed in Table 2 shows that this model obtains higher accuracy than the best of SIGHAN Bakeoff 2 in three corpora (AS  CityU and MSR).To obtain their corresponding weights  we adapted the minimum-error-rate training algorithm (Och  2003) to train the outside-layer model.When we derive a candidate result from a word-POS pair p and a candidate q at prior position of p  we calculate the scores of the word LM  the POS LM  the labelling probability and the generating probability  Algorithm 2 Decoding algorithm. as well as the score of the perceptron model.Besides the output of the perceptron  the outside-layer also receive the outputs of the word LM  the POS LM  the co-occurrence model and a word count penalty which is similar to the translation length penalty in SMT.By maintaining a stack of size N at each position i of the sequence  we can preserve the top N best candidate labelled results of subsequence C1:i during decoding.In order to test the performance of the lexical-target templates and meanwhile determine the best iterations over the training corpus  we randomly chosen 2  000 shorter sentences (less than 50 words) as the development set and the rest as the training set (84  294 sentences)  then trained a perceptron model named NON-LEX using only nonlexical-target features and another named LEX using both the two kinds of features.According to Ng and Low (2004)  the segmentation task can be transformed to a tagging problem by assigning each character a boundary tag of the following four types: We can extract segmentation result by splitting the labelled result into subsequences of pattern s or bm*e which denote single-character word and multicharacter word respectively.At the first step  we conducted a group of contrasting experiments on the core perceptron  the first concentrated on the segmentation regardless of the POS information and reported the F-measure on segmentation only  while the second performed Joint S&T using POS information and reported the F-measure both on segmentation and on Joint S&T.In addition  even though these higher grams were managed to be used  there still remains another problem: as the current predication relies on the results of prior ones  the decoding procedure has to resort to approximate inference by maintaining a list of N-best candidates at each predication position  which evokes a potential risk to depress the training.2 Segmentation and POS Tagging Given a Chinese character sequence: while the segmentation and POS tagging result can be depicted as: Here  Ci (i = L.n) denotes Chinese character  ti (i = L.m) denotes POS tag  and Cl:r (l < r) denotes character sequence ranges from Cl to Cr.For instance  if the word w appears N times in training corpus and is labelled as POS t for n times  the probability Pr(t|w) can be estimated by the formula below: The probability Pr(w|t) could be estimated through the same approach.Following Collins  we use a function GEN(x) generating all candidate results of an input x   a representation 4) mapping each training example (x  y) ∈ X × Y to a feature vector 4)(x  y) ∈ Rd  and a parameter vector α� ∈ Rd corresponding to the feature vector. d means the dimension of the vector space  it equals to the amount of features in the model.To compare with others conveniently  we excluded the ones forbidden by the close test regulation of SIGHAN  for example  Pu(C0)  indicating whether character C0 is a punctuation.Formally  an n-gram word LM approximates the probability of a word sequence W = w1:m with the following product: Notice that a bi-gram POS LM functions as the product of transition probabilities in HMM.A subsequence of boundary-POS labelling result indicates a word with POS t only if the boundary tag sequence composed of its boundary part conforms to s or bm*e style  and all POS tags in its POS part equal to t. For example  a tag sequence b NN m NN e NN represents a threecharacter word with POS tag NN.We would also like to Hwee-Tou Ng for sharing his code  and Yang Liu and Yun Huang for suggestions.