Although Bod's method obtains very competitive results on the Wall Street Journal (WSJ) task  the parsing time was reported to be over 200 seconds per sentence (Bod 2003).While the models of Collins (1996) and Eisner (1996) restricted the fragments to the locality of head-words  later models showed the importance of including context from higher nodes in the tree (Charniak 1997; Johnson 1998a).Goodman (2002) furthermore showed how Bonnema et al. 's (1999) and Bod's (2001) estimators can be incorporated in his PCFGreduction  but did not report any experiments with these reductions.Bod (2000a) solved this problem by training the subtree probabilities by a maximum likelihood procedure based on Expectation-Maximization.While Bod (2001) needed to use a very large sample from the WSJ subtrees to do this  Goodman's method can do the same job with a more compact grammar.While the PCFG reduction of Bod (2001) obtains state-of-the-art results on the WSJ  comparable to Charniak (2000)  Bonnema et al. 's estimator performs worse and is comparable to Collins (1996).This paper presents the first published results with Goodman's PCFG-reductions of both Bonnema et al. 's (1999) and Bod's (2001) estimators on the WSJ.This may be explained by the fact our best results in Bod (2001) were obtained by testing various subtree restrictions until the highest accuracy was obtained  while in the current experiment we used all subtrees as given by the PCFG-reduction.For example  Bod (2001) samples a fixed number of subtrees of each depth  which has the effect of assigning roughly equal weight to each node in the training data  and roughly exponentially less probability for larger trees (see Goodman 2002: 12).Goodman (1996  2002) further illustrates this by a node A @j of the following form: To see how many subtrees it has  Goodman first considers the possibilities of the left branch.Sima'an (1995) gave an efficient algorithm for computing the parse tree generated by the most probable derivation  which in some cases is a reasonable approximation of the most probable parse.Note that Goodman's PCFG-reduction method summarized in Section 2 applies not only to Likelihood-DOP but also to Simplicity-DOP.Our first experimental goal was to compare the two PCFG-reductions in Section 2.2  which we will refer to resp. as Bod01 and Bon99.One instantiation of DOP which has received considerable interest is the model known as DOP12 (Bod 1992).The DOP model  on the other hand  was the first model (to the best of our knowledge) that proposed not to train a predefined grammar on a corpus  but to directly use corpus fragments as a grammar.This suggests that a model which combines these two notions of best parse may boost the accuracy.Bod reports state-of-the-art results with this method  and observes no decrease in parse accuracy when larger subtrees are included (using subtrees up to depth 14).Compared to the reranking technique in Collins (2000)  who obtained an LP of 89.9% and an LR of 89.6%  our results show a 9% relative error rate reduction.Compared to Bod (2001)  our results show an 11% improvement in terms of relative error reduction and a speedup which reduces the processing time from 220 to 3.6 seconds per WSJ sentence.Together with a PCFGreduction of DOP we obtain improved accuracy and efficiency on the Wall Street Journal treebank Our results show an 11% relative reduction in error rate over previous models  and an average processing time of 3.6 seconds per WSJ sentence.In case the shortest derivation is not unique  Bod (2000b) proposes to back off to a frequency ordering of the subtrees.Thus there are bk + 1 different possibilities on the left branch.Fortunately  there exists a compact PCFG-reduction of DOP1 that generates the same trees with the same probabilities  as shown by Goodman (1996  2002).Goodman then shows by simple induction that subderivations headed by A with external nonterminals at the roots and leaves  internal nonterminals elsewhere have probability 1/a.By varying the parameter n  we will be able to compare Likelihood-DOP  Simplicity-DOP and several instantiations of SL-DOP and LS-DOP.But while Bod's estimator obtains state-of-the-art results on the WSJ  comparable to Charniak (2000) and Collins (2000)  Bonnema et al. 's estimator performs worse and is comparable to Collins (1996).And Collins (2000) argues for &quot;keeping track of counts of arbitrary fragments within parse trees&quot;  which has indeed been carried out in Collins and Duffy (2002) who use exactly the same set of (all) tree fragments as proposed in Bod (1992).This is roughly an 11% relative reduction in error rate over Charniak (2000) and Bods PCFG-reduction reported in Table 1.This resulted in a statistically consistent model dubbed ML-DOP.We will refer to this model as Simplicity-DOP.The derivation with the smallest sum  or highest rank  is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP  its results are still rather impressive for such a simple model.Thus  there are aj= (bk+ 1)(ci + 1) possible subtrees headed by A @j. Goodman then gives a simple small PCFG with the following property: for every subtree in the training corpus headed by A  the grammar will generate an isomorphic subderivation with probability 1/a.We will refer to these models as Likelihood-DOP models  but in this paper we will specifically mean by &quot;Likelihood-DOP&quot; the PCFG-reduction of Bod (2001) given in Section 2.2.While Goodman's method does still not allow for an efficient computation of the most probable parse in DOP1  it does efficiently compute the &quot;maximum constituents parse&quot;  i.e. the parse tree which is most likely to have the largest number of correct constituents.In this paper  we will test a simple extension of Goodman's compact PCFG-reduction of DOP which has the same property as the normalization proposed in Bod (2001) in that it assigns roughly equal weight to each node in the training data.This paper also re-affirmed that the coarsegrained approach of using all subtrees from a treebank outperforms the fine-grained approach of specifically modeling lexical-syntactic depen dencies (as e.g. in Collins 1999 and Charniak 2000).The amount of probability given to two different training nodes depends on how many subtrees they have  and  given that the number of subtrees is an exponential function  this means that some training nodes could easily get hundreds or thousands of times the weight of others  even if both occur exactly once.We employed the same unknown (category) word model as in Bod (2001)  based on statistics on word-endings  hyphenation and capitalization in combination with Good-Turing (Bod 1998: 85 87).But even with cross-validation  ML-DOP is outperformed by the much simpler DOP1 model on both the ATIS and OVIS treebanks (Bod 2000b).DOP1 parses new input by combining treebanksubtrees by means of a leftmost node-subsitution operation  indicated as 0.Note that Goodman's reduction method does still not allow for an efficient computation of the most probable parse tree of a sentence: there may still be exponentially many derivations generating the same tree.