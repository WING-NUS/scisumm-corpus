Citance Number,Reference Article,Citing Article,Citation Marker Offset,Citation Marker,Citation Offset,Citation Text,Citation Text Clean,Reference Offset,Reference Text,Discourse Facet
1,P87-1015,P01-1018,0,1987,0,"The approach that Vijay-Shanker et al (1987) and Weir (1988) take, elaborated on by Becker et al (1992), is to identify a very general class of formalisms, which they call linear context free rewriting systems (CFRSs), and define for this class a large space of structural descriptions which serves as a common ground in which the strong generative capacities of these formalisms can be compared","The approach that Vijay-Shanker et al (1987) and Weir (1988) take, elaborated on by Becker et al (1992), is to identify a very general class of formalisms, which they call linear context free rewriting systems (CFRSs), and define for this class a large space of structural descriptions which serves as a common ground in which the strong generative capacities of these formalisms can be compared","['164', '195', '2', '227', '118']","<S sid =""164"" ssid = ""49"">Although embedding this version of LCFRS's in the framework of ILFP developed by Rounds (1985) is straightforward  our motivation was to capture properties shared by a family of grammatical systems and generalize them defining a class of related formalisms.</S><S sid =""195"" ssid = ""1"">We have studied the structural descriptions (tree sets) that can be assigned by various grammatical systems  and classified these formalisms on the basis of two features: path complexity; and path independence.</S><S sid =""2"" ssid = ""2"">In considering the relationship between formalisms  we show that it is useful to abstract away from the details of the formalism  and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation  we describe a class of formalisms which we call Linear Context- Free Rewriting Systems  and show they are recognizable in polynomial time and generate only semilinear languages.</S><S sid =""227"" ssid = ""33"">Formalisms such as the restricted indexed grammars (Gazdar  1985) and members of the hierarchy of grammatical systems given by Weir (1987) have independent paths  but more complex path sets.</S><S sid =""118"" ssid = ""3"">In the remainder of the paper  we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>",['Results_Citation']
2,P87-1015,E09-1055,0,"Vijay-Shanker et al, 1987",0,"Here we use the standard definition of LCFRS (Vijay-Shanker et al, 1987) and only fix our notation; for a more thorough discussion of this formal ism, we refer to the literature. Let G be an LCFRS","Here we use the standard definition of LCFRS (Vijay-Shanker et al, 1987) and only fix our notation; for a more thorough discussion of this formal ism, we refer to the literature. Let G be an LCFRS","['14', '6', '207', '222', '146']","<S sid =""14"" ssid = ""12"">This suggests that by generalizing the notion of context-freeness in CFG's  we can define a class of grammatical formalisms that manipulate more complex structures.</S><S sid =""6"" ssid = ""4"">For example  Gazdar (1985) discusses the applicability of Indexed Grammars (IG's) to Natural Language in terms of the structural descriptions assigned; and Berwick (1984) discusses the strong generative capacity of Lexical-Functional Grammar (LFG) and Government and Bindings grammars (GB).</S><S sid =""207"" ssid = ""13"">We outlined the definition of a family of constrained grammatical formalisms  called Linear Context-Free Rewriting Systems.</S><S sid =""222"" ssid = ""28"">However  in order to capture the properties of various grammatical systems under consideration  our notation is more restrictive that ILFP  which was designed as a general logical notation to characterize the complete class of languages that are recognizable in polynomial time.</S><S sid =""146"" ssid = ""31"">Since every CFL is known to be semilinear (Parikh  1966)  in order to show semilinearity of some language  we need only show the existence of a letter equivalent CFL Our definition of LCFRS's insists that the composition operations are linear and nonerasing.</S>",['Method_Citation']
3,P87-1015,W07-2214,0,"Vijay-Shanker et al, 1987",0,"There are many (structural) mildly context sensitive grammar formalisms ,e.g .mcfg ,lcfrs, mg, and they have been shown to be equivalent (Vijay-Shanker et al., 1987)","There are many (structural) mildly context sensitive grammar formalisms ,e.g .mcfg ,lcfrs, mg, and they have been shown to be equivalent (Vijay-Shanker et al., 1987)","['139', '59', '6', '227', '14']","<S sid =""139"" ssid = ""24"">Semilinearity and the closely related constant growth property (a consequence of semilinearity) have been discussed in the context of grammars for natural languages by Joshi (1983/85) and Berwick and Weinberg (1984).</S><S sid =""59"" ssid = ""44"">Bresnan  Kaplan  Peters  and Zaenen (1982) argue that these structures are needed to describe crossed-serial dependencies in Dutch subordinate clauses.</S><S sid =""6"" ssid = ""4"">For example  Gazdar (1985) discusses the applicability of Indexed Grammars (IG's) to Natural Language in terms of the structural descriptions assigned; and Berwick (1984) discusses the strong generative capacity of Lexical-Functional Grammar (LFG) and Government and Bindings grammars (GB).</S><S sid =""227"" ssid = ""33"">Formalisms such as the restricted indexed grammars (Gazdar  1985) and members of the hierarchy of grammatical systems given by Weir (1987) have independent paths  but more complex path sets.</S><S sid =""14"" ssid = ""12"">This suggests that by generalizing the notion of context-freeness in CFG's  we can define a class of grammatical formalisms that manipulate more complex structures.</S>",['Method_Citation']
4,P87-1015,P09-2003,0,nan,0,"They are in particular more powerful than linear context-free rewriting systems (LCFRS) (Vijay-Shanker et al, 1987)","They are in particular more powerful than linear context-free rewriting systems (LCFRS) (Vijay-Shanker et al, 1987)","['227', '134', '92', '207', '114']","<S sid =""227"" ssid = ""33"">Formalisms such as the restricted indexed grammars (Gazdar  1985) and members of the hierarchy of grammatical systems given by Weir (1987) have independent paths  but more complex path sets.</S><S sid =""134"" ssid = ""19"">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S><S sid =""92"" ssid = ""77"">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S><S sid =""207"" ssid = ""13"">We outlined the definition of a family of constrained grammatical formalisms  called Linear Context-Free Rewriting Systems.</S><S sid =""114"" ssid = ""20"">For example  the formalisms in the hierarchy described above generate semilinear languages although their path sets become increasingly more complex as one moves up the hierarchy.</S>",['Method_Citation']
5,P87-1015,P09-1111,0,"Vijay-Shanker et al, 1987",0,"Following this line, (Vijay-Shanker et al, 1987) have introduced a formalism called linear context-free rewriting systems (LCFRSs) that has received much attention in later years by the community","Following this line, (Vijay-Shanker et al, 1987) have introduced a formalism called linear context-free rewriting systems (LCFRSs) that has received much attention in later years by the community","['227', '74', '164', '207', '118']","<S sid =""227"" ssid = ""33"">Formalisms such as the restricted indexed grammars (Gazdar  1985) and members of the hierarchy of grammatical systems given by Weir (1987) have independent paths  but more complex path sets.</S><S sid =""74"" ssid = ""59"">An extension of the TAG system was introduced by Joshi et al. (1975) and later redefined by Joshi (1987) in which the adjunction operation is defined on sets of elementary trees rather than single trees.</S><S sid =""164"" ssid = ""49"">Although embedding this version of LCFRS's in the framework of ILFP developed by Rounds (1985) is straightforward  our motivation was to capture properties shared by a family of grammatical systems and generalize them defining a class of related formalisms.</S><S sid =""207"" ssid = ""13"">We outlined the definition of a family of constrained grammatical formalisms  called Linear Context-Free Rewriting Systems.</S><S sid =""118"" ssid = ""3"">In the remainder of the paper  we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>",['Method_Citation']
6,P87-1015,P09-1111,0,"Vijay-Shanker et al, 1987",0,"We briefly summarize here the terminology and notation that we adopt for LCFRS; for detailed definitions, see (Vijay-Shanker et al, 1987)","We briefly summarize here the terminology and notation that we adopt for LCFRS; for detailed definitions, see (Vijay-Shanker et al, 1987)","['207', '164', '118', '231', '196']","<S sid =""207"" ssid = ""13"">We outlined the definition of a family of constrained grammatical formalisms  called Linear Context-Free Rewriting Systems.</S><S sid =""164"" ssid = ""49"">Although embedding this version of LCFRS's in the framework of ILFP developed by Rounds (1985) is straightforward  our motivation was to capture properties shared by a family of grammatical systems and generalize them defining a class of related formalisms.</S><S sid =""118"" ssid = ""3"">In the remainder of the paper  we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid =""231"" ssid = ""37"">In this paper  our goal has been to use the notion of LCFRS's to classify grammatical systems on the basis of their strong generative capacity.</S><S sid =""196"" ssid = ""2"">We contrasted formalisms such as CFG's  HG's  TAG's and MCTAG's  with formalisms such as IG's and unificational systems such as LFG's and FUG's.</S>",['Method_Citation']
7,P87-1015,P07-1021,0,"Vijay-Shanker et al, 1987",0,"We write REGD.k/ to refer to the class of regular dependency languages with a gap-degree bounded by k. Linear Context-Free Rewriting Systems Gap-restricted dependency languages are closely related to Linear Context-Free Rewriting Systems (lcfrs) (Vijay-Shanker et al, 1987), a class of formal systems that generalizes several mildly context-sensitive grammar formalisms","Linear Context-Free Rewriting Systems Gap-restricted dependency languages are closely related to Linear Context-Free Rewriting Systems (lcfrs) (Vijay-Shanker et al, 1987), a class of formal systems that generalizes several mildly context-sensitive grammar formalisms","['207', '92', '227', '118', '3']","<S sid =""207"" ssid = ""13"">We outlined the definition of a family of constrained grammatical formalisms  called Linear Context-Free Rewriting Systems.</S><S sid =""92"" ssid = ""77"">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S><S sid =""227"" ssid = ""33"">Formalisms such as the restricted indexed grammars (Gazdar  1985) and members of the hierarchy of grammatical systems given by Weir (1987) have independent paths  but more complex path sets.</S><S sid =""118"" ssid = ""3"">In the remainder of the paper  we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid =""3"" ssid = ""1"">Much of the study of grammatical systems in computational linguistics has been focused on the weak generative capacity of grammatical formalism.</S>",['Method_Citation']
8,P87-1015,N09-1061,0,"Vijay-Shanker et al, 1987",0,"This observation is in line with empirical studies in the context of dependency parsing, where the need for formalisms with higher fan-out has been observed even in standard, single language texts (Kuhlmann and Nivre, 2006) .In this paper, we present an algorithm that computes optimal decompositions of rules in the formalism of Linear Context-Free Rewriting Systems (LCFRS) (Vijay-Shanker et al, 1987)","This observation is in line with empirical studies in the context of dependency parsing, where the need for formalisms with higher fan-out has been observed even in standard, single language texts (Kuhlmann and Nivre, 2006). In this paper, we present an algorithm that computes optimal decompositions of rules in the formalism of Linear Context-Free Rewriting Systems (LCFRS) (Vijay-Shanker et al, 1987)","['2', '22', '118', '115', '14']","<S sid =""2"" ssid = ""2"">In considering the relationship between formalisms  we show that it is useful to abstract away from the details of the formalism  and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation  we describe a class of formalisms which we call Linear Context- Free Rewriting Systems  and show they are recognizable in polynomial time and generate only semilinear languages.</S><S sid =""22"" ssid = ""7"">Gazdar (1985) argues this is the appropriate analysis of unbounded dependencies in the hypothetical Scandinavian language Norwedish.</S><S sid =""118"" ssid = ""3"">In the remainder of the paper  we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid =""115"" ssid = ""21"">From the point of view of recognition  independent paths in the derivation structures suggests that a top-down parser (for example) can work on each branch independently  which may lead to efficient parsing using an algorithm based on the Divide and Conquer technique.</S><S sid =""14"" ssid = ""12"">This suggests that by generalizing the notion of context-freeness in CFG's  we can define a class of grammatical formalisms that manipulate more complex structures.</S>",['Method_Citation']
9,P87-1015,N09-1061,0,1987,0,"We briefly summarize the terminology and notation that we adopt for LCFRS; for detailed definitions, see Vijay-Shanker et al (1987)","We briefly summarize the terminology and notation that we adopt for LCFRS; for detailed definitions, see Vijay-Shanker et al (1987)","['207', '164', '118', '231', '196']","<S sid =""207"" ssid = ""13"">We outlined the definition of a family of constrained grammatical formalisms  called Linear Context-Free Rewriting Systems.</S><S sid =""164"" ssid = ""49"">Although embedding this version of LCFRS's in the framework of ILFP developed by Rounds (1985) is straightforward  our motivation was to capture properties shared by a family of grammatical systems and generalize them defining a class of related formalisms.</S><S sid =""118"" ssid = ""3"">In the remainder of the paper  we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid =""231"" ssid = ""37"">In this paper  our goal has been to use the notion of LCFRS's to classify grammatical systems on the basis of their strong generative capacity.</S><S sid =""196"" ssid = ""2"">We contrasted formalisms such as CFG's  HG's  TAG's and MCTAG's  with formalisms such as IG's and unificational systems such as LFG's and FUG's.</S>",['Method_Citation']
10,P87-1015,W10-1407,0,"Vijay-Shanker et al, 1987",0,"LCFRS (Vijay-Shanker et al, 1987) are anatural extension of CFG in which a single nonterminal node can dominate more than one continuous span of terminals","LCFRS (Vijay-Shanker et al, 1987) are a natural extension of CFG in which a single nonterminal node can dominate more than one continuous span of terminals","['74', '107', '128', '141', '229']","<S sid =""74"" ssid = ""59"">An extension of the TAG system was introduced by Joshi et al. (1975) and later redefined by Joshi (1987) in which the adjunction operation is defined on sets of elementary trees rather than single trees.</S><S sid =""107"" ssid = ""13"">This pumping lemma states that if there is tree  t = t2t3t4t5  generated by a TAG G  such that its height is more than a predetermined bound k  then all trees of the form ti it tstt ts for each i > 0 will also generated by G. Similarly  for tree sets with independent paths and more complex path sets  tree pumping lemmas can be given.</S><S sid =""128"" ssid = ""13"">As in the case of the derivation trees of CFG's  nodes are labeled by a member of some finite set of symbols (perhaps only implicit in the grammar as in TAG's) used to denote derived structures.</S><S sid =""141"" ssid = ""26"">Thus  the length of any string in L is a linear combination of the length of strings in some fixed finite subset of L  and thus L is said to have the constant growth property.</S><S sid =""229"" ssid = ""35"">In addition  the restricted version of CG's (discussed in Section 6) generates tree sets with independent paths and we hope that it can be included in a more general definition of LCFRS's containing formalisms whose tree sets have path sets that are themselves LCFRL's (as in the case of the restricted indexed grammars  and the hierarchy defined by Weir).</S>",['Method_Citation']
11,P87-1015,W10-1407,0,"Vijay-Shanker et al, 1987",0,"A LCFRS (Vijay-Shanker et al, 1987) is a tuple G= (N, T, V, P, S )wherea) N is a finite set of non-terminals with a function dim: N? N that determines the fan-out of each A? N; b) T and V are disjoint finite sets of terminals and variables; c) S? N is the start symbol with dim (S)= 1; d) P is a finite set of rewriting rules A (? 1,..","A LCFRS (Vijay-Shanker et al, 1987) is a tuple G= (N, T, V, P, S ) where N is a finite set of non-terminals with a function dim: N? N that determines the fan-out of each A? N; b) T and V are disjoint finite sets of terminals and variables; c) S? N is the start symbol with dim (S)= 1; d) P is a finite set of rewriting rules A (? 1,..","['95', '183', '148', '107', '189']","<S sid =""95"" ssid = ""1"">Roughly speaking  we say that a tee set contains trees with dependent paths if there are two paths p.  = vim.  and g.  = in each 7 E r such that v.  is some  possibly empty  shared initial subpath; v.  and wi are not bounded in length; and there is some &quot;dependence&quot; (such as equal length) between the set of all v.  and w.  for each 7 Er.</S><S sid =""183"" ssid = ""68"">We assume that M is in an existential state qA  with integers i1 and i2 representing zi in the (2i — 1)th and 22th work tape  for 1 < i < k. For each rule p : A fp(B  C) such that fp is mapped onto the function fp defined by the following rule. jp((xi .. •  rnt)  (1ii  • • • • Yn3))= (Zi   • • •   Zk) M breaks xi   zk into substrings xi    xn  and yi ... y&quot; conforming to the definition of fp.</S><S sid =""148"" ssid = ""33"">If 0(A) gives the number of occurrences of each terminal in the structure named by A  then  given the constraints imposed on the formalism  for each rule A --. fp(Ai    An) we have the equality where c„ is some constant.</S><S sid =""107"" ssid = ""13"">This pumping lemma states that if there is tree  t = t2t3t4t5  generated by a TAG G  such that its height is more than a predetermined bound k  then all trees of the form ti it tstt ts for each i > 0 will also generated by G. Similarly  for tree sets with independent paths and more complex path sets  tree pumping lemmas can be given.</S><S sid =""189"" ssid = ""74"">For rules p : A fpo such that fp is constant function  giving an elementary structure  fp is defined such that fp() = (Si ... xi() where each z is a constant string.</S>",['Method_Citation']
12,P87-1015,E09-1053,0,1987,0,"In particular, we cast new light on the relationship between CCG and other mildly context-sensitive formalisms such as Tree-Adjoining Grammar (TAG; Joshi and Schabes (1997)) and Linear Context-Free Rewrite Systems (LCFRS; Vijay-Shanker et al (1987))","In particular, we cast new light on the relationship between CCG and other mildly context-sensitive formalisms such as Tree-Adjoining Grammar (TAG; Joshi and Schabes (1997)) and Linear Context-Free Rewrite Systems (LCFRS; Vijay-Shanker et al (1987))","['227', '74', '139', '207', '6']","<S sid =""227"" ssid = ""33"">Formalisms such as the restricted indexed grammars (Gazdar  1985) and members of the hierarchy of grammatical systems given by Weir (1987) have independent paths  but more complex path sets.</S><S sid =""74"" ssid = ""59"">An extension of the TAG system was introduced by Joshi et al. (1975) and later redefined by Joshi (1987) in which the adjunction operation is defined on sets of elementary trees rather than single trees.</S><S sid =""139"" ssid = ""24"">Semilinearity and the closely related constant growth property (a consequence of semilinearity) have been discussed in the context of grammars for natural languages by Joshi (1983/85) and Berwick and Weinberg (1984).</S><S sid =""207"" ssid = ""13"">We outlined the definition of a family of constrained grammatical formalisms  called Linear Context-Free Rewriting Systems.</S><S sid =""6"" ssid = ""4"">For example  Gazdar (1985) discusses the applicability of Indexed Grammars (IG's) to Natural Language in terms of the structural descriptions assigned; and Berwick (1984) discusses the strong generative capacity of Lexical-Functional Grammar (LFG) and Government and Bindings grammars (GB).</S>",['Method_Citation']
13,P87-1015,E09-1053,0,"Vijay-Shanker et al, 1987",0,"2 By this result, CCG falls in line with context-free grammars, TAG, and LCFRS, whose sets of deriva tional structures are all regular (Vijay-Shanker et al., 1987)","By this result, CCG falls in line with context-free grammars, TAG, and LCFRS, whose sets of derivational structures are all regular (Vijay-Shanker et al., 1987)","['227', '8', '139', '74', '204']","<S sid =""227"" ssid = ""33"">Formalisms such as the restricted indexed grammars (Gazdar  1985) and members of the hierarchy of grammatical systems given by Weir (1987) have independent paths  but more complex path sets.</S><S sid =""8"" ssid = ""6"">We consider properties of the tree sets generated by CFG's  Tree Adjoining Grammars (TAG's)  Head Grammars (HG's)  Categorial Grammars (CG's)  and IG's.</S><S sid =""139"" ssid = ""24"">Semilinearity and the closely related constant growth property (a consequence of semilinearity) have been discussed in the context of grammars for natural languages by Joshi (1983/85) and Berwick and Weinberg (1984).</S><S sid =""74"" ssid = ""59"">An extension of the TAG system was introduced by Joshi et al. (1975) and later redefined by Joshi (1987) in which the adjunction operation is defined on sets of elementary trees rather than single trees.</S><S sid =""204"" ssid = ""10"">The similarities become apparent when they are studied at the level of derivation structures: derivation nee sets of CFG's  HG's  TAG's  and MCTAG's are all local sets.</S>",['Results_Citation']
14,P87-1015,E09-1053,0,"Vijay-Shanker et al, 1987",0,"It is important to note that while CCG derivations themselves can be seen as trees as well, they do not always form regular tree languages (Vijay-Shanker et al, 1987)","It is important to note that while CCG derivations themselves can be seen as trees as well, they do not always form regular tree languages (Vijay-Shanker et al, 1987)","['10', '2', '128', '50', '39']","<S sid =""10"" ssid = ""8"">These two properties of the tree sets are not only linguistically relevant  but also have computational importance.</S><S sid =""2"" ssid = ""2"">In considering the relationship between formalisms  we show that it is useful to abstract away from the details of the formalism  and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation  we describe a class of formalisms which we call Linear Context- Free Rewriting Systems  and show they are recognizable in polynomial time and generate only semilinear languages.</S><S sid =""128"" ssid = ""13"">As in the case of the derivation trees of CFG's  nodes are labeled by a member of some finite set of symbols (perhaps only implicit in the grammar as in TAG's) used to denote derived structures.</S><S sid =""50"" ssid = ""35"">The work of Rounds (1969) shows that the path sets of trees derived by IG's (like those of TAG's) are context-free languages.</S><S sid =""39"" ssid = ""24"">As with HG's derivation structures are annotated; in the case of TAG's  by the trees used for adjunction and addresses of nodes of the elementary tree where adjunctions occurred.</S>",['Method_Citation']
15,P87-1015,N10-1035,0,1987,0,"On this line of investigation, mildly context-sensitive grammar formalisms have been introduced (Joshi,1985), including, among several others, the tree ad joining grammars (TAGs) of Joshi et al (1975) .Linear context-free rewriting system (LCFRS), introduced by Vijay-Shanker et al (1987), is a mildly context-sensitive formalism that allows the derivation of tuples of strings ,i.e., discontinuous phrases","On this line of investigation, mildly context-sensitive grammar formalisms have been introduced (Joshi,1985), including, among several others, the tree ad joining grammars (TAGs) of Joshi et al (1975). Linear context-free rewriting system (LCFRS), introduced by Vijay-Shanker et al (1987), is a mildly context-sensitive formalism that allows the derivation of tuples of strings, i.e., discontinuous phrases","['74', '227', '27', '128', '8']","<S sid =""74"" ssid = ""59"">An extension of the TAG system was introduced by Joshi et al. (1975) and later redefined by Joshi (1987) in which the adjunction operation is defined on sets of elementary trees rather than single trees.</S><S sid =""227"" ssid = ""33"">Formalisms such as the restricted indexed grammars (Gazdar  1985) and members of the hierarchy of grammatical systems given by Weir (1987) have independent paths  but more complex path sets.</S><S sid =""27"" ssid = ""12"">Thus  the tree sets generated by HG's are similar to those of CFG's  with each node annotated by the operation (concatenation or wrapping) used to combine the headed strings derived by the daughters of Tree Adjoining Grammars  a tree rewriting formalism  was introduced by Joshi  Levy and Takahashi (1975) and Joshi (1983/85).</S><S sid =""128"" ssid = ""13"">As in the case of the derivation trees of CFG's  nodes are labeled by a member of some finite set of symbols (perhaps only implicit in the grammar as in TAG's) used to denote derived structures.</S><S sid =""8"" ssid = ""6"">We consider properties of the tree sets generated by CFG's  Tree Adjoining Grammars (TAG's)  Head Grammars (HG's)  Categorial Grammars (CG's)  and IG's.</S>",['Method_Citation']
16,P87-1015,P12-1053,0,1987,0,"CFTG are weakly equivalent to the simple macro grammars of Fischer (1968), which are a notational variant of the well-nested linear context-free rewriting systems (LCFRS) of Vijay-Shanker et al (1987) and the well-nested multiple context-free grammars (MCFG) of Seki et al (1991) .3 Thus, CFTG are mildly context-sensitive since their generated string languages are semi-linear and can be parsed in polynomial time (Go ?mez-Rodr? ?guez et al, 2010)","CFTG are weakly equivalent to the simple macro grammars of Fischer (1968), which are a notational variant of the well-nested linear context-free rewriting systems (LCFRS) of Vijay-Shanker et al (1987) and the well-nested multiple context-free grammars (MCFG) of Seki et al (1991)","['227', '74', '139', '2', '167']","<S sid =""227"" ssid = ""33"">Formalisms such as the restricted indexed grammars (Gazdar  1985) and members of the hierarchy of grammatical systems given by Weir (1987) have independent paths  but more complex path sets.</S><S sid =""74"" ssid = ""59"">An extension of the TAG system was introduced by Joshi et al. (1975) and later redefined by Joshi (1987) in which the adjunction operation is defined on sets of elementary trees rather than single trees.</S><S sid =""139"" ssid = ""24"">Semilinearity and the closely related constant growth property (a consequence of semilinearity) have been discussed in the context of grammars for natural languages by Joshi (1983/85) and Berwick and Weinberg (1984).</S><S sid =""2"" ssid = ""2"">In considering the relationship between formalisms  we show that it is useful to abstract away from the details of the formalism  and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation  we describe a class of formalisms which we call Linear Context- Free Rewriting Systems  and show they are recognizable in polynomial time and generate only semilinear languages.</S><S sid =""167"" ssid = ""52"">We use Alternating Turing Machines (Chandra  Kozen  and Stockmeyer  1981) to show that polynomial time recognition is possible for the languages discussed in Section 4.3.</S>",['Method_Citation']
