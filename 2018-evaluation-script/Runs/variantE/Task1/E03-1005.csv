Citance Number,Reference Article,Citing Article,Citation Marker Offset,Citation Marker,Citation Offset,Citation Text,Citation Text Clean,Reference Offset,Reference Text,Discourse Facet
2,E03-1005,N06-1045,0,"Bod, 2003",0,"Data-Oriented Parsing (DOP)? s methodology is to calculate weighted derivations, but as noted in (Bod, 2003), it is the highest ranking parse, not derivation, that is desired","Data-Oriented Parsing (DOP)'s methodology is to calculate weighted derivations, but as noted in (Bod, 2003), it is the highest ranking parse, not derivation, that is desired","['7', '64', '99', '71', '39']","<S sid =""7"" ssid = ""4"">Other models started off with a predefined grammar and used a corpus only for estimating the rule probabilities (as e.g.</S><S sid =""64"" ssid = ""16"">There are bk non-trivial subtrees headed by B@k  and there is also the trivial case where the left node is simply B.</S><S sid =""99"" ssid = ""2"">We will refer to these models as Likelihood-DOP models  but in this paper we will specifically mean by &quot;Likelihood-DOP&quot; the PCFG-reduction of Bod (2001) given in Section 2.2.</S><S sid =""71"" ssid = ""23"">For the node in figure 1  the following eight PCFG rules are generated  where the number in parentheses following a rule is its probability.</S><S sid =""39"" ssid = ""36"">Collins & Duffy (2002) showed how the perceptron algorithm can be used to efficiently compute the best parse with DOP1's subtrees  reporting a 5.1% relative reduction in error rate over the model in Collins (1999) on the WSJ.</S>",['Results_Citation']
3,E03-1005,D07-1058,0,2003,0,"Goodman? s transform, in com bi nation with a range of heuristics, allowed Bod (2003) to run the DOP model on the Penn Treebank WSJ benchmark and obtain some of the best results obtained with a generative model","Goodman's transform, in combination with a range of heuristics, allowed Bod (2003) to run the DOP model on the Penn Treebank WSJ benchmark and obtain some of the best results obtained with a generative model","['140', '130', '27', '88', '69']","<S sid =""140"" ssid = ""5"">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid =""130"" ssid = ""11"">While the PCFG reduction of Bod (2001) obtains state-of-the-art results on the WSJ  comparable to Charniak (2000)  Bonnema et al. 's estimator performs worse and is comparable to Collins (1996).</S><S sid =""27"" ssid = ""24"">Goodman (1996  1998) developed a polynomial time PCFG-reduction of DOP1 whose size is linear in the size of the training set  thus converting the exponential number of subtrees to a compact grammar.</S><S sid =""88"" ssid = ""40"">In this paper  we will test a simple extension of Goodman's compact PCFG-reduction of DOP which has the same property as the normalization proposed in Bod (2001) in that it assigns roughly equal weight to each node in the training data.</S><S sid =""69"" ssid = ""21"">Thus  rather than using the large  explicit DOP1 model  one can also use this small PCFG that generates isomorphic derivations  with identical probabilities.</S>",['Method_Citation']
4,E03-1005,D07-1058,0,"Bod, 2003",0,"Zuidema (2006a) shows that also the estimator (Bod, 2003) uses is biased and inconsistent, and will, even in the limit of infinite data, not correctly identify many possible distributions over trees","Zuidema (2006a) shows that also the estimator (Bod, 2003) uses is biased and inconsistent, and will, even in the limit of infinite data, not correctly identify many possible distributions over trees","['50', '76', '46', '91', '52']","<S sid =""50"" ssid = ""2"">The probability of a parse tree is computed from the occurrencefrequencies of the subtrees in the treebank.</S><S sid =""76"" ssid = ""28"">Note that Goodman's reduction method does still not allow for an efficient computation of the most probable parse tree of a sentence: there may still be exponentially many derivations generating the same tree.</S><S sid =""46"" ssid = ""43"">Most previous notions of best parse tree in DOP1 were based on a probabilistic metric  with Bod (2000b) as a notable exception  who used a simplicity metric based on the shortest derivation.</S><S sid =""91"" ssid = ""43"">It easy to see that this is equivalent to reducing the probability of a tree by a factor of four for each pair of nonterminals it contains  resulting in the PCFG reduction in figure 4.</S><S sid =""52"" ssid = ""4"">The probability of a parse tree T is the sum of the probabilities of its distinct derivations.</S>",['Method_Citation']
5,E03-1005,P11-1086,0,"Bod, 2003",0,"Second, we compare against a composed-rule system, which is analogous to the Data Oriented Parsing (DOP) approach in parsing (Bod, 2003)","Second, we compare against a composed-rule system, which is analogous to the Data Oriented Parsing (DOP) approach in parsing (Bod, 2003)","['74', '124', '40', '13', '96']","<S sid =""74"" ssid = ""26"">Goodman's main theorem is that this construction produces PCFG derivations isomorphic to DOP derivations with equal probability.</S><S sid =""124"" ssid = ""5"">We employed the same unknown (category) word model as in Bod (2001)  based on statistics on word-endings  hyphenation and capitalization in combination with Good-Turing (Bod 1998: 85 87).</S><S sid =""40"" ssid = ""37"">Goodman (2002) furthermore showed how Bonnema et al. 's (1999) and Bod's (2001) estimators can be incorporated in his PCFGreduction  but did not report any experiments with these reductions.</S><S sid =""13"" ssid = ""10"">The other innovation of DOP was to take (in principle) all corpus fragments  of any size  rather than a small subset.</S><S sid =""96"" ssid = ""48"">However  as mentioned above  efficient parsing does not necessarily mean efficient disambiguation: the exact computation of the most probable parse remains exponential.</S>",['Method_Citation']
6,E03-1005,P04-1013,0,"Bod, 2003",0,"Our best performing model is more accurate than all these previous models except (Bod, 2003)","Our best performing model is more accurate than all these previous models except (Bod, 2003)","['0', '120', '34', '15', '40']","<S sid =""0"" ssid = ""0"">An Efficient Implementation of a New DOP Model</S><S sid =""120"" ssid = ""1"">For our experiments we used the standard division of the WSJ (Marcus et al. 1993)  with sections 2 through 21 for training (approx.</S><S sid =""34"" ssid = ""31"">But even with cross-validation  ML-DOP is outperformed by the much simpler DOP1 model on both the ATIS and OVIS treebanks (Bod 2000b).</S><S sid =""15"" ssid = ""12"">However  during the last few years we can observe a shift towards using more and larger corpus fragments with fewer restrictions.</S><S sid =""40"" ssid = ""37"">Goodman (2002) furthermore showed how Bonnema et al. 's (1999) and Bod's (2001) estimators can be incorporated in his PCFGreduction  but did not report any experiments with these reductions.</S>",['Method_Citation']
7,E03-1005,P04-1013,0,"Bod, 2003",0,"We find that the discriminative probability model is much worse than the generative one, but that training to optimize the discriminative criteria results in improved performance. Performance of the latter model on the standard test set achieves 90.1% F-measure on constituents, which is the second best current ac curacy level, and only 0.6% below the current best (Bod, 2003) .This paper has also proposed a neural network training method which optimizes a discriminative criteria even when the parameters being estimated are those of a generative probability model","Performance of the latter model on the standard test set achieves 90.1% F-measure on constituents, which is the second best current accuracy level, and only 0.6% below the current best (Bod, 2003)","['7', '3', '37', '39', '85']","<S sid =""7"" ssid = ""4"">Other models started off with a predefined grammar and used a corpus only for estimating the rule probabilities (as e.g.</S><S sid =""3"" ssid = ""3"">Together with a PCFGreduction of DOP we obtain improved accuracy and efficiency on the Wall Street Journal treebank Our results show an 11% relative reduction in error rate over previous models  and an average processing time of 3.6 seconds per WSJ sentence.</S><S sid =""37"" ssid = ""34"">Bod (2001) used an alternative technique which samples a fixed number of subtrees of each depth and which has the effect of assigning roughly equal weight to each node in the training data.</S><S sid =""39"" ssid = ""36"">Collins & Duffy (2002) showed how the perceptron algorithm can be used to efficiently compute the best parse with DOP1's subtrees  reporting a 5.1% relative reduction in error rate over the model in Collins (1999) on the WSJ.</S><S sid =""85"" ssid = ""37"">For example  Bod (2001) samples a fixed number of subtrees of each depth  which has the effect of assigning roughly equal weight to each node in the training data  and roughly exponentially less probability for larger trees (see Goodman 2002: 12).</S>",['Method_Citation']
10,E03-1005,E06-2025,0,"Bod, 2003",0,"Similarly, (Bod, 2003) changes the way frequenciesfi are counted, with a similar effect","Similarly, (Bod, 2003) changes the way frequencies fi are counted, with a similar effect","['7', '64', '136', '99', '140']","<S sid =""7"" ssid = ""4"">Other models started off with a predefined grammar and used a corpus only for estimating the rule probabilities (as e.g.</S><S sid =""64"" ssid = ""16"">There are bk non-trivial subtrees headed by B@k  and there is also the trivial case where the left node is simply B.</S><S sid =""136"" ssid = ""1"">As our second experimental goal  we compared the models SL-DOP and LS-DOP explained in Section 3.2.</S><S sid =""99"" ssid = ""2"">We will refer to these models as Likelihood-DOP models  but in this paper we will specifically mean by &quot;Likelihood-DOP&quot; the PCFG-reduction of Bod (2001) given in Section 2.2.</S><S sid =""140"" ssid = ""5"">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>",['Method_Citation']
12,E03-1005,W06-2905,0,"Bod, 2003",0,"(henceforth, STSGs), which can represent single words, contiguous and noncontiguous MWEs, context-free rules or complete parse trees in a unified representation. My approach is closely related to work in statistical parsing known as Data-Oriented Parsing (DOP), an empirically highly successful approach with labeled recall and precision scores on the Penn Tree Bank that are among the best currently obtained (Bod, 2003)","My approach is closely related to work in statistical parsing known as Data-Oriented Parsing (DOP), an empirically highly successful approach with labeled recall and precision scores on the Penn Tree Bank that are among the best currently obtained (Bod, 2003)","['145', '46', '124', '105', '41']","<S sid =""145"" ssid = ""10"">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid =""46"" ssid = ""43"">Most previous notions of best parse tree in DOP1 were based on a probabilistic metric  with Bod (2000b) as a notable exception  who used a simplicity metric based on the shortest derivation.</S><S sid =""124"" ssid = ""5"">We employed the same unknown (category) word model as in Bod (2001)  based on statistics on word-endings  hyphenation and capitalization in combination with Good-Turing (Bod 1998: 85 87).</S><S sid =""105"" ssid = ""8"">The derivation with the smallest sum  or highest rank  is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP  its results are still rather impressive for such a simple model.</S><S sid =""41"" ssid = ""38"">This paper presents the first published results with Goodman's PCFG-reductions of both Bonnema et al. 's (1999) and Bod's (2001) estimators on the WSJ.</S>",['Method_Citation']
13,E03-1005,W06-2905,0,"Bod, 2003",0,"Shown are results were only elementary trees with scores higher than 0.3 and 0.1 respectively are used. However, more interesting is a qualitative analysis of the STSG induced, which shows that ,un like DOP1, push-n-pull arrives at a grammar that gives high weights (and scores) to those elementary3We approximated the most probable parse as follows (fol lowing (Bod, 2003))","We approximated the most probable parse as follows (following (Bod, 2003))","['140', '64', '99', '42', '136']","<S sid =""140"" ssid = ""5"">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid =""64"" ssid = ""16"">There are bk non-trivial subtrees headed by B@k  and there is also the trivial case where the left node is simply B.</S><S sid =""99"" ssid = ""2"">We will refer to these models as Likelihood-DOP models  but in this paper we will specifically mean by &quot;Likelihood-DOP&quot; the PCFG-reduction of Bod (2001) given in Section 2.2.</S><S sid =""42"" ssid = ""39"">We show that these PCFG-reductions result in a 60 times speedup in processing time w.r.t.</S><S sid =""136"" ssid = ""1"">As our second experimental goal  we compared the models SL-DOP and LS-DOP explained in Section 3.2.</S>",['Method_Citation']
14,E03-1005,P05-1022,0,"Bod, 2003",0,"This result is only slightly higher than the highest reported result for this test-set, Bod? s (.907) (Bod,2003)","This result is only slightly higher than the highest reported result for this test-set, Bod's (.907) (Bod,2003)","['142', '7', '141', '136', '59']","<S sid =""142"" ssid = ""7"">Compared to the reranking technique in Collins (2000)  who obtained an LP of 89.9% and an LR of 89.6%  our results show a 9% relative error rate reduction.</S><S sid =""7"" ssid = ""4"">Other models started off with a predefined grammar and used a corpus only for estimating the rule probabilities (as e.g.</S><S sid =""141"" ssid = ""6"">This is roughly an 11% relative reduction in error rate over Charniak (2000) and Bods PCFG-reduction reported in Table 1.</S><S sid =""136"" ssid = ""1"">As our second experimental goal  we compared the models SL-DOP and LS-DOP explained in Section 3.2.</S><S sid =""59"" ssid = ""11"">A new nonterminal is created for each node in the training data.</S>",['Method_Citation']
16,E03-1005,P07-1051,0,2003,0,"This assumption is in consonance with the principle of simplicity, but there are also empirical reasons for the shortest derivation assumption: in Bod (2003) and Hearne and Way (2006), it is shown that DOP models that select the preferred parse of a test sentence using the shortest derivation criterion perform very well","This assumption is in consonance with the principle of simplicity, but there are also empirical reasons for the shortest derivation assumption: in Bod (2003) and Hearne and Way (2006), it is shown that DOP models that select the preferred parse of a test sentence using the shortest derivation criterion perform very well","['7', '116', '85', '37', '39']","<S sid =""7"" ssid = ""4"">Other models started off with a predefined grammar and used a corpus only for estimating the rule probabilities (as e.g.</S><S sid =""116"" ssid = ""19"">Then the shortest derivation is equal to the most probable derivation and can be computed by standard Viterbi optimization  which can be seen as follows: if each subtree has a probability p then the probability of a derivation involving n subtrees is equal to pn  and since 0<p<1  the derivation with the fewest subtrees has the greatest probability.</S><S sid =""85"" ssid = ""37"">For example  Bod (2001) samples a fixed number of subtrees of each depth  which has the effect of assigning roughly equal weight to each node in the training data  and roughly exponentially less probability for larger trees (see Goodman 2002: 12).</S><S sid =""37"" ssid = ""34"">Bod (2001) used an alternative technique which samples a fixed number of subtrees of each depth and which has the effect of assigning roughly equal weight to each node in the training data.</S><S sid =""39"" ssid = ""36"">Collins & Duffy (2002) showed how the perceptron algorithm can be used to efficiently compute the best parse with DOP1's subtrees  reporting a 5.1% relative reduction in error rate over the model in Collins (1999) on the WSJ.</S>",['Method_Citation']
17,E03-1005,P07-1051,0,"Bod, 2003",0,"But equally important is the fact that this new DOP* model does not suffer from a decrease in parse accuracy if larger subtrees are included, whereas the original DOP model needs to be redressed by a correction factor to maintain this property (Bod 2003)","But equally important is the fact that this new DOP* model does not suffer from a decrease in parse accuracy if larger subtrees are included, whereas the original DOP model needs to be redressed by a correction factor to maintain this property (Bod 2003)","['7', '37', '99', '103', '134']","<S sid =""7"" ssid = ""4"">Other models started off with a predefined grammar and used a corpus only for estimating the rule probabilities (as e.g.</S><S sid =""37"" ssid = ""34"">Bod (2001) used an alternative technique which samples a fixed number of subtrees of each depth and which has the effect of assigning roughly equal weight to each node in the training data.</S><S sid =""99"" ssid = ""2"">We will refer to these models as Likelihood-DOP models  but in this paper we will specifically mean by &quot;Likelihood-DOP&quot; the PCFG-reduction of Bod (2001) given in Section 2.2.</S><S sid =""103"" ssid = ""6"">That is  all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1  the second most frequent subtree gets rank 2  etc.</S><S sid =""134"" ssid = ""15"">This may be explained by the fact our best results in Bod (2001) were obtained by testing various subtree restrictions until the highest accuracy was obtained  while in the current experiment we used all subtrees as given by the PCFG-reduction.</S>",['Method_Citation']
18,E03-1005,P07-1051,0,2003,0,"Of course, it is well-known that a supervised parser? s f-score decreases if it is transferred to another domain: for example, the (non-binarized) WSJ-trained DOP model in Bod (2003) decreases from around 91% to 85.5% f score if tested on the Brown corpus","Of course, it is well-known that a supervised parser's f-score decreases if it is transferred to another domain: for example, the (non-binarized) WSJ-trained DOP model in Bod (2003) decreases from around 91% to 85.5% f score if tested on the Brown corpus","['37', '85', '7', '39', '88']","<S sid =""37"" ssid = ""34"">Bod (2001) used an alternative technique which samples a fixed number of subtrees of each depth and which has the effect of assigning roughly equal weight to each node in the training data.</S><S sid =""85"" ssid = ""37"">For example  Bod (2001) samples a fixed number of subtrees of each depth  which has the effect of assigning roughly equal weight to each node in the training data  and roughly exponentially less probability for larger trees (see Goodman 2002: 12).</S><S sid =""7"" ssid = ""4"">Other models started off with a predefined grammar and used a corpus only for estimating the rule probabilities (as e.g.</S><S sid =""39"" ssid = ""36"">Collins & Duffy (2002) showed how the perceptron algorithm can be used to efficiently compute the best parse with DOP1's subtrees  reporting a 5.1% relative reduction in error rate over the model in Collins (1999) on the WSJ.</S><S sid =""88"" ssid = ""40"">In this paper  we will test a simple extension of Goodman's compact PCFG-reduction of DOP which has the same property as the normalization proposed in Bod (2001) in that it assigns roughly equal weight to each node in the training data.</S>",['Results_Citation']
19,E03-1005,W04-0305,0,"Bod, 2003",0,"A moderately larger vocabulary version (4215 tag-word pairs) of this parser achieves 89.8% F-measure on section 0, where the best current result on the testing set is 90.7% (Bod, 2003)","A moderately larger vocabulary version (4215 tag-word pairs) of this parser achieves 89.8% F-measure on section 0, where the best current result on the testing set is 90.7% (Bod, 2003)","['7', '37', '140', '39', '64']","<S sid =""7"" ssid = ""4"">Other models started off with a predefined grammar and used a corpus only for estimating the rule probabilities (as e.g.</S><S sid =""37"" ssid = ""34"">Bod (2001) used an alternative technique which samples a fixed number of subtrees of each depth and which has the effect of assigning roughly equal weight to each node in the training data.</S><S sid =""140"" ssid = ""5"">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid =""39"" ssid = ""36"">Collins & Duffy (2002) showed how the perceptron algorithm can be used to efficiently compute the best parse with DOP1's subtrees  reporting a 5.1% relative reduction in error rate over the model in Collins (1999) on the WSJ.</S><S sid =""64"" ssid = ""16"">There are bk non-trivial subtrees headed by B@k  and there is also the trivial case where the left node is simply B.</S>",['Method_Citation']
20,E03-1005,P06-1109,0,2003,0,The probability of a parse tree T is the sum of the 1 This subtree probability is redressed by a simple correction factor discussed in Goodman (2003: 136) and Bod (2003),This subtree probability is redressed by a simple correction factor discussed in Goodman (2003: 136) and Bod (2003),"['99', '136', '42', '140', '141']","<S sid =""99"" ssid = ""2"">We will refer to these models as Likelihood-DOP models  but in this paper we will specifically mean by &quot;Likelihood-DOP&quot; the PCFG-reduction of Bod (2001) given in Section 2.2.</S><S sid =""136"" ssid = ""1"">As our second experimental goal  we compared the models SL-DOP and LS-DOP explained in Section 3.2.</S><S sid =""42"" ssid = ""39"">We show that these PCFG-reductions result in a 60 times speedup in processing time w.r.t.</S><S sid =""140"" ssid = ""5"">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid =""141"" ssid = ""6"">This is roughly an 11% relative reduction in error rate over Charniak (2000) and Bods PCFG-reduction reported in Table 1.</S>",['Method_Citation']
