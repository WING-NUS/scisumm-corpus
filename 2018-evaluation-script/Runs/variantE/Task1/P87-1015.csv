Citance Number,Reference Article,Citing Article,Citation Marker Offset,Citation Marker,Citation Offset,Citation Text,Citation Text Clean,Reference Offset,Reference Text,Discourse Facet
1,P87-1015,P01-1018,0,1987,0,"The approach that Vijay-Shanker et al (1987) and Weir (1988) take, elaborated on by Becker et al (1992), is to identify a very general class of formalisms, which they call linear context free rewriting systems (CFRSs), and define for this class a large space of structural descriptions which serves as a common ground in which the strong generative capacities of these formalisms can be compared","The approach that Vijay-Shanker et al (1987) and Weir (1988) take, elaborated on by Becker et al (1992), is to identify a very general class of formalisms, which they call linear context free rewriting systems (CFRSs), and define for this class a large space of structural descriptions which serves as a common ground in which the strong generative capacities of these formalisms can be compared","['115', '222', '195', '67', '153']","<S sid =""115"" ssid = ""21"">From the point of view of recognition  independent paths in the derivation structures suggests that a top-down parser (for example) can work on each branch independently  which may lead to efficient parsing using an algorithm based on the Divide and Conquer technique.</S><S sid =""222"" ssid = ""28"">However  in order to capture the properties of various grammatical systems under consideration  our notation is more restrictive that ILFP  which was designed as a general logical notation to characterize the complete class of languages that are recognizable in polynomial time.</S><S sid =""195"" ssid = ""1"">We have studied the structural descriptions (tree sets) that can be assigned by various grammatical systems  and classified these formalisms on the basis of two features: path complexity; and path independence.</S><S sid =""67"" ssid = ""52"">On the one hand  the definition of composition in Steedman (1985)  which technically permits composition of functions with unbounded number of arguments  generates tree sets with dependent paths such as those shown in Figure 6.</S><S sid =""153"" ssid = ""38"">In this section for the purposes of showing that polynomial time recognition is possible  we make the additional restriction that the contribution of a derived structure to the input string can be specified by a bounded sequence of substrings of the input.</S>",['Results_Citation']
2,P87-1015,E09-1055,0,"Vijay-Shanker et al, 1987",0,"Here we use the standard definition of LCFRS (Vijay-Shanker et al, 1987) and only fix our notation; for a more thorough discussion of this formal ism, we refer to the literature. Let G be an LCFRS","Here we use the standard definition of LCFRS (Vijay-Shanker et al, 1987) and only fix our notation; for a more thorough discussion of this formal ism, we refer to the literature. Let G be an LCFRS","['37', '231', '197', '116', '92']","<S sid =""37"" ssid = ""22"">Like CFG's  the choice is predetermined by a finite number of rules encapsulated in the grammar.</S><S sid =""231"" ssid = ""37"">In this paper  our goal has been to use the notion of LCFRS's to classify grammatical systems on the basis of their strong generative capacity.</S><S sid =""197"" ssid = ""3"">We address the question of whether or not a formalism can generate only structural descriptions with independent paths.</S><S sid =""116"" ssid = ""1"">From the discussion so far it is clear that a number of formalisms involve some type of context-free rewriting (they have derivation trees that are local sets).</S><S sid =""92"" ssid = ""77"">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>",['Method_Citation']
3,P87-1015,W07-2214,0,"Vijay-Shanker et al, 1987",0,"There are many (structural) mildly context sensitive grammar formalisms ,e.g .mcfg ,lcfrs, mg, and they have been shown to be equivalent (Vijay-Shanker et al., 1987)","There are many (structural) mildly context sensitive grammar formalisms ,e.g .mcfg ,lcfrs, mg, and they have been shown to be equivalent (Vijay-Shanker et al., 1987)","['204', '131', '65', '227', '179']","<S sid =""204"" ssid = ""10"">The similarities become apparent when they are studied at the level of derivation structures: derivation nee sets of CFG's  HG's  TAG's  and MCTAG's are all local sets.</S><S sid =""131"" ssid = ""16"">The composition operations in the case of CFG's are parameterized by the productions.</S><S sid =""65"" ssid = ""50"">While the generative power of CG's is greater that of CFG's  it appears to be highly constrained.</S><S sid =""227"" ssid = ""33"">Formalisms such as the restricted indexed grammars (Gazdar  1985) and members of the hierarchy of grammatical systems given by Weir (1987) have independent paths  but more complex path sets.</S><S sid =""179"" ssid = ""64"">It can be seen that M performs a top-down recognition of the input al ... nin logspace.</S>",['Method_Citation']
4,P87-1015,P09-2003,0,nan,0,"They are in particular more powerful than linear context-free rewriting systems (LCFRS) (Vijay-Shanker et al, 1987)","They are in particular more powerful than linear context-free rewriting systems (LCFRS) (Vijay-Shanker et al, 1987)","['194', '92', '65', '20', '131']","<S sid =""194"" ssid = ""79"">Thus  M works in logspace and recognition can be done on a deterministic TM in polynomial tape.</S><S sid =""92"" ssid = ""77"">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S><S sid =""65"" ssid = ""50"">While the generative power of CG's is greater that of CFG's  it appears to be highly constrained.</S><S sid =""20"" ssid = ""5"">As a result  CFG's can not provide the structural descriptions in which there are nested dependencies between symbols labelling a path.</S><S sid =""131"" ssid = ""16"">The composition operations in the case of CFG's are parameterized by the productions.</S>",['Method_Citation']
5,P87-1015,P09-1111,0,"Vijay-Shanker et al, 1987",0,"Following this line, (Vijay-Shanker et al, 1987) have introduced a formalism called linear context-free rewriting systems (LCFRSs) that has received much attention in later years by the community","Following this line, (Vijay-Shanker et al, 1987) have introduced a formalism called linear context-free rewriting systems (LCFRSs) that has received much attention in later years by the community","['155', '37', '117', '92', '48']","<S sid =""155"" ssid = ""40"">CFG's  TAG's  MCTAG's and HG's are all members of this class since they satisfy these restrictions.</S><S sid =""37"" ssid = ""22"">Like CFG's  the choice is predetermined by a finite number of rules encapsulated in the grammar.</S><S sid =""117"" ssid = ""2"">Our goal is to define a class of formal systems  and show that any member of this class will possess certain attractive properties.</S><S sid =""92"" ssid = ""77"">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S><S sid =""48"" ssid = ""33"">There has been recent interest in the application of Indexed Grammars (IG's) to natural languages.</S>",['Method_Citation']
6,P87-1015,P09-1111,0,"Vijay-Shanker et al, 1987",0,"We briefly summarize here the terminology and notation that we adopt for LCFRS; for detailed definitions, see (Vijay-Shanker et al, 1987)","We briefly summarize here the terminology and notation that we adopt for LCFRS; for detailed definitions, see (Vijay-Shanker et al, 1987)","['20', '216', '59', '179', '131']","<S sid =""20"" ssid = ""5"">As a result  CFG's can not provide the structural descriptions in which there are nested dependencies between symbols labelling a path.</S><S sid =""216"" ssid = ""22"">Having defined LCFRS's  in Section 4.2 we established the semilinearity (and hence constant growth property) of the languages generated.</S><S sid =""59"" ssid = ""44"">Bresnan  Kaplan  Peters  and Zaenen (1982) argue that these structures are needed to describe crossed-serial dependencies in Dutch subordinate clauses.</S><S sid =""179"" ssid = ""64"">It can be seen that M performs a top-down recognition of the input al ... nin logspace.</S><S sid =""131"" ssid = ""16"">The composition operations in the case of CFG's are parameterized by the productions.</S>",['Method_Citation']
7,P87-1015,P07-1021,0,"Vijay-Shanker et al, 1987",0,"We write REGD.k/ to refer to the class of regular dependency languages with a gap-degree bounded by k. Linear Context-Free Rewriting Systems Gap-restricted dependency languages are closely related to Linear Context-Free Rewriting Systems (lcfrs) (Vijay-Shanker et al, 1987), a class of formal systems that generalizes several mildly context-sensitive grammar formalisms","Linear Context-Free Rewriting Systems Gap-restricted dependency languages are closely related to Linear Context-Free Rewriting Systems (lcfrs) (Vijay-Shanker et al, 1987), a class of formal systems that generalizes several mildly context-sensitive grammar formalisms","['162', '195', '219', '0', '193']","<S sid =""162"" ssid = ""47"">Some of the operations will be constant functions  corresponding to elementary structures  and will be written as f () = zi)  where each z  is a constant  the string of terminal symbols al an   .</S><S sid =""195"" ssid = ""1"">We have studied the structural descriptions (tree sets) that can be assigned by various grammatical systems  and classified these formalisms on the basis of two features: path complexity; and path independence.</S><S sid =""219"" ssid = ""25"">The composition operations are mapped onto operations that use concatenation to define the substrings spanned by the resulting structures.</S><S sid =""0"" ssid = ""0"">CHARACTERIZING STRUCTURAL DESCRIPTIONS PRODUCED BY VARIOUS GRAMMATICAL FORMALISMS*</S><S sid =""193"" ssid = ""78"">Since the work tapes store integers (which can be written in binary) that never exceed the size of the input  no configuration has space exceeding 0(log n).</S>",['Method_Citation']
8,P87-1015,N09-1061,0,"Vijay-Shanker et al, 1987",0,"This observation is in line with empirical studies in the context of dependency parsing, where the need for formalisms with higher fan-out has been observed even in standard, single language texts (Kuhlmann and Nivre, 2006) .In this paper, we present an algorithm that computes optimal decompositions of rules in the formalism of Linear Context-Free Rewriting Systems (LCFRS) (Vijay-Shanker et al, 1987)","This observation is in line with empirical studies in the context of dependency parsing, where the need for formalisms with higher fan-out has been observed even in standard, single language texts (Kuhlmann and Nivre, 2006). In this paper, we present an algorithm that computes optimal decompositions of rules in the formalism of Linear Context-Free Rewriting Systems (LCFRS) (Vijay-Shanker et al, 1987)","['11', '115', '153', '1', '195']","<S sid =""11"" ssid = ""9"">By considering derivation trees  and thus abstracting away from the details of the composition operation and the structures being manipulated  we are able to state the similarities and differences between the 'This work was partially supported by NSF grants MCS42-19116-CER  MCS82-07294 and DCR-84-10413  ARO grant DAA 29-84-9-0027  and DARPA grant N00014-85-K0018.</S><S sid =""115"" ssid = ""21"">From the point of view of recognition  independent paths in the derivation structures suggests that a top-down parser (for example) can work on each branch independently  which may lead to efficient parsing using an algorithm based on the Divide and Conquer technique.</S><S sid =""153"" ssid = ""38"">In this section for the purposes of showing that polynomial time recognition is possible  we make the additional restriction that the contribution of a derived structure to the input string can be specified by a bounded sequence of substrings of the input.</S><S sid =""1"" ssid = ""1"">We consider the structural descriptions produced by various grammatical formalisms in terms of the complexity of the paths and the relationship between paths in the sets of structural descriptions that each system can generate.</S><S sid =""195"" ssid = ""1"">We have studied the structural descriptions (tree sets) that can be assigned by various grammatical systems  and classified these formalisms on the basis of two features: path complexity; and path independence.</S>",['Method_Citation']
9,P87-1015,N09-1061,0,1987,0,"We briefly summarize the terminology and notation that we adopt for LCFRS; for detailed definitions, see Vijay-Shanker et al (1987)","We briefly summarize the terminology and notation that we adopt for LCFRS; for detailed definitions, see Vijay-Shanker et al (1987)","['0', '219', '125', '58', '192']","<S sid =""0"" ssid = ""0"">CHARACTERIZING STRUCTURAL DESCRIPTIONS PRODUCED BY VARIOUS GRAMMATICAL FORMALISMS*</S><S sid =""219"" ssid = ""25"">The composition operations are mapped onto operations that use concatenation to define the substrings spanned by the resulting structures.</S><S sid =""125"" ssid = ""10"">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid =""58"" ssid = ""43"">Unification is used in LFG's to produce structures having two dependent spines of unbounded length as in Figure 5.</S><S sid =""192"" ssid = ""77"">Thus  the ATM has no more than 6km&quot; + 1 work tapes  where km&quot; is the maximum number of substrings spanned by a derived structure.</S>",['Method_Citation']
10,P87-1015,W10-1407,0,"Vijay-Shanker et al, 1987",0,"LCFRS (Vijay-Shanker et al, 1987) are anatural extension of CFG in which a single nonterminal node can dominate more than one continuous span of terminals","LCFRS (Vijay-Shanker et al, 1987) are a natural extension of CFG in which a single nonterminal node can dominate more than one continuous span of terminals","['193', '129', '127', '172', '173']","<S sid =""193"" ssid = ""78"">Since the work tapes store integers (which can be written in binary) that never exceed the size of the input  no configuration has space exceeding 0(log n).</S><S sid =""129"" ssid = ""14"">Frontier nodes are annotated by zero arty functions corresponding to elementary structures.</S><S sid =""127"" ssid = ""12"">Nodes are annotated by the name of the composition operation used at that step in the derivation.</S><S sid =""172"" ssid = ""57"">A step of an ATM consists of reading a symbol from each tape and optionally moving each head to the left or right one tape cell.</S><S sid =""173"" ssid = ""58"">A configuration of M consists of a state of the finite control  the nonblank contents of the input tape and k work tapes  and the position of each head.</S>",['Method_Citation']
11,P87-1015,W10-1407,0,"Vijay-Shanker et al, 1987",0,"A LCFRS (Vijay-Shanker et al, 1987) is a tuple G= (N, T, V, P, S )wherea) N is a finite set of non-terminals with a function dim: N? N that determines the fan-out of each A? N; b) T and V are disjoint finite sets of terminals and variables; c) S? N is the start symbol with dim (S)= 1; d) P is a finite set of rewriting rules A (? 1,..","A LCFRS (Vijay-Shanker et al, 1987) is a tuple G= (N, T, V, P, S ) where N is a finite set of non-terminals with a function dim: N? N that determines the fan-out of each A? N; b) T and V are disjoint finite sets of terminals and variables; c) S? N is the start symbol with dim (S)= 1; d) P is a finite set of rewriting rules A (? 1,..","['189', '183', '160', '148', '201']","<S sid =""189"" ssid = ""74"">For rules p : A fpo such that fp is constant function  giving an elementary structure  fp is defined such that fp() = (Si ... xi() where each z is a constant string.</S><S sid =""183"" ssid = ""68"">We assume that M is in an existential state qA  with integers i1 and i2 representing zi in the (2i — 1)th and 22th work tape  for 1 < i < k. For each rule p : A fp(B  C) such that fp is mapped onto the function fp defined by the following rule. jp((xi .. •  rnt)  (1ii  • • • • Yn3))= (Zi   • • •   Zk) M breaks xi   zk into substrings xi    xn  and yi ... y&quot; conforming to the definition of fp.</S><S sid =""160"" ssid = ""45"">A derived structure will be mapped onto a sequence zi of substrings (not necessarily contiguous in the input)  and the composition operations will be mapped onto functions that can defined as follows3. f((zi • • •   zni)  (m. • • •  Yn3)) = (Z1  • • •   Zn3) where each z  is the concatenation of strings from z 's and yk's.</S><S sid =""148"" ssid = ""33"">If 0(A) gives the number of occurrences of each terminal in the structure named by A  then  given the constraints imposed on the formalism  for each rule A --. fp(Ai    An) we have the equality where c„ is some constant.</S><S sid =""201"" ssid = ""7"">It is interesting to note  however  that the ability to produce a bounded number of dependent paths (where two dependent paths can share an unbounded amount of information) does not require machinery as powerful as that used in LFG  FUG and IG's.</S>",['Method_Citation']
12,P87-1015,E09-1053,0,1987,0,"In particular, we cast new light on the relationship between CCG and other mildly context-sensitive formalisms such as Tree-Adjoining Grammar (TAG; Joshi and Schabes (1997)) and Linear Context-Free Rewrite Systems (LCFRS; Vijay-Shanker et al (1987))","In particular, we cast new light on the relationship between CCG and other mildly context-sensitive formalisms such as Tree-Adjoining Grammar (TAG; Joshi and Schabes (1997)) and Linear Context-Free Rewrite Systems (LCFRS; Vijay-Shanker et al (1987))","['0', '162', '227', '196', '204']","<S sid =""0"" ssid = ""0"">CHARACTERIZING STRUCTURAL DESCRIPTIONS PRODUCED BY VARIOUS GRAMMATICAL FORMALISMS*</S><S sid =""162"" ssid = ""47"">Some of the operations will be constant functions  corresponding to elementary structures  and will be written as f () = zi)  where each z  is a constant  the string of terminal symbols al an   .</S><S sid =""227"" ssid = ""33"">Formalisms such as the restricted indexed grammars (Gazdar  1985) and members of the hierarchy of grammatical systems given by Weir (1987) have independent paths  but more complex path sets.</S><S sid =""196"" ssid = ""2"">We contrasted formalisms such as CFG's  HG's  TAG's and MCTAG's  with formalisms such as IG's and unificational systems such as LFG's and FUG's.</S><S sid =""204"" ssid = ""10"">The similarities become apparent when they are studied at the level of derivation structures: derivation nee sets of CFG's  HG's  TAG's  and MCTAG's are all local sets.</S>",['Method_Citation']
13,P87-1015,E09-1053,0,"Vijay-Shanker et al, 1987",0,"2 By this result, CCG falls in line with context-free grammars, TAG, and LCFRS, whose sets of deriva tional structures are all regular (Vijay-Shanker et al., 1987)","By this result, CCG falls in line with context-free grammars, TAG, and LCFRS, whose sets of derivational structures are all regular (Vijay-Shanker et al., 1987)","['58', '214', '227', '196', '163']","<S sid =""58"" ssid = ""43"">Unification is used in LFG's to produce structures having two dependent spines of unbounded length as in Figure 5.</S><S sid =""214"" ssid = ""20"">LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S><S sid =""227"" ssid = ""33"">Formalisms such as the restricted indexed grammars (Gazdar  1985) and members of the hierarchy of grammatical systems given by Weir (1987) have independent paths  but more complex path sets.</S><S sid =""196"" ssid = ""2"">We contrasted formalisms such as CFG's  HG's  TAG's and MCTAG's  with formalisms such as IG's and unificational systems such as LFG's and FUG's.</S><S sid =""163"" ssid = ""48"">This representation of structures by substrings and the composition operation by its effect on substrings is related to the work of Rounds (1985).</S>",['Results_Citation']
14,P87-1015,E09-1053,0,"Vijay-Shanker et al, 1987",0,"It is important to note that while CCG derivations themselves can be seen as trees as well, they do not always form regular tree languages (Vijay-Shanker et al, 1987)","It is important to note that while CCG derivations themselves can be seen as trees as well, they do not always form regular tree languages (Vijay-Shanker et al, 1987)","['50', '202', '7', '230', '110']","<S sid =""50"" ssid = ""35"">The work of Rounds (1969) shows that the path sets of trees derived by IG's (like those of TAG's) are context-free languages.</S><S sid =""202"" ssid = ""8"">As illustrated by MCTAG's  it is possible for a formalism to give tree sets with bounded dependent paths while still sharing the constrained rewriting properties of CFG's  HG's  and TAG's.</S><S sid =""7"" ssid = ""5"">The work of Thatcher (1973) and Rounds (1969) define formal systems that generate tree sets that are related to CFG's and IG's.</S><S sid =""230"" ssid = ""36"">LCFRS's have only been loosely defined in this paper; we have yet to provide a complete set of formal properties associated with members of this class.</S><S sid =""110"" ssid = ""16"">The independence of paths in the tree sets of the k tI grammatical formalism in this hierarchy can be shown by means of tree pumping lemma of the form t1ti3t .</S>",['Method_Citation']
15,P87-1015,N10-1035,0,1987,0,"On this line of investigation, mildly context-sensitive grammar formalisms have been introduced (Joshi,1985), including, among several others, the tree ad joining grammars (TAGs) of Joshi et al (1975) .Linear context-free rewriting system (LCFRS), introduced by Vijay-Shanker et al (1987), is a mildly context-sensitive formalism that allows the derivation of tuples of strings ,i.e., discontinuous phrases","On this line of investigation, mildly context-sensitive grammar formalisms have been introduced (Joshi,1985), including, among several others, the tree ad joining grammars (TAGs) of Joshi et al (1975). Linear context-free rewriting system (LCFRS), introduced by Vijay-Shanker et al (1987), is a mildly context-sensitive formalism that allows the derivation of tuples of strings, i.e., discontinuous phrases","['157', '162', '83', '67', '154']","<S sid =""157"" ssid = ""42"">For example  in TAG's a derived auxiliary tree spans two substrings (to the left and right of the foot node)  and the adjunction operation inserts another substring (spanned by the subtree under the node where adjunction takes place) between them (see Figure 3).</S><S sid =""162"" ssid = ""47"">Some of the operations will be constant functions  corresponding to elementary structures  and will be written as f () = zi)  where each z  is a constant  the string of terminal symbols al an   .</S><S sid =""83"" ssid = ""68"">The following context-free production captures the derivation step of the grammar shown in Figure 7  in which the trees in the auxiliary tree set are adjoined into themselves at the root node (address c).</S><S sid =""67"" ssid = ""52"">On the one hand  the definition of composition in Steedman (1985)  which technically permits composition of functions with unbounded number of arguments  generates tree sets with dependent paths such as those shown in Figure 6.</S><S sid =""154"" ssid = ""39"">Since each composition operation is linear and nonerasing  a bounded sequences of substrings associated with the resulting structure is obtained by combining the substrings in each of its arguments using only the concatenation operation  including each substring exactly once.</S>",['Method_Citation']
16,P87-1015,P12-1053,0,1987,0,"CFTG are weakly equivalent to the simple macro grammars of Fischer (1968), which are a notational variant of the well-nested linear context-free rewriting systems (LCFRS) of Vijay-Shanker et al (1987) and the well-nested multiple context-free grammars (MCFG) of Seki et al (1991) .3 Thus, CFTG are mildly context-sensitive since their generated string languages are semi-linear and can be parsed in polynomial time (Go ?mez-Rodr? ?guez et al, 2010)","CFTG are weakly equivalent to the simple macro grammars of Fischer (1968), which are a notational variant of the well-nested linear context-free rewriting systems (LCFRS) of Vijay-Shanker et al (1987) and the well-nested multiple context-free grammars (MCFG) of Seki et al (1991)","['227', '156', '204', '213', '125']","<S sid =""227"" ssid = ""33"">Formalisms such as the restricted indexed grammars (Gazdar  1985) and members of the hierarchy of grammatical systems given by Weir (1987) have independent paths  but more complex path sets.</S><S sid =""156"" ssid = ""41"">Giving a recognition algorithm for LCFRL's involves describing the substrings of the input that are spanned by the structures derived by the LCFRS's and how the composition operation combines these substrings.</S><S sid =""204"" ssid = ""10"">The similarities become apparent when they are studied at the level of derivation structures: derivation nee sets of CFG's  HG's  TAG's  and MCTAG's are all local sets.</S><S sid =""213"" ssid = ""19"">By sharing stacks (in IG's) or by using nonlinear equations over f-structures (in FUG's and LFG's)  structures with unbounded dependencies between paths can be generated.</S><S sid =""125"" ssid = ""10"">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S>",['Method_Citation']
