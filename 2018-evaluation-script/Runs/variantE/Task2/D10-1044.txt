Clearly  retaining the original frequencies is important for good performance  and globally smoothing the final weighted frequencies is crucial.Recent work by Finkel and Manning (2009) which re-casts Daum´e’s approach in a hierarchical MAP framework may be applicable to this problem.This is a standard adaptation problem for SMT.Domain adaptation is a common concern when optimizing empirical NLP applications.It is also worth pointing out a connection with Daum´e’s (2007) work that splits each feature into domain-specific and general copies.Other work includes transferring latent topic distributions from source to target language for LM adaptation  (Tam et al.  2007) and adapting features at the sentence level to different categories of sentence (Finch and Sumita  2008).The toplevel weights are trained to maximize a metric such as BLEU on a small development set of approximately 1000 sentence pairs.This is not unreasonable given the application to phrase pairs from OUT  but it suggests that an interesting alternative might be to use a plain log-linear weighting function exp(Ei Aifi(s  t))  with outputs in [0  oo].There has also been some work on adapting the word alignment model prior to phrase extraction (Civera and Juan  2007; Wu et al.  2005)  and on dynamically choosing a dev set (Xu et al.  2007).The final block in table 2 shows models trained on feature subsets and on the SVM feature described in 3.4.For developers of Statistical Machine Translation (SMT) systems  an additional complication is the heterogeneous nature of SMT components (word-alignment model  language model  translation model  etc.For comparison to information-retrieval inspired baselines  eg (L¨u et al.  2007)  we select sentences from OUT using language model perplexities from IN.This has solutions: where pI(s|t) is derived from the IN corpus using relative-frequency estimates  and po(s|t) is an instance-weighted model derived from the OUT corpus.The iw all map variant uses a non-0 y weight on a uniform prior in p  (s t)  and outperforms a version with y = 0 (iw all) and the “flattened” variant described in section 3.2.Matsoukas et al (2009) generalize it by learning weights on sentence pairs that are used when estimating relative-frequency phrase-pair probabilities.The dev corpus was taken from the NIST05 evaluation set  augmented with some randomly-selected material reserved from the training set.However  it is robust  efficient  and easy to implement.4 To perform the maximization in (7)  we used the popular L-BFGS algorithm (Liu and Nocedal  1989)  which requires gradient information.This highly effective approach is not directly applicable to the multinomial models used for core SMT components  which have no natural method for combining split features  so we rely on an instance-weighting approach (Jiang and Zhai  2007) to downweight domain-specific examples in OUT.This leads to a linear combination of domain-specific probabilities  with weights in [0  1]  normalized to sum to 1.This suggests a direct parallel to (1): where ˜p(s  t) is a joint empirical distribution extracted from the IN dev set using the standard procedure.2 An alternative form of linear combination is a maximum a posteriori (MAP) combination (Bacchiani et al.  2004).Daum´e (2007) applies a related idea in a simpler way  by splitting features into general and domain-specific versions.We used a standard one-pass phrase-based system (Koehn et al.  2003)  with the following features: relative-frequency TM probabilities in both directions; a 4-gram LM with Kneser-Ney smoothing; word-displacement distortion model; and word count.Standard SMT systems have a hierarchical parameter structure: top-level log-linear weights are used to combine a small set of complex features  interpreted as log probabilities  many of which have their own internal parameters and objectives.The logistic function  whose outputs are in [0  1]  forces pp(s  t) <_ po(s  t).In future work we plan to try this approach with more competitive SMT systems  and to extend instance weighting to other standard SMT components such as the LM  lexical phrase weights  and lexicalized distortion.We carried out translation experiments in two different settings.This has led previous workers to adopt ad hoc linear weighting schemes (Finch and Sumita  2008; Foster and Kuhn  2007; L¨u et al.  2007).The corpora for both settings are summarized in table 1.Phrase-level granularity distinguishes our work from previous work by Matsoukas et al (2009)  who weight sentences according to sub-corpus and genre membership.The matching sentence pairs are then added to the IN corpus  and the system is re-trained.A similar maximumlikelihood approach was used by Foster and Kuhn (2007)  but for language models only.Sentence pairs are the natural instances for SMT  but sentences often contain a mix of domain-specific and general language.Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.Within this framework  we use features intended to capture degree of generality  including the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.The 2nd block contains the IR system  which was tuned by selecting text in multiples of the size of the EMEA training corpus  according to dev set performance.The weight on each sentence is a value in [0  1] computed by a perceptron with Boolean features that indicate collection and genre membership.The corpus was wordaligned using both HMM and IBM2 models  and the phrase table was the union of phrases extracted from these separate alignments  with a length limit of 7.When OUT is large and distinct  its contribution can be controlled by training separate IN and OUT models  and weighting their combination.This combination generalizes (2) and (3): we use either at = a to obtain a fixed-weight linear combination  or at = cI(t)/(cI(t) + 0) to obtain a MAP combination.To approximate these baselines  we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.Table 2 shows results for both settings and all methods described in sections 2 and 3.The techniques we develop can be extended in a relatively straightforward manner to the more general case when OUT consists of multiple sub-domains.Phrase tables were extracted from the IN and OUT training corpora (not the dev as was used for instance weighting models)  and phrase pairs in the intersection of the IN and OUT phrase tables were used as positive examples  with two alternate definitions of negative examples: The classifier trained using the 2nd definition had higher accuracy on a development set.Linear weights are difficult to incorporate into the standard MERT procedure because they are “hidden” within a top-level probability that represents the linear combination.1 Following previous work (Foster and Kuhn  2007)  we circumvent this problem by choosing weights to optimize corpus loglikelihood  which is roughly speaking the training criterion used by the LM and TM themselves.To set β  we used the same criterion as for α  over a dev corpus: The MAP combination was used for TM probabilities only  in part due to a technical difficulty in formulating coherent counts when using standard LM smoothing techniques (Kneser and Ney  1995).3 Motivated by information retrieval  a number of approaches choose “relevant” sentence pairs from OUT by matching individual source sentences from IN (Hildebrand et al.  2005; L¨u et al.  2007)  or individual target hypotheses (Zhao et al.  2004).For the LM  adaptive weights are set as follows: where α is a weight vector containing an element αi for each domain (just IN and OUT in our case)  pi are the corresponding domain-specific models  and ˜p(w  h) is an empirical distribution from a targetlanguage training corpus—we used the IN dev set for this.