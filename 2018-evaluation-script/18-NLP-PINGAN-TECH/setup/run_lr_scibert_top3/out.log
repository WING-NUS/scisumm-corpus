gold file P04-1036_aakansha.csv
submit_file input/res/Task1/P04-1036.annv3.csv
parsing: input/ref/Task1/P04-1036_aakansha.csv
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
<S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'"]
'15'
['15']
parsed_discourse_facet ['method_citation']
<S sid="41" ssid="34">In this paper we describe and evaluate a method for ranking senses of nouns to obtain the predominant sense of a word using the neighbours from automatically acquired thesauruses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'41'"]
'41'
['41']
parsed_discourse_facet ['method_citation']
<S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'"]
'4'
['4']
parsed_discourse_facet ['method_citation']
<S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'"]
'15'
['15']
parsed_discourse_facet ['method_citation']
<S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
    <S sid="181" ssid="4">This is just 5% lower than results using the first sense in the manually labelled SemCor, and we obtain 67% precision on polysemous nouns that are not in SemCor.</S>
original cit marker offset is 0
new cit marker offset is 0



["'180'", "'181'"]
'180'
'181'
['180', '181']
parsed_discourse_facet ['result_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'"]
'126'
['126']
parsed_discourse_facet ['method_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'"]
'48'
['48']
parsed_discourse_facet ['method_citation']
<S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'"]
'169'
['169']
parsed_discourse_facet ['result_citation']
<S sid="171" ssid="19">In contrast, we use the neighbours lists and WordNet similarity measures to impose a prevalence ranking on the WordNet senses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'171'"]
'171'
['171']
parsed_discourse_facet ['method_citation']
<S sid="171" ssid="19">In contrast, we use the neighbours lists and WordNet similarity measures to impose a prevalence ranking on the WordNet senses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'171'"]
'171'
['171']
parsed_discourse_facet ['method_citation']
<S sid="115" ssid="13">Our automatically acquired predominant sense performs nearly as well as the first sense provided by SemCor, which is very encouraging given that our method only uses raw text, with no manual labelling.</S>
original cit marker offset is 0
new cit marker offset is 0



["'115'"]
'115'
['115']
parsed_discourse_facet ['method_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'"]
'126'
['126']
parsed_discourse_facet ['method_citation']
<S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
    <S sid="181" ssid="4">This is just 5% lower than results using the first sense in the manually labelled SemCor, and we obtain 67% precision on polysemous nouns that are not in SemCor.</S>
original cit marker offset is 0
new cit marker offset is 0



["'180'", "'181'"]
'180'
'181'
['180', '181']
parsed_discourse_facet ['result_citation']
<S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'180'"]
'180'
['180']
parsed_discourse_facet ['method_citation']
<S sid="41" ssid="34">In this paper we describe and evaluate a method for ranking senses of nouns to obtain the predominant sense of a word using the neighbours from automatically acquired thesauruses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'41'"]
'41'
['41']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P04-1036.annv3.csv
<S sid="107" ssid="5">To disambiguate senses a system should take context into account.</S><S sid="154" ssid="2">In contrast, our work is aimed at discovering the predominant senses from raw text because the first sense heuristic is such a useful one, and because handtagged data is not always available.</S><S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'107'", "'154'", "'8'"]
'107'
'154'
'8'
['107', '154', '8']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="154" ssid="2">In contrast, our work is aimed at discovering the predominant senses from raw text because the first sense heuristic is such a useful one, and because handtagged data is not always available.</S><S sid="162" ssid="10">It only requires raw text from the given domain and because of this it can easily be applied to a new domain, or sense inventory, given sufficient text.</S><S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'154'", "'162'", "'180'"]
'154'
'162'
'180'
['154', '162', '180']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="167" ssid="15">In this work the lists of neighbours are themselves clustered to bring out the various senses of the word.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'167'", "'169'"]
'179'
'167'
'169'
['179', '167', '169']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="171" ssid="19">In contrast, we use the neighbours lists and WordNet similarity measures to impose a prevalence ranking on the WordNet senses.</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'171'", "'0'"]
'179'
'171'
'0'
['179', '171', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'126'", "'15'"]
'0'
'126'
'15'
['0', '126', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'169'", "'180'"]
'179'
'169'
'180'
['179', '169', '180']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="186" ssid="9">In particular, we will use balanced and domain specific corpora to isolate words having very different neighbours, and therefore rankings, in the different corpora and to detect and target words for which there is a highly skewed sense distribution in these corpora.</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'", "'186'", "'0'"]
'126'
'186'
'0'
['126', '186', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="81" ssid="10">4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'81'", "'0'"]
'48'
'81'
'0'
['48', '81', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="66" ssid="22">It uses the glosses of semantically related (according to WordNet) senses too. jcn (Jiang and Conrath, 1997) This score uses corpus data to populate classes (synsets) in the WordNet hierarchy with frequency counts.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'66'", "'4'"]
'179'
'66'
'4'
['179', '66', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'27'", "'45'"]
'169'
'27'
'45'
['169', '27', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'179'", "'45'"]
'48'
'179'
'45'
['48', '179', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S><S sid="58" ssid="14">A noun, , is thus described by a set of co-occurrence triples and associated frequencies, where is a grammatical relation and is a possible cooccurrence with in that relation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'45'", "'58'"]
'179'
'45'
'58'
['179', '45', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'179'", "'27'"]
'8'
'179'
'27'
['8', '179', '27']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="153" ssid="1">Most research in WSD concentrates on using contextual features, typically neighbouring words, to help determine the correct sense of a target word.</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'153'", "'126'", "'4'"]
'153'
'126'
'4'
['153', '126', '4']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="81" ssid="10">4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'81'", "'126'"]
'48'
'81'
'126'
['48', '81', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'169'", "'4'"]
'8'
'169'
'4'
['8', '169', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'27'", "'4'"]
'8'
'27'
'4'
['8', '27', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



P04-1036
I08-2105
0
result_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



P04-1036
P06-1012
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



P04-1036
S12-1097
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



P04-1036
W10-2803
0
method_citation
['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
gold file A00-2030_vardha.csv
submit_file input/res/Task1/A00-2030.annv3.csv
parsing: input/ref/Task1/A00-2030_vardha.csv
 <S sid="11" ssid="1">We evaluated the new approach to information extraction on two of the tasks of the Seventh Message Understanding Conference (MUC-7) and reported in (Marsh, 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'"]
'11'
['11']
parsed_discourse_facet ['method_citation']
<S sid="52" ssid="1">In this section, we describe the algorithm that was used to automatically produce augmented trees, starting with a) human-generated semantic annotations and b) machinegenerated syntactic parse trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'"]
'52'
['52']
parsed_discourse_facet ['method_citation']
<S sid="50" ssid="10">Figure 4 shows an example of the semantic annotation, which was the only type of manual annotation we performed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'50'"]
'50'
['50']
parsed_discourse_facet ['method_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'"]
'34'
['34']
parsed_discourse_facet ['method_citation']
 <S sid="106" ssid="3">We were able to use the Penn TREEBANK to estimate the syntactic parameters; no additional syntactic training was required.</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'"]
'106'
['106']
parsed_discourse_facet ['method_citation']
 <S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'6'"]
'6'
['6']
parsed_discourse_facet ['method_citation']
 <S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'6'"]
'6'
['6']
parsed_discourse_facet ['method_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'"]
'34'
['34']
parsed_discourse_facet ['method_citation']
<S sid="12" ssid="2">The Template Element (TE) task identifies organizations, persons, locations, and some artifacts (rocket and airplane-related artifacts).</S>
original cit marker offset is 0
new cit marker offset is 0



["'12'"]
'12'
['12']
parsed_discourse_facet ['method_citation']
 <S sid="3" ssid="1">Since 1995, a few statistical parsing algorithms (Magerman, 1995; Collins, 1996 and 1997; Charniak, 1997; Rathnaparki, 1997) demonstrated a breakthrough in parsing accuracy, as measured against the University of Pennsylvania TREEBANK as a gold standard.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'"]
'3'
['3']
parsed_discourse_facet ['method_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'"]
'34'
['34']
parsed_discourse_facet ['method_citation']
<S sid="32" ssid="15">Because generative statistical models had already proven successful for each of the first three stages, we were optimistic that some of their properties &#8212; especially their ability to learn from large amounts of data, and their robustness when presented with unexpected inputs &#8212; would also benefit semantic analysis.</S>
original cit marker offset is 0
new cit marker offset is 0



["'32'"]
'32'
['32']
parsed_discourse_facet ['method_citation']
 <S sid="10" ssid="8">Instead, our parsing algorithm, trained on the UPenn TREEBANK, was run on the New York Times source to create unsupervised syntactic training which was constrained to be consistent with semantic annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'10'"]
'10'
['10']
parsed_discourse_facet ['method_citation']
<S sid="94" ssid="13">Given a new sentence, the outcome of this search process is a tree structure that encodes both the syntactic and semantic structure of the sentence.</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'"]
'94'
['94']
parsed_discourse_facet ['method_citation']
    <S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'6'"]
'6'
['6']
parsed_discourse_facet ['method_citation']
 <S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'"]
'104'
['104']
parsed_discourse_facet ['method_citation']
 <S sid="26" ssid="9">We were already using a generative statistical model for part-of-speech tagging (Weischedel et al. 1993), and more recently, had begun using a generative statistical model for name finding (Bikel et al.</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'"]
'26'
['26']
parsed_discourse_facet ['method_citation']
    <S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'6'"]
'6'
['6']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="2">Currently, the prevailing architecture for dividing sentential processing is a four-stage pipeline consisting of: Since we were interested in exploiting recent advances in parsing, replacing the syntactic analysis stage of the standard pipeline with a modern statistical parser was an obvious possibility.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'"]
'19'
['19']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/A00-2030.annv3.csv
<S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'6'", "'0'"]
'2'
'6'
'0'
['2', '6', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'0'"]
'33'
'34'
'0'
['33', '34', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="95" ssid="14">The semantics — that is, the entities and relations — can then be directly extracted from these sentential trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'95'"]
'33'
'34'
'95'
['33', '34', '95']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'58'"]
'33'
'34'
'58'
['33', '34', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="51" ssid="11">To produce a corpus of augmented parse trees, we used the following multi-step training procedure which exploited the Penn TREEBANK Applying this procedure yielded a new version of the semantically annotated corpus, now annotated with complete augmented trees like that in Figure 3.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'51'", "'0'"]
'33'
'51'
'0'
['33', '51', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S><S sid="56" ssid="2">For example, in the phrase &quot;Lt. Cmdr.</S><S sid="38" ssid="6">Other labels indicate relations among entities.</S>
original cit marker offset is 0
new cit marker offset is 0



["'6'", "'56'", "'38'"]
'6'
'56'
'38'
['6', '56', '38']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'34'", "'33'"]
'0'
'34'
'33'
['0', '34', '33']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'0'"]
'33'
'34'
'0'
['33', '34', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="76" ssid="17">Finally, word features, fm, for modifiers are predicted based on the modifier, cm, the partof-speech tag of the modifier word , t„„ the part-of-speech tag of the head word th, the head word itself, wh, and whether or not the modifier head word, w„„ is known or unknown.</S><S sid="63" ssid="4">Head words, along with their part-of-speech tags and features, are generated for each modifier as soon as the modifier is created.</S><S sid="22" ssid="5">There is no opportunity for a later stage, such as parsing, to influence or correct an earlier stage such as part-of-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'76'", "'63'", "'22'"]
'76'
'63'
'22'
['76', '63', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="23" ssid="6">An integrated model can limit the propagation of errors by making all decisions jointly.</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'104'"]
'0'
'23'
'104'
['0', '23', '104']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'33'", "'58'"]
'34'
'33'
'58'
['34', '33', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'6'"]
'0'
'2'
'6'
['0', '2', '6']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'0'", "'6'"]
'33'
'0'
'6'
['33', '0', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'0'", "'34'"]
'33'
'0'
'34'
['33', '0', '34']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'0'", "'58'"]
'34'
'0'
'58'
['34', '0', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'33'", "'0'"]
'34'
'33'
'0'
['34', '33', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="76" ssid="17">Finally, word features, fm, for modifiers are predicted based on the modifier, cm, the partof-speech tag of the modifier word , t„„ the part-of-speech tag of the head word th, the head word itself, wh, and whether or not the modifier head word, w„„ is known or unknown.</S><S sid="63" ssid="4">Head words, along with their part-of-speech tags and features, are generated for each modifier as soon as the modifier is created.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'76'", "'63'", "'0'"]
'76'
'63'
'0'
['76', '63', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S><S sid="11" ssid="1">We evaluated the new approach to information extraction on two of the tasks of the Seventh Message Understanding Conference (MUC-7) and reported in (Marsh, 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'104'", "'11'"]
'0'
'104'
'11'
['0', '104', '11']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'104'", "'58'"]
'0'
'104'
'58'
['0', '104', '58']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']



A00-2030
P14-1078
0
method_citation
['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
gold file P11-1061_aakansha.csv
submit_file input/res/Task1/P11-1061.annv3.csv
parsing: input/ref/Task1/P11-1061_aakansha.csv
<S sid="40" ssid="6">We extend Subramanya et al.&#8217;s intuitions to our bilingual setup.</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'"]
'40'
['40']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'10'"]
'10'
['10']
parsed_discourse_facet ['method_citation']
<S sid="15" ssid="11">First, we use a novel graph-based framework for projecting syntactic information across language boundaries.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'"]
'15'
['15']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="2">Central to our approach (see Algorithm 1) is a bilingual similarity graph built from a sentence-aligned parallel corpus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'25'"]
'25'
['25']
parsed_discourse_facet ['method_citation']
<S sid="29" ssid="6">To establish a soft correspondence between the two languages, we use a second similarity function, which leverages standard unsupervised word alignment statistics (&#167;3.3).3 Since we have no labeled foreign data, our goal is to project syntactic information from the English side to the foreign side.</S>
original cit marker offset is 0
new cit marker offset is 0



["'29'"]
'29'
['29']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S>
original cit marker offset is 0
new cit marker offset is 0



["'18'"]
'18'
['18']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S>
original cit marker offset is 0
new cit marker offset is 0



["'18'"]
'18'
['18']
parsed_discourse_facet ['method_citation']
<S sid="158" ssid="1">We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'158'"]
'158'
['158']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="17">These universal POS categories not only facilitate the transfer of POS information from one language to another, but also relieve us from using controversial evaluation metrics,2 by establishing a direct correspondence between the induced hidden states in the foreign language and the observed English labels.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="158" ssid="1">We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'158'"]
'158'
['158']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="17">These universal POS categories not only facilitate the transfer of POS information from one language to another, but also relieve us from using controversial evaluation metrics,2 by establishing a direct correspondence between the induced hidden states in the foreign language and the observed English labels.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'10'"]
'10'
['10']
parsed_discourse_facet ['method_citation']
<S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'"]
'24'
['24']
parsed_discourse_facet ['method_citation']
<S sid="17" ssid="13">Second, we treat the projected labels as features in an unsupervised model (&#167;5), rather than using them directly for supervised training.</S>
original cit marker offset is 0
new cit marker offset is 0



["'17'"]
'17'
['17']
parsed_discourse_facet ['method_citation']
<S sid="111" ssid="11">We use the universal POS tagset of Petrov et al. (2011) in our experiments.10 This set C consists of the following 12 coarse-grained tags: NOUN (nouns), VERB (verbs), ADJ (adjectives), ADV (adverbs), PRON (pronouns), DET (determiners), ADP (prepositions or postpositions), NUM (numerals), CONJ (conjunctions), PRT (particles), PUNC (punctuation marks) and X (a catch-all for other categories such as abbreviations or foreign words).</S>
original cit marker offset is 0
new cit marker offset is 0



["'111'"]
'111'
['111']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'10'"]
'10'
['10']
parsed_discourse_facet ['method_citation']
<S sid="29" ssid="6">To establish a soft correspondence between the two languages, we use a second similarity function, which leverages standard unsupervised word alignment statistics (&#167;3.3).3 Since we have no labeled foreign data, our goal is to project syntactic information from the English side to the foreign side.</S>
original cit marker offset is 0
new cit marker offset is 0



["'29'"]
'29'
['29']
parsed_discourse_facet ['method_citation']
<S sid="161" ssid="4">Our results outperform strong unsupervised baselines as well as approaches that rely on direct projections, and bridge the gap between purely supervised and unsupervised POS tagging models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'161'"]
'161'
['161']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P11-1061.annv3.csv
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="6" ssid="2">Supervised part-of-speech (POS) taggers, for example, approach the level of inter-annotator agreement (Shen et al., 2007, 97.3% accuracy for English).</S><S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'6'", "'18'"]
'0'
'6'
'18'
['0', '6', '18']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'7'", "'27'"]
'0'
'7'
'27'
['0', '7', '27']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="3" ssid="3">We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).</S><S sid="35" ssid="1">In graph-based learning approaches one constructs a graph whose vertices are labeled and unlabeled examples, and whose weighted edges encode the degree to which the examples they link have the same label (Zhu et al., 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'3'", "'35'"]
'0'
'3'
'35'
['0', '3', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="52" ssid="18">This is similar to stacking the different feature instantiations into long (sparse) vectors and computing the cosine similarity between them.</S><S sid="51" ssid="17">For each trigram type x2 x3 x4 in a sequence x1 x2 x3 x4 x5, we count how many times that trigram type co-occurs with the different instantiations of each concept, and compute the point-wise mutual information (PMI) between the two.5 The similarity between two trigram types is given by summing over the PMI values over feature instantiations that they have in common.</S><S sid="42" ssid="8">The foreign language vertices (denoted by Vf) correspond to foreign trigram types, exactly as in Subramanya et al. (2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'", "'51'", "'42'"]
'52'
'51'
'42'
['52', '51', '42']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="31" ssid="8">By aggregating the POS labels of the English tokens to types, we can generate label distributions for the English vertices.</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'7'", "'31'"]
'27'
'7'
'31'
['27', '7', '31']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S><S sid="6" ssid="2">Supervised part-of-speech (POS) taggers, for example, approach the level of inter-annotator agreement (Shen et al., 2007, 97.3% accuracy for English).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'6'"]
'0'
'24'
'6'
['0', '24', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="85" ssid="16">We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).</S><S sid="3" ssid="3">We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'85'", "'3'"]
'0'
'85'
'3'
['0', '85', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S><S sid="158" ssid="1">We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'18'", "'158'"]
'0'
'18'
'158'
['0', '18', '158']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="2" ssid="2">Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.</S><S sid="16" ssid="12">To this end, we construct a bilingual graph over word types to establish a connection between the two languages (§3), and then use graph label propagation to project syntactic information from English to the foreign language (§4).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'16'"]
'0'
'2'
'16'
['0', '2', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="71" ssid="2">We use label propagation in two stages to generate soft labels on all the vertices in the graph.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="35" ssid="1">In graph-based learning approaches one constructs a graph whose vertices are labeled and unlabeled examples, and whose weighted edges encode the degree to which the examples they link have the same label (Zhu et al., 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'71'", "'0'", "'35'"]
'71'
'0'
'35'
['71', '0', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S><S sid="160" ssid="3">Our results suggest that it is possible to learn accurate POS taggers for languages which do not have any annotated data, but have translations into a resource-rich language.</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'", "'160'", "'24'"]
'106'
'160'
'24'
['106', '160', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S><S sid="160" ssid="3">Our results suggest that it is possible to learn accurate POS taggers for languages which do not have any annotated data, but have translations into a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'160'"]
'0'
'24'
'160'
['0', '24', '160']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="46" ssid="12">We use two different similarity functions to define the edge weights among the foreign vertices and between vertices from different languages.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S>
original cit marker offset is 0
new cit marker offset is 0



["'46'", "'0'", "'106'"]
'46'
'0'
'106'
['46', '0', '106']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="144" ssid="7">For comparison, the completely unsupervised feature-HMM baseline accuracy on the universal POS tags for English is 79.4%, and goes up to 88.7% with a treebank dictionary.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'7'", "'144'"]
'0'
'7'
'144'
['0', '7', '144']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="2" ssid="2">Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'24'"]
'0'
'2'
'24'
['0', '2', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'", "'0'", "'10'"]
'106'
'0'
'10'
['106', '0', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="56" ssid="22">To define a similarity function between the English and the foreign vertices, we rely on high-confidence word alignments.</S><S sid="57" ssid="23">Since our graph is built from a parallel corpus, we can use standard word alignment techniques to align the English sentences De 5Note that many combinations are impossible giving a PMI value of 0; e.g., when the trigram type and the feature instantiation don’t have words in common. and their foreign language translations Df.6 Label propagation in the graph will provide coverage and high recall, and we therefore extract only intersected high-confidence (> 0.9) alignments De�f.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S>
original cit marker offset is 0
new cit marker offset is 0



["'56'", "'57'", "'0'"]
'56'
'57'
'0'
['56', '57', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="85" ssid="16">We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'0'", "'85'"]
'27'
'0'
'85'
['27', '0', '85']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



P11-1061
N12-1090
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
gold file P05-1013_aakansha.csv
submit_file input/res/Task1/P05-1013.annv3.csv
parsing: input/ref/Task1/P05-1013_aakansha.csv
<S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'"]
'20'
['20']
parsed_discourse_facet ['method_citation']
<S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'"]
'24'
['24']
parsed_discourse_facet ['method_citation']
<S sid="106" ssid="17">However, the accuracy is considerably higher than previously reported results for robust non-projective parsing of Czech, with a best performance of 73% UAS (Holan, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'"]
'106'
['106']
parsed_discourse_facet ['method_citation']
<S sid="86" ssid="13">As expected, the most informative encoding, Head+Path, gives the highest accuracy with over 99% of all non-projective arcs being recovered correctly in both data sets.</S>
original cit marker offset is 0
new cit marker offset is 0



["'86'"]
'86'
['86']
parsed_discourse_facet ['method_citation']
<S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'"]
'20'
['20']
parsed_discourse_facet ['method_citation']
<S sid="36" ssid="7">As observed by Kahane et al. (1998), any (nonprojective) dependency graph can be transformed into a projective one by a lifting operation, which replaces each non-projective arc wj wk by a projective arc wi &#8212;* wk such that wi &#8212;*&#8727; wj holds in the original graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
<S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'109'"]
'109'
['109']
parsed_discourse_facet ['method_citation']
<S sid="36" ssid="7">As observed by Kahane et al. (1998), any (nonprojective) dependency graph can be transformed into a projective one by a lifting operation, which replaces each non-projective arc wj wk by a projective arc wi &#8212;* wk such that wi &#8212;*&#8727; wj holds in the original graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
<S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'"]
'23'
['23']
parsed_discourse_facet ['method_citation']
<S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'"]
'24'
['24']
parsed_discourse_facet ['method_citation']
<S sid="80" ssid="7">As shown in Table 3, the proportion of sentences containing some non-projective dependency ranges from about 15% in DDT to almost 25% in PDT.</S>
    <S sid="81"  ssid="8">However, the overall percentage of non-projective arcs is less than 2% in PDT and less than 1% in DDT.</S>
original cit marker offset is 0
new cit marker offset is 0



["'80'", "'81'"]
'80'
'81'
['80', '81']
parsed_discourse_facet ['method_citation']
<S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'"]
'24'
['24']
parsed_discourse_facet ['method_citation']
<S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'"]
'20'
['20']
parsed_discourse_facet ['method_citation']
<S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'"]
'24'
['24']
parsed_discourse_facet ['method_citation']
<S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'"]
'20'
['20']
parsed_discourse_facet ['method_citation']
<S sid="49" ssid="20">The baseline simply retains the original labels for all arcs, regardless of whether they have been lifted or not, and the number of distinct labels is therefore simply the number n of distinct dependency types.2 In the first encoding scheme, called Head, we use a new label d&#8593;h for each lifted arc, where d is the dependency relation between the syntactic head and the dependent in the non-projective representation, and h is the dependency relation that the syntactic head has to its own head in the underlying structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'49'"]
'49'
['49']
parsed_discourse_facet ['method_citation']
<S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'109'"]
'109'
['109']
parsed_discourse_facet ['method_citation']
<S sid="14" ssid="10">While the proportion of sentences containing non-projective dependencies is often 15&#8211;25%, the total proportion of non-projective arcs is normally only 1&#8211;2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'14'"]
'14'
['14']
parsed_discourse_facet ['method_citation']
<S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'"]
'20'
['20']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P05-1013.annv3.csv
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'20'", "'0'"]
'30'
'20'
'0'
['30', '20', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'20'"]
'0'
'24'
'20'
['0', '24', '20']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="15" ssid="11">As long as the main evaluation metric is dependency accuracy per word, with state-of-the-art accuracy mostly below 90%, the penalty for not handling non-projective constructions is almost negligible.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'110'", "'15'"]
'30'
'110'
'15'
['30', '110', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="62" ssid="1">In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'0'", "'62'"]
'23'
'0'
'62'
['23', '0', '62']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'110'", "'23'"]
'24'
'110'
'23'
['24', '110', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="22" ssid="18">When the parser is trained on the transformed data, it will ideally learn not only to construct projective dependency structures but also to assign arc labels that encode information about lifts.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'22'"]
'30'
'0'
'22'
['30', '0', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="40" ssid="11">Even this may be nondeterministic, in case the graph contains several non-projective arcs whose lifts interact, but we use the following algorithm to construct a minimal projective transformation D0 = (W, A0) of a (nonprojective) dependency graph D = (W, A): The function SMALLEST-NONP-ARC returns the non-projective arc with the shortest distance from head to dependent (breaking ties from left to right).</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'0'", "'40'"]
'23'
'0'
'40'
['23', '0', '40']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="108" ssid="19">However, while Dienes and Dubey recognize empty categories in a pre-processing step and only let the parser find their antecedents, we use the parser both to detect dislocated dependents and to predict either the type or the location of their syntactic head (or both) and use post-processing only to transform the graph in accordance with the parser’s analysis.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'108'"]
'30'
'0'
'108'
['30', '0', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'24'"]
'0'
'23'
'24'
['0', '23', '24']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S><S sid="14" ssid="10">While the proportion of sentences containing non-projective dependencies is often 15–25%, the total proportion of non-projective arcs is normally only 1–2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'20'", "'14'"]
'0'
'20'
'14'
['0', '20', '14']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="62" ssid="1">In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'62'"]
'0'
'24'
'62'
['0', '24', '62']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'30'"]
'0'
'24'
'30'
['0', '24', '30']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'24'"]
'30'
'0'
'24'
['30', '0', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'24'"]
'0'
'23'
'24'
['0', '23', '24']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="21" ssid="17">First, the training data for the parser is projectivized by applying a minimal number of lifting operations (Kahane et al., 1998) and encoding information about these lifts in arc labels.</S><S sid="45" ssid="16">In order to facilitate this task, we extend the set of arc labels to encode information about lifting operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'21'", "'45'"]
'30'
'21'
'45'
['30', '21', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'110'"]
'30'
'0'
'110'
['30', '0', '110']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="81" ssid="8">However, the overall percentage of non-projective arcs is less than 2% in PDT and less than 1% in DDT.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'110'", "'81'"]
'0'
'110'
'81'
['0', '110', '81']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2



P05-1013
W05-1505
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



P05-1013
P08-1006
0
method_citation
['hypothesis_citation', 'implication_citation']



P05-1013
W09-1207
0
method_citation
['hypothesis_citation', 'implication_citation']



P05-1013
W09-1218
0
method_citation
['hypothesis_citation', 'implication_citation']
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file W99-0613_aakansha.csv
submit_file input/res/Task1/W99-0613.annv3.csv
parsing: input/ref/Task1/W99-0613_aakansha.csv
<S sid="9" ssid="3">This paper discusses the use of unlabeled examples for the problem of named entity classification.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="36" ssid="30">Roughly speaking, the new algorithm presented in this paper performs a similar search, but instead minimizes a bound on the number of (unlabeled) examples on which two classifiers disagree.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
<S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'"]
'137'
['137']
parsed_discourse_facet ['method_citation']
<S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'"]
'79'
['79']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="4">The task is to learn a function from an input string (proper name) to its type, which we will assume to be one of the categories Person, Organization, or Location.</S>
original cit marker offset is 0
new cit marker offset is 0



["'10'"]
'10'
['10']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="12">But we will show that the use of unlabeled data can drastically reduce the need for supervision.</S>
original cit marker offset is 0
new cit marker offset is 0



["'18'"]
'18'
['18']
parsed_discourse_facet ['method_citation']
<S sid="236" ssid="3">We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.</S>
    <S sid="237" ssid="4">The numbers falling into the location, person, organization categories were 186, 289 and 402 respectively.</S>
original cit marker offset is 0
new cit marker offset is 0



["'236'", "'237'"]
'236'
'237'
['236', '237']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="3">This paper discusses the use of unlabeled examples for the problem of named entity classification.</S>
    <S sid="10" ssid="4">The task is to learn a function from an input string (proper name) to its type, which we will assume to be one of the categories Person, Organization, or Location.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'10'"]
'9'
'10'
['9', '10']
parsed_discourse_facet ['method_citation']
<S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S><S sid="139" ssid="6">This section describes AdaBoost, which is the basis for the CoBoost algorithm.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'", "'39'"]
'137'
'39'
['137', '39']
parsed_discourse_facet ['method_citation']
<S sid="26" ssid="20">We present two algorithms.</S>
    <S sid="27" ssid="21">The first method builds on results from (Yarowsky 95) and (Blum and Mitchell 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'", "'27'"]
'26'
'27'
['26', '27']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="12">But we will show that the use of unlabeled data can drastically reduce the need for supervision.</S>
original cit marker offset is 0
new cit marker offset is 0



["'18'"]
'18'
['18']
parsed_discourse_facet ['method_citation']
<S sid="85" ssid="18">(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'"]
'85'
['85']
parsed_discourse_facet ['method_citation']
<S sid="8" ssid="2">Recent results (e.g., (Yarowsky 95; Brill 95; Blum and Mitchell 98)) have suggested that unlabeled data can be used quite profitably in reducing the need for supervision.</S>
    <S sid="9" ssid="3">This paper discusses the use of unlabeled examples for the problem of named entity classification.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'9'"]
'8'
'9'
['8', '9']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W99-0613.annv3.csv
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'133'", "'137'"]
'0'
'133'
'137'
['0', '133', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="174" ssid="41">The two new terms force the two classifiers to agree, as much as possible, on the unlabeled examples.</S><S sid="248" ssid="15">With each iteration more examples are assigned labels by both classifiers, while a high level of agreement (> 94%) is maintained between them.</S><S sid="33" ssid="27">The second algorithm builds on a boosting algorithm called AdaBoost (Freund and Schapire 97; Schapire and Singer 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'248'", "'33'"]
'174'
'248'
'33'
['174', '248', '33']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S><S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="220" ssid="87">(7), such as the likelihood function used in maximum-entropy problems and other generalized additive models (Lafferty 99).</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'133'", "'220'"]
'79'
'133'
'220'
['79', '133', '220']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="40" ssid="34">(Berland and Charniak 99) describe a method for extracting parts of objects from wholes (e.g., &quot;speedometer&quot; from &quot;car&quot;) from a large corpus using hand-crafted patterns.</S><S sid="41" ssid="35">(Hearst 92) describes a method for extracting hyponyms from a corpus (pairs of words in &quot;isa&quot; relations).</S><S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'", "'41'", "'79'"]
'40'
'41'
'79'
['40', '41', '79']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="19" ssid="13">Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.</S><S sid="11" ssid="5">For example, a good classifier would identify Mrs. Frank as a person, Steptoe & Johnson as a company, and Honduras as a location.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'19'", "'11'"]
'0'
'19'
'11'
['0', '19', '11']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S><S sid="250" ssid="1">Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.</S><S sid="179" ssid="46">The algorithm builds two classifiers in parallel from labeled and unlabeled data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'", "'250'", "'179'"]
'137'
'250'
'179'
['137', '250', '179']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="19" ssid="13">Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.</S><S sid="236" ssid="3">We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'19'", "'236'"]
'0'
'19'
'236'
['0', '19', '236']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="16" ssid="10">Supervised methods have been applied quite successfully to the full MUC named-entity task (Bikel et al. 97).</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="133" ssid="66">Fort= 1,...,T:</S>
original cit marker offset is 0
new cit marker offset is 0



["'16'", "'0'", "'133'"]
'16'
'0'
'133'
['16', '0', '133']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="253" ssid="4">We are currently exploring other methods that employ similar ideas and their formal properties.</S><S sid="133" ssid="66">Fort= 1,...,T:</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'253'", "'133'"]
'0'
'253'
'133'
['0', '253', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="251" ssid="2">In addition to a heuristic based on decision list learning, we also presented a boosting-like framework that builds on ideas from (Blum and Mitchell 98).</S><S sid="68" ssid="1">The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).</S><S sid="31" ssid="25">Our first algorithm is similar to Yarowsky's, but with some important modifications motivated by (Blum and Mitchell 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'251'", "'68'", "'31'"]
'251'
'68'
'31'
['251', '68', '31']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="28" ssid="22">(Yarowsky 95) describes an algorithm for word-sense disambiguation that exploits redundancy in contextual features, and gives impressive performance.</S><S sid="39" ssid="33">(Brin 98) ,describes a system for extracting (author, book-title) pairs from the World Wide Web using an approach that bootstraps from an initial seed set of examples.</S><S sid="254" ssid="5">Future work should also extend the approach to build a complete named entity extractor - a method that pulls proper names from text and then classifies them.</S>
original cit marker offset is 0
new cit marker offset is 0



["'28'", "'39'", "'254'"]
'28'
'39'
'254'
['28', '39', '254']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="85" ssid="18">(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="77" ssid="10">In this paper k = 3 (the three labels are person, organization, location), and we set a = 0.1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'0'", "'77'"]
'85'
'0'
'77'
['85', '0', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation']
<S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="68" ssid="1">The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).</S>
original cit marker offset is 0
new cit marker offset is 0



["'133'", "'0'", "'68'"]
'133'
'0'
'68'
['133', '0', '68']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



W99-0613
W03-1022
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W99-0613
W06-2207
0
method_citation
['method_citation', 'hypothesis_citation']
gold file P08-1102_aakansha.csv
submit_file input/res/Task1/P08-1102.annv3.csv
parsing: input/ref/Task1/P08-1102_aakansha.csv
<S sid="130" ssid="1">We proposed a cascaded linear model for Chinese Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'"]
'130'
['130']
parsed_discourse_facet ['method_citation']
<S sid="42" ssid="14">As predications generated from such templates depend on the current character, we name these templates lexical-target.</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'"]
'42'
['42']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="21">According to Ng and Low (2004), the segmentation task can be transformed to a tagging problem by assigning each character a boundary tag of the following four types: We can extract segmentation result by splitting the labelled result into subsequences of pattern s or bm*e which denote single-character word and multicharacter word respectively.</S>
original cit marker offset is 0
new cit marker offset is 0



["'25'"]
'25'
['25']
parsed_discourse_facet ['method_citation']
<S sid="130" ssid="1">We proposed a cascaded linear model for Chinese Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'"]
'130'
['130']
parsed_discourse_facet ['method_citation']
<S sid="34" ssid="6">The feature templates we adopted are selected from those of Ng and Low (2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'"]
'34'
['34']
parsed_discourse_facet ['method_citation']
<S sid="12" ssid="8">Besides the usual character-based features, additional features dependent on POS&#8217;s or words can also be employed to improve the performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["'12'"]
'12'
['12']
parsed_discourse_facet ['method_citation']
<S sid="130" ssid="1">We proposed a cascaded linear model for Chinese Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'"]
'130'
['130']
parsed_discourse_facet ['method_citation']
<S sid="130" ssid="1">We proposed a cascaded linear model for Chinese Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'"]
'130'
['130']
parsed_discourse_facet ['method_citation']
<S sid="121" ssid="32">Among other features, the 4-gram POS LM plays the most important role, removing this feature causes F-measure decrement of 0.33 points on segmentation and 0.71 points on Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



["'121'"]
'121'
['121']
parsed_discourse_facet ['method_citation']
<S sid="37" ssid="9">C represents a Chinese character while the subscript of C indicates its position in the sentence relative to the current character (it has the subscript 0).</S>
original cit marker offset is 0
new cit marker offset is 0



["'37'"]
'37'
['37']
parsed_discourse_facet ['method_citation']
<S sid="73" ssid="24">For instance, if the word w appears N times in training corpus and is labelled as POS t for n times, the probability Pr(t|w) can be estimated by the formula below: The probability Pr(w|t) could be estimated through the same approach.</S>
original cit marker offset is 0
new cit marker offset is 0



["'73'"]
'73'
['73']
parsed_discourse_facet ['method_citation']
<S sid="46" ssid="18">Following Collins, we use a function GEN(x) generating all candidate results of an input x , a representation 4) mapping each training example (x, y) &#8712; X &#215; Y to a feature vector 4)(x, y) &#8712; Rd, and a parameter vector &#945;&#65533; &#8712; Rd corresponding to the feature vector. d means the dimension of the vector space, it equals to the amount of features in the model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'46'"]
'46'
['46']
parsed_discourse_facet ['method_citation']
<S sid="12" ssid="8">Besides the usual character-based features, additional features dependent on POS&#8217;s or words can also be employed to improve the performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["'12'"]
'12'
['12']
parsed_discourse_facet ['method_citation']
<S sid="130" ssid="1">We proposed a cascaded linear model for Chinese Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'"]
'130'
['130']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P08-1102.annv3.csv
<S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="22" ssid="18">2 Segmentation and POS Tagging Given a Chinese character sequence: while the segmentation and POS tagging result can be depicted as: Here, Ci (i = L.n) denotes Chinese character, ti (i = L.m) denotes POS tag, and Cl:r (l < r) denotes character sequence ranges from Cl to Cr.</S><S sid="79" ssid="4">By maintaining a stack of size N at each position i of the sequence, we can preserve the top N best candidate labelled results of subsequence C1:i during decoding.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'22'", "'79'"]
'9'
'22'
'79'
['9', '22', '79']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="25" ssid="21">According to Ng and Low (2004), the segmentation task can be transformed to a tagging problem by assigning each character a boundary tag of the following four types: We can extract segmentation result by splitting the labelled result into subsequences of pattern s or bm*e which denote single-character word and multicharacter word respectively.</S><S sid="28" ssid="24">A subsequence of boundary-POS labelling result indicates a word with POS t only if the boundary tag sequence composed of its boundary part conforms to s or bm*e style, and all POS tags in its POS part equal to t. For example, a tag sequence b NN m NN e NN represents a threecharacter word with POS tag NN.</S><S sid="10" ssid="6">Since the typical approach of discriminative models treats segmentation as a labelling problem by assigning each character a boundary tag (Xue and Shen, 2003), Joint S&T can be conducted in a labelling fashion by expanding boundary tags to include POS information (Ng and Low, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'25'", "'28'", "'10'"]
'25'
'28'
'10'
['25', '28', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S><S sid="42" ssid="14">As predications generated from such templates depend on the current character, we name these templates lexical-target.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'1'", "'42'"]
'0'
'1'
'42'
['0', '1', '42']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="25" ssid="21">According to Ng and Low (2004), the segmentation task can be transformed to a tagging problem by assigning each character a boundary tag of the following four types: We can extract segmentation result by splitting the labelled result into subsequences of pattern s or bm*e which denote single-character word and multicharacter word respectively.</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'25'", "'1'"]
'0'
'25'
'1'
['0', '25', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'2'", "'24'"]
'9'
'2'
'24'
['9', '2', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="130" ssid="1">We proposed a cascaded linear model for Chinese Joint S&T.</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'130'", "'1'"]
'0'
'130'
'1'
['0', '130', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S><S sid="67" ssid="18">Language model (LM) provides linguistic probabilities of a word sequence.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'1'", "'67'"]
'0'
'1'
'67'
['0', '1', '67']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="56" ssid="7">To alleviate the drawbacks, we propose a cascaded linear model.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="85" ssid="10">Lines 3 — 11 generate a N-best list for each character position i.</S>
original cit marker offset is 0
new cit marker offset is 0



["'56'", "'0'", "'85'"]
'56'
'0'
'85'
['56', '0', '85']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="5" ssid="1">Word segmentation and part-of-speech (POS) tagging are important tasks in computer processing of Chinese and other Asian languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'9'", "'5'"]
'24'
'9'
'5'
['24', '9', '5']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="23" ssid="19">We can see that segmentation and POS tagging task is to divide a character sequence into several subsequences and label each of them a POS tag.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'9'", "'23'"]
'0'
'9'
'23'
['0', '9', '23']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="19" ssid="15">In addition, as these knowledge sources are regarded as separate features, we can train their corresponding models independently with each other.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="8" ssid="4">Another widely used discriminative method is the perceptron algorithm (Collins, 2002), which achieves comparable performance to CRFs with much faster training, so we base this work on the perceptron.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'", "'0'", "'8'"]
'19'
'0'
'8'
['19', '0', '8']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="42" ssid="14">As predications generated from such templates depend on the current character, we name these templates lexical-target.</S><S sid="41" ssid="13">We add a field C0 to each template in the upper column, so that it can carry out predication according to not only the context but also the current character itself.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'41'", "'0'"]
'42'
'41'
'0'
['42', '41', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="62" ssid="13">Suppose we have n features gj (j = 1..n) coupled with n corresponding weights wj (j = 1..n), each feature gj gives a score gj(r) to a candidate r, then the total score of r is given by: The decoding procedure aims to find the candidate r* with the highest score: While the mission of the training procedure is to tune the weights wj(j = 1..n) to guarantee that the candidate r with the highest score happens to be the best result with a high probability.</S><S sid="16" ssid="12">Shown in Figure 1, the cascaded model has a two-layer architecture, with a characterbased perceptron as the core combined with other real-valued features such as language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'62'", "'16'"]
'2'
'62'
'16'
['2', '62', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="58" ssid="9">Instead of incorporating all features into the perceptron directly, we first trained the perceptron using character-based features, and several other sub-models using additional ones such as word or POS n-grams, then trained the outside-layer linear model using the outputs of these sub-models, including the perceptron.</S><S sid="16" ssid="12">Shown in Figure 1, the cascaded model has a two-layer architecture, with a characterbased perceptron as the core combined with other real-valued features such as language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'58'", "'16'"]
'2'
'58'
'16'
['2', '58', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="31" ssid="3">The perceptron has been used in many NLP tasks, such as POS tagging (Collins, 2002), Chinese word segmentation (Ng and Low, 2004; Zhang and Clark, 2007) and so on.</S><S sid="10" ssid="6">Since the typical approach of discriminative models treats segmentation as a labelling problem by assigning each character a boundary tag (Xue and Shen, 2003), Joint S&T can be conducted in a labelling fashion by expanding boundary tags to include POS information (Ng and Low, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'31'", "'10'"]
'0'
'31'
'10'
['0', '31', '10']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'9'", "'2'"]
'24'
'9'
'2'
['24', '9', '2']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file J01-2004_aakansha.csv
submit_file input/res/Task1/J01-2004.annv3.csv
parsing: input/ref/Task1/J01-2004_aakansha.csv
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S>
original cit marker offset is 0
new cit marker offset is 0



["'372'"]
'372'
['372']
parsed_discourse_facet ['method_citation']
<S sid="17" ssid="5">This paper will examine language modeling for speech recognition from a natural language processing point of view.</S>
original cit marker offset is 0
new cit marker offset is 0



["'17'"]
'17'
['17']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="9">First, the top-down parsing algorithm builds a set of rooted candidate parse trees from left to right over the string, which allows it to calculate a generative probability for each prefix string from the probabilistic grammar, and hence a conditional probability for each word given the previous words and the probabilistic grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="9">First, the top-down parsing algorithm builds a set of rooted candidate parse trees from left to right over the string, which allows it to calculate a generative probability for each prefix string from the probabilistic grammar, and hence a conditional probability for each word given the previous words and the probabilistic grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="302" ssid="58">In the beam search approach outlined above, we can estimate the string's probability in the same manner, by summing the probabilities of the parses that the algorithm finds.</S>
original cit marker offset is 0
new cit marker offset is 0



["'302'"]
'302'
['302']
parsed_discourse_facet ['method_citation']
<S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



["'31'"]
'31'
['31']
parsed_discourse_facet ['method_citation']
<S sid="79" ssid="37">This underspecification of the nonterminal predictions (e.g., VP-VBD in the example in Figure 2, as opposed to NP), allows lexical items to become part of the left context, and so be used to condition production probabilities, even the production probabilities of constituents that dominate them in the unfactored tree.</S>
    <S sid="80" ssid="38">It also brings words further downstream into the look-ahead at the point of specification.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'80'"]
'79'
'80'
['79', '80']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="9">First, the top-down parsing algorithm builds a set of rooted candidate parse trees from left to right over the string, which allows it to calculate a generative probability for each prefix string from the probabilistic grammar, and hence a conditional probability for each word given the previous words and the probabilistic grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="138" ssid="42">Our approach is found to yield very accurate parses efficiently, and, in addition, to lend itself straightforwardly to estimating word probabilities on-line, that is, in a single pass from left to right.</S>
original cit marker offset is 0
new cit marker offset is 0



["'138'"]
'138'
['138']
parsed_discourse_facet ['method_citation']
<S sid="291" ssid="47">Also, the parser returns a set of candidate parses, from which we have been choosing the top ranked; if we use an oracle to choose the parse with the highest accuracy from among the candidates (which averaged 70.0 in number per sentence), we find an average labeled precision/recall of 94.1, for sentences of length &lt; 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'291'"]
'291'
['291']
parsed_discourse_facet ['method_citation']
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S>
original cit marker offset is 0
new cit marker offset is 0



['372']
372
['372']
parsed_discourse_facet ['method_citation']
<S sid="209" ssid="113">This parser is essentially a stochastic version of the top-down parser described in Aho, Sethi, and Ullman (1986).</S>
    <S sid="210" ssid="114">It uses a PCFG with a conditional probability model of the sort defined in the previous section.</S>
original cit marker offset is 0
new cit marker offset is 0



["'209'", "'210'"]
'209'
'210'
['209', '210']
parsed_discourse_facet ['method_citation']
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S>
original cit marker offset is 0
new cit marker offset is 0



["'372'"]
'372'
['372']
parsed_discourse_facet ['method_citation']
<S sid="20" ssid="8">Two features of our top-down parsing approach will emerge as key to its success.</S>
    <S sid="21" ssid="9">First, the top-down parsing algorithm builds a set of rooted candidate parse trees from left to right over the string, which allows it to calculate a generative probability for each prefix string from the probabilistic grammar, and hence a conditional probability for each word given the previous words and the probabilistic grammar.</S><S sid="32" ssid="20">A second key feature of our approach is that top-down guidance improves the efficiency of the search as more and more conditioning events are extracted from the derivation for use in the probabilistic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'", "'21'", "'32'"]
'20'
'21'
'32'
['20', '21', '32']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="9">First, the top-down parsing algorithm builds a set of rooted candidate parse trees from left to right over the string, which allows it to calculate a generative probability for each prefix string from the probabilistic grammar, and hence a conditional probability for each word given the previous words and the probabilistic grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["'31'"]
'31'
['31']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="21">Because the rooted partial derivation is fully connected, all of the conditioning information that might be extracted from the top-down left context has already been specified, and a conditional probability model built on this information will not impose any additional burden on the search.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'"]
'33'
['33']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/J01-2004.annv3.csv
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S><S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'372'", "'0'"]
'388'
'372'
'0'
['388', '372', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="15" ssid="3">In the past few years, however, some improvements have been made over these language models through the use of statistical methods of natural language processing, and the development of innovative, linguistically well-motivated techniques for improving language models for speech recognition is generating more interest among computational linguists.</S><S sid="17" ssid="5">This paper will examine language modeling for speech recognition from a natural language processing point of view.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'15'", "'17'"]
'388'
'15'
'17'
['388', '15', '17']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="19" ssid="7">A new language model, based on probabilistic top-down parsing, will be outlined and compared with the previous literature, and extensive empirical results will be presented which demonstrate its utility.</S><S sid="10" ssid="4">A new language model that utilizes probabilistic top-down parsing is then outlined, and empirical results show that it improves upon previous work in test corpus perplexity.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'19'", "'10'"]
'388'
'19'
'10'
['388', '19', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="207" ssid="111">The model allows us to assign probabilities to derivations, which can be used by the parsing algorithm to decide heuristically which candidates are promising and should be expanded, and which are less promising and should be pruned.</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'207'", "'137'"]
'388'
'207'
'137'
['388', '207', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="134" ssid="38">The parsers with the highest published broad-coverage parsing accuracy, which include Charniak (1997, 2000), Collins (1997, 1999), and Ratnaparkhi (1997), all utilize simple and straightforward statistically based search heuristics, pruning the search-space quite dramatically!'</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'134'", "'137'"]
'388'
'134'
'137'
['388', '134', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="268" ssid="24">This is an incremental parser with a pruning strategy and no backtracking.</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S><S sid="223" ssid="127">We implement this as a beam search.</S>
original cit marker offset is 0
new cit marker offset is 0



["'268'", "'137'", "'223'"]
'268'
'137'
'223'
['268', '137', '223']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="231" ssid="135">Since we do not know the POS for the word, we must sum the LAP for all POS For a PCFG G, a stack S = Ao An$ (which we will write AN and a look-ahead terminal item wi, we define the look-ahead probability as follows: We recursively estimate this with two empirically observed conditional probabilities for every nonterminal A,: 13(A, w,a) and P(A, c).</S><S sid="224" ssid="128">For each word position i, we have a separate priority queue H, of analyses with look-ahead w,.</S><S sid="108" ssid="12">Another approach that uses syntactic structure for language modeling has been to use a shift-reduce parser to &quot;surface&quot; c-commanding phrasal headwords or part-of-speech (POS) tags from arbitrarily far back in the prefix string, for use in a trigram-like model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'231'", "'224'", "'108'"]
'231'
'224'
'108'
['231', '224', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="223" ssid="127">We implement this as a beam search.</S><S sid="109" ssid="13">A shift-reduce parser operates from left to right using a stack and a pointer to the next word in the input string.9 Each stack entry consists minimally of a nonterminal label.</S><S sid="138" ssid="42">Our approach is found to yield very accurate parses efficiently, and, in addition, to lend itself straightforwardly to estimating word probabilities on-line, that is, in a single pass from left to right.</S>
original cit marker offset is 0
new cit marker offset is 0



["'223'", "'109'", "'138'"]
'223'
'109'
'138'
['223', '109', '138']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="274" ssid="30">This structure is evaluated for precision and recall, which is entirely appropriate for these incomplete as well as complete parses.</S><S sid="214" ssid="118">A candidate analysis C = (D, 8, PD, F, wn consists of a derivation D, a stack S. a derivation probability PD, a figure of merit F, and a string w7 remaining to be parsed.</S><S sid="223" ssid="127">We implement this as a beam search.</S>
original cit marker offset is 0
new cit marker offset is 0



["'274'", "'214'", "'223'"]
'274'
'214'
'223'
['274', '214', '223']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="291" ssid="47">Also, the parser returns a set of candidate parses, from which we have been choosing the top ranked; if we use an oracle to choose the parse with the highest accuracy from among the candidates (which averaged 70.0 in number per sentence), we find an average labeled precision/recall of 94.1, for sentences of length < 100.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="9" ssid="3">A lexicalized probabilistic topdown parser is then presented, which performs very well, in terms of both the accuracy of returned parses and the efficiency with which they are found, relative to the best broad-coverage statistical parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'291'", "'388'", "'9'"]
'291'
'388'
'9'
['291', '388', '9']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S><S sid="355" ssid="111">In order to get a sense of whether these perplexity reduction results can translate to improvement in a speech recognition task, we performed a very small preliminary experiment on n-best lists.</S><S sid="214" ssid="118">A candidate analysis C = (D, 8, PD, F, wn consists of a derivation D, a stack S. a derivation probability PD, a figure of merit F, and a string w7 remaining to be parsed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'372'", "'355'", "'214'"]
'372'
'355'
'214'
['372', '355', '214']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S><S sid="102" ssid="6">One approach to syntactic language modeling is to use this distribution directly as a language model.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'102'", "'388'"]
'0'
'102'
'388'
['0', '102', '388']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="313" ssid="69">By utilizing a figure of merit to identify promising analyses, we are simply focusing our attention on those parses that are likely to have a high probability, and thus we are increasing the amount of probability mass that we do capture, of the total possible.</S><S sid="100" ssid="4">The approach that we will subsequently present uses the probabilistic grammar as its language model, but only includes probability mass from those parses that are found, that is, it uses the parser to find a subset of the total set of parses (hopefully most of the high-probability parses) and uses the sum of their probabilities as an estimate of the true probability given the grammar.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S>
original cit marker offset is 0
new cit marker offset is 0



["'313'", "'100'", "'388'"]
'313'
'100'
'388'
['313', '100', '388']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="263" ssid="19">Following standard practice, we will be reporting scores only for non-part-of-speech constituents, which are called labeled recall (LR) and labeled precision (LP).</S><S sid="245" ssid="1">The empirical results will be presented in three stages: (i) trials to examine the accuracy and efficiency of the parser; (ii) trials to examine its effect on test corpus perplexity and recognition performance; and (iii) trials to examine the effect of beam variation on these performance measures.</S><S sid="108" ssid="12">Another approach that uses syntactic structure for language modeling has been to use a shift-reduce parser to &quot;surface&quot; c-commanding phrasal headwords or part-of-speech (POS) tags from arbitrarily far back in the prefix string, for use in a trigram-like model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'263'", "'245'", "'108'"]
'263'
'245'
'108'
['263', '245', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="329" ssid="85">Table 3 shows several things.</S><S sid="19" ssid="7">A new language model, based on probabilistic top-down parsing, will be outlined and compared with the previous literature, and extensive empirical results will be presented which demonstrate its utility.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'329'", "'19'"]
'388'
'329'
'19'
['388', '329', '19']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="397" ssid="10">A top-down parser, in contrast to a standard bottom-up chart parser, has enough information to predict empty categories only where they are likely to occur.</S><S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S><S sid="209" ssid="113">This parser is essentially a stochastic version of the top-down parser described in Aho, Sethi, and Ullman (1986).</S>
original cit marker offset is 0
new cit marker offset is 0



["'397'", "'0'", "'209'"]
'397'
'0'
'209'
['397', '0', '209']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="269" ssid="25">In such a model, it is possible to commit to a set of partial analyses at a particular point that cannot be completed given the rest of the input string (i.e., the parser can &quot;garden path&quot;).</S><S sid="310" ssid="66">This is a subset of the possible leftmost partial derivations with respect to the prefix string W. Since RV is produced by expanding only analyses on priority queue H;', the set of complete trees consistent with the partial derivations on priority queue Ht is a subset of the set of complete trees consistent with the partial derivations on priority queue HT'', that is, the total probability mass represented by the priority queues is monotonically decreasing.</S><S sid="306" ssid="62">Recall the discussion of the grammar models above, and our definition of the set of partial derivations Dw, with respect to a prefix string wil) (see Equations 2 and 7).</S>
original cit marker offset is 0
new cit marker offset is 0



["'269'", "'310'", "'306'"]
'269'
'310'
'306'
['269', '310', '306']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



J01-2004
W05-0104
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



J01-2004
P08-1013
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



J01-2004
P05-1022
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



J01-2004
P04-1006
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file D10-1044_aakansha.csv
submit_file input/res/Task1/D10-1044.annv3.csv
parsing: input/ref/Task1/D10-1044_aakansha.csv
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'"]
'144'
['144']
parsed_discourse_facet ['method_citation']
<S sid="95" ssid="32">Phrase tables were extracted from the IN and OUT training corpora (not the dev as was used for instance weighting models), and phrase pairs in the intersection of the IN and OUT phrase tables were used as positive examples, with two alternate definitions of negative examples: The classifier trained using the 2nd definition had higher accuracy on a development set.</S>
    <S sid="96" ssid="33">We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'", "'96'"]
'95'
'96'
['95', '96']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="6">In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material&#8212;though adequate for reasonable performance&#8212;is also available.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'"]
'62'
['62']
parsed_discourse_facet ['method_citation']
<S sid="28" ssid="25">We train linear mixture models for conditional phrase pair probabilities over IN and OUT so as to maximize the likelihood of an empirical joint phrase-pair distribution extracted from a development set.</S>
original cit marker offset is 0
new cit marker offset is 0



["'28'"]
'28'
['28']
parsed_discourse_facet ['method_citation']
<S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'"]
'23'
['23']
parsed_discourse_facet ['method_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'"]
'144'
['144']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="6">In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material&#8212;though adequate for reasonable performance&#8212;is also available.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="28" ssid="25">We train linear mixture models for conditional phrase pair probabilities over IN and OUT so as to maximize the likelihood of an empirical joint phrase-pair distribution extracted from a development set.</S>
original cit marker offset is 0
new cit marker offset is 0



["'28'"]
'28'
['28']
parsed_discourse_facet ['method_citation']
<S sid="75" ssid="12">However, it is robust, efficient, and easy to implement.4 To perform the maximization in (7), we used the popular L-BFGS algorithm (Liu and Nocedal, 1989), which requires gradient information.</S>
original cit marker offset is 0
new cit marker offset is 0



["'75'"]
'75'
['75']
parsed_discourse_facet ['method_citation']
<S sid="31" ssid="28">For comparison to information-retrieval inspired baselines, eg (L&#168;u et al., 2007), we select sentences from OUT using language model perplexities from IN.</S>
original cit marker offset is 0
new cit marker offset is 0



["'31'"]
'31'
['31']
parsed_discourse_facet ['method_citation']
<S sid="22" ssid="19">Within this framework, we use features intended to capture degree of generality, including the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'22'"]
'22'
['22']
parsed_discourse_facet ['method_citation']
<S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'"]
'23'
['23']
parsed_discourse_facet ['method_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'"]
'62'
['62']
parsed_discourse_facet ['method_citation']
<S sid="119" ssid="23">The 2nd block contains the IR system, which was tuned by selecting text in multiples of the size of the EMEA training corpus, according to dev set performance.</S>
    <S sid="120" ssid="24">This significantly underperforms log-linear combination.</S>
original cit marker offset is 0
new cit marker offset is 0



["'119'", "'120'"]
'119'
'120'
['119', '120']
parsed_discourse_facet ['result_citation']
<S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S>
    <S sid="24" ssid="21">Sentence pairs are the natural instances for SMT, but sentences often contain a mix of domain-specific and general language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'24'"]
'23'
'24'
['23', '24']
parsed_discourse_facet ['method_citation']
<S sid="40" ssid="4">We focus here instead on adapting the two most important features: the language model (LM), which estimates the probability p(wIh) of a target word w following an ngram h; and the translation models (TM) p(slt) and p(t1s), which give the probability of source phrase s translating to target phrase t, and vice versa.</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'"]
'40'
['40']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/D10-1044.annv3.csv
<S sid="143" ssid="12">Other work includes transferring latent topic distributions from source to target language for LM adaptation, (Tam et al., 2007) and adapting features at the sentence level to different categories of sentence (Finch and Sumita, 2008).</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="4" ssid="1">Domain adaptation is a common concern when optimizing empirical NLP applications.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'1'", "'4'"]
'143'
'1'
'4'
['143', '1', '4']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="65" ssid="2">Matsoukas et al (2009) generalize it by learning weights on sentence pairs that are used when estimating relative-frequency phrase-pair probabilities.</S><S sid="96" ssid="33">We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'65'", "'96'"]
'68'
'65'
'96'
['68', '65', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="9" ssid="6">In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material—though adequate for reasonable performance—is also available.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'", "'1'", "'9'"]
'144'
'1'
'9'
['144', '1', '9']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'", "'145'", "'1'"]
'62'
'145'
'1'
['62', '145', '1']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S><S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'62'"]
'0'
'23'
'62'
['0', '23', '62']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="65" ssid="2">Matsoukas et al (2009) generalize it by learning weights on sentence pairs that are used when estimating relative-frequency phrase-pair probabilities.</S><S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="67" ssid="4">We extend the Matsoukas et al approach in several ways.</S>
original cit marker offset is 0
new cit marker offset is 0



["'65'", "'68'", "'67'"]
'65'
'68'
'67'
['65', '68', '67']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="18">This highly effective approach is not directly applicable to the multinomial models used for core SMT components, which have no natural method for combining split features, so we rely on an instance-weighting approach (Jiang and Zhai, 2007) to downweight domain-specific examples in OUT.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'145'", "'0'"]
'21'
'145'
'0'
['21', '145', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="148" ssid="5">Mixing, smoothing, and instance-feature weights are learned at the same time using an efficient maximum-likelihood procedure that relies on only a small in-domain development corpus.</S><S sid="97" ssid="1">We carried out translation experiments in two different settings.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'148'", "'97'"]
'145'
'148'
'97'
['145', '148', '97']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S><S sid="117" ssid="21">The natural baseline (baseline) outperforms the pure IN system only for EMEA/EP fren.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'117'", "'62'"]
'0'
'117'
'62'
['0', '117', '62']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="42" ssid="6">The natural baseline approach is to concatenate data from IN and OUT.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="28" ssid="25">We train linear mixture models for conditional phrase pair probabilities over IN and OUT so as to maximize the likelihood of an empirical joint phrase-pair distribution extracted from a development set.</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'145'", "'28'"]
'42'
'145'
'28'
['42', '145', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="84" ssid="21">An alternate approximation to (8) would be to let w,\(s, t) directly approximate pˆI(s, t).</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="32" ssid="29">This is a straightforward technique that is arguably better suited to the adaptation task than the standard method of treating representative IN sentences as queries, then pooling the match results.</S>
original cit marker offset is 0
new cit marker offset is 0



["'84'", "'1'", "'32'"]
'84'
'1'
'32'
['84', '1', '32']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="75" ssid="12">However, it is robust, efficient, and easy to implement.4 To perform the maximization in (7), we used the popular L-BFGS algorithm (Liu and Nocedal, 1989), which requires gradient information.</S><S sid="84" ssid="21">An alternate approximation to (8) would be to let w,\(s, t) directly approximate pˆI(s, t).</S><S sid="63" ssid="27">The number of top-ranked pairs to retain is chosen to optimize dev-set BLEU score.</S>
original cit marker offset is 0
new cit marker offset is 0



["'75'", "'84'", "'63'"]
'75'
'84'
'63'
['75', '84', '63']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S><S sid="31" ssid="28">For comparison to information-retrieval inspired baselines, eg (L¨u et al., 2007), we select sentences from OUT using language model perplexities from IN.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'", "'31'", "'1'"]
'144'
'31'
'1'
['144', '31', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="22" ssid="19">Within this framework, we use features intended to capture degree of generality, including the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S>
original cit marker offset is 0
new cit marker offset is 0



["'22'", "'145'", "'0'"]
'22'
'145'
'0'
['22', '145', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'145'", "'1'"]
'23'
'145'
'1'
['23', '145', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'62'", "'1'"]
'145'
'62'
'1'
['145', '62', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="42" ssid="6">The natural baseline approach is to concatenate data from IN and OUT.</S><S sid="117" ssid="21">The natural baseline (baseline) outperforms the pure IN system only for EMEA/EP fren.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'117'", "'145'"]
'42'
'117'
'145'
['42', '117', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="38" ssid="2">The toplevel weights are trained to maximize a metric such as BLEU on a small development set of approximately 1000 sentence pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'1'", "'38'"]
'68'
'1'
'38'
['68', '1', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="40" ssid="4">We focus here instead on adapting the two most important features: the language model (LM), which estimates the probability p(wIh) of a target word w following an ngram h; and the translation models (TM) p(slt) and p(t1s), which give the probability of source phrase s translating to target phrase t, and vice versa.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'40'", "'145'"]
'68'
'40'
'145'
['68', '40', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



D10-1044
P12-1048
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



D10-1044
D12-1129
0
method_citation
['method_citation', 'aim_citation', 'results_citation', 'implication_citation']



D10-1044
P14-2093
0
method_citation
['method_citation', 'implication_citation']



D10-1044
P12-1099
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



D10-1044
P13-1126
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



D10-1044
P14-1012
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file A97-1014_sweta.csv
submit_file input/res/Task1/A97-1014.annv3.csv
parsing: input/ref/Task1/A97-1014_sweta.csv
<S sid="168" ssid="10">We will closely coordinate the further development of our corpus with the annotation work in Verbmobil and with other German efforts in corpus annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



["168'"]
168'
['168']
parsed_discourse_facet ['method_citation']
<S sid="165" ssid="7">In addition the approach provides empirical material for psycholinguistic investigation, since preferences for the choice of certain syntactic constructions, linea.rizations, and attachments that have been observed in online experiments of language production and comprehension can now be put in relation with the frequency of these alternatives in larger amounts of texts.</S>
original cit marker offset is 0
new cit marker offset is 0



["165'"]
165'
['165']
parsed_discourse_facet ['method_citation']
<S sid="145" ssid="26">This amount of data suffices as training material to reliably assign the grammatical functions if the user determines the elements of a phrase and its type (step 1 of the list above).</S>
original cit marker offset is 0
new cit marker offset is 0



["145'"]
145'
['145']
parsed_discourse_facet ['method_citation']
<S sid="15" ssid="5">Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.<
original cit marker offset is 0
new cit marker offset is 0



["15'"]
15'
['15']
parsed_discourse_facet ['method_citation']
<S sid="41" ssid="31">Apart from this rather technical problem, two further arguments speak against phrase structure as the structural pivot of the annotation scheme: Finally, the structural handling of free word order means stating well-formedness constraints on structures involving many trace-filler dependencies, which has proved tedious.</S>
original cit marker offset is 0
new cit marker offset is 0



["41'"]
41'
['41']
parsed_discourse_facet ['method_citation']
<S sid="47" ssid="37">Argument structure can be represented in terms of unordered trees (with crossing branches).</S>
original cit marker offset is 0
new cit marker offset is 0



["47'"]
47'
['47']
parsed_discourse_facet ['method_citation']
<S sid="167" ssid="9">In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.</S>
original cit marker offset is 0
new cit marker offset is 0



["167'"]
167'
['167']
parsed_discourse_facet ['method_citation']
 <S sid="167" ssid="9">In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.</S>
original cit marker offset is 0
new cit marker offset is 0



["167'"]
167'
['167']
parsed_discourse_facet ['method_citation']
<S sid="39" ssid="29">Consider the German sentence (1) daran wird ihn Anna erkennen, &amp;di er weint at-it will him Anna recognise that he cries 'Anna will recognise him at his cry' A sample constituent structure is given below: The fairly short sentence contains three non-local dependencies, marked by co-references between traces and the corresponding nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["39'"]
39'
['39']
parsed_discourse_facet ['method_citation']
<S sid="160" ssid="2">These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.</S>
original cit marker offset is 0
new cit marker offset is 0



["160'"]
160'
['160']
parsed_discourse_facet ['method_citation']
<S sid="166" ssid="8">Syntactically annotated corpora of German have been missing until now.</S>
original cit marker offset is 0
new cit marker offset is 0



["166'"]
166'
['166']
parsed_discourse_facet ['method_citation']
<S sid="166" ssid="8">Syntactically annotated corpora of German have been missing until now.</S>
original cit marker offset is 0
new cit marker offset is 0



["166'"]
166'
['166']
parsed_discourse_facet ['method_citation']
<S sid="143" ssid="24">Sentences annotated in previous steps are used as training material for further processing.</S>
original cit marker offset is 0
new cit marker offset is 0



["143'"]
143'
['143']
parsed_discourse_facet ['method_citation']
  <S sid="71" ssid="16">However, there is a trade-off between the granularity of information encoded in the labels and the speed and accuracy of annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



["71'"]
71'
['71']
parsed_discourse_facet ['method_citation']
  <S sid="167" ssid="9">In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.</S>
original cit marker offset is 0
new cit marker offset is 0



["167'"]
167'
['167']
parsed_discourse_facet ['method_citation']
<S sid="151" ssid="32">For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).</S>
original cit marker offset is 0
new cit marker offset is 0



["151'"]
151'
['151']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/A97-1014.annv3.csv
<S sid="74" ssid="19">During the first phase, the focus is on annotating correct structures and a coarse-grained classification of grammatical functions, which represent the following areas of information: Dependency type: complements are further classified according to features such as category and case: clausal complements (OC), accusative objects (OA), datives (DA), etc.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S><S sid="170" ssid="12">Our annotation tool supplies efficient manipulation and immediate visualization of argument structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'74'", "'88'", "'170'"]
'74'
'88'
'170'
['74', '88', '170']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="72" ssid="17">In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="144" ssid="25">We distinguish five degrees of automation: So far, about 1100 sentences of our corpus have been annotated.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'", "'4'", "'144'"]
'72'
'4'
'144'
['72', '4', '144']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="153" ssid="34">The tagger rates 90% of all assignments as reliable and carries them out fully automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'159'", "'153'"]
'24'
'159'
'153'
['24', '159', '153']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="15" ssid="5">Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.</S><S sid="57" ssid="2">Argument structure, represented in terms of unordered trees.</S><S sid="0" ssid="0">An Annotation Scheme for Free Word Order Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'57'", "'0'"]
'15'
'57'
'0'
['15', '57', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="111" ssid="24">If the scope of such a word does not directly correspond to a tree node, the word is attached to the lowest node dominating all subconstituents appearing in its scope.</S><S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="47" ssid="37">Argument structure can be represented in terms of unordered trees (with crossing branches).</S>
original cit marker offset is 0
new cit marker offset is 0



["'111'", "'24'", "'47'"]
'111'
'24'
'47'
['111', '24', '47']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'24'", "'4'"]
'159'
'24'
'4'
['159', '24', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="167" ssid="9">In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.</S><S sid="141" ssid="22">The corpus is stored in a SQL database.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'167'", "'141'", "'4'"]
'167'
'141'
'4'
['167', '141', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="166" ssid="8">Syntactically annotated corpora of German have been missing until now.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="1" ssid="1">We describe an annotation scheme and a tool developed for creating linguistically annotated corpora for non-configurational languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'166'", "'4'", "'1'"]
'166'
'4'
'1'
['166', '4', '1']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S><S sid="0" ssid="0">An Annotation Scheme for Free Word Order Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'88'", "'0'"]
'159'
'88'
'0'
['159', '88', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="121" ssid="2">In order to make the annotation process more efficient, extra effort has been put. into the development of an annotation tool.</S><S sid="74" ssid="19">During the first phase, the focus is on annotating correct structures and a coarse-grained classification of grammatical functions, which represent the following areas of information: Dependency type: complements are further classified according to features such as category and case: clausal complements (OC), accusative objects (OA), datives (DA), etc.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'121'", "'74'"]
'159'
'121'
'74'
['159', '121', '74']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="72" ssid="17">In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'", "'4'", "'88'"]
'72'
'4'
'88'
['72', '4', '88']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="141" ssid="22">The corpus is stored in a SQL database.</S><S sid="143" ssid="24">Sentences annotated in previous steps are used as training material for further processing.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'", "'141'", "'143'"]
'4'
'141'
'143'
['4', '141', '143']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="71" ssid="16">However, there is a trade-off between the granularity of information encoded in the labels and the speed and accuracy of annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'", "'159'", "'71'"]
'4'
'159'
'71'
['4', '159', '71']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="160" ssid="2">These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="151" ssid="32">For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).</S>
original cit marker offset is 0
new cit marker offset is 0



["'160'", "'4'", "'151'"]
'160'
'4'
'151'
['160', '4', '151']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 1
IGNORE THIS: key error 1



A97-1014
I05-6010
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



A97-1014
P05-1039
0
method_citation
['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']



A97-1014
P11-2067
0
method_citation
['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']



A97-1014
W08-1007
0
method_citation
['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']



A97-1014
D07-1066
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file P11-1060_aakansha.csv
submit_file input/res/Task1/P11-1060.annv3.csv
parsing: input/ref/Task1/P11-1060_aakansha.csv
<S sid="11" ssid="7">Figure 1 shows our probabilistic model: with respect to a world w (database of facts), producing an answer y.</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'"]
'11'
['11']
parsed_discourse_facet ['method_citation']
<S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'"]
'2'
['2']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="5">As in Clarke et al. (2010), we obviate the need for annotated logical forms by considering the endto-end problem of mapping questions to answers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="112" ssid="88">Our learning algorithm alternates between (i) using the current parameters &#952; to generate the K-best set &#732;ZL,&#952;(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.</S>
original cit marker offset is 0
new cit marker offset is 0



["'112'"]
'112'
['112']
parsed_discourse_facet ['method_citation']
<S sid="35" ssid="11">Although a DCS tree is a logical form, note that it looks like a syntactic dependency tree with predicates in place of words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'"]
'11'
['11']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="6">However, we still model the logical form (now as a latent variable) to capture the complexities of language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'10'"]
'10'
['10']
parsed_discourse_facet ['method_citation']
<S sid="36" ssid="12">It is this transparency between syntax and semantics provided by DCS which leads to a simple and streamlined compositional semantics suitable for program induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
<S sid="42" ssid="18">The denotation JzKw (z evaluated on w) is the set of consistent values of the root node (see Figure 2 for an example).</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'"]
'42'
['42']
parsed_discourse_facet ['method_citation']
<S sid="106" ssid="82">Learning Given a training dataset D containing (x, y) pairs, we define the regularized marginal log-likelihood objective O(&#952;) = E(x,y)ED log p&#952;(JzKw = y  |x, z &#8712; ZL(x)) &#8722; &#955;k&#952;k22, which sums over all DCS trees z that evaluate to the target answer y.</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'"]
'106'
['106']
parsed_discourse_facet ['method_citation']
<S sid="45" ssid="21">The logical forms in DCS are called DCS trees, where nodes are labeled with predicates, and edges are labeled with relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'"]
'45'
['45']
parsed_discourse_facet ['method_citation']
<S sid="88" ssid="64">Generalized Quantification (d.ri = Q) Generalized quantifiers are predicates on two sets, a restrictor A and a nuclear scope B.</S>
original cit marker offset is 0
new cit marker offset is 0



["'88'"]
'88'
['88']
parsed_discourse_facet ['method_citation']
<S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'171'"]
'171'
['171']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P11-1060.annv3.csv
<S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'3'", "'2'"]
'0'
'3'
'2'
['0', '3', '2']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="156" ssid="41">There has been a fair amount of past work on no predicates), confusion of Washington state with this topic: Liang et al. (2010) induces combinatory Washington D.C., learning the wrong lexical asso- logic programs in a non-linguistic setting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'3'", "'156'"]
'2'
'3'
'156'
['2', '3', '156']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="169" ssid="54">The combination rules are encoded in the tems, despite using no annotated logical forms.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'22'", "'6'"]
'169'
'22'
'6'
['169', '22', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="45" ssid="21">The logical forms in DCS are called DCS trees, where nodes are labeled with predicates, and edges are labeled with relations.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'", "'54'", "'21'"]
'45'
'54'
'21'
['45', '54', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'167'", "'54'", "'21'"]
'167'
'54'
'21'
['167', '54', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'0'", "'3'"]
'149'
'0'
'3'
['149', '0', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="163" ssid="48">Feedback from the context; for example, the lexical entry for borders world has been used to guide both syntactic parsing is S\NP/NP : Ay.Ax.border(x, y), which means (Schuler, 2003) and semantic parsing (Popescu et borders looks right for the first argument and left al., 2003; Clarke et al., 2010).</S><S sid="52" ssid="28">The denotation of the middle node is {s}, where s is all major cities.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'163'", "'52'"]
'3'
'163'
'52'
['3', '163', '52']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="169" ssid="54">The combination rules are encoded in the tems, despite using no annotated logical forms.</S><S sid="117" ssid="2">In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'117'", "'6'"]
'169'
'117'
'6'
['169', '117', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="117" ssid="2">In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="35" ssid="11">Although a DCS tree is a logical form, note that it looks like a syntactic dependency tree with predicates in place of words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'117'", "'22'", "'35'"]
'117'
'22'
'35'
['117', '22', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S><S sid="132" ssid="17">Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'6'", "'132'"]
'2'
'6'
'132'
['2', '6', '132']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'0'", "'171'"]
'21'
'0'
'171'
['21', '0', '171']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S><S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'21'", "'149'"]
'0'
'21'
'149'
['0', '21', '149']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'54'", "'167'"]
'149'
'54'
'167'
['149', '54', '167']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="85" ssid="61">Extraction allows us to return the set of consistent values of a marked non-root node.</S><S sid="42" ssid="18">The denotation JzKw (z evaluated on w) is the set of consistent values of the root node (see Figure 2 for an example).</S><S sid="38" ssid="14">Let us start by considering a DCS tree z with only join relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'42'", "'38'"]
'85'
'42'
'38'
['85', '42', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S><S sid="1" ssid="1">Compositional question answering begins by mapping questions to logical forms, but training a semantic parser to perform this mapping typically requires the costly annotation of the target logical forms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'171'", "'1'"]
'3'
'171'
'1'
['3', '171', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'167'", "'54'"]
'149'
'167'
'54'
['149', '167', '54']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="172" ssid="57">Free from the burden It also allows us to easily add new lexical triggers of annotating logical forms, we hope to use our without becoming mired in the semantic formalism. techniques in developing even more accurate and Quantifiers and superlatives significantly compli- broader-coverage language understanding systems. cate scoping in lambda calculus, and often type rais- Acknowledgments We thank Luke Zettlemoyer ing needs to be employed.</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="161" ssid="46">CCG (Steedman, 2000), in which semantic pars- The integration of natural language with denotaing is driven from the lexicon.</S>
original cit marker offset is 0
new cit marker offset is 0



["'172'", "'0'", "'161'"]
'172'
'0'
'161'
['172', '0', '161']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S>
original cit marker offset is 0
new cit marker offset is 0



["'22'", "'6'", "'0'"]
'22'
'6'
'0'
['22', '6', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="48" ssid="24">In addition, trees enable efficient computation, thereby establishing a new connection between dependency syntax and efficient semantic evaluation.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'22'", "'171'"]
'48'
'22'
'171'
['48', '22', '171']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2



P11-1060
P13-1092
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



P11-1060
P14-1008
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



P11-1060
P12-1051
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file P08-1102_sweta.csv
submit_file input/res/Task1/P08-1102.annv3.csv
parsing: input/ref/Task1/P08-1102_sweta.csv
<S sid="21" ssid="17">Experiments show that our cascaded model can utilize different knowledge sources effectively and obtain accuracy improvements on both segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



["21'"]
21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="28" ssid="24">A subsequence of boundary-POS labelling result indicates a word with POS t only if the boundary tag sequence composed of its boundary part conforms to s or bm*e style, and all POS tags in its POS part equal to t. For example, a tag sequence b NN m NN e NN represents a threecharacter word with POS tag NN.</S>
original cit marker offset is 0
new cit marker offset is 0



["28'"]
28'
['28']
parsed_discourse_facet ['method_citation']
<S sid="43" ssid="15">Note that the templates of Ng and Low (2004) have already contained some lexical-target ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["43'"]
43'
['43']
parsed_discourse_facet ['method_citation']
<S sid="92" ssid="3">The second was conducted on the Penn Chinese Treebank 5.0 (CTB5.0) to test the performance of the cascaded model on segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



["92'"]
92'
['92']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&amp;T).</S>
original cit marker offset is 0
new cit marker offset is 0



["9'"]
9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="5">In following subsections, we describe the feature templates and the perceptron training algorithm.</S>
    <S sid="34" ssid="6">The feature templates we adopted are selected from those of Ng and Low (2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["33'", "'34'"]
33'
'34'
['33', '34']
parsed_discourse_facet ['method_citation']
<S sid="12" ssid="8">Besides the usual character-based features, additional features dependent on POS&#8217;s or words can also be employed to improve the performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["12'"]
12'
['12']
parsed_discourse_facet ['method_citation']
<S sid="64" ssid="15">In our experiments we trained a 3-gram word language model measuring the fluency of the segmentation result, a 4-gram POS language model functioning as the product of statetransition probabilities in HMM, and a word-POS co-occurrence model describing how much probably a word sequence coexists with a POS sequence.</S>
original cit marker offset is 0
new cit marker offset is 0



["64'"]
64'
['64']
parsed_discourse_facet ['method_citation']
<S sid="79" ssid="4">By maintaining a stack of size N at each position i of the sequence, we can preserve the top N best candidate labelled results of subsequence C1:i during decoding.</S>
original cit marker offset is 0
new cit marker offset is 0



["79'"]
79'
['79']
parsed_discourse_facet ['method_citation']
<S sid="96" ssid="7">In order to test the performance of the lexical-target templates and meanwhile determine the best iterations over the training corpus, we randomly chosen 2, 000 shorter sentences (less than 50 words) as the development set and the rest as the training set (84, 294 sentences), then trained a perceptron model named NON-LEX using only nonlexical-target features and another named LEX using both the two kinds of features.</S>
original cit marker offset is 0
new cit marker offset is 0



["96'"]
96'
['96']
parsed_discourse_facet ['method_citation']
<S sid="91" ssid="2">The first was conducted to test the performance of the perceptron on segmentation on the corpus from SIGHAN Bakeoff 2, including the Academia Sinica Corpus (AS), the Hong Kong City University Corpus (CityU), the Peking University Corpus (PKU) and the Microsoft Research Corpus (MSR).</S>
original cit marker offset is 0
new cit marker offset is 0



["91'"]
91'
['91']
parsed_discourse_facet ['method_citation']
 <S sid="16" ssid="12">Shown in Figure 1, the cascaded model has a two-layer architecture, with a characterbased perceptron as the core combined with other real-valued features such as language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["16'"]
16'
['16']
parsed_discourse_facet ['method_citation']
<S sid="35" ssid="7">To compare with others conveniently, we excluded the ones forbidden by the close test regulation of SIGHAN, for example, Pu(C0), indicating whether character C0 is a punctuation.</S>
original cit marker offset is 0
new cit marker offset is 0



["35'"]
35'
['35']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["91'"]
91'
['91']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P08-1102.annv3.csv
<S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="22" ssid="18">2 Segmentation and POS Tagging Given a Chinese character sequence: while the segmentation and POS tagging result can be depicted as: Here, Ci (i = L.n) denotes Chinese character, ti (i = L.m) denotes POS tag, and Cl:r (l < r) denotes character sequence ranges from Cl to Cr.</S><S sid="79" ssid="4">By maintaining a stack of size N at each position i of the sequence, we can preserve the top N best candidate labelled results of subsequence C1:i during decoding.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'22'", "'79'"]
'9'
'22'
'79'
['9', '22', '79']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="25" ssid="21">According to Ng and Low (2004), the segmentation task can be transformed to a tagging problem by assigning each character a boundary tag of the following four types: We can extract segmentation result by splitting the labelled result into subsequences of pattern s or bm*e which denote single-character word and multicharacter word respectively.</S><S sid="28" ssid="24">A subsequence of boundary-POS labelling result indicates a word with POS t only if the boundary tag sequence composed of its boundary part conforms to s or bm*e style, and all POS tags in its POS part equal to t. For example, a tag sequence b NN m NN e NN represents a threecharacter word with POS tag NN.</S><S sid="10" ssid="6">Since the typical approach of discriminative models treats segmentation as a labelling problem by assigning each character a boundary tag (Xue and Shen, 2003), Joint S&T can be conducted in a labelling fashion by expanding boundary tags to include POS information (Ng and Low, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'25'", "'28'", "'10'"]
'25'
'28'
'10'
['25', '28', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S><S sid="42" ssid="14">As predications generated from such templates depend on the current character, we name these templates lexical-target.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'1'", "'42'"]
'0'
'1'
'42'
['0', '1', '42']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="25" ssid="21">According to Ng and Low (2004), the segmentation task can be transformed to a tagging problem by assigning each character a boundary tag of the following four types: We can extract segmentation result by splitting the labelled result into subsequences of pattern s or bm*e which denote single-character word and multicharacter word respectively.</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'25'", "'1'"]
'0'
'25'
'1'
['0', '25', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'2'", "'24'"]
'9'
'2'
'24'
['9', '2', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="130" ssid="1">We proposed a cascaded linear model for Chinese Joint S&T.</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'130'", "'1'"]
'0'
'130'
'1'
['0', '130', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S><S sid="67" ssid="18">Language model (LM) provides linguistic probabilities of a word sequence.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'1'", "'67'"]
'0'
'1'
'67'
['0', '1', '67']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="56" ssid="7">To alleviate the drawbacks, we propose a cascaded linear model.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="85" ssid="10">Lines 3 — 11 generate a N-best list for each character position i.</S>
original cit marker offset is 0
new cit marker offset is 0



["'56'", "'0'", "'85'"]
'56'
'0'
'85'
['56', '0', '85']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="5" ssid="1">Word segmentation and part-of-speech (POS) tagging are important tasks in computer processing of Chinese and other Asian languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'9'", "'5'"]
'24'
'9'
'5'
['24', '9', '5']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="23" ssid="19">We can see that segmentation and POS tagging task is to divide a character sequence into several subsequences and label each of them a POS tag.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'9'", "'23'"]
'0'
'9'
'23'
['0', '9', '23']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="19" ssid="15">In addition, as these knowledge sources are regarded as separate features, we can train their corresponding models independently with each other.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="8" ssid="4">Another widely used discriminative method is the perceptron algorithm (Collins, 2002), which achieves comparable performance to CRFs with much faster training, so we base this work on the perceptron.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'", "'0'", "'8'"]
'19'
'0'
'8'
['19', '0', '8']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="42" ssid="14">As predications generated from such templates depend on the current character, we name these templates lexical-target.</S><S sid="41" ssid="13">We add a field C0 to each template in the upper column, so that it can carry out predication according to not only the context but also the current character itself.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'41'", "'0'"]
'42'
'41'
'0'
['42', '41', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="62" ssid="13">Suppose we have n features gj (j = 1..n) coupled with n corresponding weights wj (j = 1..n), each feature gj gives a score gj(r) to a candidate r, then the total score of r is given by: The decoding procedure aims to find the candidate r* with the highest score: While the mission of the training procedure is to tune the weights wj(j = 1..n) to guarantee that the candidate r with the highest score happens to be the best result with a high probability.</S><S sid="16" ssid="12">Shown in Figure 1, the cascaded model has a two-layer architecture, with a characterbased perceptron as the core combined with other real-valued features such as language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'62'", "'16'"]
'2'
'62'
'16'
['2', '62', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="58" ssid="9">Instead of incorporating all features into the perceptron directly, we first trained the perceptron using character-based features, and several other sub-models using additional ones such as word or POS n-grams, then trained the outside-layer linear model using the outputs of these sub-models, including the perceptron.</S><S sid="16" ssid="12">Shown in Figure 1, the cascaded model has a two-layer architecture, with a characterbased perceptron as the core combined with other real-valued features such as language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'58'", "'16'"]
'2'
'58'
'16'
['2', '58', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="31" ssid="3">The perceptron has been used in many NLP tasks, such as POS tagging (Collins, 2002), Chinese word segmentation (Ng and Low, 2004; Zhang and Clark, 2007) and so on.</S><S sid="10" ssid="6">Since the typical approach of discriminative models treats segmentation as a labelling problem by assigning each character a boundary tag (Xue and Shen, 2003), Joint S&T can be conducted in a labelling fashion by expanding boundary tags to include POS information (Ng and Low, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'31'", "'10'"]
'0'
'31'
'10'
['0', '31', '10']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'9'", "'2'"]
'24'
'9'
'2'
['24', '9', '2']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file D09-1092_sweta.csv
submit_file input/res/Task1/D09-1092.annv3.csv
parsing: input/ref/Task1/D09-1092_sweta.csv
 <S sid="32" ssid="8">Outside of the field of topic modeling, Kawaba et al. (Kawaba et al., 2008) use a Wikipedia-based model to perform sentiment analysis of blog posts.</S>
original cit marker offset is 0
new cit marker offset is 0



["32'"]
32'
['32']
parsed_discourse_facet ['method_citation']
<S sid="39" ssid="5">Additionally, PLTM assumes that each &#8220;topic&#8221; consists of a set of discrete distributions over words&#8212;one for each language l = 1, ... , L. In other words, rather than using a single set of topics &#934; = {&#966;1, ... , &#966;T}, as in LDA, there are L sets of language-specific topics, &#934;1, ... , &#934;L, each of which is drawn from a language-specific symmetric Dirichlet with concentration parameter &#946;l.</S>
original cit marker offset is 0
new cit marker offset is 0



["39'"]
39'
['39']
parsed_discourse_facet ['method_citation']
<S sid="138" ssid="87">We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.</S>
original cit marker offset is 0
new cit marker offset is 0



["138'"]
138'
['138']
parsed_discourse_facet ['method_citation']
 <S sid="196" ssid="5">When applied to comparable document collections such as Wikipedia, PLTM supports data-driven analysis of differences and similarities across all languages for readers who understand any one language.</S>
original cit marker offset is 0
new cit marker offset is 0



["196'"]
196'
['196']
parsed_discourse_facet ['method_citation']
<S sid="111" ssid="60">In order to simulate this scenario we create a set of variations of the EuroParl corpus by treating some documents as if they have no parallel/comparable texts &#8211; i.e., we put each of these documents in a single-document tuple.</S>
original cit marker offset is 0
new cit marker offset is 0



["111'"]
111'
['111']
parsed_discourse_facet ['method_citation']
<S sid="128" ssid="77">Although the PLTM is clearly not a substitute for a machine translation system&#8212;it has no way to represent syntax or even multi-word phrases&#8212;it is clear from the examples in figure 2 that the sets of high probability words in different languages for a given topic are likely to include translations.</S>
original cit marker offset is 0
new cit marker offset is 0



["128'"]
128'
['128']
parsed_discourse_facet ['method_citation']
<S sid="122" ssid="71">Divergence drops significantly when the proportion of &#8220;glue&#8221; tuples increases from 0.01 to 0.25.</S>
original cit marker offset is 0
new cit marker offset is 0



["122'"]
122'
['122']
parsed_discourse_facet ['method_citation']
 <S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["35'"]
35'
['35']
parsed_discourse_facet ['method_citation']
 <S sid="110" ssid="59">Continuing with the example above, one might extract a set of connected Wikipedia articles related to the focus of the journal and then train PLTM on a joint corpus consisting of journal papers and Wikipedia articles.</S>
original cit marker offset is 0
new cit marker offset is 0



["110'"]
110'
['110']
parsed_discourse_facet ['method_citation']
<S sid="30" ssid="6">However, they evaluate their model on only two languages (English and Chinese), and do not use the model to detect differences between languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["30'"]
30'
['30']
parsed_discourse_facet ['method_citation']
    <S sid="146" ssid="95">In addition to enhancing lexicons by aligning topic-specific vocabulary, PLTM may also be useful for adapting machine translation systems to new domains by finding translations or near translations in an unstructured corpus.</S>
original cit marker offset is 0
new cit marker offset is 0



["146'"]
146'
['146']
parsed_discourse_facet ['method_citation']
<S sid="77" ssid="26">Maximum topic probability in document Although the posterior distribution over topics for each tuple is not concentrated on one topic, it is worth checking that this is not simply because the model is assigning a single topic to the 1We use the R density function. tokens in each of the languages.</
original cit marker offset is 0
new cit marker offset is 0



["77'"]
77'
['77']
parsed_discourse_facet ['method_citation']
 <S sid="156" ssid="105">We use both Jensen-Shannon divergence and cosine distance.</S>
original cit marker offset is 0
new cit marker offset is 0



["156'"]
156'
['156']
parsed_discourse_facet ['method_citation']
<S sid="31" ssid="7">They also provide little analysis of the differences between polylingual and single-language topic models.</S>
original cit marker offset is 0
new cit marker offset is 0



["31'"]
31'
['31']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="15">We employ a set of direct translations, the EuroParl corpus, to evaluate whether PLTM can accurately infer topics when documents genuinely contain the same content.</S>
original cit marker offset is 0
new cit marker offset is 0



["19'"]
19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="131" ssid="80">We evaluate sets of high-probability words in each topic and multilingual &#8220;synsets&#8221; by comparing them to entries in human-constructed bilingual dictionaries, as done by Haghighi et al. (2008).</S>
original cit marker offset is 0
new cit marker offset is 0



["131'"]
131'
['131']
parsed_discourse_facet ['method_citation']
<S sid="196" ssid="5">When applied to comparable document collections such as Wikipedia, PLTM supports data-driven analysis of differences and similarities across all languages for readers who understand any one language.</S>
original cit marker offset is 0
new cit marker offset is 0



["196'"]
196'
['196']
parsed_discourse_facet ['method_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["192'"]
192'
['192']
parsed_discourse_facet ['method_citation']
<S sid="195" ssid="4">Additionally, PLTM can support the creation of bilingual lexica for low resource language pairs, providing candidate translations for more computationally intense alignment processes without the sentence-aligned translations typically used in such tasks.</S>
original cit marker offset is 0
new cit marker offset is 0



["195'"]
195'
['195']
parsed_discourse_facet ['method_citation']
<S sid="6" ssid="2">Topic models have been used for analyzing topic trends in research literature (Mann et al., 2006; Hall et al., 2008), inferring captions for images (Blei and Jordan, 2003), social network analysis in email (McCallum et al., 2005), and expanding queries with topically related words in information retrieval (Wei and Croft, 2006).</S>
original cit marker offset is 0
new cit marker offset is 0



["6'"]
6'
['6']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/D09-1092.annv3.csv
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="3" ssid="3">We introduce a polylingual topic model that discovers topics aligned across multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'36'", "'3'"]
'192'
'36'
'3'
['192', '36', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'36'"]
'192'
'35'
'36'
['192', '35', '36']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="137" ssid="86">For every topic t we select a small number K of the most probable words in English (e) and in each “translation” language (E): Wte and Wtt, respectively.</S><S sid="134" ssid="83">Each lexicon is a set of pairs consisting of an English word and a translated word, 1we, wt}.</S><S sid="138" ssid="87">We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'", "'134'", "'138'"]
'137'
'134'
'138'
['137', '134', '138']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="0" ssid="0">Polylingual Topic Models</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'0'", "'36'"]
'192'
'0'
'36'
['192', '0', '36']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'148'", "'192'", "'36'"]
'148'
'192'
'36'
['148', '192', '36']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="19" ssid="15">We employ a set of direct translations, the EuroParl corpus, to evaluate whether PLTM can accurately infer topics when documents genuinely contain the same content.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'19'"]
'192'
'35'
'19'
['192', '35', '19']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="182" ssid="16">As with EuroParl, we can calculate the JensenShannon divergence between pairs of documents within a comparable document tuple.</S><S sid="156" ssid="105">We use both Jensen-Shannon divergence and cosine distance.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'182'", "'156'", "'148'"]
'182'
'156'
'148'
['182', '156', '148']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'192'", "'35'"]
'36'
'192'
'35'
['36', '192', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="9" ssid="5">In this paper, we present the polylingual topic model (PLTM).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'9'"]
'192'
'35'
'9'
['192', '35', '9']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="28" ssid="4">We take a simpler approach that is more suitable for topically similar document tuples (where documents are not direct translations of one another) in more than two languages.</S><S sid="30" ssid="6">However, they evaluate their model on only two languages (English and Chinese), and do not use the model to detect differences between languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'28'", "'30'"]
'192'
'28'
'30'
['192', '28', '30']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="28" ssid="4">We take a simpler approach that is more suitable for topically similar document tuples (where documents are not direct translations of one another) in more than two languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'28'", "'148'"]
'192'
'28'
'148'
['192', '28', '148']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="54" ssid="3">Although direct translations in multiple languages are relatively rare (in contrast with comparable documents), we use direct translations to explore the characteristics of the model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'54'"]
'192'
'35'
'54'
['192', '35', '54']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="156" ssid="105">We use both Jensen-Shannon divergence and cosine distance.</S><S sid="182" ssid="16">As with EuroParl, we can calculate the JensenShannon divergence between pairs of documents within a comparable document tuple.</S><S sid="118" ssid="67">We calculate the Jensen-Shannon divergence between the topic distributions for each pair of individual documents in S that were originally part of the same tuple prior to separation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'156'", "'182'", "'118'"]
'156'
'182'
'118'
['156', '182', '118']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="110" ssid="59">Continuing with the example above, one might extract a set of connected Wikipedia articles related to the focus of the journal and then train PLTM on a joint corpus consisting of journal papers and Wikipedia articles.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'110'"]
'192'
'148'
'110'
['192', '148', '110']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="6" ssid="2">Topic models have been used for analyzing topic trends in research literature (Mann et al., 2006; Hall et al., 2008), inferring captions for images (Blei and Jordan, 2003), social network analysis in email (McCallum et al., 2005), and expanding queries with topically related words in information retrieval (Wei and Croft, 2006).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'6'"]
'192'
'35'
'6'
['192', '35', '6']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'35'", "'192'", "'36'"]
'35'
'192'
'36'
['35', '192', '36']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="10" ssid="6">We demonstrate its utility and explore its characteristics using two polylingual corpora: proceedings of the European parliament (in eleven languages) and a collection of Wikipedia articles (in twelve languages).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'10'"]
'192'
'148'
'10'
['192', '148', '10']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="105" ssid="54">An important application for polylingual topic modeling is to use small numbers of comparable document tuples to link topics in larger collections of distinct, non-comparable documents in multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'192'", "'105'"]
'36'
'192'
'105'
['36', '192', '105']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'35'"]
'192'
'148'
'35'
['192', '148', '35']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']



D09-1092
P11-2084
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



D09-1092
W11-2133
0
method_citation
['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
gold file D09-1092_swastika.csv
submit_file input/res/Task1/D09-1092.annv3.csv
parsing: input/ref/Task1/D09-1092_swastika.csv
<S sid="193" ssid="2">We analyzed the characteristics of PLTM in comparison to monolingual LDA, and demonstrated that it is possible to discover aligned topics.</S>
original cit marker offset is 0
new cit marker offset is 0



['193']
193
['193']
parsed_discourse_facet ['result_citation']
<S sid="114" ssid="63">Ideally, the &#8220;glue&#8221; documents in g will be sufficient to align the topics across languages, and will cause comparable documents in S to have similar distributions over topics even though they are modeled independently.</S>
original cit marker offset is 0
new cit marker offset is 0



['114']
114
['114']
parsed_discourse_facet ['aim_citation']
<S sid="138" ssid="87">We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.</S>
original cit marker offset is 0
new cit marker offset is 0



['138']
138
['138']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="14">In this paper, we use two polylingual corpora to answer various critical questions related to polylingual topic models.</S>
original cit marker offset is 0
new cit marker offset is 0



['18']
18
['18']
parsed_discourse_facet ['method_citation']
<S sid="55" ssid="4">The EuroParl corpus consists of parallel texts in eleven western European languages: Danish, German, Greek, English, Spanish, Finnish, French, Italian, Dutch, Portuguese and Swedish.</S>
original cit marker offset is 0
new cit marker offset is 0



['55']
55
['55']
parsed_discourse_facet ['method_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



['192']
192
['192']
parsed_discourse_facet ['result_citation']
<S sid="119" ssid="68">The lower the divergence, the more similar the distributions are to each other.</S>
original cit marker offset is 0
new cit marker offset is 0



['119']
119
['119']
parsed_discourse_facet ['result_citation']
<S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S>
original cit marker offset is 0
new cit marker offset is 0



['148']
148
['148']
parsed_discourse_facet ['method_citation']
<S sid="193" ssid="2">We analyzed the characteristics of PLTM in comparison to monolingual LDA, and demonstrated that it is possible to discover aligned topics.</S>
original cit marker offset is 0
new cit marker offset is 0



['193']
193
['193']
parsed_discourse_facet ['result_citation']
<S sid="184" ssid="18">Interestingly, we find that almost all languages in our corpus, including several pairs that have historically been in conflict, show average JS divergences of between approximately 0.08 and 0.12 for T = 400, consistent with our findings for EuroParl translations.</S>
original cit marker offset is 0
new cit marker offset is 0



['184']
184
['184']
parsed_discourse_facet ['result_citation']
<S sid="193" ssid="2">We analyzed the characteristics of PLTM in comparison to monolingual LDA, and demonstrated that it is possible to discover aligned topics.</S>
original cit marker offset is 0
new cit marker offset is 0



['193']
193
['193']
parsed_discourse_facet ['result_citation']
<S sid="163" ssid="112">Performance continues to improve with longer documents, most likely due to better topic inference.</S>
original cit marker offset is 0
new cit marker offset is 0



['163']
163
['163']
parsed_discourse_facet ['result_citation']
<S sid="184" ssid="18">Interestingly, we find that almost all languages in our corpus, including several pairs that have historically been in conflict, show average JS divergences of between approximately 0.08 and 0.12 for T = 400, consistent with our findings for EuroParl translations.</S>
original cit marker offset is 0
new cit marker offset is 0



['184']
184
['184']
parsed_discourse_facet ['result_citation']
<S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S>
original cit marker offset is 0
new cit marker offset is 0



['148']
148
['148']
parsed_discourse_facet ['method_citation']
<S sid="184" ssid="18">Interestingly, we find that almost all languages in our corpus, including several pairs that have historically been in conflict, show average JS divergences of between approximately 0.08 and 0.12 for T = 400, consistent with our findings for EuroParl translations.</S>
original cit marker offset is 0
new cit marker offset is 0



['184']
184
['184']
parsed_discourse_facet ['result_citation']
<S sid="193" ssid="2">We analyzed the characteristics of PLTM in comparison to monolingual LDA, and demonstrated that it is possible to discover aligned topics.</S>
original cit marker offset is 0
new cit marker offset is 0



['193']
193
['193']
parsed_discourse_facet ['result_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



['192']
192
['192']
parsed_discourse_facet ['result_citation']
<S sid="105" ssid="54">An important application for polylingual topic modeling is to use small numbers of comparable document tuples to link topics in larger collections of distinct, non-comparable documents in multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



['105']
105
['105']
parsed_discourse_facet ['method_citation']
    <S sid="10" ssid="6">We demonstrate its utility and explore its characteristics using two polylingual corpora: proceedings of the European parliament (in eleven languages) and a collection of Wikipedia articles (in twelve languages).</S>
original cit marker offset is 0
new cit marker offset is 0



['10']
10
['10']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/D09-1092.annv3.csv
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="3" ssid="3">We introduce a polylingual topic model that discovers topics aligned across multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'36'", "'3'"]
'192'
'36'
'3'
['192', '36', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'36'"]
'192'
'35'
'36'
['192', '35', '36']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="137" ssid="86">For every topic t we select a small number K of the most probable words in English (e) and in each “translation” language (E): Wte and Wtt, respectively.</S><S sid="134" ssid="83">Each lexicon is a set of pairs consisting of an English word and a translated word, 1we, wt}.</S><S sid="138" ssid="87">We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'", "'134'", "'138'"]
'137'
'134'
'138'
['137', '134', '138']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="0" ssid="0">Polylingual Topic Models</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'0'", "'36'"]
'192'
'0'
'36'
['192', '0', '36']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'148'", "'192'", "'36'"]
'148'
'192'
'36'
['148', '192', '36']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="19" ssid="15">We employ a set of direct translations, the EuroParl corpus, to evaluate whether PLTM can accurately infer topics when documents genuinely contain the same content.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'19'"]
'192'
'35'
'19'
['192', '35', '19']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="182" ssid="16">As with EuroParl, we can calculate the JensenShannon divergence between pairs of documents within a comparable document tuple.</S><S sid="156" ssid="105">We use both Jensen-Shannon divergence and cosine distance.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'182'", "'156'", "'148'"]
'182'
'156'
'148'
['182', '156', '148']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'192'", "'35'"]
'36'
'192'
'35'
['36', '192', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="9" ssid="5">In this paper, we present the polylingual topic model (PLTM).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'9'"]
'192'
'35'
'9'
['192', '35', '9']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="28" ssid="4">We take a simpler approach that is more suitable for topically similar document tuples (where documents are not direct translations of one another) in more than two languages.</S><S sid="30" ssid="6">However, they evaluate their model on only two languages (English and Chinese), and do not use the model to detect differences between languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'28'", "'30'"]
'192'
'28'
'30'
['192', '28', '30']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="28" ssid="4">We take a simpler approach that is more suitable for topically similar document tuples (where documents are not direct translations of one another) in more than two languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'28'", "'148'"]
'192'
'28'
'148'
['192', '28', '148']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="54" ssid="3">Although direct translations in multiple languages are relatively rare (in contrast with comparable documents), we use direct translations to explore the characteristics of the model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'54'"]
'192'
'35'
'54'
['192', '35', '54']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="156" ssid="105">We use both Jensen-Shannon divergence and cosine distance.</S><S sid="182" ssid="16">As with EuroParl, we can calculate the JensenShannon divergence between pairs of documents within a comparable document tuple.</S><S sid="118" ssid="67">We calculate the Jensen-Shannon divergence between the topic distributions for each pair of individual documents in S that were originally part of the same tuple prior to separation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'156'", "'182'", "'118'"]
'156'
'182'
'118'
['156', '182', '118']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="110" ssid="59">Continuing with the example above, one might extract a set of connected Wikipedia articles related to the focus of the journal and then train PLTM on a joint corpus consisting of journal papers and Wikipedia articles.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'110'"]
'192'
'148'
'110'
['192', '148', '110']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="6" ssid="2">Topic models have been used for analyzing topic trends in research literature (Mann et al., 2006; Hall et al., 2008), inferring captions for images (Blei and Jordan, 2003), social network analysis in email (McCallum et al., 2005), and expanding queries with topically related words in information retrieval (Wei and Croft, 2006).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'6'"]
'192'
'35'
'6'
['192', '35', '6']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'35'", "'192'", "'36'"]
'35'
'192'
'36'
['35', '192', '36']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="10" ssid="6">We demonstrate its utility and explore its characteristics using two polylingual corpora: proceedings of the European parliament (in eleven languages) and a collection of Wikipedia articles (in twelve languages).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'10'"]
'192'
'148'
'10'
['192', '148', '10']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="105" ssid="54">An important application for polylingual topic modeling is to use small numbers of comparable document tuples to link topics in larger collections of distinct, non-comparable documents in multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'192'", "'105'"]
'36'
'192'
'105'
['36', '192', '105']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'35'"]
'192'
'148'
'35'
['192', '148', '35']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']



D09-1092
P11-2084
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



D09-1092
D10-1025
0
method_citation
['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']



D09-1092
W11-2133
0
result_citation
['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
gold file J01-2004_sweta.csv
submit_file input/res/Task1/J01-2004.annv3.csv
parsing: input/ref/Task1/J01-2004_sweta.csv
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S>
original cit marker offset is 0
new cit marker offset is 0



["372'"]
372'
['372']
parsed_discourse_facet ['method_citation']
<S sid="40" ssid="28">The following section will provide some background in probabilistic context-free grammars and language modeling for speech recognition.</S>
    <S sid="41" ssid="29">There will also be a brief review of previous work using syntactic information for language modeling, before we introduce our model in Section 4.</S>
    <S sid="42" ssid="30">Three parse trees: (a) a complete parse tree; (b) a complete parse tree with an explicit stop symbol; and (c) a partial parse tree.</S>
original cit marker offset is 0
new cit marker offset is 0



["40'", "'41'", "'42'"]
40'
'41'
'42'
['40', '41', '42']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="13">A parser that is not left to right, but which has rooted derivations, e.g., a headfirst parser, will be able to calculate generative joint probabilities for entire strings; however, it will not be able to calculate probabilities for each word conditioned on previously generated words, unless each derivation generates the words in the string in exactly the same order.</S>
original cit marker offset is 0
new cit marker offset is 0



["25'"]
25'
['25']
parsed_discourse_facet ['method_citation']
<S sid="364" ssid="120">We follow Chelba (2000) in dealing with this problem: for parsing purposes, we use the Penn Treebank tokenization; for interpolation with the provided trigram model, and for evaluation, the lattice tokenization is used.</S>
original cit marker offset is 0
new cit marker offset is 0



["364'"]
364'
['364']
parsed_discourse_facet ['method_citation']
<S sid="302" ssid="58">In the beam search approach outlined above, we can estimate the string's probability in the same manner, by summing the probabilities of the parses that the algorithm finds.</S>
original cit marker offset is 0
new cit marker offset is 0



["302'"]
302'
['302']
parsed_discourse_facet ['method_citation']
 <S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



["31'"]
31'
['31']
parsed_discourse_facet ['method_citation']
<S sid="231" ssid="135">Since we do not know the POS for the word, we must sum the LAP for all POS For a PCFG G, a stack S = Ao An$ (which we will write AN and a look-ahead terminal item wi, we define the look-ahead probability as follows: We recursively estimate this with two empirically observed conditional probabilities for every nonterminal A,: 13(A, w,a) and P(A, c).</S>
original cit marker offset is 0
new cit marker offset is 0



["231'"]
231'
['231']
parsed_discourse_facet ['method_citation']
<S sid="297" ssid="53">The differences between a k-best and a beam-search parser (not to mention the use of dynamic programming) make a running time difference unsurprising.</S>
original cit marker offset is 0
new cit marker offset is 0



["297'"]
297'
['297']
parsed_discourse_facet ['method_citation']
<S sid="133" ssid="37">Statistically based heuristic best-first or beam-search strategies (Caraballo and Charniak 1998; Charniak, Goldwater, and Johnson 1998; Goodman 1997) have yielded an enormous improvement in the quality and speed of parsers, even without any guarantee that the parse returned is, in fact, that with the maximum likelihood for the probability model.</S>
original cit marker offset is 0
new cit marker offset is 0



["133'"]
133'
['133']
parsed_discourse_facet ['method_citation']
<S sid="291" ssid="47">Also, the parser returns a set of candidate parses, from which we have been choosing the top ranked; if we use an oracle to choose the parse with the highest accuracy from among the candidates (which averaged 70.0 in number per sentence), we find an average labeled precision/recall of 94.1, for sentences of length &lt; 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["291'"]
291'
['291']
parsed_discourse_facet ['method_citation']
<S sid="355" ssid="111">In order to get a sense of whether these perplexity reduction results can translate to improvement in a speech recognition task, we performed a very small preliminary experiment on n-best lists.</S>
original cit marker offset is 0
new cit marker offset is 0



["355'"]
355'
['355']
parsed_discourse_facet ['method_citation']
<S sid="59" ssid="17">A PCFG is a CFG with a probability assigned to each rule; specifically, each righthand side has a probability given the left-hand side of the rule.</S>
original cit marker offset is 0
new cit marker offset is 0



["59'"]
59'
['59']
parsed_discourse_facet ['method_citation']
<S sid="100" ssid="4">The approach that we will subsequently present uses the probabilistic grammar as its language model, but only includes probability mass from those parses that are found, that is, it uses the parser to find a subset of the total set of parses (hopefully most of the high-probability parses) and uses the sum of their probabilities as an estimate of the true probability given the grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["100'"]
100'
['100']
parsed_discourse_facet ['method_citation']
<S sid="108" ssid="12">Another approach that uses syntactic structure for language modeling has been to use a shift-reduce parser to &amp;quot;surface&amp;quot; c-commanding phrasal headwords or part-of-speech (POS) tags from arbitrarily far back in the prefix string, for use in a trigram-like model.</S>
original cit marker offset is 0
new cit marker offset is 0



["108'"]
108'
['108']
parsed_discourse_facet ['method_citation']
<S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



["31'"]
31'
['31']
parsed_discourse_facet ['method_citation']
<S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



["31'"]
31'
['31']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/J01-2004.annv3.csv
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S><S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'372'", "'0'"]
'388'
'372'
'0'
['388', '372', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="15" ssid="3">In the past few years, however, some improvements have been made over these language models through the use of statistical methods of natural language processing, and the development of innovative, linguistically well-motivated techniques for improving language models for speech recognition is generating more interest among computational linguists.</S><S sid="17" ssid="5">This paper will examine language modeling for speech recognition from a natural language processing point of view.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'15'", "'17'"]
'388'
'15'
'17'
['388', '15', '17']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="19" ssid="7">A new language model, based on probabilistic top-down parsing, will be outlined and compared with the previous literature, and extensive empirical results will be presented which demonstrate its utility.</S><S sid="10" ssid="4">A new language model that utilizes probabilistic top-down parsing is then outlined, and empirical results show that it improves upon previous work in test corpus perplexity.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'19'", "'10'"]
'388'
'19'
'10'
['388', '19', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="207" ssid="111">The model allows us to assign probabilities to derivations, which can be used by the parsing algorithm to decide heuristically which candidates are promising and should be expanded, and which are less promising and should be pruned.</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'207'", "'137'"]
'388'
'207'
'137'
['388', '207', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="134" ssid="38">The parsers with the highest published broad-coverage parsing accuracy, which include Charniak (1997, 2000), Collins (1997, 1999), and Ratnaparkhi (1997), all utilize simple and straightforward statistically based search heuristics, pruning the search-space quite dramatically!'</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'134'", "'137'"]
'388'
'134'
'137'
['388', '134', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="268" ssid="24">This is an incremental parser with a pruning strategy and no backtracking.</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S><S sid="223" ssid="127">We implement this as a beam search.</S>
original cit marker offset is 0
new cit marker offset is 0



["'268'", "'137'", "'223'"]
'268'
'137'
'223'
['268', '137', '223']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="231" ssid="135">Since we do not know the POS for the word, we must sum the LAP for all POS For a PCFG G, a stack S = Ao An$ (which we will write AN and a look-ahead terminal item wi, we define the look-ahead probability as follows: We recursively estimate this with two empirically observed conditional probabilities for every nonterminal A,: 13(A, w,a) and P(A, c).</S><S sid="224" ssid="128">For each word position i, we have a separate priority queue H, of analyses with look-ahead w,.</S><S sid="108" ssid="12">Another approach that uses syntactic structure for language modeling has been to use a shift-reduce parser to &quot;surface&quot; c-commanding phrasal headwords or part-of-speech (POS) tags from arbitrarily far back in the prefix string, for use in a trigram-like model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'231'", "'224'", "'108'"]
'231'
'224'
'108'
['231', '224', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="223" ssid="127">We implement this as a beam search.</S><S sid="109" ssid="13">A shift-reduce parser operates from left to right using a stack and a pointer to the next word in the input string.9 Each stack entry consists minimally of a nonterminal label.</S><S sid="138" ssid="42">Our approach is found to yield very accurate parses efficiently, and, in addition, to lend itself straightforwardly to estimating word probabilities on-line, that is, in a single pass from left to right.</S>
original cit marker offset is 0
new cit marker offset is 0



["'223'", "'109'", "'138'"]
'223'
'109'
'138'
['223', '109', '138']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="274" ssid="30">This structure is evaluated for precision and recall, which is entirely appropriate for these incomplete as well as complete parses.</S><S sid="214" ssid="118">A candidate analysis C = (D, 8, PD, F, wn consists of a derivation D, a stack S. a derivation probability PD, a figure of merit F, and a string w7 remaining to be parsed.</S><S sid="223" ssid="127">We implement this as a beam search.</S>
original cit marker offset is 0
new cit marker offset is 0



["'274'", "'214'", "'223'"]
'274'
'214'
'223'
['274', '214', '223']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="291" ssid="47">Also, the parser returns a set of candidate parses, from which we have been choosing the top ranked; if we use an oracle to choose the parse with the highest accuracy from among the candidates (which averaged 70.0 in number per sentence), we find an average labeled precision/recall of 94.1, for sentences of length < 100.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="9" ssid="3">A lexicalized probabilistic topdown parser is then presented, which performs very well, in terms of both the accuracy of returned parses and the efficiency with which they are found, relative to the best broad-coverage statistical parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'291'", "'388'", "'9'"]
'291'
'388'
'9'
['291', '388', '9']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S><S sid="355" ssid="111">In order to get a sense of whether these perplexity reduction results can translate to improvement in a speech recognition task, we performed a very small preliminary experiment on n-best lists.</S><S sid="214" ssid="118">A candidate analysis C = (D, 8, PD, F, wn consists of a derivation D, a stack S. a derivation probability PD, a figure of merit F, and a string w7 remaining to be parsed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'372'", "'355'", "'214'"]
'372'
'355'
'214'
['372', '355', '214']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S><S sid="102" ssid="6">One approach to syntactic language modeling is to use this distribution directly as a language model.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'102'", "'388'"]
'0'
'102'
'388'
['0', '102', '388']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="313" ssid="69">By utilizing a figure of merit to identify promising analyses, we are simply focusing our attention on those parses that are likely to have a high probability, and thus we are increasing the amount of probability mass that we do capture, of the total possible.</S><S sid="100" ssid="4">The approach that we will subsequently present uses the probabilistic grammar as its language model, but only includes probability mass from those parses that are found, that is, it uses the parser to find a subset of the total set of parses (hopefully most of the high-probability parses) and uses the sum of their probabilities as an estimate of the true probability given the grammar.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S>
original cit marker offset is 0
new cit marker offset is 0



["'313'", "'100'", "'388'"]
'313'
'100'
'388'
['313', '100', '388']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="263" ssid="19">Following standard practice, we will be reporting scores only for non-part-of-speech constituents, which are called labeled recall (LR) and labeled precision (LP).</S><S sid="245" ssid="1">The empirical results will be presented in three stages: (i) trials to examine the accuracy and efficiency of the parser; (ii) trials to examine its effect on test corpus perplexity and recognition performance; and (iii) trials to examine the effect of beam variation on these performance measures.</S><S sid="108" ssid="12">Another approach that uses syntactic structure for language modeling has been to use a shift-reduce parser to &quot;surface&quot; c-commanding phrasal headwords or part-of-speech (POS) tags from arbitrarily far back in the prefix string, for use in a trigram-like model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'263'", "'245'", "'108'"]
'263'
'245'
'108'
['263', '245', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="329" ssid="85">Table 3 shows several things.</S><S sid="19" ssid="7">A new language model, based on probabilistic top-down parsing, will be outlined and compared with the previous literature, and extensive empirical results will be presented which demonstrate its utility.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'329'", "'19'"]
'388'
'329'
'19'
['388', '329', '19']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="397" ssid="10">A top-down parser, in contrast to a standard bottom-up chart parser, has enough information to predict empty categories only where they are likely to occur.</S><S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S><S sid="209" ssid="113">This parser is essentially a stochastic version of the top-down parser described in Aho, Sethi, and Ullman (1986).</S>
original cit marker offset is 0
new cit marker offset is 0



["'397'", "'0'", "'209'"]
'397'
'0'
'209'
['397', '0', '209']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="269" ssid="25">In such a model, it is possible to commit to a set of partial analyses at a particular point that cannot be completed given the rest of the input string (i.e., the parser can &quot;garden path&quot;).</S><S sid="310" ssid="66">This is a subset of the possible leftmost partial derivations with respect to the prefix string W. Since RV is produced by expanding only analyses on priority queue H;', the set of complete trees consistent with the partial derivations on priority queue Ht is a subset of the set of complete trees consistent with the partial derivations on priority queue HT'', that is, the total probability mass represented by the priority queues is monotonically decreasing.</S><S sid="306" ssid="62">Recall the discussion of the grammar models above, and our definition of the set of partial derivations Dw, with respect to a prefix string wil) (see Equations 2 and 7).</S>
original cit marker offset is 0
new cit marker offset is 0



["'269'", "'310'", "'306'"]
'269'
'310'
'306'
['269', '310', '306']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



J01-2004
W05-0104
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



J01-2004
P04-1015
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



J01-2004
P05-1022
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



J01-2004
P04-1006
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



J01-2004
W10-2009
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file W11-2123_swastika.csv
submit_file input/res/Task1/W11-2123.annv3.csv
parsing: input/ref/Task1/W11-2123_swastika.csv
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['1']
1
['1']
parsed_discourse_facet ['aim_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['1']
1
['1']
parsed_discourse_facet ['aim_citation']
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['aim_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['1']
1
['1']
parsed_discourse_facet ['aim_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['1']
1
['1']
parsed_discourse_facet ['aim_citation']
<S sid="52" ssid="30">Our implementation permits jumping to any n-gram of any length with a single lookup; this appears to be unique among language model implementations.</S>
original cit marker offset is 0
new cit marker offset is 0



['52']
52
['52']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['1']
1
['1']
parsed_discourse_facet ['aim_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['1']
1
['1']
parsed_discourse_facet ['aim_citation']
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['aim_citation']
<S sid="177" ssid="49">However, TRIE partitions storage by n-gram length, so walking the trie reads N disjoint pages.</S>
original cit marker offset is 0
new cit marker offset is 0



['177']
177
['177']
parsed_discourse_facet ['method_citation']
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['aim_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['1']
1
['1']
parsed_discourse_facet ['aim_citation']
<S sid="200" ssid="19">The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.</S>
original cit marker offset is 0
new cit marker offset is 0



['200']
200
['200']
parsed_discourse_facet ['method_citation']
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['aim_citation']
<S sid="200" ssid="19">The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.</S>
original cit marker offset is 0
new cit marker offset is 0



['200']
200
['200']
parsed_discourse_facet ['method_citation']
<S sid="200" ssid="19">The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.</S>
original cit marker offset is 0
new cit marker offset is 0



['200']
200
['200']
parsed_discourse_facet ['method_citation']
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['aim_citation']
<S sid="278" ssid="5">We attain these results using several optimizations: hashing, custom lookup tables, bit-level packing, and state for left-to-right query patterns.</S>
original cit marker offset is 0
new cit marker offset is 0



['278']
278
['278']
parsed_discourse_facet ['method_citation']
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['aim_citation']
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['aim_citation']
parsing: input/res/Task1/W11-2123.annv3.csv
<S sid="97" ssid="1">SRILM (Stolcke, 2002) is widely used within academia.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'97'", "'12'", "'199'"]
'97'
'12'
'199'
['97', '12', '199']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="223" ssid="42">The binary language model from Section 5.2 and text phrase table were forced into disk cache before each run.</S><S sid="203" ssid="22">As noted in Section 4.4, disk cache state is controlled by reading the entire binary file before each test begins.</S><S sid="180" ssid="52">In all of our experiments, the binary file (whether mapped or, in the case of most other packages, interpreted) is loaded into the disk cache in advance so that lazy mapping will never fault to disk.</S>
original cit marker offset is 0
new cit marker offset is 0



["'223'", "'203'", "'180'"]
'223'
'203'
'180'
['223', '203', '180']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="159" ssid="31">Saving state allows our code to walk the data structure exactly once per query.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="10" ssid="5">The problem is to store these two values for a large and sparse set of n-grams in a way that makes queries efficient.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'1'", "'10'"]
'159'
'1'
'10'
['159', '1', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'274'", "'199'"]
'1'
'274'
'199'
['1', '274', '199']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'12'", "'1'"]
'199'
'12'
'1'
['199', '12', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="24" ssid="2">The set of n-grams appearing in a model is sparse, and we want to efficiently find their associated probabilities and backoff penalties.</S><S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'24'", "'7'"]
'199'
'24'
'7'
['199', '24', '7']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="206" ssid="25">Tokens were converted to vocabulary identifiers in advance and state was carried from each query to the next.</S><S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'206'", "'103'"]
'1'
'206'
'103'
['1', '206', '103']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'1'", "'205'"]
'199'
'1'
'205'
['199', '1', '205']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="45" ssid="23">The PROBING data structure is a rather straightforward application of these hash tables to store Ngram language models.</S><S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S><S sid="23" ssid="1">We implement two data structures: PROBING, designed for speed, and TRIE, optimized for memory.</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'", "'274'", "'23'"]
'45'
'274'
'23'
['45', '274', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="92" ssid="70">To quantize, we use the binning method (Federico and Bertoldi, 2006) that sorts values, divides into equally sized bins, and averages within each bin.</S><S sid="34" ssid="12">Therefore, a populated probing hash table consists of an array of buckets that contain either one entry or are empty.</S><S sid="35" ssid="13">Non-empty buckets contain an entry belonging to them or to a preceding bucket where a conflict occurred.</S>
original cit marker offset is 0
new cit marker offset is 0



["'92'", "'34'", "'35'"]
'92'
'34'
'35'
['92', '34', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="275" ssid="2">The PROBING model is 2.4 times as fast as the fastest alternative, SRILM, and uses less memory too.</S><S sid="97" ssid="1">SRILM (Stolcke, 2002) is widely used within academia.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S>
original cit marker offset is 0
new cit marker offset is 0



["'275'", "'97'", "'12'"]
'275'
'97'
'12'
['275', '97', '12']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="102" ssid="6">The PROBING model was designed to improve upon SRILM by using linear probing hash tables (though not arranged in a trie), allocating memory all at once (eliminating the need for full pointers), and being easy to compile.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'199'", "'102'"]
'1'
'199'
'102'
['1', '199', '102']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'1'", "'0'"]
'103'
'1'
'0'
['103', '1', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'12'", "'1'"]
'199'
'12'
'1'
['199', '12', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'103'", "'0'"]
'199'
'103'
'0'
['199', '103', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'205'", "'199'", "'1'"]
'205'
'199'
'1'
['205', '199', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="131" ssid="3">Dynamic programming efficiently scores many hypotheses by exploiting the fact that an N-gram language model conditions on at most N − 1 preceding words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'199'", "'131'"]
'103'
'199'
'131'
['103', '199', '131']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'7'", "'0'"]
'1'
'7'
'0'
['1', '7', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'205'", "'1'"]
'199'
'205'
'1'
['199', '205', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="200" ssid="19">The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'205'", "'200'"]
'199'
'205'
'200'
['199', '205', '200']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



W11-2123
W12-3131
0
aim_citation
['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']



W11-2123
W12-3154
0
aim_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W11-2123
W11-2139
0
aim_citation
['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']



W11-2123
P13-2003
0
aim_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W11-2123
W12-3160
0
aim_citation
['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
gold file P08-1043_aakansha.csv
submit_file input/res/Task1/P08-1043.annv3.csv
parsing: input/ref/Task1/P08-1043_aakansha.csv
<S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'"]
'94'
['94']
parsed_discourse_facet ['method_citation']
<S sid="4" ssid="4">Using a treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling technique our model outperforms previous pipelined, integrated or factorized systems for Hebrew morphological and syntactic processing, yielding an error reduction of 12% over the best published results so far.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'"]
'4'
['4']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'"]
'19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'"]
'19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="4" ssid="4">Using a treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling technique our model outperforms previous pipelined, integrated or factorized systems for Hebrew morphological and syntactic processing, yielding an error reduction of 12% over the best published results so far.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'"]
'4'
['4']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'"]
'19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
    <S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S>
original cit marker offset is 0
new cit marker offset is 0



["'69'", "'70'"]
'69'
'70'
['69', '70']
parsed_discourse_facet ['method_citation']
<S sid="85" ssid="17">The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'"]
'85'
['85']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'"]
'19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'"]
'19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'"]
'19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'"]
'94'
['94']
parsed_discourse_facet ['method_citation']
<S sid="133" ssid="11">Morphological Analyzer Ideally, we would use an of-the-shelf morphological analyzer for mapping each input token to its possible analyses.</S>
    <S sid="134" ssid="12">Such resources exist for Hebrew (Itai et al., 2006), but unfortunately use a tagging scheme which is incompatible with the one of the Hebrew Treebank.s For this reason, we use a data-driven morphological analyzer derived from the training 	similar to (Cohen and Smith, 2007).</S>
original cit marker offset is 0
new cit marker offset is 0



["'133'", "'134'"]
'133'
'134'
['133', '134']
parsed_discourse_facet ['method_citation']
<S sid="85" ssid="17">The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'"]
'85'
['85']
parsed_discourse_facet ['method_citation']
<S sid="155" ssid="33">Evaluation We use 8 different measures to evaluate the performance of our system on the joint disambiguation task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'155'"]
'155'
['155']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P08-1043.annv3.csv
<S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="189" ssid="3">Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'", "'69'", "'189'"]
'94'
'69'
'189'
['94', '69', '189']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="189" ssid="3">Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.</S><S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'189'", "'21'"]
'186'
'189'
'21'
['186', '189', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'70'", "'69'"]
'79'
'70'
'69'
['79', '70', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S><S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'186'", "'187'"]
'0'
'186'
'187'
['0', '186', '187']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'0'", "'187'"]
'186'
'0'
'187'
['186', '0', '187']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'69'", "'21'"]
'79'
'69'
'21'
['79', '69', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'70'", "'69'"]
'79'
'70'
'69'
['79', '70', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="85" ssid="17">The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="191" ssid="5">In the current work morphological analyses and lexical probabilities are derived from a small Treebank, which is by no means the best way to go.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'69'", "'191'"]
'85'
'69'
'191'
['85', '69', '191']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'187'", "'89'"]
'186'
'187'
'89'
['186', '187', '89']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'89'", "'0'"]
'186'
'89'
'0'
['186', '89', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'89'", "'70'", "'0'"]
'89'
'70'
'0'
['89', '70', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation']
<S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S><S sid="146" ssid="24">Given a PCFG grammar G and a lattice L with nodes n1 ... nk, we construct the weighted grammar GL as follows: for every arc (lexeme) l E L from node ni to node nj, we add to GL the rule [l --+ tni, tni+1, ... , tnj_1] with a probability of 1 (this indicates the lexeme l spans from node ni to node nj).</S><S sid="3" ssid="3">Here we propose a single joint model for performing both morphological segmentation and syntactic disambiguation which bypasses the associated circularity.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'146'", "'3'"]
'21'
'146'
'3'
['21', '146', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'94'", "'69'"]
'79'
'94'
'69'
['79', '94', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="188" ssid="2">The overall performance of our joint framework demonstrates that a probability distribution obtained over mere syntactic contexts using a Treebank grammar and a data-driven lexicon outperforms upper bounds proposed by previous joint disambiguation systems and achieves segmentation and parsing results on a par with state-of-the-art standalone applications results.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="191" ssid="5">In the current work morphological analyses and lexical probabilities are derived from a small Treebank, which is by no means the best way to go.</S>
original cit marker offset is 0
new cit marker offset is 0



["'188'", "'89'", "'191'"]
'188'
'89'
'191'
['188', '89', '191']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="85" ssid="17">The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.</S><S sid="75" ssid="7">Every token is independent of the others, and the sentence lattice is in fact a concatenation of smaller lattices, one for each token.</S><S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'75'", "'79'"]
'85'
'75'
'79'
['85', '75', '79']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="82" ssid="14">In sequential tagging models such as (Adler and Elhadad, 2006; Bar-Haim et al., 2007; Smith et al., 2005) weights are assigned according to a language model The input for the joint task is a sequence W = w1, ... , wn of space-delimited tokens.</S><S sid="84" ssid="16">The entries in such a lexicon may be thought of as meaningful surface segments paired up with their PoS tags li = (si, pi), but note that a surface segment s need not be a space-delimited token.</S><S sid="135" ssid="13">We construct a mapping from all the space-delimited tokens seen in the training sentences to their corresponding analyses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'82'", "'84'", "'135'"]
'82'
'84'
'135'
['82', '84', '135']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



P08-1043
C10-1045
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



P08-1043
P11-2124
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



P08-1043
P12-2002
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file D10-1044_swastika.csv
submit_file input/res/Task1/D10-1044.annv3.csv
parsing: input/ref/Task1/D10-1044_swastika.csv
<S sid="9" ssid="6">In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material&#8212;though adequate for reasonable performance&#8212;is also available.</S>
original cit marker offset is 0
new cit marker offset is 0



['9']
9
['9']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="6">In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material&#8212;though adequate for reasonable performance&#8212;is also available.</S>
original cit marker offset is 0
new cit marker offset is 0



['9']
9
['9']
parsed_discourse_facet ['aim_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



['62']
62
['62']
parsed_discourse_facet ['method_citation']
<S sid="71" ssid="8">Finally, we incorporate the instance-weighting model into a general linear combination, and learn weights and mixing parameters simultaneously. where c&#955;(s, t) is a modified count for pair (s, t) in OUT, u(s|t) is a prior distribution, and y is a prior weight.</S>
original cit marker offset is 0
new cit marker offset is 0



['71']
71
['71']
parsed_discourse_facet ['method_citation']
<S sid="96" ssid="33">We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.</S>
original cit marker offset is 0
new cit marker offset is 0



['96']
96
['96']
parsed_discourse_facet ['aim_citation']
<S sid="71" ssid="8">Finally, we incorporate the instance-weighting model into a general linear combination, and learn weights and mixing parameters simultaneously. where c&#955;(s, t) is a modified count for pair (s, t) in OUT, u(s|t) is a prior distribution, and y is a prior weight.</S>
original cit marker offset is 0
new cit marker offset is 0



['71']
71
['71']
parsed_discourse_facet ['result_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S>
original cit marker offset is 0
new cit marker offset is 0



['144']
144
['144']
parsed_discourse_facet ['result_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



['62']
62
['62']
parsed_discourse_facet ['method_citation']
<S sid="45" ssid="9">An easy way to achieve this is to put the domain-specific LMs and TMs into the top-level log-linear model and learn optimal weights with MERT (Och, 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



['45']
45
['45']
parsed_discourse_facet ['method_citation']
<S sid="75" ssid="12">However, it is robust, efficient, and easy to implement.4 To perform the maximization in (7), we used the popular L-BFGS algorithm (Liu and Nocedal, 1989), which requires gradient information.</S>
original cit marker offset is 0
new cit marker offset is 0



['75']
75
['75']
parsed_discourse_facet ['method_citation']
<S sid="22" ssid="19">Within this framework, we use features intended to capture degree of generality, including the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.</S>
original cit marker offset is 0
new cit marker offset is 0



['22']
22
['22']
parsed_discourse_facet ['method_citation']
<S sid="96" ssid="33">We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.</S>
original cit marker offset is 0
new cit marker offset is 0



['96']
96
['96']
parsed_discourse_facet ['aim_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



['62']
62
['62']
parsed_discourse_facet ['method_citation']
  <S sid="42" ssid="6">The natural baseline approach is to concatenate data from IN and OUT.</S>
original cit marker offset is 0
new cit marker offset is 0



['42']
42
['42']
parsed_discourse_facet ['aim_citation']
<S sid="96" ssid="33">We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.</S>
original cit marker offset is 0
new cit marker offset is 0



['96']
96
['96']
parsed_discourse_facet ['aim_citation']
parsing: input/res/Task1/D10-1044.annv3.csv
<S sid="143" ssid="12">Other work includes transferring latent topic distributions from source to target language for LM adaptation, (Tam et al., 2007) and adapting features at the sentence level to different categories of sentence (Finch and Sumita, 2008).</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="4" ssid="1">Domain adaptation is a common concern when optimizing empirical NLP applications.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'1'", "'4'"]
'143'
'1'
'4'
['143', '1', '4']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="65" ssid="2">Matsoukas et al (2009) generalize it by learning weights on sentence pairs that are used when estimating relative-frequency phrase-pair probabilities.</S><S sid="96" ssid="33">We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'65'", "'96'"]
'68'
'65'
'96'
['68', '65', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="9" ssid="6">In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material—though adequate for reasonable performance—is also available.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'", "'1'", "'9'"]
'144'
'1'
'9'
['144', '1', '9']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'", "'145'", "'1'"]
'62'
'145'
'1'
['62', '145', '1']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S><S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'62'"]
'0'
'23'
'62'
['0', '23', '62']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="65" ssid="2">Matsoukas et al (2009) generalize it by learning weights on sentence pairs that are used when estimating relative-frequency phrase-pair probabilities.</S><S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="67" ssid="4">We extend the Matsoukas et al approach in several ways.</S>
original cit marker offset is 0
new cit marker offset is 0



["'65'", "'68'", "'67'"]
'65'
'68'
'67'
['65', '68', '67']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="18">This highly effective approach is not directly applicable to the multinomial models used for core SMT components, which have no natural method for combining split features, so we rely on an instance-weighting approach (Jiang and Zhai, 2007) to downweight domain-specific examples in OUT.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'145'", "'0'"]
'21'
'145'
'0'
['21', '145', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="148" ssid="5">Mixing, smoothing, and instance-feature weights are learned at the same time using an efficient maximum-likelihood procedure that relies on only a small in-domain development corpus.</S><S sid="97" ssid="1">We carried out translation experiments in two different settings.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'148'", "'97'"]
'145'
'148'
'97'
['145', '148', '97']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S><S sid="117" ssid="21">The natural baseline (baseline) outperforms the pure IN system only for EMEA/EP fren.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'117'", "'62'"]
'0'
'117'
'62'
['0', '117', '62']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="42" ssid="6">The natural baseline approach is to concatenate data from IN and OUT.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="28" ssid="25">We train linear mixture models for conditional phrase pair probabilities over IN and OUT so as to maximize the likelihood of an empirical joint phrase-pair distribution extracted from a development set.</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'145'", "'28'"]
'42'
'145'
'28'
['42', '145', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="84" ssid="21">An alternate approximation to (8) would be to let w,\(s, t) directly approximate pˆI(s, t).</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="32" ssid="29">This is a straightforward technique that is arguably better suited to the adaptation task than the standard method of treating representative IN sentences as queries, then pooling the match results.</S>
original cit marker offset is 0
new cit marker offset is 0



["'84'", "'1'", "'32'"]
'84'
'1'
'32'
['84', '1', '32']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="75" ssid="12">However, it is robust, efficient, and easy to implement.4 To perform the maximization in (7), we used the popular L-BFGS algorithm (Liu and Nocedal, 1989), which requires gradient information.</S><S sid="84" ssid="21">An alternate approximation to (8) would be to let w,\(s, t) directly approximate pˆI(s, t).</S><S sid="63" ssid="27">The number of top-ranked pairs to retain is chosen to optimize dev-set BLEU score.</S>
original cit marker offset is 0
new cit marker offset is 0



["'75'", "'84'", "'63'"]
'75'
'84'
'63'
['75', '84', '63']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S><S sid="31" ssid="28">For comparison to information-retrieval inspired baselines, eg (L¨u et al., 2007), we select sentences from OUT using language model perplexities from IN.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'", "'31'", "'1'"]
'144'
'31'
'1'
['144', '31', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="22" ssid="19">Within this framework, we use features intended to capture degree of generality, including the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S>
original cit marker offset is 0
new cit marker offset is 0



["'22'", "'145'", "'0'"]
'22'
'145'
'0'
['22', '145', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'145'", "'1'"]
'23'
'145'
'1'
['23', '145', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'62'", "'1'"]
'145'
'62'
'1'
['145', '62', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="42" ssid="6">The natural baseline approach is to concatenate data from IN and OUT.</S><S sid="117" ssid="21">The natural baseline (baseline) outperforms the pure IN system only for EMEA/EP fren.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'117'", "'145'"]
'42'
'117'
'145'
['42', '117', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="38" ssid="2">The toplevel weights are trained to maximize a metric such as BLEU on a small development set of approximately 1000 sentence pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'1'", "'38'"]
'68'
'1'
'38'
['68', '1', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="40" ssid="4">We focus here instead on adapting the two most important features: the language model (LM), which estimates the probability p(wIh) of a target word w following an ngram h; and the translation models (TM) p(slt) and p(t1s), which give the probability of source phrase s translating to target phrase t, and vice versa.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'40'", "'145'"]
'68'
'40'
'145'
['68', '40', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2



D10-1044
D12-1129
0
aim_citation
['method_citation', 'aim_citation', 'results_citation', 'implication_citation']



D10-1044
P14-2093
0
method_citation
['method_citation', 'implication_citation']



D10-1044
E12-1055
0
method_citation
['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']



D10-1044
P12-1099
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file W99-0613_swastika.csv
submit_file input/res/Task1/W99-0613.annv3.csv
parsing: input/ref/Task1/W99-0613_swastika.csv
<S sid="9" ssid="3">This paper discusses the use of unlabeled examples for the problem of named entity classification.</S>
original cit marker offset is 0
new cit marker offset is 0



['9']
9
['9']
parsed_discourse_facet ['aim_citation']
<S sid="159" ssid="26">To prevent this we &amp;quot;smooth&amp;quot; the confidence by adding a small value, e, to both W+ and W_, giving at = Plugging the value of at from Equ.</S>
original cit marker offset is 0
new cit marker offset is 0



['159']
159
['159']
parsed_discourse_facet ['method_citation']
<S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S>
original cit marker offset is 0
new cit marker offset is 0



['137']
137
['137']
parsed_discourse_facet ['method_citation']
<S sid="91" ssid="24">There are two differences between this method and the DL-CoTrain algorithm: spelling and contextual features, alternating between labeling and learning with the two types of features.</S>
original cit marker offset is 0
new cit marker offset is 0



['91']
91
['91']
parsed_discourse_facet ['method_citation']
<S sid="213" ssid="80">Thus at each iteration the algorithm is forced to pick features for the location, person and organization in turn for the classifier being trained.</S>
original cit marker offset is 0
new cit marker offset is 0



['213']
213
['213']
parsed_discourse_facet ['method_citation']
 <S sid="250" ssid="1">Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.</S>
original cit marker offset is 0
new cit marker offset is 0



['250']
250
['250']
parsed_discourse_facet ['result_citation']
<S sid="213" ssid="80">Thus at each iteration the algorithm is forced to pick features for the location, person and organization in turn for the classifier being trained.</S>
original cit marker offset is 0
new cit marker offset is 0



['213']
213
['213']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="3">This paper discusses the use of unlabeled examples for the problem of named entity classification.</S>
original cit marker offset is 0
new cit marker offset is 0



['9']
9
['9']
parsed_discourse_facet ['aim_citation']
    <S sid="36" ssid="30">Roughly speaking, the new algorithm presented in this paper performs a similar search, but instead minimizes a bound on the number of (unlabeled) examples on which two classifiers disagree.</S>
original cit marker offset is 0
new cit marker offset is 0



['36']
36
['36']
parsed_discourse_facet ['result_citation']
<S sid="29" ssid="23">Unfortunately, Yarowsky's method is not well understood from a theoretical viewpoint: we would like to formalize the notion of redundancy in unlabeled data, and set up the learning task as optimization of some appropriate objective function.</S>
original cit marker offset is 0
new cit marker offset is 0



['29']
29
['29']
parsed_discourse_facet ['method_citation']
<S sid="7" ssid="1">Many statistical or machine-learning approaches for natural language problems require a relatively large amount of supervision, in the form of labeled training examples.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['aim_citation']
    <S sid="85" ssid="18">(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.</S>
original cit marker offset is 0
new cit marker offset is 0



['85']
85
['85']
parsed_discourse_facet ['method_citation']
    <S sid="95" ssid="28">(Specifically, the limit n starts at 5 and increases by 5 at each iteration.)</S>
original cit marker offset is 0
new cit marker offset is 0



['95']
95
['95']
parsed_discourse_facet ['method_citation']
<S sid="213" ssid="80">Thus at each iteration the algorithm is forced to pick features for the location, person and organization in turn for the classifier being trained.</S>
original cit marker offset is 0
new cit marker offset is 0



['213']
213
['213']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W99-0613.annv3.csv
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'133'", "'137'"]
'0'
'133'
'137'
['0', '133', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="174" ssid="41">The two new terms force the two classifiers to agree, as much as possible, on the unlabeled examples.</S><S sid="248" ssid="15">With each iteration more examples are assigned labels by both classifiers, while a high level of agreement (> 94%) is maintained between them.</S><S sid="33" ssid="27">The second algorithm builds on a boosting algorithm called AdaBoost (Freund and Schapire 97; Schapire and Singer 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'248'", "'33'"]
'174'
'248'
'33'
['174', '248', '33']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S><S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="220" ssid="87">(7), such as the likelihood function used in maximum-entropy problems and other generalized additive models (Lafferty 99).</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'133'", "'220'"]
'79'
'133'
'220'
['79', '133', '220']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="40" ssid="34">(Berland and Charniak 99) describe a method for extracting parts of objects from wholes (e.g., &quot;speedometer&quot; from &quot;car&quot;) from a large corpus using hand-crafted patterns.</S><S sid="41" ssid="35">(Hearst 92) describes a method for extracting hyponyms from a corpus (pairs of words in &quot;isa&quot; relations).</S><S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'", "'41'", "'79'"]
'40'
'41'
'79'
['40', '41', '79']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="19" ssid="13">Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.</S><S sid="11" ssid="5">For example, a good classifier would identify Mrs. Frank as a person, Steptoe & Johnson as a company, and Honduras as a location.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'19'", "'11'"]
'0'
'19'
'11'
['0', '19', '11']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S><S sid="250" ssid="1">Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.</S><S sid="179" ssid="46">The algorithm builds two classifiers in parallel from labeled and unlabeled data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'", "'250'", "'179'"]
'137'
'250'
'179'
['137', '250', '179']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="19" ssid="13">Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.</S><S sid="236" ssid="3">We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'19'", "'236'"]
'0'
'19'
'236'
['0', '19', '236']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="16" ssid="10">Supervised methods have been applied quite successfully to the full MUC named-entity task (Bikel et al. 97).</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="133" ssid="66">Fort= 1,...,T:</S>
original cit marker offset is 0
new cit marker offset is 0



["'16'", "'0'", "'133'"]
'16'
'0'
'133'
['16', '0', '133']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="253" ssid="4">We are currently exploring other methods that employ similar ideas and their formal properties.</S><S sid="133" ssid="66">Fort= 1,...,T:</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'253'", "'133'"]
'0'
'253'
'133'
['0', '253', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="251" ssid="2">In addition to a heuristic based on decision list learning, we also presented a boosting-like framework that builds on ideas from (Blum and Mitchell 98).</S><S sid="68" ssid="1">The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).</S><S sid="31" ssid="25">Our first algorithm is similar to Yarowsky's, but with some important modifications motivated by (Blum and Mitchell 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'251'", "'68'", "'31'"]
'251'
'68'
'31'
['251', '68', '31']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="28" ssid="22">(Yarowsky 95) describes an algorithm for word-sense disambiguation that exploits redundancy in contextual features, and gives impressive performance.</S><S sid="39" ssid="33">(Brin 98) ,describes a system for extracting (author, book-title) pairs from the World Wide Web using an approach that bootstraps from an initial seed set of examples.</S><S sid="254" ssid="5">Future work should also extend the approach to build a complete named entity extractor - a method that pulls proper names from text and then classifies them.</S>
original cit marker offset is 0
new cit marker offset is 0



["'28'", "'39'", "'254'"]
'28'
'39'
'254'
['28', '39', '254']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="85" ssid="18">(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="77" ssid="10">In this paper k = 3 (the three labels are person, organization, location), and we set a = 0.1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'0'", "'77'"]
'85'
'0'
'77'
['85', '0', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation']
<S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="68" ssid="1">The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).</S>
original cit marker offset is 0
new cit marker offset is 0



["'133'", "'0'", "'68'"]
'133'
'0'
'68'
['133', '0', '68']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 1
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2



W99-0613
W06-2204
0
result_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



W99-0613
W06-2207
0
method_citation
['method_citation', 'hypothesis_citation']
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file W06-2932_swastika.csv
submit_file input/res/Task1/W06-2932.annv3.csv
parsing: input/ref/Task1/W06-2932_swastika.csv
<S sid="86" ssid="8">Unlabeled accuracy for all verbs increases from 71% to 73% and for all conjunctions from 71% to 74%.</S>
original cit marker offset is 
new cit marker offset is 0



['86']
86
['86']
parsed_discourse_facet ['result_citation']
<S sid="79" ssid="1">Although overall unlabeled accuracy is 86%, most verbs and some conjunctions attach to their head words with much lower accuracy: 69% for main verbs, 75% for the verb ser, and 65% for coordinating conjunctions.</S>
original cit marker offset is 0
new cit marker offset is 0



['79']
79
['79']
parsed_discourse_facet ['result_citation']
<S sid="79" ssid="1">Although overall unlabeled accuracy is 86%, most verbs and some conjunctions attach to their head words with much lower accuracy: 69% for main verbs, 75% for the verb ser, and 65% for coordinating conjunctions.</S>
original cit marker offset is 0
new cit marker offset is 0



['79']
79
['79']
parsed_discourse_facet ['result_citation']
<S sid="79" ssid="1">Although overall unlabeled accuracy is 86%, most verbs and some conjunctions attach to their head words with much lower accuracy: 69% for main verbs, 75% for the verb ser, and 65% for coordinating conjunctions.</S>
original cit marker offset is 0
new cit marker offset is 0



['79']
79
['79']
parsed_discourse_facet ['result_citation']
<S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S>
original cit marker offset is 0
new cit marker offset is 0



['22']
22
['22']
parsed_discourse_facet ['method_citation']
<S sid="54" ssid="2">Based on performance from a held-out section of the training data, we used non-projective parsing algorithms for Czech, Danish, Dutch, German, Japanese, Portuguese and Slovene, and projective parsing algorithms for Arabic, Bulgarian, Chinese, Spanish, Swedish and Turkish.</S>
original cit marker offset is 0
new cit marker offset is 0



['54']
54
['54']
parsed_discourse_facet ['method_citation']
<S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S>
original cit marker offset is 0
new cit marker offset is 0



['12']
12
['12']
parsed_discourse_facet ['method_citation']
    <S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S>
original cit marker offset is 0
new cit marker offset is 0



['22']
22
['22']
parsed_discourse_facet ['method_citation']
<S sid="41" ssid="10">To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm&#65533;1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm&#8722;1) in the tree y.</S>
original cit marker offset is 0
new cit marker offset is 0



['41']
41
['41']
parsed_discourse_facet ['method_citation']
<S sid="24" ssid="6">Its power lies in the ability to define a rich set of features over parsing decisions, as well as surface level features relative to these decisions.</S>
original cit marker offset is 0
new cit marker offset is 0



['24']
24
['24']
parsed_discourse_facet ['method_citation']
<S sid="79" ssid="1">Although overall unlabeled accuracy is 86%, most verbs and some conjunctions attach to their head words with much lower accuracy: 69% for main verbs, 75% for the verb ser, and 65% for coordinating conjunctions.</S>
original cit marker offset is 0
new cit marker offset is 0



['79']
79
['79']
parsed_discourse_facet ['result_citation']
<S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S>
original cit marker offset is 0
new cit marker offset is 0



['12']
12
['12']
parsed_discourse_facet ['method_citation']
<S sid="43" ssid="12">For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi&#8217;s algorithm.</S>
original cit marker offset is 0
new cit marker offset is 0



['43']
43
['43']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W06-2932.annv3.csv
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S>
original cit marker offset is 
new cit marker offset is 0



["'21'", "'12'", "'20'"]
'21'
'12'
'20'
['21', '12', '20']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="1" ssid="1">present a two-stage multilingual pendency parser and evaluate it on 13 diverse languages.</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'1'", "'104'"]
'21'
'1'
'104'
['21', '1', '104']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="93" ssid="15">A quick look at unlabeled attachment accuracies indicate that errors in Arabic parsing are the most common across all languages: prepositions (62%), conjunctions (69%) and to a lesser extent verbs (73%).</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S><S sid="44" ssid="13">We use the MIRA online learner to set the weights (Crammer and Singer, 2003; McDonald et al., 2005a) since we found it trained quickly and provide good performance.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'93'", "'104'", "'44'"]
'93'
'104'
'44'
['93', '104', '44']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="4" ssid="4">We report results on the CoNLL-X shared task (Buchholz et al., 2006) data sets and present an error analysis.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S><S sid="13" ssid="9">We evaluate this parser on a diverse set of 13 languages using data provided by the CoNLL-X shared-task organizers (Buchholz et al., 2006; Hajiˇc et al., 2004; Simov et al., 2005; Simov and Osenova, 2003; Chen et al., 2003; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and MartiAntonin, 2002; Nilsson et al., 2005; Oflazer et al., 2003; Atalay et al., 2003).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'4'", "'20'", "'13'"]
'4'
'20'
'13'
['4', '20', '13']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'22'", "'104'"]
'21'
'22'
'104'
['21', '22', '104']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="11" ssid="7">This has been shown through their successful use in many standard natural language processing tasks, including machine translation (Ding and Palmer, 2005), sentence compression (McDonald, 2006), and textual inference (Haghighi et al., 2005).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'0'", "'11'"]
'21'
'0'
'11'
['21', '0', '11']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'0'", "'12'"]
'21'
'0'
'12'
['21', '0', '12']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="18" ssid="14">We Proceedings of the 10th Conference on Computational Natural Language Learning (CoNLL-X), pages 216–220, New York City, June 2006. c�2006 Association for Computational Linguistics assume that all dependency graphs are trees but may be non-projective, both of which are true in the data sets we use.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'18'", "'21'", "'22'"]
'18'
'21'
'22'
['18', '21', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="41" ssid="10">To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm�1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm−1) in the tree y.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="15" ssid="11">For the remainder of this paper, we denote by x = x1,... xn a sentence with n words and by y a corresponding dependency graph.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'41'", "'21'", "'15'"]
'41'
'21'
'15'
['41', '21', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="64" ssid="2">N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.</S><S sid="46" ssid="15">Of course, we have to define a set of suitable features.</S><S sid="24" ssid="6">Its power lies in the ability to define a rich set of features over parsing decisions, as well as surface level features relative to these decisions.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'64'", "'46'", "'24'"]
'64'
'46'
'24'
['64', '46', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="13" ssid="9">We evaluate this parser on a diverse set of 13 languages using data provided by the CoNLL-X shared-task organizers (Buchholz et al., 2006; Hajiˇc et al., 2004; Simov et al., 2005; Simov and Osenova, 2003; Chen et al., 2003; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and MartiAntonin, 2002; Nilsson et al., 2005; Oflazer et al., 2003; Atalay et al., 2003).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'0'", "'21'", "'13'"]
'0'
'21'
'13'
['0', '21', '13']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S><S sid="17" ssid="13">Each edge can be assigned a label l(ij) from a finite set L of predefined labels.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'20'", "'17'"]
'21'
'20'
'17'
['21', '20', '17']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="16" ssid="12">A dependency graph is represented by a set of ordered pairs (i, j) E y in which xj is a dependent and xi is the corresponding head.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="43" ssid="12">For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi’s algorithm.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'16'", "'21'", "'43'"]
'16'
'21'
'43'
['16', '21', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



W06-2932
W09-1210
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W06-2932
I08-1012
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W06-2932
N07-1050
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W06-2932
D07-1122
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W06-2932
D07-1015
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W06-2932
P08-1108
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file P08-1102_swastika.csv
submit_file input/res/Task1/P08-1102.annv3.csv
parsing: input/ref/Task1/P08-1102_swastika.csv
    <S sid="32" ssid="4">We trained a character-based perceptron for Chinese Joint S&amp;T, and found that the perceptron itself could achieve considerably high accuracy on segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



['32']
32
['32']
parsed_discourse_facet ['method_citation']
    <S sid="32" ssid="4">We trained a character-based perceptron for Chinese Joint S&amp;T, and found that the perceptron itself could achieve considerably high accuracy on segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



['32']
32
['32']
parsed_discourse_facet ['method_citation']
<S sid="38" ssid="10">Templates immediately borrowed from Ng and Low (2004) are listed in the upper column named non-lexical-target.</S>
original cit marker offset is 0
new cit marker offset is 0



['38']
38
['38']
parsed_discourse_facet ['method_citation']
    <S sid="92" ssid="3">The second was conducted on the Penn Chinese Treebank 5.0 (CTB5.0) to test the performance of the cascaded model on segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



['92']
92
['92']
parsed_discourse_facet ['method_citation']
    <S sid="36" ssid="8">All feature templates and their instances are shown in Table 1.</S>
original cit marker offset is 0
new cit marker offset is 0



['36']
36
['36']
parsed_discourse_facet ['method_citation']
    <S sid="32" ssid="4">We trained a character-based perceptron for Chinese Joint S&amp;T, and found that the perceptron itself could achieve considerably high accuracy on segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



['32']
32
['32']
parsed_discourse_facet ['method_citation']
    <S sid="92" ssid="3">The second was conducted on the Penn Chinese Treebank 5.0 (CTB5.0) to test the performance of the cascaded model on segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



['92']
92
['92']
parsed_discourse_facet ['method_citation']
    <S sid="92" ssid="3">The second was conducted on the Penn Chinese Treebank 5.0 (CTB5.0) to test the performance of the cascaded model on segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



['92']
92
['92']
parsed_discourse_facet ['method_citation']
<S sid="97" ssid="8">Figure 3 shows their learning curves depicting the F-measure on the development set after 1 to 10 training iterations.</S>
original cit marker offset is 0
new cit marker offset is 0



['97']
97
['97']
parsed_discourse_facet ['result_citation']
<S sid="91" ssid="2">The first was conducted to test the performance of the perceptron on segmentation on the corpus from SIGHAN Bakeoff 2, including the Academia Sinica Corpus (AS), the Hong Kong City University Corpus (CityU), the Peking University Corpus (PKU) and the Microsoft Research Corpus (MSR).</S>
original cit marker offset is 0
new cit marker offset is 0



['91']
91
['91']
parsed_discourse_facet ['aim_citation']
<S sid="16" ssid="12">Shown in Figure 1, the cascaded model has a two-layer architecture, with a characterbased perceptron as the core combined with other real-valued features such as language models.</S>
original cit marker offset is 0
new cit marker offset is 0



['16']
16
['16']
parsed_discourse_facet ['method_citation']
    <S sid="34" ssid="6">The feature templates we adopted are selected from those of Ng and Low (2004).</S>
original cit marker offset is 0
new cit marker offset is 0



['34']
34
['34']
parsed_discourse_facet ['method_citation']
    <S sid="92" ssid="3">The second was conducted on the Penn Chinese Treebank 5.0 (CTB5.0) to test the performance of the cascaded model on segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



['92']
92
['92']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P08-1102.annv3.csv
<S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="22" ssid="18">2 Segmentation and POS Tagging Given a Chinese character sequence: while the segmentation and POS tagging result can be depicted as: Here, Ci (i = L.n) denotes Chinese character, ti (i = L.m) denotes POS tag, and Cl:r (l < r) denotes character sequence ranges from Cl to Cr.</S><S sid="79" ssid="4">By maintaining a stack of size N at each position i of the sequence, we can preserve the top N best candidate labelled results of subsequence C1:i during decoding.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'22'", "'79'"]
'9'
'22'
'79'
['9', '22', '79']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="25" ssid="21">According to Ng and Low (2004), the segmentation task can be transformed to a tagging problem by assigning each character a boundary tag of the following four types: We can extract segmentation result by splitting the labelled result into subsequences of pattern s or bm*e which denote single-character word and multicharacter word respectively.</S><S sid="28" ssid="24">A subsequence of boundary-POS labelling result indicates a word with POS t only if the boundary tag sequence composed of its boundary part conforms to s or bm*e style, and all POS tags in its POS part equal to t. For example, a tag sequence b NN m NN e NN represents a threecharacter word with POS tag NN.</S><S sid="10" ssid="6">Since the typical approach of discriminative models treats segmentation as a labelling problem by assigning each character a boundary tag (Xue and Shen, 2003), Joint S&T can be conducted in a labelling fashion by expanding boundary tags to include POS information (Ng and Low, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'25'", "'28'", "'10'"]
'25'
'28'
'10'
['25', '28', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S><S sid="42" ssid="14">As predications generated from such templates depend on the current character, we name these templates lexical-target.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'1'", "'42'"]
'0'
'1'
'42'
['0', '1', '42']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="25" ssid="21">According to Ng and Low (2004), the segmentation task can be transformed to a tagging problem by assigning each character a boundary tag of the following four types: We can extract segmentation result by splitting the labelled result into subsequences of pattern s or bm*e which denote single-character word and multicharacter word respectively.</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'25'", "'1'"]
'0'
'25'
'1'
['0', '25', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'2'", "'24'"]
'9'
'2'
'24'
['9', '2', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="130" ssid="1">We proposed a cascaded linear model for Chinese Joint S&T.</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'130'", "'1'"]
'0'
'130'
'1'
['0', '130', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S><S sid="67" ssid="18">Language model (LM) provides linguistic probabilities of a word sequence.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'1'", "'67'"]
'0'
'1'
'67'
['0', '1', '67']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="56" ssid="7">To alleviate the drawbacks, we propose a cascaded linear model.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="85" ssid="10">Lines 3 — 11 generate a N-best list for each character position i.</S>
original cit marker offset is 0
new cit marker offset is 0



["'56'", "'0'", "'85'"]
'56'
'0'
'85'
['56', '0', '85']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="5" ssid="1">Word segmentation and part-of-speech (POS) tagging are important tasks in computer processing of Chinese and other Asian languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'9'", "'5'"]
'24'
'9'
'5'
['24', '9', '5']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="23" ssid="19">We can see that segmentation and POS tagging task is to divide a character sequence into several subsequences and label each of them a POS tag.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'9'", "'23'"]
'0'
'9'
'23'
['0', '9', '23']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="19" ssid="15">In addition, as these knowledge sources are regarded as separate features, we can train their corresponding models independently with each other.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="8" ssid="4">Another widely used discriminative method is the perceptron algorithm (Collins, 2002), which achieves comparable performance to CRFs with much faster training, so we base this work on the perceptron.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'", "'0'", "'8'"]
'19'
'0'
'8'
['19', '0', '8']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="42" ssid="14">As predications generated from such templates depend on the current character, we name these templates lexical-target.</S><S sid="41" ssid="13">We add a field C0 to each template in the upper column, so that it can carry out predication according to not only the context but also the current character itself.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'41'", "'0'"]
'42'
'41'
'0'
['42', '41', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="62" ssid="13">Suppose we have n features gj (j = 1..n) coupled with n corresponding weights wj (j = 1..n), each feature gj gives a score gj(r) to a candidate r, then the total score of r is given by: The decoding procedure aims to find the candidate r* with the highest score: While the mission of the training procedure is to tune the weights wj(j = 1..n) to guarantee that the candidate r with the highest score happens to be the best result with a high probability.</S><S sid="16" ssid="12">Shown in Figure 1, the cascaded model has a two-layer architecture, with a characterbased perceptron as the core combined with other real-valued features such as language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'62'", "'16'"]
'2'
'62'
'16'
['2', '62', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="58" ssid="9">Instead of incorporating all features into the perceptron directly, we first trained the perceptron using character-based features, and several other sub-models using additional ones such as word or POS n-grams, then trained the outside-layer linear model using the outputs of these sub-models, including the perceptron.</S><S sid="16" ssid="12">Shown in Figure 1, the cascaded model has a two-layer architecture, with a characterbased perceptron as the core combined with other real-valued features such as language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'58'", "'16'"]
'2'
'58'
'16'
['2', '58', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="31" ssid="3">The perceptron has been used in many NLP tasks, such as POS tagging (Collins, 2002), Chinese word segmentation (Ng and Low, 2004; Zhang and Clark, 2007) and so on.</S><S sid="10" ssid="6">Since the typical approach of discriminative models treats segmentation as a labelling problem by assigning each character a boundary tag (Xue and Shen, 2003), Joint S&T can be conducted in a labelling fashion by expanding boundary tags to include POS information (Ng and Low, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'31'", "'10'"]
'0'
'31'
'10'
['0', '31', '10']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'9'", "'2'"]
'24'
'9'
'2'
['24', '9', '2']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file J01-2004_swastika.csv
submit_file input/res/Task1/J01-2004.annv3.csv
parsing: input/ref/Task1/J01-2004_swastika.csv
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S>
original cit marker offset is 0
new cit marker offset is 0



['372']
372
['372']
parsed_discourse_facet ['method_citation']
<S sid="15" ssid="3">In the past few years, however, some improvements have been made over these language models through the use of statistical methods of natural language processing, and the development of innovative, linguistically well-motivated techniques for improving language models for speech recognition is generating more interest among computational linguists.</S>
original cit marker offset is 0
new cit marker offset is 0



['15']
15
['15']
parsed_discourse_facet ['result_citation']
    <S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



['31']
31
['31']
parsed_discourse_facet ['result_citation']
    <S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



['31']
31
['31']
parsed_discourse_facet ['result_citation']
    <S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



['31']
31
['31']
parsed_discourse_facet ['result_citation']
    <S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



['31']
31
['31']
parsed_discourse_facet ['result_citation']
<S sid="215" ssid="119">The first word in the string remaining to be parsed, w1, we will call the look-ahead word.</S>
original cit marker offset is 0
new cit marker offset is 0



['215']
215
['215']
parsed_discourse_facet ['method_citation']
    <S sid="302" ssid="58">In the beam search approach outlined above, we can estimate the string's probability in the same manner, by summing the probabilities of the parses that the algorithm finds.</S>
original cit marker offset is 0
new cit marker offset is 0



['302']
302
['302']
parsed_discourse_facet ['method_citation']
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S>
original cit marker offset is 0
new cit marker offset is 0



['372']
372
['372']
parsed_discourse_facet ['result_citation']
    <S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



['31']
31
['31']
parsed_discourse_facet ['result_citation']
    <S sid="100" ssid="4">The approach that we will subsequently present uses the probabilistic grammar as its language model, but only includes probability mass from those parses that are found, that is, it uses the parser to find a subset of the total set of parses (hopefully most of the high-probability parses) and uses the sum of their probabilities as an estimate of the true probability given the grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



['100']
100
['100']
parsed_discourse_facet ['method_citation']
    <S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



['31']
31
['31']
parsed_discourse_facet ['result_citation']
<S sid="21" ssid="9">First, the top-down parsing algorithm builds a set of rooted candidate parse trees from left to right over the string, which allows it to calculate a generative probability for each prefix string from the probabilistic grammar, and hence a conditional probability for each word given the previous words and the probabilistic grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



['21']
21
['21']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/J01-2004.annv3.csv
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S><S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'372'", "'0'"]
'388'
'372'
'0'
['388', '372', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="15" ssid="3">In the past few years, however, some improvements have been made over these language models through the use of statistical methods of natural language processing, and the development of innovative, linguistically well-motivated techniques for improving language models for speech recognition is generating more interest among computational linguists.</S><S sid="17" ssid="5">This paper will examine language modeling for speech recognition from a natural language processing point of view.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'15'", "'17'"]
'388'
'15'
'17'
['388', '15', '17']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="19" ssid="7">A new language model, based on probabilistic top-down parsing, will be outlined and compared with the previous literature, and extensive empirical results will be presented which demonstrate its utility.</S><S sid="10" ssid="4">A new language model that utilizes probabilistic top-down parsing is then outlined, and empirical results show that it improves upon previous work in test corpus perplexity.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'19'", "'10'"]
'388'
'19'
'10'
['388', '19', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="207" ssid="111">The model allows us to assign probabilities to derivations, which can be used by the parsing algorithm to decide heuristically which candidates are promising and should be expanded, and which are less promising and should be pruned.</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'207'", "'137'"]
'388'
'207'
'137'
['388', '207', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="134" ssid="38">The parsers with the highest published broad-coverage parsing accuracy, which include Charniak (1997, 2000), Collins (1997, 1999), and Ratnaparkhi (1997), all utilize simple and straightforward statistically based search heuristics, pruning the search-space quite dramatically!'</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'134'", "'137'"]
'388'
'134'
'137'
['388', '134', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="268" ssid="24">This is an incremental parser with a pruning strategy and no backtracking.</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S><S sid="223" ssid="127">We implement this as a beam search.</S>
original cit marker offset is 0
new cit marker offset is 0



["'268'", "'137'", "'223'"]
'268'
'137'
'223'
['268', '137', '223']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="231" ssid="135">Since we do not know the POS for the word, we must sum the LAP for all POS For a PCFG G, a stack S = Ao An$ (which we will write AN and a look-ahead terminal item wi, we define the look-ahead probability as follows: We recursively estimate this with two empirically observed conditional probabilities for every nonterminal A,: 13(A, w,a) and P(A, c).</S><S sid="224" ssid="128">For each word position i, we have a separate priority queue H, of analyses with look-ahead w,.</S><S sid="108" ssid="12">Another approach that uses syntactic structure for language modeling has been to use a shift-reduce parser to &quot;surface&quot; c-commanding phrasal headwords or part-of-speech (POS) tags from arbitrarily far back in the prefix string, for use in a trigram-like model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'231'", "'224'", "'108'"]
'231'
'224'
'108'
['231', '224', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="223" ssid="127">We implement this as a beam search.</S><S sid="109" ssid="13">A shift-reduce parser operates from left to right using a stack and a pointer to the next word in the input string.9 Each stack entry consists minimally of a nonterminal label.</S><S sid="138" ssid="42">Our approach is found to yield very accurate parses efficiently, and, in addition, to lend itself straightforwardly to estimating word probabilities on-line, that is, in a single pass from left to right.</S>
original cit marker offset is 0
new cit marker offset is 0



["'223'", "'109'", "'138'"]
'223'
'109'
'138'
['223', '109', '138']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="274" ssid="30">This structure is evaluated for precision and recall, which is entirely appropriate for these incomplete as well as complete parses.</S><S sid="214" ssid="118">A candidate analysis C = (D, 8, PD, F, wn consists of a derivation D, a stack S. a derivation probability PD, a figure of merit F, and a string w7 remaining to be parsed.</S><S sid="223" ssid="127">We implement this as a beam search.</S>
original cit marker offset is 0
new cit marker offset is 0



["'274'", "'214'", "'223'"]
'274'
'214'
'223'
['274', '214', '223']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="291" ssid="47">Also, the parser returns a set of candidate parses, from which we have been choosing the top ranked; if we use an oracle to choose the parse with the highest accuracy from among the candidates (which averaged 70.0 in number per sentence), we find an average labeled precision/recall of 94.1, for sentences of length < 100.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="9" ssid="3">A lexicalized probabilistic topdown parser is then presented, which performs very well, in terms of both the accuracy of returned parses and the efficiency with which they are found, relative to the best broad-coverage statistical parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'291'", "'388'", "'9'"]
'291'
'388'
'9'
['291', '388', '9']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S><S sid="355" ssid="111">In order to get a sense of whether these perplexity reduction results can translate to improvement in a speech recognition task, we performed a very small preliminary experiment on n-best lists.</S><S sid="214" ssid="118">A candidate analysis C = (D, 8, PD, F, wn consists of a derivation D, a stack S. a derivation probability PD, a figure of merit F, and a string w7 remaining to be parsed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'372'", "'355'", "'214'"]
'372'
'355'
'214'
['372', '355', '214']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S><S sid="102" ssid="6">One approach to syntactic language modeling is to use this distribution directly as a language model.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'102'", "'388'"]
'0'
'102'
'388'
['0', '102', '388']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="313" ssid="69">By utilizing a figure of merit to identify promising analyses, we are simply focusing our attention on those parses that are likely to have a high probability, and thus we are increasing the amount of probability mass that we do capture, of the total possible.</S><S sid="100" ssid="4">The approach that we will subsequently present uses the probabilistic grammar as its language model, but only includes probability mass from those parses that are found, that is, it uses the parser to find a subset of the total set of parses (hopefully most of the high-probability parses) and uses the sum of their probabilities as an estimate of the true probability given the grammar.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S>
original cit marker offset is 0
new cit marker offset is 0



["'313'", "'100'", "'388'"]
'313'
'100'
'388'
['313', '100', '388']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="263" ssid="19">Following standard practice, we will be reporting scores only for non-part-of-speech constituents, which are called labeled recall (LR) and labeled precision (LP).</S><S sid="245" ssid="1">The empirical results will be presented in three stages: (i) trials to examine the accuracy and efficiency of the parser; (ii) trials to examine its effect on test corpus perplexity and recognition performance; and (iii) trials to examine the effect of beam variation on these performance measures.</S><S sid="108" ssid="12">Another approach that uses syntactic structure for language modeling has been to use a shift-reduce parser to &quot;surface&quot; c-commanding phrasal headwords or part-of-speech (POS) tags from arbitrarily far back in the prefix string, for use in a trigram-like model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'263'", "'245'", "'108'"]
'263'
'245'
'108'
['263', '245', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="329" ssid="85">Table 3 shows several things.</S><S sid="19" ssid="7">A new language model, based on probabilistic top-down parsing, will be outlined and compared with the previous literature, and extensive empirical results will be presented which demonstrate its utility.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'329'", "'19'"]
'388'
'329'
'19'
['388', '329', '19']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="397" ssid="10">A top-down parser, in contrast to a standard bottom-up chart parser, has enough information to predict empty categories only where they are likely to occur.</S><S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S><S sid="209" ssid="113">This parser is essentially a stochastic version of the top-down parser described in Aho, Sethi, and Ullman (1986).</S>
original cit marker offset is 0
new cit marker offset is 0



["'397'", "'0'", "'209'"]
'397'
'0'
'209'
['397', '0', '209']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="269" ssid="25">In such a model, it is possible to commit to a set of partial analyses at a particular point that cannot be completed given the rest of the input string (i.e., the parser can &quot;garden path&quot;).</S><S sid="310" ssid="66">This is a subset of the possible leftmost partial derivations with respect to the prefix string W. Since RV is produced by expanding only analyses on priority queue H;', the set of complete trees consistent with the partial derivations on priority queue Ht is a subset of the set of complete trees consistent with the partial derivations on priority queue HT'', that is, the total probability mass represented by the priority queues is monotonically decreasing.</S><S sid="306" ssid="62">Recall the discussion of the grammar models above, and our definition of the set of partial derivations Dw, with respect to a prefix string wil) (see Equations 2 and 7).</S>
original cit marker offset is 0
new cit marker offset is 0



["'269'", "'310'", "'306'"]
'269'
'310'
'306'
['269', '310', '306']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



J01-2004
W05-0104
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



J01-2004
P08-1013
0
result_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



J01-2004
P04-1006
0
result_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



J01-2004
W10-2009
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file D09-1092_vardha.csv
submit_file input/res/Task1/D09-1092.annv3.csv
parsing: input/ref/Task1/D09-1092_vardha.csv
<S sid="17" ssid="13">We argue that topic modeling is both a useful and appropriate tool for leveraging correspondences between semantically comparable documents in multiple different languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'17'"]
'17'
['17']
parsed_discourse_facet ['method_citation']
 <S sid="20" ssid="16">We also explore how the characteristics of different languages affect topic model performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'"]
'20'
['20']
parsed_discourse_facet ['method_citation']
    <S sid="138" ssid="87">We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.</S>
original cit marker offset is 0
new cit marker offset is 0



["'138'"]
'138'
['138']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="6">We demonstrate its utility and explore its characteristics using two polylingual corpora: proceedings of the European parliament (in eleven languages) and a collection of Wikipedia articles (in twelve languages).</S>
original cit marker offset is 0
new cit marker offset is 0



["'10'"]
'10'
['10']
parsed_discourse_facet ['method_citation']
   <S sid="55" ssid="4">The EuroParl corpus consists of parallel texts in eleven western European languages: Danish, German, Greek, English, Spanish, Finnish, French, Italian, Dutch, Portuguese and Swedish.</S>
original cit marker offset is 0
new cit marker offset is 0



["'55'"]
'55'
['55']
parsed_discourse_facet ['method_citation']
 sid="9" ssid="5">In this paper, we present the polylingual topic model (PLTM).</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
Error in Reference Offset
<S sid="118" ssid="67">We calculate the Jensen-Shannon divergence between the topic distributions for each pair of individual documents in S that were originally part of the same tuple prior to separation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'"]
'118'
['118']
parsed_discourse_facet ['method_citation']
<S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'35'"]
'35'
['35']
parsed_discourse_facet ['method_citation']
<S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'35'"]
'35'
['35']
parsed_discourse_facet ['method_citation']
 <S sid="55" ssid="4">The EuroParl corpus consists of parallel texts in eleven western European languages: Danish, German, Greek, English, Spanish, Finnish, French, Italian, Dutch, Portuguese and Swedish.</S>
original cit marker offset is 0
new cit marker offset is 0



["'55'"]
'55'
['55']
parsed_discourse_facet ['method_citation']
<S sid="102" ssid="51">In contrast, PLTM assigns a significant number of tokens to almost all 800 topics, in very similar proportions in both languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'102'"]
'102'
['102']
parsed_discourse_facet ['method_citation']
 <S sid="38" ssid="4">This is unlike LDA, in which each document is assumed to have its own document-specific distribution over topics.</S>
original cit marker offset is 0
new cit marker offset is 0



["'38'"]
'38'
['38']
parsed_discourse_facet ['method_citation']
 <S sid="156" ssid="105">We use both Jensen-Shannon divergence and cosine distance.</S>
original cit marker offset is 0
new cit marker offset is 0



["'156'"]
'156'
['156']
parsed_discourse_facet ['method_citation']
    <S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
  <S sid="170" ssid="4">First, we explore whether comparable document tuples support the alignment of fine-grained topics, as demonstrated earlier using parallel documents.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'"]
'170'
['170']
parsed_discourse_facet ['method_citation']
    <S sid="29" ssid="5">A recent extended abstract, developed concurrently by Ni et al. (Ni et al., 2009), discusses a multilingual topic model similar to the one presented here.</S>
original cit marker offset is 0
new cit marker offset is 0



["'29'"]
'29'
['29']
parsed_discourse_facet ['method_citation']
  <S sid="170" ssid="4">First, we explore whether comparable document tuples support the alignment of fine-grained topics, as demonstrated earlier using parallel documents.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'"]
'170'
['170']
parsed_discourse_facet ['method_citation']
<S sid="168" ssid="2">However, the growth of the web, and in particular Wikipedia, has made comparable text corpora &#8211; documents that are topically similar but are not direct translations of one another &#8211; considerably more abundant than true parallel corpora.</S>
original cit marker offset is 0
new cit marker offset is 0



["'168'"]
'168'
['168']
parsed_discourse_facet ['method_citation']
    <S sid="29" ssid="5">A recent extended abstract, developed concurrently by Ni et al. (Ni et al., 2009), discusses a multilingual topic model similar to the one presented here.</S>
original cit marker offset is 0
new cit marker offset is 0



["'29'"]
'29'
['29']
parsed_discourse_facet ['method_citation']
 <S sid="110" ssid="59">Continuing with the example above, one might extract a set of connected Wikipedia articles related to the focus of the journal and then train PLTM on a joint corpus consisting of journal papers and Wikipedia articles.</S>
original cit marker offset is 0
new cit marker offset is 0



["'110'"]
'110'
['110']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/D09-1092.annv3.csv
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="3" ssid="3">We introduce a polylingual topic model that discovers topics aligned across multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'36'", "'3'"]
'192'
'36'
'3'
['192', '36', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'36'"]
'192'
'35'
'36'
['192', '35', '36']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="137" ssid="86">For every topic t we select a small number K of the most probable words in English (e) and in each “translation” language (E): Wte and Wtt, respectively.</S><S sid="134" ssid="83">Each lexicon is a set of pairs consisting of an English word and a translated word, 1we, wt}.</S><S sid="138" ssid="87">We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'", "'134'", "'138'"]
'137'
'134'
'138'
['137', '134', '138']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="0" ssid="0">Polylingual Topic Models</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'0'", "'36'"]
'192'
'0'
'36'
['192', '0', '36']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'148'", "'192'", "'36'"]
'148'
'192'
'36'
['148', '192', '36']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="19" ssid="15">We employ a set of direct translations, the EuroParl corpus, to evaluate whether PLTM can accurately infer topics when documents genuinely contain the same content.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'19'"]
'192'
'35'
'19'
['192', '35', '19']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="182" ssid="16">As with EuroParl, we can calculate the JensenShannon divergence between pairs of documents within a comparable document tuple.</S><S sid="156" ssid="105">We use both Jensen-Shannon divergence and cosine distance.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'182'", "'156'", "'148'"]
'182'
'156'
'148'
['182', '156', '148']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'192'", "'35'"]
'36'
'192'
'35'
['36', '192', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="9" ssid="5">In this paper, we present the polylingual topic model (PLTM).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'9'"]
'192'
'35'
'9'
['192', '35', '9']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="28" ssid="4">We take a simpler approach that is more suitable for topically similar document tuples (where documents are not direct translations of one another) in more than two languages.</S><S sid="30" ssid="6">However, they evaluate their model on only two languages (English and Chinese), and do not use the model to detect differences between languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'28'", "'30'"]
'192'
'28'
'30'
['192', '28', '30']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="28" ssid="4">We take a simpler approach that is more suitable for topically similar document tuples (where documents are not direct translations of one another) in more than two languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'28'", "'148'"]
'192'
'28'
'148'
['192', '28', '148']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="54" ssid="3">Although direct translations in multiple languages are relatively rare (in contrast with comparable documents), we use direct translations to explore the characteristics of the model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'54'"]
'192'
'35'
'54'
['192', '35', '54']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="156" ssid="105">We use both Jensen-Shannon divergence and cosine distance.</S><S sid="182" ssid="16">As with EuroParl, we can calculate the JensenShannon divergence between pairs of documents within a comparable document tuple.</S><S sid="118" ssid="67">We calculate the Jensen-Shannon divergence between the topic distributions for each pair of individual documents in S that were originally part of the same tuple prior to separation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'156'", "'182'", "'118'"]
'156'
'182'
'118'
['156', '182', '118']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="110" ssid="59">Continuing with the example above, one might extract a set of connected Wikipedia articles related to the focus of the journal and then train PLTM on a joint corpus consisting of journal papers and Wikipedia articles.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'110'"]
'192'
'148'
'110'
['192', '148', '110']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="6" ssid="2">Topic models have been used for analyzing topic trends in research literature (Mann et al., 2006; Hall et al., 2008), inferring captions for images (Blei and Jordan, 2003), social network analysis in email (McCallum et al., 2005), and expanding queries with topically related words in information retrieval (Wei and Croft, 2006).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'6'"]
'192'
'35'
'6'
['192', '35', '6']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'35'", "'192'", "'36'"]
'35'
'192'
'36'
['35', '192', '36']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="10" ssid="6">We demonstrate its utility and explore its characteristics using two polylingual corpora: proceedings of the European parliament (in eleven languages) and a collection of Wikipedia articles (in twelve languages).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'10'"]
'192'
'148'
'10'
['192', '148', '10']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="105" ssid="54">An important application for polylingual topic modeling is to use small numbers of comparable document tuples to link topics in larger collections of distinct, non-comparable documents in multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'192'", "'105'"]
'36'
'192'
'105'
['36', '192', '105']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'35'"]
'192'
'148'
'35'
['192', '148', '35']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']



D09-1092
P11-2084
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file W11-2123_aakansha.csv
submit_file input/res/Task1/W11-2123.annv3.csv
parsing: input/ref/Task1/W11-2123_aakansha.csv
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'7'"]
'7'
['7']
parsed_discourse_facet ['method_citation']
<S sid="45" ssid="23">The PROBING data structure is a rather straightforward application of these hash tables to store Ngram language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'"]
'45'
['45']
parsed_discourse_facet ['method_citation']
<S sid="136" ssid="8">We offer a state function s(wn1) = wn&#65533; where substring wn&#65533; is guaranteed to extend (to the right) in the same way that wn1 does for purposes of language modeling.</S>
original cit marker offset is 0
new cit marker offset is 0



["'136'"]
'136'
['136']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'7'"]
'7'
['7']
parsed_discourse_facet ['method_citation']
<S sid="8" ssid="3">Queries take the form p(wn|wn&#8722;1 1 ) where wn1 is an n-gram.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S>
original cit marker offset is 0
new cit marker offset is 0



["'205'"]
'205'
['205']
parsed_discourse_facet ['method_citation']
<S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S>
original cit marker offset is 0
new cit marker offset is 0



["'274'"]
'274'
['274']
parsed_discourse_facet ['method_citation']
<S sid="204" ssid="23">For RandLM, we used the settings in the documentation: 8 bits per value and false positive probability 1 256.</S>
original cit marker offset is 0
new cit marker offset is 0



["'204'"]
'204'
['204']
parsed_discourse_facet ['method_citation']
<S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S>
original cit marker offset is 0
new cit marker offset is 0



["'274'"]
'274'
['274']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="229" ssid="48">Then we ran binary search to determine the least amount of memory with which it would run.</S>
original cit marker offset is 0
new cit marker offset is 0



["'229'"]
'229'
['229']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="93" ssid="71">The cost of storing these averages, in bits, is Because there are comparatively few unigrams, we elected to store them byte-aligned and unquantized, making every query faster.</S>
original cit marker offset is 0
new cit marker offset is 0



["'93'"]
'93'
['93']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'"]
'199'
['199']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W11-2123.annv3.csv
<S sid="97" ssid="1">SRILM (Stolcke, 2002) is widely used within academia.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'97'", "'12'", "'199'"]
'97'
'12'
'199'
['97', '12', '199']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="223" ssid="42">The binary language model from Section 5.2 and text phrase table were forced into disk cache before each run.</S><S sid="203" ssid="22">As noted in Section 4.4, disk cache state is controlled by reading the entire binary file before each test begins.</S><S sid="180" ssid="52">In all of our experiments, the binary file (whether mapped or, in the case of most other packages, interpreted) is loaded into the disk cache in advance so that lazy mapping will never fault to disk.</S>
original cit marker offset is 0
new cit marker offset is 0



["'223'", "'203'", "'180'"]
'223'
'203'
'180'
['223', '203', '180']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="159" ssid="31">Saving state allows our code to walk the data structure exactly once per query.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="10" ssid="5">The problem is to store these two values for a large and sparse set of n-grams in a way that makes queries efficient.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'1'", "'10'"]
'159'
'1'
'10'
['159', '1', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'274'", "'199'"]
'1'
'274'
'199'
['1', '274', '199']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'12'", "'1'"]
'199'
'12'
'1'
['199', '12', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="24" ssid="2">The set of n-grams appearing in a model is sparse, and we want to efficiently find their associated probabilities and backoff penalties.</S><S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'24'", "'7'"]
'199'
'24'
'7'
['199', '24', '7']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="206" ssid="25">Tokens were converted to vocabulary identifiers in advance and state was carried from each query to the next.</S><S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'206'", "'103'"]
'1'
'206'
'103'
['1', '206', '103']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'1'", "'205'"]
'199'
'1'
'205'
['199', '1', '205']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="45" ssid="23">The PROBING data structure is a rather straightforward application of these hash tables to store Ngram language models.</S><S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S><S sid="23" ssid="1">We implement two data structures: PROBING, designed for speed, and TRIE, optimized for memory.</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'", "'274'", "'23'"]
'45'
'274'
'23'
['45', '274', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="92" ssid="70">To quantize, we use the binning method (Federico and Bertoldi, 2006) that sorts values, divides into equally sized bins, and averages within each bin.</S><S sid="34" ssid="12">Therefore, a populated probing hash table consists of an array of buckets that contain either one entry or are empty.</S><S sid="35" ssid="13">Non-empty buckets contain an entry belonging to them or to a preceding bucket where a conflict occurred.</S>
original cit marker offset is 0
new cit marker offset is 0



["'92'", "'34'", "'35'"]
'92'
'34'
'35'
['92', '34', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="275" ssid="2">The PROBING model is 2.4 times as fast as the fastest alternative, SRILM, and uses less memory too.</S><S sid="97" ssid="1">SRILM (Stolcke, 2002) is widely used within academia.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S>
original cit marker offset is 0
new cit marker offset is 0



["'275'", "'97'", "'12'"]
'275'
'97'
'12'
['275', '97', '12']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="102" ssid="6">The PROBING model was designed to improve upon SRILM by using linear probing hash tables (though not arranged in a trie), allocating memory all at once (eliminating the need for full pointers), and being easy to compile.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'199'", "'102'"]
'1'
'199'
'102'
['1', '199', '102']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'1'", "'0'"]
'103'
'1'
'0'
['103', '1', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'12'", "'1'"]
'199'
'12'
'1'
['199', '12', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'103'", "'0'"]
'199'
'103'
'0'
['199', '103', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'205'", "'199'", "'1'"]
'205'
'199'
'1'
['205', '199', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="131" ssid="3">Dynamic programming efficiently scores many hypotheses by exploiting the fact that an N-gram language model conditions on at most N − 1 preceding words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'199'", "'131'"]
'103'
'199'
'131'
['103', '199', '131']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'7'", "'0'"]
'1'
'7'
'0'
['1', '7', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'205'", "'1'"]
'199'
'205'
'1'
['199', '205', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="200" ssid="19">The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'205'", "'200'"]
'199'
'205'
'200'
['199', '205', '200']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



W11-2123
W12-3131
0
method_citation
['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']



W11-2123
W11-2139
0
method_citation
['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']



W11-2123
P13-2003
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W11-2123
W12-3160
0
method_citation
['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']



W11-2123
W12-3706
0
method_citation
['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']



W11-2123
W11-2147
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W11-2123
P13-2073
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W11-2123
P13-1109
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file P87-1015_swastika.csv
submit_file input/res/Task1/P87-1015.annv3.csv
parsing: input/ref/Task1/P87-1015_swastika.csv
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



['118']
118
['118']
parsed_discourse_facet ['aim_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



['118']
118
['118']
parsed_discourse_facet ['aim_citation']
<S sid="149" ssid="34">We can obtain a letter equivalent CFL defined by a CFG in which the for each rule as above, we have the production A &#8212;* A1 Anup where tk (up) = cp.</S>
original cit marker offset is 0
new cit marker offset is 0



['149']
149
['149']
parsed_discourse_facet ['method_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



['118']
118
['118']
parsed_discourse_facet ['aim_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



['118']
118
['118']
parsed_discourse_facet ['aim_citation']
    <S sid="2" ssid="2">In considering the relationship between formalisms, we show that it is useful to abstract away from the details of the formalism, and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation, we describe a class of formalisms which we call Linear Context- Free Rewriting Systems, and show they are recognizable in polynomial time and generate only semilinear languages.</S>
original cit marker offset is 0
new cit marker offset is 0



['2']
2
['2']
parsed_discourse_facet ['aim_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



['118']
118
['118']
parsed_discourse_facet ['aim_citation']
<S sid="222" ssid="28">However, in order to capture the properties of various grammatical systems under consideration, our notation is more restrictive that ILFP, which was designed as a general logical notation to characterize the complete class of languages that are recognizable in polynomial time.</S>
original cit marker offset is 0
new cit marker offset is 0



['222']
222
['222']
parsed_discourse_facet ['method_citation']
<S sid="119" ssid="4">In defining LCFRS's, we hope to generalize the definition of CFG's to formalisms manipulating any structure, e.g. strings, trees, or graphs.</S>
original cit marker offset is 0
new cit marker offset is 0



['119']
119
['119']
parsed_discourse_facet ['aim_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



['???']
???
['???']
parsed_discourse_facet ['aim_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S>
original cit marker offset is 0
new cit marker offset is 0



['207']
207
['207']
parsed_discourse_facet ['result_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S>
original cit marker offset is 0
new cit marker offset is 0



['207']
207
['207']
parsed_discourse_facet ['result_citation']
<S sid="19" ssid="4">It can be easily shown from Thatcher's result that the path set of every local set is a regular set.</S>
original cit marker offset is 0
new cit marker offset is 0



['19']
19
['19']
parsed_discourse_facet ['method_citation']
<S sid="119" ssid="4">In defining LCFRS's, we hope to generalize the definition of CFG's to formalisms manipulating any structure, e.g. strings, trees, or graphs.</S>
original cit marker offset is 0
new cit marker offset is 0



['119']
119
['119']
parsed_discourse_facet ['aim_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



['118']
118
['118']
parsed_discourse_facet ['aim_citation']
parsing: input/res/Task1/P87-1015.annv3.csv
<S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S><S sid="117" ssid="2">Our goal is to define a class of formal systems, and show that any member of this class will possess certain attractive properties.</S><S sid="110" ssid="16">The independence of paths in the tree sets of the k tI grammatical formalism in this hierarchy can be shown by means of tree pumping lemma of the form t1ti3t .</S>
original cit marker offset is 0
new cit marker offset is 0



["'165'", "'117'", "'110'"]
'165'
'117'
'110'
['165', '117', '110']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="111" ssid="17">.</S><S sid="230" ssid="36">LCFRS's have only been loosely defined in this paper; we have yet to provide a complete set of formal properties associated with members of this class.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'111'", "'230'", "'118'"]
'111'
'230'
'118'
['111', '230', '118']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="214" ssid="20">LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'125'", "'214'"]
'207'
'125'
'214'
['207', '125', '214']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'118'", "'92'"]
'207'
'118'
'92'
['207', '118', '92']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'92'", "'118'"]
'207'
'92'
'118'
['207', '92', '118']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'", "'207'", "'133'"]
'118'
'207'
'133'
['118', '207', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="214" ssid="20">LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S>
original cit marker offset is 0
new cit marker offset is 0



["'165'", "'125'", "'214'"]
'165'
'125'
'214'
['165', '125', '214']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="151" ssid="36">We now turn our attention to the recognition of string languages generated by these formalisms (LCFRL's).</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'151'", "'207'", "'92'"]
'151'
'207'
'92'
['151', '207', '92']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'", "'207'", "'133'"]
'118'
'207'
'133'
['118', '207', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="54" ssid="39">An IG can be viewed as a CFG in which each nonterminal is associated with a stack.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S>
original cit marker offset is 0
new cit marker offset is 0



["'54'", "'118'", "'165'"]
'54'
'118'
'165'
['54', '118', '165']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="75" ssid="60">A multicomponent Tree Adjoining Grammar (MCTAG) consists of a finite set of finite elementary tree sets.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S><S sid="28" ssid="13">A TAG consists of a finite set of elementary trees that are either initial trees or auxiliary trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'75'", "'133'", "'28'"]
'75'
'133'
'28'
['75', '133', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'207'", "'92'"]
'125'
'207'
'92'
['125', '207', '92']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="204" ssid="10">The similarities become apparent when they are studied at the level of derivation structures: derivation nee sets of CFG's, HG's, TAG's, and MCTAG's are all local sets.</S><S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'204'", "'165'"]
'125'
'204'
'165'
['125', '204', '165']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="78" ssid="63">Each member of a set of trees can be adjoined into distinct nodes of trees in a single elementary tree set, i.e, derivations always involve the adjunction of a derived auxiliary tree set into an elementary tree set.</S><S sid="80" ssid="65">The derivation trees of a MCTAG are similar to those of a TAG.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'78'", "'80'"]
'125'
'78'
'80'
['125', '78', '80']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="102" ssid="8">For example, let us consider a tree set containing trees of the form shown in Figure 4a.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'207'", "'102'"]
'125'
'207'
'102'
['125', '207', '102']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="134" ssid="19">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'125'", "'134'"]
'207'
'125'
'134'
['207', '125', '134']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2



P87-1015
E09-1055
0
aim_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



P87-1015
P09-1111
0
aim_citation
['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file P08-1043_swastika.csv
submit_file input/res/Task1/P08-1043.annv3.csv
parsing: input/ref/Task1/P08-1043_swastika.csv
    <S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S>
original cit marker offset is 0
new cit marker offset is 0



['94']
94
['94']
parsed_discourse_facet ['aim_citation']
<S sid="4" ssid="4">Using a treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling technique our model outperforms previous pipelined, integrated or factorized systems for Hebrew morphological and syntactic processing, yielding an error reduction of 12% over the best published results so far.</S>
original cit marker offset is 0
new cit marker offset is 0



['4']
4
['4']
parsed_discourse_facet ['result_citation']
    <S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S>
original cit marker offset is 0
new cit marker offset is 0



['94']
94
['94']
parsed_discourse_facet ['method_citation']
    <S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



['19']
19
['19']
parsed_discourse_facet ['method_citation']
    <S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



['19']
19
['19']
parsed_discourse_facet ['method_citation']
<S sid="4" ssid="4">Using a treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling technique our model outperforms previous pipelined, integrated or factorized systems for Hebrew morphological and syntactic processing, yielding an error reduction of 12% over the best published results so far.</S>
original cit marker offset is 0
new cit marker offset is 0



['4']
4
['4']
parsed_discourse_facet ['result_citation']
<S sid="105" ssid="37">3An English sentence with ambiguous PoS assignment can be trivially represented as a lattice similar to our own, where every pair of consecutive nodes correspond to a word, and every possible PoS assignment for this word is a connecting arc.</S>
original cit marker offset is 0
new cit marker offset is 0



['105']
105
['105']
parsed_discourse_facet ['method_citation']
    <S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



['19']
19
['19']
parsed_discourse_facet ['method_citation']
    <S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



['19']
19
['19']
parsed_discourse_facet ['method_citation']
<S sid="163" ssid="1">The accuracy results for segmentation, tagging and parsing using our different models and our standard data split are summarized in Table 1.</S>
original cit marker offset is 0
new cit marker offset is 0



['163']
163
['163']
parsed_discourse_facet ['result_citation']
    <S sid="100" ssid="32">This means that the rules in our grammar are of two kinds: (a) syntactic rules relating nonterminals to a sequence of non-terminals and/or PoS tags, and (b) lexical rules relating PoS tags to lattice arcs (lexemes).</S>
original cit marker offset is 0
new cit marker offset is 0



['100']
100
['100']
parsed_discourse_facet ['method_citation']
    <S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S>
original cit marker offset is 0
new cit marker offset is 0



['94']
94
['94']
parsed_discourse_facet ['result_citation']
<S sid="188" ssid="2">The overall performance of our joint framework demonstrates that a probability distribution obtained over mere syntactic contexts using a Treebank grammar and a data-driven lexicon outperforms upper bounds proposed by previous joint disambiguation systems and achieves segmentation and parsing results on a par with state-of-the-art standalone applications results.</S>
original cit marker offset is 0
new cit marker offset is 0



['188']
188
['188']
parsed_discourse_facet ['result_citation']
<S sid="86" ssid="18">A morphological analyzer M : W&#8212;* L is a function mapping sentences in Hebrew (W E W) to their corresponding lattices (M(W) = L E L).</S>
original cit marker offset is 0
new cit marker offset is 0



['86']
86
['86']
parsed_discourse_facet ['result_citation']
<S sid="97" ssid="29">Thus our proposed model is a proper model assigning probability mass to all (7r, L) pairs, where 7r is a parse tree and L is the one and only lattice that a sequence of characters (and spaces) W over our alpha-beth gives rise to.</S>
original cit marker offset is 0
new cit marker offset is 0



['97']
97
['97']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P08-1043.annv3.csv
<S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="189" ssid="3">Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'", "'69'", "'189'"]
'94'
'69'
'189'
['94', '69', '189']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="189" ssid="3">Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.</S><S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'189'", "'21'"]
'186'
'189'
'21'
['186', '189', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'70'", "'69'"]
'79'
'70'
'69'
['79', '70', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S><S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'186'", "'187'"]
'0'
'186'
'187'
['0', '186', '187']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'0'", "'187'"]
'186'
'0'
'187'
['186', '0', '187']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'69'", "'21'"]
'79'
'69'
'21'
['79', '69', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'70'", "'69'"]
'79'
'70'
'69'
['79', '70', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="85" ssid="17">The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="191" ssid="5">In the current work morphological analyses and lexical probabilities are derived from a small Treebank, which is by no means the best way to go.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'69'", "'191'"]
'85'
'69'
'191'
['85', '69', '191']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'187'", "'89'"]
'186'
'187'
'89'
['186', '187', '89']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'89'", "'0'"]
'186'
'89'
'0'
['186', '89', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'89'", "'70'", "'0'"]
'89'
'70'
'0'
['89', '70', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation']
<S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S><S sid="146" ssid="24">Given a PCFG grammar G and a lattice L with nodes n1 ... nk, we construct the weighted grammar GL as follows: for every arc (lexeme) l E L from node ni to node nj, we add to GL the rule [l --+ tni, tni+1, ... , tnj_1] with a probability of 1 (this indicates the lexeme l spans from node ni to node nj).</S><S sid="3" ssid="3">Here we propose a single joint model for performing both morphological segmentation and syntactic disambiguation which bypasses the associated circularity.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'146'", "'3'"]
'21'
'146'
'3'
['21', '146', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'94'", "'69'"]
'79'
'94'
'69'
['79', '94', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="188" ssid="2">The overall performance of our joint framework demonstrates that a probability distribution obtained over mere syntactic contexts using a Treebank grammar and a data-driven lexicon outperforms upper bounds proposed by previous joint disambiguation systems and achieves segmentation and parsing results on a par with state-of-the-art standalone applications results.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="191" ssid="5">In the current work morphological analyses and lexical probabilities are derived from a small Treebank, which is by no means the best way to go.</S>
original cit marker offset is 0
new cit marker offset is 0



["'188'", "'89'", "'191'"]
'188'
'89'
'191'
['188', '89', '191']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="85" ssid="17">The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.</S><S sid="75" ssid="7">Every token is independent of the others, and the sentence lattice is in fact a concatenation of smaller lattices, one for each token.</S><S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'75'", "'79'"]
'85'
'75'
'79'
['85', '75', '79']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="82" ssid="14">In sequential tagging models such as (Adler and Elhadad, 2006; Bar-Haim et al., 2007; Smith et al., 2005) weights are assigned according to a language model The input for the joint task is a sequence W = w1, ... , wn of space-delimited tokens.</S><S sid="84" ssid="16">The entries in such a lexicon may be thought of as meaningful surface segments paired up with their PoS tags li = (si, pi), but note that a surface segment s need not be a space-delimited token.</S><S sid="135" ssid="13">We construct a mapping from all the space-delimited tokens seen in the training sentences to their corresponding analyses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'82'", "'84'", "'135'"]
'82'
'84'
'135'
['82', '84', '135']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2



P08-1043
C10-1045
0
aim_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file A00-2030_sweta.csv
submit_file input/res/Task1/A00-2030.annv3.csv
parsing: input/ref/Task1/A00-2030_sweta.csv
<S sid="18" ssid="1">Almost all approaches to information extraction &#8212; even at the sentence level &#8212; are based on the divide-and-conquer strategy of reducing a complex problem to a set of simpler ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["18'"]
18'
['18']
parsed_discourse_facet ['method_citation']
<S sid="100" ssid="5">Given multiple constituents that cover identical spans in the chart, only those constituents with probabilities within a While our focus throughout the project was on TE and TR, we became curious about how well the model did at part-of-speech tagging, syntactic parsing, and at name finding.</S>
original cit marker offset is 0
new cit marker offset is 0



["100'"]
100'
['100']
parsed_discourse_facet ['method_citation']
<S sid="52" ssid="1">In this section, we describe the algorithm that was used to automatically produce augmented trees, starting with a) human-generated semantic annotations and b) machinegenerated syntactic parse trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["52'"]
52'
['52']
parsed_discourse_facet ['method_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["34'"]
34'
['34']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">Since 1995, a few statistical parsing algorithms have demonstrated a breakthrough in parsing accuracy, as measured against the UPenn TREEBANK as a gold standard.</S>
original cit marker offset is 0
new cit marker offset is 0



["1'"]
1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="61" ssid="2">The detailed probability structure differs, however, in that it was designed to jointly perform part-of-speech tagging, name finding, syntactic parsing, and relation finding in a single process.</S>
original cit marker offset is 0
new cit marker offset is 0



["61'"]
61'
['61']
parsed_discourse_facet ['method_citation']
<S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["104'"]
104'
['104']
parsed_discourse_facet ['method_citation']
<S sid="32" ssid="15">Because generative statistical models had already proven successful for each of the first three stages, we were optimistic that some of their properties &#8212; especially their ability to learn from large amounts of data, and their robustness when presented with unexpected inputs &#8212; would also benefit semantic analysis.</S>
original cit marker offset is 0
new cit marker offset is 0



["32'"]
32'
['32']
parsed_discourse_facet ['method_citation']
<S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["2'"]
2'
['2']
parsed_discourse_facet ['method_citation']
 <S sid="61" ssid="2">The detailed probability structure differs, however, in that it was designed to jointly perform part-of-speech tagging, name finding, syntactic parsing, and relation finding in a single process.</S>
original cit marker offset is 0
new cit marker offset is 0



["61'"]
61'
['61']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["33'"]
33'
['33']
parsed_discourse_facet ['method_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["34'"]
34'
['34']
parsed_discourse_facet ['method_citation']
<S sid="3" ssid="1">Since 1995, a few statistical parsing algorithms (Magerman, 1995; Collins, 1996 and 1997; Charniak, 1997; Rathnaparki, 1997) demonstrated a breakthrough in parsing accuracy, as measured against the University of Pennsylvania TREEBANK as a gold standard.</S>
original cit marker offset is 0
new cit marker offset is 0



["3'"]
3'
['3']
parsed_discourse_facet ['method_citation']
<S sid="52" ssid="1">In this section, we describe the algorithm that was used to automatically produce augmented trees, starting with a) human-generated semantic annotations and b) machinegenerated syntactic parse trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["52'"]
52'
['52']
parsed_discourse_facet ['method_citation']
<S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["104'"]
104'
['104']
parsed_discourse_facet ['method_citation']
<S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["104'"]
104'
['104']
parsed_discourse_facet ['method_citation']
<S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.<
original cit marker offset is 0
new cit marker offset is 0



["2'"]
2'
['2']
parsed_discourse_facet ['method_citation']
<S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction
original cit marker offset is 0
new cit marker offset is 0



["104'"]
104'
['104']
parsed_discourse_facet ['method_citation']
<S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["2'"]
2'
['2']
parsed_discourse_facet ['method_citation']
<S sid="61" ssid="2">The detailed probability structure differs, however, in that it was designed to jointly perform part-of-speech tagging, name finding, syntactic parsing, and relation finding in a single process.</S>
original cit marker offset is 0
new cit marker offset is 0



["61'"]
61'
['61']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/A00-2030.annv3.csv
<S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'6'", "'0'"]
'2'
'6'
'0'
['2', '6', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'0'"]
'33'
'34'
'0'
['33', '34', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="95" ssid="14">The semantics — that is, the entities and relations — can then be directly extracted from these sentential trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'95'"]
'33'
'34'
'95'
['33', '34', '95']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'58'"]
'33'
'34'
'58'
['33', '34', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="51" ssid="11">To produce a corpus of augmented parse trees, we used the following multi-step training procedure which exploited the Penn TREEBANK Applying this procedure yielded a new version of the semantically annotated corpus, now annotated with complete augmented trees like that in Figure 3.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'51'", "'0'"]
'33'
'51'
'0'
['33', '51', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S><S sid="56" ssid="2">For example, in the phrase &quot;Lt. Cmdr.</S><S sid="38" ssid="6">Other labels indicate relations among entities.</S>
original cit marker offset is 0
new cit marker offset is 0



["'6'", "'56'", "'38'"]
'6'
'56'
'38'
['6', '56', '38']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'34'", "'33'"]
'0'
'34'
'33'
['0', '34', '33']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'0'"]
'33'
'34'
'0'
['33', '34', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="76" ssid="17">Finally, word features, fm, for modifiers are predicted based on the modifier, cm, the partof-speech tag of the modifier word , t„„ the part-of-speech tag of the head word th, the head word itself, wh, and whether or not the modifier head word, w„„ is known or unknown.</S><S sid="63" ssid="4">Head words, along with their part-of-speech tags and features, are generated for each modifier as soon as the modifier is created.</S><S sid="22" ssid="5">There is no opportunity for a later stage, such as parsing, to influence or correct an earlier stage such as part-of-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'76'", "'63'", "'22'"]
'76'
'63'
'22'
['76', '63', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="23" ssid="6">An integrated model can limit the propagation of errors by making all decisions jointly.</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'104'"]
'0'
'23'
'104'
['0', '23', '104']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'33'", "'58'"]
'34'
'33'
'58'
['34', '33', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'6'"]
'0'
'2'
'6'
['0', '2', '6']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'0'", "'6'"]
'33'
'0'
'6'
['33', '0', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'0'", "'34'"]
'33'
'0'
'34'
['33', '0', '34']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'0'", "'58'"]
'34'
'0'
'58'
['34', '0', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'33'", "'0'"]
'34'
'33'
'0'
['34', '33', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="76" ssid="17">Finally, word features, fm, for modifiers are predicted based on the modifier, cm, the partof-speech tag of the modifier word , t„„ the part-of-speech tag of the head word th, the head word itself, wh, and whether or not the modifier head word, w„„ is known or unknown.</S><S sid="63" ssid="4">Head words, along with their part-of-speech tags and features, are generated for each modifier as soon as the modifier is created.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'76'", "'63'", "'0'"]
'76'
'63'
'0'
['76', '63', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S><S sid="11" ssid="1">We evaluated the new approach to information extraction on two of the tasks of the Seventh Message Understanding Conference (MUC-7) and reported in (Marsh, 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'104'", "'11'"]
'0'
'104'
'11'
['0', '104', '11']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'104'", "'58'"]
'0'
'104'
'58'
['0', '104', '58']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
IGNORE THIS: key error 1



A00-2030
W05-0636
0
method_citation
['hypothesis_citation', 'aim_citation', 'implication_citation']
gold file P11-1060_swastika.csv
submit_file input/res/Task1/P11-1060.annv3.csv
parsing: input/ref/Task1/P11-1060_swastika.csv
<S sid="112" ssid="88">Our learning algorithm alternates between (i) using the current parameters &#952; to generate the K-best set &#732;ZL,&#952;(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.</S>
original cit marker offset is 0
new cit marker offset is 0



['112']
112
['112']
parsed_discourse_facet ['method_citation']
<S sid="112" ssid="88">Our learning algorithm alternates between (i) using the current parameters &#952; to generate the K-best set &#732;ZL,&#952;(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.</S>
original cit marker offset is 0
new cit marker offset is 0



['112']
112
['112']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="1">We first present a basic version (Section 2.1) of dependency-based compositional semantics (DCS), which captures the core idea of using trees to represent formal semantics.</S>
original cit marker offset is 0
new cit marker offset is 0



['25']
25
['25']
parsed_discourse_facet ['aim_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



['21']
21
['21']
parsed_discourse_facet ['aim_citation']
<S sid="25" ssid="1">We first present a basic version (Section 2.1) of dependency-based compositional semantics (DCS), which captures the core idea of using trees to represent formal semantics.</S>
original cit marker offset is 0
new cit marker offset is 0



['25']
25
['25']
parsed_discourse_facet ['aim_citation']
    <S sid="148" ssid="33">This bootstrapping behavior occurs naturally: The &#8220;easy&#8221; examples are processed first, where easy is defined by the ability of the current model to generate the correct answer using any tree. with scope variation.</S>
original cit marker offset is 0
new cit marker offset is 0



['148']
148
['148']
parsed_discourse_facet ['method_citation']
    <S sid="13" ssid="9">We want to induce latent logical forms z (and parameters 0) given only question-answer pairs (x, y), which is much cheaper to obtain than (x, z) pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



['13']
13
['13']
parsed_discourse_facet ['result_citation']
<S sid="112" ssid="88">Our learning algorithm alternates between (i) using the current parameters &#952; to generate the K-best set &#732;ZL,&#952;(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.</S>
original cit marker offset is 0
new cit marker offset is 0



['112']
112
['112']
parsed_discourse_facet ['result_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



['21']
21
['21']
parsed_discourse_facet ['aim_citation']
<S sid="47" ssid="23">This algorithm is linear in the number of nodes times the size of the denotations.1 Now the dual importance of trees in DCS is clear: We have seen that trees parallel syntactic dependency structure, which will facilitate parsing.</S>
original cit marker offset is 0
new cit marker offset is 0



['47']
47
['47']
parsed_discourse_facet ['method_citation']
<S sid="112" ssid="88">Our learning algorithm alternates between (i) using the current parameters &#952; to generate the K-best set &#732;ZL,&#952;(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.</S>
original cit marker offset is 0
new cit marker offset is 0



['112']
112
['112']
parsed_discourse_facet ['method_citation']
S sid="44" ssid="20">The recurrence is as follows: At each node, we compute the set of tuples v consistent with the predicate at that node (v &#8712; w(p)), and S(x)}, where a set of pairs S is treated as a set-valued function S(x) = {y : (x, y) &#8712; S} with domain S1 = {x : (x, y) &#8712; S}.</S>
original cit marker offset is 0
new cit marker offset is 0



['44']
44
['44']
Error in Reference Offset
<S sid="106" ssid="82">Learning Given a training dataset D containing (x, y) pairs, we define the regularized marginal log-likelihood objective O(&#952;) = E(x,y)ED log p&#952;(JzKw = y  |x, z &#8712; ZL(x)) &#8722; &#955;k&#952;k22, which sums over all DCS trees z that evaluate to the target answer y.</S>
original cit marker offset is 0
new cit marker offset is 0



['106']
106
['106']
parsed_discourse_facet ['aim_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



['21']
21
['21']
parsed_discourse_facet ['aim_citation']
    <S sid="172" ssid="57">Free from the burden It also allows us to easily add new lexical triggers of annotating logical forms, we hope to use our without becoming mired in the semantic formalism. techniques in developing even more accurate and Quantifiers and superlatives significantly compli- broader-coverage language understanding systems. cate scoping in lambda calculus, and often type rais- Acknowledgments We thank Luke Zettlemoyer ing needs to be employed.</S>
original cit marker offset is 0
new cit marker offset is 0



['172']
172
['172']
parsed_discourse_facet ['result_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



['21']
21
['21']
parsed_discourse_facet ['aim_citation']
<S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



['171']
171
['171']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P11-1060.annv3.csv
<S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'3'", "'2'"]
'0'
'3'
'2'
['0', '3', '2']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="156" ssid="41">There has been a fair amount of past work on no predicates), confusion of Washington state with this topic: Liang et al. (2010) induces combinatory Washington D.C., learning the wrong lexical asso- logic programs in a non-linguistic setting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'3'", "'156'"]
'2'
'3'
'156'
['2', '3', '156']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="169" ssid="54">The combination rules are encoded in the tems, despite using no annotated logical forms.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'22'", "'6'"]
'169'
'22'
'6'
['169', '22', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="45" ssid="21">The logical forms in DCS are called DCS trees, where nodes are labeled with predicates, and edges are labeled with relations.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'", "'54'", "'21'"]
'45'
'54'
'21'
['45', '54', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'167'", "'54'", "'21'"]
'167'
'54'
'21'
['167', '54', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'0'", "'3'"]
'149'
'0'
'3'
['149', '0', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="163" ssid="48">Feedback from the context; for example, the lexical entry for borders world has been used to guide both syntactic parsing is S\NP/NP : Ay.Ax.border(x, y), which means (Schuler, 2003) and semantic parsing (Popescu et borders looks right for the first argument and left al., 2003; Clarke et al., 2010).</S><S sid="52" ssid="28">The denotation of the middle node is {s}, where s is all major cities.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'163'", "'52'"]
'3'
'163'
'52'
['3', '163', '52']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="169" ssid="54">The combination rules are encoded in the tems, despite using no annotated logical forms.</S><S sid="117" ssid="2">In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'117'", "'6'"]
'169'
'117'
'6'
['169', '117', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="117" ssid="2">In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="35" ssid="11">Although a DCS tree is a logical form, note that it looks like a syntactic dependency tree with predicates in place of words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'117'", "'22'", "'35'"]
'117'
'22'
'35'
['117', '22', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S><S sid="132" ssid="17">Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'6'", "'132'"]
'2'
'6'
'132'
['2', '6', '132']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'0'", "'171'"]
'21'
'0'
'171'
['21', '0', '171']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S><S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'21'", "'149'"]
'0'
'21'
'149'
['0', '21', '149']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'54'", "'167'"]
'149'
'54'
'167'
['149', '54', '167']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="85" ssid="61">Extraction allows us to return the set of consistent values of a marked non-root node.</S><S sid="42" ssid="18">The denotation JzKw (z evaluated on w) is the set of consistent values of the root node (see Figure 2 for an example).</S><S sid="38" ssid="14">Let us start by considering a DCS tree z with only join relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'42'", "'38'"]
'85'
'42'
'38'
['85', '42', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S><S sid="1" ssid="1">Compositional question answering begins by mapping questions to logical forms, but training a semantic parser to perform this mapping typically requires the costly annotation of the target logical forms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'171'", "'1'"]
'3'
'171'
'1'
['3', '171', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'167'", "'54'"]
'149'
'167'
'54'
['149', '167', '54']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="172" ssid="57">Free from the burden It also allows us to easily add new lexical triggers of annotating logical forms, we hope to use our without becoming mired in the semantic formalism. techniques in developing even more accurate and Quantifiers and superlatives significantly compli- broader-coverage language understanding systems. cate scoping in lambda calculus, and often type rais- Acknowledgments We thank Luke Zettlemoyer ing needs to be employed.</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="161" ssid="46">CCG (Steedman, 2000), in which semantic pars- The integration of natural language with denotaing is driven from the lexicon.</S>
original cit marker offset is 0
new cit marker offset is 0



["'172'", "'0'", "'161'"]
'172'
'0'
'161'
['172', '0', '161']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S>
original cit marker offset is 0
new cit marker offset is 0



["'22'", "'6'", "'0'"]
'22'
'6'
'0'
['22', '6', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="48" ssid="24">In addition, trees enable efficient computation, thereby establishing a new connection between dependency syntax and efficient semantic evaluation.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'22'", "'171'"]
'48'
'22'
'171'
['48', '22', '171']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2



P11-1060
P13-1092
0
aim_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



P11-1060
P13-1007
0
result_citation
['hypothesis_citation', 'implication_citation']



P11-1060
P12-1051
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file P08-1043_sweta.csv
submit_file input/res/Task1/P08-1043.annv3.csv
parsing: input/ref/Task1/P08-1043_sweta.csv
<S sid="156" ssid="34">To evaluate the performance on the segmentation task, we report SEG, the standard harmonic means for segmentation Precision and Recall F1 (as defined in Bar-Haim et al. (2005); Tsarfaty (2006)) as well as the segmentation accuracy SEGTok measure indicating the percentage of input tokens assigned the correct exact segmentation (as reported by Cohen and Smith (2007)).</S>
original cit marker offset is 0
new cit marker offset is 0



["156'"]
156'
['156']
parsed_discourse_facet ['method_citation']
<S sid="4" ssid="4">Using a treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling technique our model outperforms previous pipelined, integrated or factorized systems for Hebrew morphological and syntactic processing, yielding an error reduction of 12% over the best published results so far.</S>
original cit marker offset is 0
new cit marker offset is 0



["4'"]
4'
['4']
parsed_discourse_facet ['method_citation']
<S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S>
original cit marker offset is 0
new cit marker offset is 0



["70'"]
70'
['70']
parsed_discourse_facet ['method_citation']
<S sid="3" ssid="3">Here we propose a single joint model for performing both morphological segmentation and syntactic disambiguation which bypasses the associated circularity.</S>
original cit marker offset is 0
new cit marker offset is 0



["3'"]
3'
['3']
parsed_discourse_facet ['method_citation']
<S sid="51" ssid="9">Tsarfaty (2006) used a morphological analyzer (Segal, 2000), a PoS tagger (Bar-Haim et al., 2005), and a general purpose parser (Schmid, 2000) in an integrated framework in which morphological and syntactic components interact to share information, leading to improved performance on the joint task.</S>
original cit marker offset is 0
new cit marker offset is 0



["51'"]
51'
['51']
parsed_discourse_facet ['method_citation']
<S sid="107" ssid="39">Firstly, Hebrew unknown tokens are doubly unknown: each unknown token may correspond to several segmentation possibilities, and each segment in such sequences may be able to admit multiple PoS tags.</S>
original cit marker offset is 0
new cit marker offset is 0



["107'"]
107'
['107']
parsed_discourse_facet ['method_citation']
<S sid="14" ssid="10">The input for the segmentation task is however highly ambiguous for Semitic languages, and surface forms (tokens) may admit multiple possible analyses as in (BarHaim et al., 2007; Adler and Elhadad, 2006).</S>
original cit marker offset is 0
new cit marker offset is 0



["14'"]
14'
['14']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="12">The current work treats both segmental and super-segmental phenomena, yet we note that there may be more adequate ways to treat supersegmental phenomena assuming Word-Based morphology as we explore in (Tsarfaty and Goldberg, 2008).</S>
original cit marker offset is 0
new cit marker offset is 0



["33'"]
33'
['33']
parsed_discourse_facet ['method_citation']
<S sid="53" ssid="11">Both (Tsarfaty, 2006; Cohen and Smith, 2007) have shown that a single integrated framework outperforms a completely streamlined implementation, yet neither has shown a single generative model which handles both tasks.</S>
original cit marker offset is 0
new cit marker offset is 0



["53'"]
53'
['53']
parsed_discourse_facet ['method_citation']
 <S sid="48" ssid="6">Tsarfaty (2006) was the first to demonstrate that fully automatic Hebrew parsing is feasible using the newly available 5000 sentences treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["48'"]
48'
['48']
parsed_discourse_facet ['method_citation']
<S sid="141" ssid="19">This analyzer setting is similar to that of (Cohen and Smith, 2007), and models using it are denoted nohsp, Parser and Grammar We used BitPar (Schmid, 2004), an efficient general purpose parser,10 together with various treebank grammars to parse the input sentences and propose compatible morphological segmentation and syntactic analysis.</S>
original cit marker offset is 0
new cit marker offset is 0



["141'"]
141'
['141']
parsed_discourse_facet ['method_citation']
<S sid="188" ssid="2">The overall performance of our joint framework demonstrates that a probability distribution obtained over mere syntactic contexts using a Treebank grammar and a data-driven lexicon outperforms upper bounds proposed by previous joint disambiguation systems and achieves segmentation and parsing results on a par with state-of-the-art standalone applications results.</S>
original cit marker offset is 0
new cit marker offset is 0



["188'"]
188'
['188']
parsed_discourse_facet ['method_citation']
<S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S>
original cit marker offset is 0
new cit marker offset is 0



["94'"]
94'
['94']
parsed_discourse_facet ['method_citation']
<S sid="134" ssid="12">Such resources exist for Hebrew (Itai et al., 2006), but unfortunately use a tagging scheme which is incompatible with the one of the Hebrew Treebank.s For this reason, we use a data-driven morphological analyzer derived from the training data similar to (Cohen and Smith, 2007).</S>
original cit marker offset is 0
new cit marker offset is 0



["134'"]
134'
['134']
parsed_discourse_facet ['method_citation']
    <S sid="156" ssid="34">To evaluate the performance on the segmentation task, we report SEG, the standard harmonic means for segmentation Precision and Recall F1 (as defined in Bar-Haim et al. (2005); Tsarfaty (2006)) as well as the segmentation accuracy SEGTok measure indicating the percentage of input tokens assigned the correct exact segmentation (as reported by Cohen and Smith (2007)).</S>
original cit marker offset is 0
new cit marker offset is 0



["156'"]
156'
['156']
parsed_discourse_facet ['method_citation']
<S sid="5" ssid="1">Current state-of-the-art broad-coverage parsers assume a direct correspondence between the lexical items ingrained in the proposed syntactic analyses (the yields of syntactic parse-trees) and the spacedelimited tokens (henceforth, &#8216;tokens&#8217;) that constitute the unanalyzed surface forms (utterances).</S>
original cit marker offset is 0
new cit marker offset is 0



["5'"]
5'
['5']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P08-1043.annv3.csv
<S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="189" ssid="3">Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'", "'69'", "'189'"]
'94'
'69'
'189'
['94', '69', '189']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="189" ssid="3">Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.</S><S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'189'", "'21'"]
'186'
'189'
'21'
['186', '189', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'70'", "'69'"]
'79'
'70'
'69'
['79', '70', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S><S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'186'", "'187'"]
'0'
'186'
'187'
['0', '186', '187']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'0'", "'187'"]
'186'
'0'
'187'
['186', '0', '187']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'69'", "'21'"]
'79'
'69'
'21'
['79', '69', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'70'", "'69'"]
'79'
'70'
'69'
['79', '70', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="85" ssid="17">The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="191" ssid="5">In the current work morphological analyses and lexical probabilities are derived from a small Treebank, which is by no means the best way to go.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'69'", "'191'"]
'85'
'69'
'191'
['85', '69', '191']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'187'", "'89'"]
'186'
'187'
'89'
['186', '187', '89']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'89'", "'0'"]
'186'
'89'
'0'
['186', '89', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'89'", "'70'", "'0'"]
'89'
'70'
'0'
['89', '70', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation']
<S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S><S sid="146" ssid="24">Given a PCFG grammar G and a lattice L with nodes n1 ... nk, we construct the weighted grammar GL as follows: for every arc (lexeme) l E L from node ni to node nj, we add to GL the rule [l --+ tni, tni+1, ... , tnj_1] with a probability of 1 (this indicates the lexeme l spans from node ni to node nj).</S><S sid="3" ssid="3">Here we propose a single joint model for performing both morphological segmentation and syntactic disambiguation which bypasses the associated circularity.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'146'", "'3'"]
'21'
'146'
'3'
['21', '146', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'94'", "'69'"]
'79'
'94'
'69'
['79', '94', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="188" ssid="2">The overall performance of our joint framework demonstrates that a probability distribution obtained over mere syntactic contexts using a Treebank grammar and a data-driven lexicon outperforms upper bounds proposed by previous joint disambiguation systems and achieves segmentation and parsing results on a par with state-of-the-art standalone applications results.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="191" ssid="5">In the current work morphological analyses and lexical probabilities are derived from a small Treebank, which is by no means the best way to go.</S>
original cit marker offset is 0
new cit marker offset is 0



["'188'", "'89'", "'191'"]
'188'
'89'
'191'
['188', '89', '191']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="85" ssid="17">The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.</S><S sid="75" ssid="7">Every token is independent of the others, and the sentence lattice is in fact a concatenation of smaller lattices, one for each token.</S><S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'75'", "'79'"]
'85'
'75'
'79'
['85', '75', '79']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="82" ssid="14">In sequential tagging models such as (Adler and Elhadad, 2006; Bar-Haim et al., 2007; Smith et al., 2005) weights are assigned according to a language model The input for the joint task is a sequence W = w1, ... , wn of space-delimited tokens.</S><S sid="84" ssid="16">The entries in such a lexicon may be thought of as meaningful surface segments paired up with their PoS tags li = (si, pi), but note that a surface segment s need not be a space-delimited token.</S><S sid="135" ssid="13">We construct a mapping from all the space-delimited tokens seen in the training sentences to their corresponding analyses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'82'", "'84'", "'135'"]
'82'
'84'
'135'
['82', '84', '135']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



P08-1043
P10-1074
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file D10-1044_sweta.csv
submit_file input/res/Task1/D10-1044.annv3.csv
parsing: input/ref/Task1/D10-1044_sweta.csv
<S sid="4" ssid="1">Domain adaptation is a common concern when optimizing empirical NLP applications.</S>
original cit marker offset is 0
new cit marker offset is 0



["4'"]
4'
['4']
parsed_discourse_facet ['method_citation']
<S sid="132" ssid="1">We have already mentioned the closely related work by Matsoukas et al (2009) on discriminative corpus weighting, and Jiang and Zhai (2007) on (nondiscriminative) instance weighting.</S>
original cit marker offset is 0
new cit marker offset is 0



["132'"]
132'
['132']
parsed_discourse_facet ['method_citation']
<S sid="7" ssid="4">For developers of Statistical Machine Translation (SMT) systems, an additional complication is the heterogeneous nature of SMT components (word-alignment model, language model, translation model, etc.</S>
original cit marker offset is 0
new cit marker offset is 0



["7'"]
7'
['7']
parsed_discourse_facet ['method_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["62'"]
62'
['62']
parsed_discourse_facet ['method_citation']
<S sid="50" ssid="14">Linear weights are difficult to incorporate into the standard MERT procedure because they are &#8220;hidden&#8221; within a top-level probability that represents the linear combination.1 Following previous work (Foster and Kuhn, 2007), we circumvent this problem by choosing weights to optimize corpus loglikelihood, which is roughly speaking the training criterion used by the LM and TM themselves.</S>
original cit marker offset is 0
new cit marker offset is 0



["50'"]
50'
['50']
parsed_discourse_facet ['method_citation']
<S sid="152" ssid="9">We will also directly compare with a baseline similar to the Matsoukas et al approach in order to measure the benefit from weighting phrase pairs (or ngrams) rather than full sentences.</S>
original cit marker offset is 0
new cit marker offset is 0



["152'"]
152'
['152']
parsed_discourse_facet ['method_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["144'"]
144'
['144']
parsed_discourse_facet ['method_citation']
 <S sid="9" ssid="6">In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material&#8212;though adequate for reasonable performance&#8212;is also available.</S>
original cit marker offset is 0
new cit marker offset is 0



["9'"]
9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="75" ssid="12">However, it is robust, efficient, and easy to implement.4 To perform the maximization in (7), we used the popular L-BFGS algorithm (Liu and Nocedal, 1989), which requires gradient information.</S>
original cit marker offset is 0
new cit marker offset is 0



["75'"]
75'
['75']
parsed_discourse_facet ['method_citation']
<S sid="28" ssid="25">We train linear mixture models for conditional phrase pair probabilities over IN and OUT so as to maximize the likelihood of an empirical joint phrase-pair distribution extracted from a development set.</S>
original cit marker offset is 0
new cit marker offset is 0



["28'"]
28'
['28']
parsed_discourse_facet ['method_citation']
<S sid="97" ssid="1">We carried out translation experiments in two different settings.</S>
original cit marker offset is 0
new cit marker offset is 0



["97'"]
97'
['97']
parsed_discourse_facet ['method_citation']
<S sid="75" ssid="12">However, it is robust, efficient, and easy to implement.4 To perform the maximization in (7), we used the popular L-BFGS algorithm (Liu and Nocedal, 1989), which requires gradient information.</S>
original cit marker offset is 0
new cit marker offset is 0



["75'"]
75'
['75']
parsed_discourse_facet ['method_citation']
<S sid="143" ssid="12">Other work includes transferring latent topic distributions from source to target language for LM adaptation, (Tam et al., 2007) and adapting features at the sentence level to different categories of sentence (Finch and Sumita, 2008).</S>
original cit marker offset is 0
new cit marker offset is 0



["143'"]
143'
['143']
parsed_discourse_facet ['method_citation']
<S sid="153" ssid="10">Finally, we intend to explore more sophisticated instanceweighting features for capturing the degree of generality of phrase pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["153'"]
153'
['153']
parsed_discourse_facet ['method_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["144'"]
144'
['144']
parsed_discourse_facet ['method_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["62'"]
62'
['62']
parsed_discourse_facet ['method_citation']
<S sid="141" ssid="10">Moving beyond directly related work, major themes in SMT adaptation include the IR (Hildebrand et al., 2005; L&#168;u et al., 2007; Zhao et al., 2004) and mixture (Finch and Sumita, 2008; Foster and Kuhn, 2007; Koehn and Schroeder, 2007; L&#168;u et al., 2007) approaches for LMs and TMs described above, as well as methods for exploiting monolingual in-domain text, typically by translating it automatically and then performing self training (Bertoldi and Federico, 2009; Ueffing et al., 2007; Schwenk and Senellart, 2009).</S>
original cit marker offset is 0
new cit marker offset is 0



["141'"]
141'
['141']
parsed_discourse_facet ['method_citation']
 <S sid="28" ssid="25">We train linear mixture models for conditional phrase pair probabilities over IN and OUT so as to maximize the likelihood of an empirical joint phrase-pair distribution extracted from a development set.</S>
original cit marker offset is 0
new cit marker offset is 0



["28'"]
28'
['28']
parsed_discourse_facet ['method_citation']
<S sid="37" ssid="1">Standard SMT systems have a hierarchical parameter structure: top-level log-linear weights are used to combine a small set of complex features, interpreted as log probabilities, many of which have their own internal parameters and objectives.</S>
original cit marker offset is 0
new cit marker offset is 0



["37'"]
37'
['37']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/D10-1044.annv3.csv
<S sid="143" ssid="12">Other work includes transferring latent topic distributions from source to target language for LM adaptation, (Tam et al., 2007) and adapting features at the sentence level to different categories of sentence (Finch and Sumita, 2008).</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="4" ssid="1">Domain adaptation is a common concern when optimizing empirical NLP applications.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'1'", "'4'"]
'143'
'1'
'4'
['143', '1', '4']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="65" ssid="2">Matsoukas et al (2009) generalize it by learning weights on sentence pairs that are used when estimating relative-frequency phrase-pair probabilities.</S><S sid="96" ssid="33">We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'65'", "'96'"]
'68'
'65'
'96'
['68', '65', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="9" ssid="6">In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material—though adequate for reasonable performance—is also available.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'", "'1'", "'9'"]
'144'
'1'
'9'
['144', '1', '9']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'", "'145'", "'1'"]
'62'
'145'
'1'
['62', '145', '1']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S><S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'62'"]
'0'
'23'
'62'
['0', '23', '62']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="65" ssid="2">Matsoukas et al (2009) generalize it by learning weights on sentence pairs that are used when estimating relative-frequency phrase-pair probabilities.</S><S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="67" ssid="4">We extend the Matsoukas et al approach in several ways.</S>
original cit marker offset is 0
new cit marker offset is 0



["'65'", "'68'", "'67'"]
'65'
'68'
'67'
['65', '68', '67']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="18">This highly effective approach is not directly applicable to the multinomial models used for core SMT components, which have no natural method for combining split features, so we rely on an instance-weighting approach (Jiang and Zhai, 2007) to downweight domain-specific examples in OUT.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'145'", "'0'"]
'21'
'145'
'0'
['21', '145', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="148" ssid="5">Mixing, smoothing, and instance-feature weights are learned at the same time using an efficient maximum-likelihood procedure that relies on only a small in-domain development corpus.</S><S sid="97" ssid="1">We carried out translation experiments in two different settings.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'148'", "'97'"]
'145'
'148'
'97'
['145', '148', '97']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S><S sid="117" ssid="21">The natural baseline (baseline) outperforms the pure IN system only for EMEA/EP fren.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'117'", "'62'"]
'0'
'117'
'62'
['0', '117', '62']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="42" ssid="6">The natural baseline approach is to concatenate data from IN and OUT.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="28" ssid="25">We train linear mixture models for conditional phrase pair probabilities over IN and OUT so as to maximize the likelihood of an empirical joint phrase-pair distribution extracted from a development set.</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'145'", "'28'"]
'42'
'145'
'28'
['42', '145', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="84" ssid="21">An alternate approximation to (8) would be to let w,\(s, t) directly approximate pˆI(s, t).</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="32" ssid="29">This is a straightforward technique that is arguably better suited to the adaptation task than the standard method of treating representative IN sentences as queries, then pooling the match results.</S>
original cit marker offset is 0
new cit marker offset is 0



["'84'", "'1'", "'32'"]
'84'
'1'
'32'
['84', '1', '32']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="75" ssid="12">However, it is robust, efficient, and easy to implement.4 To perform the maximization in (7), we used the popular L-BFGS algorithm (Liu and Nocedal, 1989), which requires gradient information.</S><S sid="84" ssid="21">An alternate approximation to (8) would be to let w,\(s, t) directly approximate pˆI(s, t).</S><S sid="63" ssid="27">The number of top-ranked pairs to retain is chosen to optimize dev-set BLEU score.</S>
original cit marker offset is 0
new cit marker offset is 0



["'75'", "'84'", "'63'"]
'75'
'84'
'63'
['75', '84', '63']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S><S sid="31" ssid="28">For comparison to information-retrieval inspired baselines, eg (L¨u et al., 2007), we select sentences from OUT using language model perplexities from IN.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'", "'31'", "'1'"]
'144'
'31'
'1'
['144', '31', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="22" ssid="19">Within this framework, we use features intended to capture degree of generality, including the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S>
original cit marker offset is 0
new cit marker offset is 0



["'22'", "'145'", "'0'"]
'22'
'145'
'0'
['22', '145', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'145'", "'1'"]
'23'
'145'
'1'
['23', '145', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'62'", "'1'"]
'145'
'62'
'1'
['145', '62', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="42" ssid="6">The natural baseline approach is to concatenate data from IN and OUT.</S><S sid="117" ssid="21">The natural baseline (baseline) outperforms the pure IN system only for EMEA/EP fren.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'117'", "'145'"]
'42'
'117'
'145'
['42', '117', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="38" ssid="2">The toplevel weights are trained to maximize a metric such as BLEU on a small development set of approximately 1000 sentence pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'1'", "'38'"]
'68'
'1'
'38'
['68', '1', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="40" ssid="4">We focus here instead on adapting the two most important features: the language model (LM), which estimates the probability p(wIh) of a target word w following an ngram h; and the translation models (TM) p(slt) and p(t1s), which give the probability of source phrase s translating to target phrase t, and vice versa.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'40'", "'145'"]
'68'
'40'
'145'
['68', '40', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



D10-1044
P11-2074
0
method_citation
['method_citation', 'aim_citation', 'results_citation', 'implication_citation']



D10-1044
P14-2093
0
method_citation
['method_citation', 'implication_citation']
gold file W06-2932_vardha.csv
submit_file input/res/Task1/W06-2932.annv3.csv
parsing: input/ref/Task1/W06-2932_vardha.csv
    <S sid="19" ssid="1">The first stage of our system creates an unlabeled parse y for an input sentence x.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'"]
'19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="36" ssid="5">However, in a two stage system we can incorporate features over the entire output of the unlabeled parser since that structure is fixed as input.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
    <S sid="57" ssid="5">Performance is measured through unlabeled accuracy, which is the percentage of words that modify the correct head in the dependency graph, and labeled accuracy, which is the percentage of words that modify the correct head and label the dependency edge correctly in the graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'"]
'57'
['57']
parsed_discourse_facet ['method_citation']
    <S sid="76" ssid="14">For instance, sequential labeling improves the labeling of 2This difference was much larger for experiments in which gold standard unlabeled dependencies are used. objects from 81.7%/75.6% to 84.2%/81.3% (labeled precision/recall) and the labeling of subjects from 86.8%/88.2% to 90.5%/90.4% for Swedish.</S>
original cit marker offset is 0
new cit marker offset is 0



["'76'"]
'76'
['76']
parsed_discourse_facet ['method_citation']
 <S sid="54" ssid="2">Based on performance from a held-out section of the training data, we used non-projective parsing algorithms for Czech, Danish, Dutch, German, Japanese, Portuguese and Slovene, and projective parsing algorithms for Arabic, Bulgarian, Chinese, Spanish, Swedish and Turkish.</S>
original cit marker offset is 0
new cit marker offset is 0



["'54'"]
'54'
['54']
parsed_discourse_facet ['method_citation']
    <S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'"]
'104'
['104']
parsed_discourse_facet ['method_citation']
    <S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S>
original cit marker offset is 0
new cit marker offset is 0



["'12'"]
'12'
['12']
parsed_discourse_facet ['method_citation']
    <S sid="57" ssid="5">Performance is measured through unlabeled accuracy, which is the percentage of words that modify the correct head in the dependency graph, and labeled accuracy, which is the percentage of words that modify the correct head and label the dependency edge correctly in the graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'"]
'57'
['57']
parsed_discourse_facet ['method_citation']
    <S sid="58" ssid="6">These results show that the discriminative spanning tree parsing framework (McDonald et al., 2005b; McDonald and Pereira, 2006) is easily adapted across all these languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'58'"]
'58'
['58']
parsed_discourse_facet ['method_citation']
    <S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S>
original cit marker offset is 0
new cit marker offset is 0



["'22'"]
'22'
['22']
parsed_discourse_facet ['method_citation']
    <S sid="41" ssid="10">To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm&#65533;1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm&#8722;1) in the tree y.</S>
original cit marker offset is 0
new cit marker offset is 0



["'41'"]
'41'
['41']
parsed_discourse_facet ['method_citation']
    <S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
    <S sid="64" ssid="2">N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.</S>
original cit marker offset is 0
new cit marker offset is 0



["'64'"]
'64'
['64']
parsed_discourse_facet ['method_citation']
    <S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
    <S sid="57" ssid="5">Performance is measured through unlabeled accuracy, which is the percentage of words that modify the correct head in the dependency graph, and labeled accuracy, which is the percentage of words that modify the correct head and label the edge correctly in the graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'"]
'57'
['57']
parsed_discourse_facet ['method_citation']
    <S sid="43" ssid="12">For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi&#8217;s algorithm.</S>
original cit marker offset is 0
new cit marker offset is 0



["'43'"]
'43'
['43']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W06-2932.annv3.csv
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S>
original cit marker offset is 
new cit marker offset is 0



["'21'", "'12'", "'20'"]
'21'
'12'
'20'
['21', '12', '20']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="1" ssid="1">present a two-stage multilingual pendency parser and evaluate it on 13 diverse languages.</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'1'", "'104'"]
'21'
'1'
'104'
['21', '1', '104']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="93" ssid="15">A quick look at unlabeled attachment accuracies indicate that errors in Arabic parsing are the most common across all languages: prepositions (62%), conjunctions (69%) and to a lesser extent verbs (73%).</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S><S sid="44" ssid="13">We use the MIRA online learner to set the weights (Crammer and Singer, 2003; McDonald et al., 2005a) since we found it trained quickly and provide good performance.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'93'", "'104'", "'44'"]
'93'
'104'
'44'
['93', '104', '44']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="4" ssid="4">We report results on the CoNLL-X shared task (Buchholz et al., 2006) data sets and present an error analysis.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S><S sid="13" ssid="9">We evaluate this parser on a diverse set of 13 languages using data provided by the CoNLL-X shared-task organizers (Buchholz et al., 2006; Hajiˇc et al., 2004; Simov et al., 2005; Simov and Osenova, 2003; Chen et al., 2003; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and MartiAntonin, 2002; Nilsson et al., 2005; Oflazer et al., 2003; Atalay et al., 2003).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'4'", "'20'", "'13'"]
'4'
'20'
'13'
['4', '20', '13']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'22'", "'104'"]
'21'
'22'
'104'
['21', '22', '104']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="11" ssid="7">This has been shown through their successful use in many standard natural language processing tasks, including machine translation (Ding and Palmer, 2005), sentence compression (McDonald, 2006), and textual inference (Haghighi et al., 2005).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'0'", "'11'"]
'21'
'0'
'11'
['21', '0', '11']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'0'", "'12'"]
'21'
'0'
'12'
['21', '0', '12']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="18" ssid="14">We Proceedings of the 10th Conference on Computational Natural Language Learning (CoNLL-X), pages 216–220, New York City, June 2006. c�2006 Association for Computational Linguistics assume that all dependency graphs are trees but may be non-projective, both of which are true in the data sets we use.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'18'", "'21'", "'22'"]
'18'
'21'
'22'
['18', '21', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="41" ssid="10">To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm�1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm−1) in the tree y.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="15" ssid="11">For the remainder of this paper, we denote by x = x1,... xn a sentence with n words and by y a corresponding dependency graph.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'41'", "'21'", "'15'"]
'41'
'21'
'15'
['41', '21', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="64" ssid="2">N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.</S><S sid="46" ssid="15">Of course, we have to define a set of suitable features.</S><S sid="24" ssid="6">Its power lies in the ability to define a rich set of features over parsing decisions, as well as surface level features relative to these decisions.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'64'", "'46'", "'24'"]
'64'
'46'
'24'
['64', '46', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="13" ssid="9">We evaluate this parser on a diverse set of 13 languages using data provided by the CoNLL-X shared-task organizers (Buchholz et al., 2006; Hajiˇc et al., 2004; Simov et al., 2005; Simov and Osenova, 2003; Chen et al., 2003; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and MartiAntonin, 2002; Nilsson et al., 2005; Oflazer et al., 2003; Atalay et al., 2003).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'0'", "'21'", "'13'"]
'0'
'21'
'13'
['0', '21', '13']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S><S sid="17" ssid="13">Each edge can be assigned a label l(ij) from a finite set L of predefined labels.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'20'", "'17'"]
'21'
'20'
'17'
['21', '20', '17']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="16" ssid="12">A dependency graph is represented by a set of ordered pairs (i, j) E y in which xj is a dependent and xi is the corresponding head.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="43" ssid="12">For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi’s algorithm.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'16'", "'21'", "'43'"]
'16'
'21'
'43'
['16', '21', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2



W06-2932
I08-1012
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W06-2932
N07-1050
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W06-2932
D07-1122
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W06-2932
D07-1015
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W06-2932
P08-1108
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file P04-1036_swastika.csv
submit_file input/res/Task1/P04-1036.annv3.csv
parsing: input/ref/Task1/P04-1036_swastika.csv
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



['8']
8
['8']
parsed_discourse_facet ['result_citation']
<S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



['15']
15
['15']
parsed_discourse_facet ['method_citation']
<S sid="68" ssid="24">We are of course able to apply the method to other versions of WordNet. synset, is incremented with the frequency counts from the corpus of all words belonging to that synset, directly or via the hyponymy relation.</S>
original cit marker offset is 0
new cit marker offset is 0



['68']
68
['68']
parsed_discourse_facet ['result_citation']
<S sid="83" ssid="12">The results in table 1 show the accuracy of the ranking with respect to SemCor over the entire set of 2595 polysemous nouns in SemCor with the jcn and lesk WordNet similarity measures.</S>
original cit marker offset is 0
new cit marker offset is 0



['83']
83
['83']
parsed_discourse_facet ['result_citation']
<S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



['15']
15
['15']
parsed_discourse_facet ['result_citation']
<S sid="101" ssid="30">Thus, if we used the sense ranking as a heuristic for an &#8220;all nouns&#8221; task we would expect to get precision in the region of 60%.</S>
original cit marker offset is 0
new cit marker offset is 0



['101']
101
['101']
parsed_discourse_facet ['method_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



['126']
126
['126']
parsed_discourse_facet ['result_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



['8']
8
['8']
parsed_discourse_facet ['result_citation']
<S sid="83" ssid="12">The results in table 1 show the accuracy of the ranking with respect to SemCor over the entire set of 2595 polysemous nouns in SemCor with the jcn and lesk WordNet similarity measures.</S>
original cit marker offset is 0
new cit marker offset is 0



['83']
83
['83']
parsed_discourse_facet ['result_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



['126']
126
['126']
parsed_discourse_facet ['result_citation']
<S sid="46" ssid="2">This provides the nearest neighbours to each target word, along with the distributional similarity score between the target word and its neighbour.</S>
original cit marker offset is 0
new cit marker offset is 0



['46']
46
['46']
parsed_discourse_facet ['result_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



['126']
126
['126']
parsed_discourse_facet ['result_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



['8']
8
['8']
parsed_discourse_facet ['result_citation']
<S sid="105" ssid="3">We use an allwords task because the predominant senses will reflect the sense distributions of all nouns within the documents, rather than a lexical sample task, where the target words are manually determined and the results will depend on the skew of the words in the sample.</S>
original cit marker offset is 0
new cit marker offset is 0



['105']
105
['105']
parsed_discourse_facet ['result_citation']
<S sid="13" ssid="6">The high performance of the first sense baseline is due to the skewed frequency distribution of word senses.</S>
original cit marker offset is 0
new cit marker offset is 0



['13']
13
['13']
parsed_discourse_facet ['method_citation']
<S sid="13" ssid="6">The high performance of the first sense baseline is due to the skewed frequency distribution of word senses.</S>
original cit marker offset is 0
new cit marker offset is 0



['13']
13
['13']
parsed_discourse_facet ['method_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



['8']
8
['8']
parsed_discourse_facet ['result_citation']
parsing: input/res/Task1/P04-1036.annv3.csv
<S sid="107" ssid="5">To disambiguate senses a system should take context into account.</S><S sid="154" ssid="2">In contrast, our work is aimed at discovering the predominant senses from raw text because the first sense heuristic is such a useful one, and because handtagged data is not always available.</S><S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'107'", "'154'", "'8'"]
'107'
'154'
'8'
['107', '154', '8']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="154" ssid="2">In contrast, our work is aimed at discovering the predominant senses from raw text because the first sense heuristic is such a useful one, and because handtagged data is not always available.</S><S sid="162" ssid="10">It only requires raw text from the given domain and because of this it can easily be applied to a new domain, or sense inventory, given sufficient text.</S><S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'154'", "'162'", "'180'"]
'154'
'162'
'180'
['154', '162', '180']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="167" ssid="15">In this work the lists of neighbours are themselves clustered to bring out the various senses of the word.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'167'", "'169'"]
'179'
'167'
'169'
['179', '167', '169']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="171" ssid="19">In contrast, we use the neighbours lists and WordNet similarity measures to impose a prevalence ranking on the WordNet senses.</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'171'", "'0'"]
'179'
'171'
'0'
['179', '171', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'126'", "'15'"]
'0'
'126'
'15'
['0', '126', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'169'", "'180'"]
'179'
'169'
'180'
['179', '169', '180']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="186" ssid="9">In particular, we will use balanced and domain specific corpora to isolate words having very different neighbours, and therefore rankings, in the different corpora and to detect and target words for which there is a highly skewed sense distribution in these corpora.</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'", "'186'", "'0'"]
'126'
'186'
'0'
['126', '186', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="81" ssid="10">4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'81'", "'0'"]
'48'
'81'
'0'
['48', '81', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="66" ssid="22">It uses the glosses of semantically related (according to WordNet) senses too. jcn (Jiang and Conrath, 1997) This score uses corpus data to populate classes (synsets) in the WordNet hierarchy with frequency counts.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'66'", "'4'"]
'179'
'66'
'4'
['179', '66', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'27'", "'45'"]
'169'
'27'
'45'
['169', '27', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'179'", "'45'"]
'48'
'179'
'45'
['48', '179', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S><S sid="58" ssid="14">A noun, , is thus described by a set of co-occurrence triples and associated frequencies, where is a grammatical relation and is a possible cooccurrence with in that relation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'45'", "'58'"]
'179'
'45'
'58'
['179', '45', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'179'", "'27'"]
'8'
'179'
'27'
['8', '179', '27']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="153" ssid="1">Most research in WSD concentrates on using contextual features, typically neighbouring words, to help determine the correct sense of a target word.</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'153'", "'126'", "'4'"]
'153'
'126'
'4'
['153', '126', '4']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="81" ssid="10">4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'81'", "'126'"]
'48'
'81'
'126'
['48', '81', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'169'", "'4'"]
'8'
'169'
'4'
['8', '169', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'27'", "'4'"]
'8'
'27'
'4'
['8', '27', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



P04-1036
S12-1097
0
result_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



P04-1036
W12-2429
0
result_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file W99-0623_sweta.csv
submit_file input/res/Task1/W99-0623.annv3.csv
parsing: input/ref/Task1/W99-0623_sweta.csv
 <S sid="144" ssid="6">Combining multiple highly-accurate independent parsers yields promising results.</S>
original cit marker offset is 0
new cit marker offset is 0



["144'"]
144'
['144']
parsed_discourse_facet ['method_citation']
 <S sid="125" ssid="54">The constituent voting and na&#239;ve Bayes techniques are equivalent because the parameters learned in the training set did not sufficiently discriminate between the three parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["125'"]
125'
['125']
parsed_discourse_facet ['method_citation']
<S sid="125" ssid="54">The constituent voting and na&#239;ve Bayes techniques are equivalent because the parameters learned in the training set did not sufficiently discriminate between the three parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["125'"]
125'
['125']
parsed_discourse_facet ['method_citation']
    <S sid="48" ssid="34">&#8226; Similarly, when the na&#239;ve Bayes classifier is configured such that the constituents require estimated probabilities strictly larger than 0.5 to be accepted, there is not enough probability mass remaining on crossing brackets for them to be included in the hypothesis.</S>
original cit marker offset is 0
new cit marker offset is 0



["48'"]
48'
['48']
parsed_discourse_facet ['method_citation']
 <S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["139'"]
139'
['139']
parsed_discourse_facet ['method_citation']
<S sid="134" ssid="63">As seen by the drop in average individual parser performance baseline, the introduced parser does not perform very well.</S>
original cit marker offset is 0
new cit marker offset is 0



["134'"]
134'
['134']
parsed_discourse_facet ['method_citation']
 <S sid="38" ssid="24">Under certain conditions the constituent voting and na&#239;ve Bayes constituent combination techniques are guaranteed to produce sets of constituents with no crossing brackets.</S>
original cit marker offset is 0
new cit marker offset is 0



["38'"]
38'
['38']
parsed_discourse_facet ['method_citation']
    <S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



["120'"]
120'
['120']
parsed_discourse_facet ['method_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["139'"]
139'
['139']
parsed_discourse_facet ['method_citation']
<S sid="13" ssid="9">These three parsers have given the best reported parsing results on the Penn Treebank Wall Street Journal corpus (Marcus et al., 1993).</S>
original cit marker offset is 0
new cit marker offset is 0



["13'"]
13'
['13']
parsed_discourse_facet ['method_citation']
<S sid="108" ssid="37">From this we see that a finer-grained model for parser combination, at least for the features we have examined, will not give us any additional power.</S>
original cit marker offset is 0
new cit marker offset is 0



["108'"]
108'
['108']
parsed_discourse_facet ['method_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["139'"]
139'
['139']
parsed_discourse_facet ['method_citation']
<S sid="98" ssid="27">Adding the isolated constituents to our hypothesis parse could increase our expected recall, but in the cases we investigated it would invariably hurt our precision more than we would gain on recall.</S>
original cit marker offset is 0
new cit marker offset is 0



["98'"]
98'
['98']
parsed_discourse_facet ['method_citation']
<S sid="27" ssid="13">Another technique for parse hybridization is to use a na&#239;ve Bayes classifier to determine which constituents to include in the parse.</S>
original cit marker offset is 0
new cit marker offset is 0



["27'"]
27'
['27']
parsed_discourse_facet ['method_citation']
<S sid="80" ssid="9">For our experiments we also report the mean of precision and recall, which we denote by (P + R)I2 and F-measure.</S>
    <S sid="81" ssid="10">F-measure is the harmonic mean of precision and recall, 2PR/(P + R).</S>
    <S sid="82" ssid="11">It is closer to the smaller value of precision and recall when there is a large skew in their values.</S>
original cit marker offset is 0
new cit marker offset is 0



["80'", "'81'", "'82'"]
80'
'81'
'82'
['80', '81', '82']
parsed_discourse_facet ['method_citation']
<S sid="49" ssid="35">In general, the lemma of the previous section does not ensure that all the productions in the combined parse are found in the grammars of the member parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["49'"]
49'
['49']
parsed_discourse_facet ['method_citation']
<S sid="11" ssid="7">Similar advances have been made in machine translation (Frederking and Nirenburg, 1994), speech recognition (Fiscus, 1997) and named entity recognition (Borthwick et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["11'"]
11'
['11']
parsed_discourse_facet ['method_citation']
<S sid="98" ssid="27">Adding the isolated constituents to our hypothesis parse could increase our expected recall, but in the cases we investigated it would invariably hurt our precision more than we would gain on recall.</S>
original cit marker offset is 0
new cit marker offset is 0



["98'"]
98'
['98']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W99-0623.annv3.csv
<S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'120'", "'139'"]
'85'
'120'
'139'
['85', '120', '139']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="96" ssid="25">We call such a constituent an isolated constituent.</S>
original cit marker offset is 0
new cit marker offset is 0



["'120'", "'23'", "'96'"]
'120'
'23'
'96'
['120', '23', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="14" ssid="10">We used these three parsers to explore parser combination techniques.</S><S sid="25" ssid="11">In our particular case the majority requires the agreement of only two parsers because we have only three.</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'14'", "'25'"]
'139'
'14'
'25'
['139', '14', '25']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'77'", "'120'"]
'23'
'77'
'120'
['23', '77', '120']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="13">Another technique for parse hybridization is to use a naïve Bayes classifier to determine which constituents to include in the parse.</S><S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="16" ssid="2">We call this approach parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'15'", "'16'"]
'27'
'15'
'16'
['27', '15', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="96" ssid="25">We call such a constituent an isolated constituent.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'120'", "'96'"]
'23'
'120'
'96'
['23', '120', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="5">Through parser combination we have reduced the precision error rate by 30% and the recall error rate by 6% compared to the best previously published result.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'120'", "'23'"]
'143'
'120'
'23'
['143', '120', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'139'", "'120'"]
'23'
'139'
'120'
['23', '139', '120']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'67'", "'139'", "'77'"]
'67'
'139'
'77'
['67', '139', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S><S sid="143" ssid="5">Through parser combination we have reduced the precision error rate by 30% and the recall error rate by 6% compared to the best previously published result.</S>
original cit marker offset is 0
new cit marker offset is 0



["'120'", "'85'", "'143'"]
'120'
'85'
'143'
['120', '85', '143']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="60" ssid="46">First we present the non-parametric version of parser switching, similarity switching: The intuition for this technique is that we can measure a similarity between parses by counting the constituents they have in common.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'60'", "'120'", "'23'"]
'60'
'120'
'23'
['60', '120', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'67'", "'77'"]
'139'
'67'
'77'
['139', '67', '77']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="78" ssid="7">The set is then compared with the set generated from the Penn Treebank parse to determine the precision and recall.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'67'", "'78'"]
'15'
'67'
'78'
['15', '67', '78']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="96" ssid="25">We call such a constituent an isolated constituent.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S><S sid="16" ssid="2">We call this approach parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'96'", "'77'", "'16'"]
'96'
'77'
'16'
['96', '77', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="118" ssid="47">The maximum precision oracle is an upper bound on the possible gain we can achieve by parse hybridization.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'118'", "'77'"]
'15'
'118'
'77'
['15', '118', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="0" ssid="0">Exploiting Diversity in Natural Language Processing: Combining Parsers</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'0'", "'77'"]
'139'
'0'
'77'
['139', '0', '77']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="78" ssid="7">The set is then compared with the set generated from the Penn Treebank parse to determine the precision and recall.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'67'", "'78'"]
'15'
'67'
'78'
['15', '67', '78']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 1



W99-0623
P01-1005
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W99-0623
N06-2033
0
method_citation
['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
gold file W06-2932_sweta.csv
submit_file input/res/Task1/W06-2932.annv3.csv
parsing: input/ref/Task1/W06-2932_sweta.csv
 <S sid="5" ssid="1">Often in language processing we require a deep syntactic representation of a sentence in order to assist further processing.</S>
original cit marker offset is 0
new cit marker offset is 0



["5'"]
5'
['5']
parsed_discourse_facet ['method_citation']
<S sid="36" ssid="5">However, in a two stage system we can incorporate features over the entire output of the unlabeled parser since that structure is fixed as input.</S>
original cit marker offset is 0
new cit marker offset is 0



["36'"]
36'
['36']
parsed_discourse_facet ['method_citation']
<S sid="61" ssid="9">In fact, for every language our models perform significantly higher than the average performance for all the systems reported in Buchholz et al. (2006).</S>
original cit marker offset is 0
new cit marker offset is 0



["61'"]
61'
['61']
parsed_discourse_facet ['method_citation']
<S sid="76" ssid="14">For instance, sequential labeling improves the labeling of 2This difference was much larger for experiments in which gold standard unlabeled dependencies are used. objects from 81.7%/75.6% to 84.2%/81.3% (labeled precision/recall) and the labeling of subjects from 86.8%/88.2% to 90.5%/90.4% for Swedish.</S>
original cit marker offset is 0
new cit marker offset is 0



["76'"]
76'
['76']
parsed_discourse_facet ['method_citation']
 <S sid="45" ssid="14">Furthermore, it made the system homogeneous in terms of learning algorithms since that is what is used to train our unlabeled parser (McDonald and Pereira, 2006).</S>
original cit marker offset is 0
new cit marker offset is 0



["45'"]
45'
['45']
parsed_discourse_facet ['method_citation']
<S sid="106" ssid="3">First, we plan on examining the performance difference between two-staged dependency parsing (as presented here) and joint parsing plus labeling.</S>
original cit marker offset is 0
new cit marker offset is 0



["106'"]
106'
['106']
parsed_discourse_facet ['method_citation']
<S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S>
original cit marker offset is 0
new cit marker offset is 0



["12'"]
12'
['12']
parsed_discourse_facet ['method_citation']
<S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0
new cit marker offset is 0



["104'"]
104'
['104']
parsed_discourse_facet ['method_citation']
<S sid="58" ssid="6">These results show that the discriminative spanning tree parsing framework (McDonald et al., 2005b; McDonald and Pereira, 2006) is easily adapted across all these languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["58'"]
58'
['58']
parsed_discourse_facet ['method_citation']
<S sid="64" ssid="2">N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.</S>
original cit marker offset is 0
new cit marker offset is 0



["64'"]
64'
['64']
parsed_discourse_facet ['method_citation']
<S sid="41" ssid="10">To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm&#65533;1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm&#8722;1) in the tree y.</S>
original cit marker offset is 0
new cit marker offset is 0



["41'"]
41'
['41']
parsed_discourse_facet ['method_citation']
 <S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["21'"]
21'
['21']
parsed_discourse_facet ['method_citation']
 <S sid="64" ssid="2">N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.</S>
original cit marker offset is 0
new cit marker offset is 0



["64'"]
64'
['64']
parsed_discourse_facet ['method_citation']
 <S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0
new cit marker offset is 0



["104'"]
104'
['104']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="2">Ideally one would like to make all parsing and labeling decisions jointly so that the shared knowledge of both decisions will help resolve any ambiguities.</S>
original cit marker offset is 0
new cit marker offset is 0



["33'"]
33'
['33']
parsed_discourse_facet ['method_citation']
<S sid="41" ssid="10">To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm&#65533;1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm&#8722;1) in the tree y.</S>
original cit marker offset is 0
new cit marker offset is 0



["41'"]
41'
['41']
parsed_discourse_facet ['method_citation']
 <S sid="43" ssid="12">For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi&#8217;s algorithm.</S>
original cit marker offset is 0
new cit marker offset is 0



["43'"]
43'
['43']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W06-2932.annv3.csv
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S>
original cit marker offset is 
new cit marker offset is 0



["'21'", "'12'", "'20'"]
'21'
'12'
'20'
['21', '12', '20']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="1" ssid="1">present a two-stage multilingual pendency parser and evaluate it on 13 diverse languages.</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'1'", "'104'"]
'21'
'1'
'104'
['21', '1', '104']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="93" ssid="15">A quick look at unlabeled attachment accuracies indicate that errors in Arabic parsing are the most common across all languages: prepositions (62%), conjunctions (69%) and to a lesser extent verbs (73%).</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S><S sid="44" ssid="13">We use the MIRA online learner to set the weights (Crammer and Singer, 2003; McDonald et al., 2005a) since we found it trained quickly and provide good performance.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'93'", "'104'", "'44'"]
'93'
'104'
'44'
['93', '104', '44']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="4" ssid="4">We report results on the CoNLL-X shared task (Buchholz et al., 2006) data sets and present an error analysis.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S><S sid="13" ssid="9">We evaluate this parser on a diverse set of 13 languages using data provided by the CoNLL-X shared-task organizers (Buchholz et al., 2006; Hajiˇc et al., 2004; Simov et al., 2005; Simov and Osenova, 2003; Chen et al., 2003; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and MartiAntonin, 2002; Nilsson et al., 2005; Oflazer et al., 2003; Atalay et al., 2003).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'4'", "'20'", "'13'"]
'4'
'20'
'13'
['4', '20', '13']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'22'", "'104'"]
'21'
'22'
'104'
['21', '22', '104']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="11" ssid="7">This has been shown through their successful use in many standard natural language processing tasks, including machine translation (Ding and Palmer, 2005), sentence compression (McDonald, 2006), and textual inference (Haghighi et al., 2005).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'0'", "'11'"]
'21'
'0'
'11'
['21', '0', '11']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'0'", "'12'"]
'21'
'0'
'12'
['21', '0', '12']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="18" ssid="14">We Proceedings of the 10th Conference on Computational Natural Language Learning (CoNLL-X), pages 216–220, New York City, June 2006. c�2006 Association for Computational Linguistics assume that all dependency graphs are trees but may be non-projective, both of which are true in the data sets we use.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'18'", "'21'", "'22'"]
'18'
'21'
'22'
['18', '21', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="41" ssid="10">To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm�1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm−1) in the tree y.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="15" ssid="11">For the remainder of this paper, we denote by x = x1,... xn a sentence with n words and by y a corresponding dependency graph.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'41'", "'21'", "'15'"]
'41'
'21'
'15'
['41', '21', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="64" ssid="2">N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.</S><S sid="46" ssid="15">Of course, we have to define a set of suitable features.</S><S sid="24" ssid="6">Its power lies in the ability to define a rich set of features over parsing decisions, as well as surface level features relative to these decisions.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'64'", "'46'", "'24'"]
'64'
'46'
'24'
['64', '46', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="13" ssid="9">We evaluate this parser on a diverse set of 13 languages using data provided by the CoNLL-X shared-task organizers (Buchholz et al., 2006; Hajiˇc et al., 2004; Simov et al., 2005; Simov and Osenova, 2003; Chen et al., 2003; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and MartiAntonin, 2002; Nilsson et al., 2005; Oflazer et al., 2003; Atalay et al., 2003).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'0'", "'21'", "'13'"]
'0'
'21'
'13'
['0', '21', '13']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S><S sid="17" ssid="13">Each edge can be assigned a label l(ij) from a finite set L of predefined labels.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'20'", "'17'"]
'21'
'20'
'17'
['21', '20', '17']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="16" ssid="12">A dependency graph is represented by a set of ordered pairs (i, j) E y in which xj is a dependent and xi is the corresponding head.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="43" ssid="12">For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi’s algorithm.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'16'", "'21'", "'43'"]
'16'
'21'
'43'
['16', '21', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 1
IGNORE THIS: key error 1



W06-2932
I08-1012
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W06-2932
D07-1122
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W06-2932
D07-1015
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W06-2932
P08-1108
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file P11-1061_swastika.csv
submit_file input/res/Task1/P11-1061.annv3.csv
parsing: input/ref/Task1/P11-1061_swastika.csv
    <S sid="144" ssid="7">For comparison, the completely unsupervised feature-HMM baseline accuracy on the universal POS tags for English is 79.4%, and goes up to 88.7% with a treebank dictionary.</S>
original cit marker offset is 0
new cit marker offset is 0



['144']
144
['144']
parsed_discourse_facet ['result_citation']
    <S sid="44" ssid="10">Because all English vertices are going to be labeled, we do not need to disambiguate them by embedding them in trigrams.</S
original cit marker offset is 0
new cit marker offset is 0



['44']
44
['44']
parsed_discourse_facet ['method_citation']
    <S sid="16" ssid="12">To this end, we construct a bilingual graph over word types to establish a connection between the two languages (&#167;3), and then use graph label propagation to project syntactic information from English to the foreign language (&#167;4).</S>
original cit marker offset is 0
new cit marker offset is 0



['16']
16
['16']
parsed_discourse_facet ['method_citation']
    <S sid="44" ssid="10">Because all English vertices are going to be labeled, we do not need to disambiguate them by embedding them in trigrams.</S
original cit marker offset is 0
new cit marker offset is 0



['44']
44
['44']
parsed_discourse_facet ['method_citation']
<S sid="110" ssid="10">We hope that this will allow practitioners to apply our approach directly to languages for which no resources are available.</S>
original cit marker offset is 0
new cit marker offset is 0



['110']
110
['110']
parsed_discourse_facet ['aim_citation']
    <S sid="115" ssid="15">The taggers were trained on datasets labeled with the universal tags.</S>
original cit marker offset is 0
new cit marker offset is 0



['115']
115
['115']
parsed_discourse_facet ['method_citation']
    <S sid="115" ssid="15">The taggers were trained on datasets labeled with the universal tags.</S>
original cit marker offset is 0
new cit marker offset is 0



['115']
115
['115']
parsed_discourse_facet ['method_citation']
<S sid="158" ssid="1">We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.</S>
original cit marker offset is 0
new cit marker offset is 0



['158']
158
['158']
parsed_discourse_facet ['result_citation']
<S sid="23" ssid="19">Our final average POS tagging accuracy of 83.4% compares very favorably to the average accuracy of Berg-Kirkpatrick et al.&#8217;s monolingual unsupervised state-of-the-art model (73.0%), and considerably bridges the gap to fully supervised POS tagging performance (96.6%).</S>
original cit marker offset is 0
new cit marker offset is 0



['23']
23
['23']
parsed_discourse_facet ['result_citation']
<S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S>
original cit marker offset is 0
new cit marker offset is 0



['24']
24
['24']
parsed_discourse_facet ['aim_citation']
<S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



['10']
10
['10']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



['???']
???
['???']
parsed_discourse_facet ['method_citation']
    <S sid="16" ssid="12">To this end, we construct a bilingual graph over word types to establish a connection between the two languages (&#167;3), and then use graph label propagation to project syntactic information from English to the foreign language (&#167;4).</S>
original cit marker offset is 0
new cit marker offset is 0



['16']
16
['16']
parsed_discourse_facet ['method_citation']
    <S sid="23" ssid="19">Our final average POS tagging accuracy of 83.4% compares very favorably to the average accuracy of Berg-Kirkpatrick et al.&#8217;s monolingual unsupervised state-of-the-art model (73.0%), and considerably bridges the gap to fully supervised POS tagging performance (96.6%).</S>
original cit marker offset is 0
new cit marker offset is 0



['23']
23
['23']
parsed_discourse_facet ['result_citation']
<S sid="158" ssid="1">We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.</S>
original cit marker offset is 0
new cit marker offset is 0



['158']
158
['158']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



['10']
10
['10']
parsed_discourse_facet ['method_citation']
<S sid="56" ssid="22">To define a similarity function between the English and the foreign vertices, we rely on high-confidence word alignments.</S>
original cit marker offset is 0
new cit marker offset is 0



['56']
56
['56']
parsed_discourse_facet ['method_citation']
<S sid="161" ssid="4">Our results outperform strong unsupervised baselines as well as approaches that rely on direct projections, and bridge the gap between purely supervised and unsupervised POS tagging models.</S>
original cit marker offset is 0
new cit marker offset is 0



['161']
161
['161']
parsed_discourse_facet ['result_citation']
parsing: input/res/Task1/P11-1061.annv3.csv
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="6" ssid="2">Supervised part-of-speech (POS) taggers, for example, approach the level of inter-annotator agreement (Shen et al., 2007, 97.3% accuracy for English).</S><S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'6'", "'18'"]
'0'
'6'
'18'
['0', '6', '18']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'7'", "'27'"]
'0'
'7'
'27'
['0', '7', '27']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="3" ssid="3">We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).</S><S sid="35" ssid="1">In graph-based learning approaches one constructs a graph whose vertices are labeled and unlabeled examples, and whose weighted edges encode the degree to which the examples they link have the same label (Zhu et al., 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'3'", "'35'"]
'0'
'3'
'35'
['0', '3', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="52" ssid="18">This is similar to stacking the different feature instantiations into long (sparse) vectors and computing the cosine similarity between them.</S><S sid="51" ssid="17">For each trigram type x2 x3 x4 in a sequence x1 x2 x3 x4 x5, we count how many times that trigram type co-occurs with the different instantiations of each concept, and compute the point-wise mutual information (PMI) between the two.5 The similarity between two trigram types is given by summing over the PMI values over feature instantiations that they have in common.</S><S sid="42" ssid="8">The foreign language vertices (denoted by Vf) correspond to foreign trigram types, exactly as in Subramanya et al. (2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'", "'51'", "'42'"]
'52'
'51'
'42'
['52', '51', '42']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="31" ssid="8">By aggregating the POS labels of the English tokens to types, we can generate label distributions for the English vertices.</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'7'", "'31'"]
'27'
'7'
'31'
['27', '7', '31']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S><S sid="6" ssid="2">Supervised part-of-speech (POS) taggers, for example, approach the level of inter-annotator agreement (Shen et al., 2007, 97.3% accuracy for English).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'6'"]
'0'
'24'
'6'
['0', '24', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="85" ssid="16">We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).</S><S sid="3" ssid="3">We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'85'", "'3'"]
'0'
'85'
'3'
['0', '85', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S><S sid="158" ssid="1">We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'18'", "'158'"]
'0'
'18'
'158'
['0', '18', '158']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="2" ssid="2">Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.</S><S sid="16" ssid="12">To this end, we construct a bilingual graph over word types to establish a connection between the two languages (§3), and then use graph label propagation to project syntactic information from English to the foreign language (§4).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'16'"]
'0'
'2'
'16'
['0', '2', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="71" ssid="2">We use label propagation in two stages to generate soft labels on all the vertices in the graph.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="35" ssid="1">In graph-based learning approaches one constructs a graph whose vertices are labeled and unlabeled examples, and whose weighted edges encode the degree to which the examples they link have the same label (Zhu et al., 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'71'", "'0'", "'35'"]
'71'
'0'
'35'
['71', '0', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S><S sid="160" ssid="3">Our results suggest that it is possible to learn accurate POS taggers for languages which do not have any annotated data, but have translations into a resource-rich language.</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'", "'160'", "'24'"]
'106'
'160'
'24'
['106', '160', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S><S sid="160" ssid="3">Our results suggest that it is possible to learn accurate POS taggers for languages which do not have any annotated data, but have translations into a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'160'"]
'0'
'24'
'160'
['0', '24', '160']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="46" ssid="12">We use two different similarity functions to define the edge weights among the foreign vertices and between vertices from different languages.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S>
original cit marker offset is 0
new cit marker offset is 0



["'46'", "'0'", "'106'"]
'46'
'0'
'106'
['46', '0', '106']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="144" ssid="7">For comparison, the completely unsupervised feature-HMM baseline accuracy on the universal POS tags for English is 79.4%, and goes up to 88.7% with a treebank dictionary.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'7'", "'144'"]
'0'
'7'
'144'
['0', '7', '144']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="2" ssid="2">Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'24'"]
'0'
'2'
'24'
['0', '2', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'", "'0'", "'10'"]
'106'
'0'
'10'
['106', '0', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="56" ssid="22">To define a similarity function between the English and the foreign vertices, we rely on high-confidence word alignments.</S><S sid="57" ssid="23">Since our graph is built from a parallel corpus, we can use standard word alignment techniques to align the English sentences De 5Note that many combinations are impossible giving a PMI value of 0; e.g., when the trigram type and the feature instantiation don’t have words in common. and their foreign language translations Df.6 Label propagation in the graph will provide coverage and high recall, and we therefore extract only intersected high-confidence (> 0.9) alignments De�f.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S>
original cit marker offset is 0
new cit marker offset is 0



["'56'", "'57'", "'0'"]
'56'
'57'
'0'
['56', '57', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="85" ssid="16">We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'0'", "'85'"]
'27'
'0'
'85'
['27', '0', '85']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



P11-1061
N12-1090
0
result_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
gold file P05-1013_vardha.csv
submit_file input/res/Task1/P05-1013.annv3.csv
parsing: input/ref/Task1/P05-1013_vardha.csv
 <S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'"]
'20'
['20']
parsed_discourse_facet ['method_citation']
  <S sid="9" ssid="5">This is true of the widely used link grammar parser for English (Sleator and Temperley, 1993), which uses a dependency grammar of sorts, the probabilistic dependency parser of Eisner (1996), and more recently proposed deterministic dependency parsers (Yamada and Matsumoto, 2003; Nivre et al., 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
    <S sid="104" ssid="15">The overall parsing accuracy obtained with the pseudo-projective approach is still lower than for the best projective parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'"]
'104'
['104']
parsed_discourse_facet ['method_citation']
  <S sid="104" ssid="15">The overall parsing accuracy obtained with the pseudo-projective approach is still lower than for the best projective parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'"]
'104'
['104']
parsed_discourse_facet ['method_citation']
    <S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'109'"]
'109'
['109']
parsed_discourse_facet ['method_citation']
 <S sid="95" ssid="6">The second main result is that the pseudo-projective approach to parsing (using special arc labels to guide an inverse transformation) gives a further improvement of about one percentage point on attachment score.</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'"]
'95'
['95']
parsed_discourse_facet ['method_citation']
    <S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'"]
'20'
['20']
parsed_discourse_facet ['method_citation']
    <S sid="36" ssid="7">As observed by Kahane et al. (1998), any (nonprojective) dependency graph can be transformed into a projective one by a lifting operation, which replaces each non-projective arc wj wk by a projective arc wi &#8212;* wk such that wi &#8212;*&#8727; wj holds in the original graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
 <S sid="62" ssid="1">In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'"]
'62'
['62']
parsed_discourse_facet ['method_citation']
 <S sid="104" ssid="15">The overall parsing accuracy obtained with the pseudo-projective approach is still lower than for the best projective parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'"]
'104'
['104']
parsed_discourse_facet ['method_citation']
    <S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'"]
'23'
['23']
parsed_discourse_facet ['method_citation']
 <S sid="104" ssid="15">The overall parsing accuracy obtained with the pseudo-projective approach is still lower than for the best projective parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'"]
'104'
['104']
parsed_discourse_facet ['method_citation']
 <S sid="95" ssid="6">The second main result is that the pseudo-projective approach to parsing (using special arc labels to guide an inverse transformation) gives a further improvement of about one percentage point on attachment score.</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'"]
'95'
['95']
parsed_discourse_facet ['method_citation']
    <S sid="96" ssid="7">With respect to exact match, the improvement is even more noticeable, which shows quite clearly that even if non-projective dependencies are rare on the token level, they are nevertheless important for getting the global syntactic structure correct.</S>
original cit marker offset is 0
new cit marker offset is 0



["'96'"]
'96'
['96']
parsed_discourse_facet ['method_citation']
 <S sid="95" ssid="6">The second main result is that the pseudo-projective approach to parsing (using special arc labels to guide an inverse transformation) gives a further improvement of about one percentage point on attachment score.</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'"]
'95'
['95']
parsed_discourse_facet ['method_citation']
  <S sid="40" ssid="11">Even this may be nondeterministic, in case the graph contains several non-projective arcs whose lifts interact, but we use the following algorithm to construct a minimal projective transformation D0 = (W, A0) of a (nonprojective) dependency graph D = (W, A): The function SMALLEST-NONP-ARC returns the non-projective arc with the shortest distance from head to dependent (breaking ties from left to right).</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'"]
'40'
['40']
parsed_discourse_facet ['method_citation']
  <S sid="7" ssid="3">From the point of view of computational implementation this can be problematic, since the inclusion of non-projective structures makes the parsing problem more complex and therefore compromises efficiency and in practice also accuracy and robustness.</S>
original cit marker offset is 0
new cit marker offset is 0



["'7'"]
'7'
['7']
parsed_discourse_facet ['method_citation']
    <S sid="14" ssid="10">While the proportion of sentences containing non-projective dependencies is often 15&#8211;25%, the total proportion of non-projective arcs is normally only 1&#8211;2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'14'"]
'14'
['14']
parsed_discourse_facet ['method_citation']
 <S sid="49" ssid="20">The baseline simply retains the original labels for all arcs, regardless of whether they have been lifted or not, and the number of distinct labels is therefore simply the number n of distinct dependency types.2 In the first encoding scheme, called Head, we use a new label d&#8593;h for each lifted arc, where d is the dependency relation between the syntactic head and the dependent in the non-projective representation, and h is the dependency relation that the syntactic head has to its own head in the underlying structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'49'"]
'49'
['49']
parsed_discourse_facet ['method_citation']
 <S sid="104" ssid="15">The overall parsing accuracy obtained with the pseudo-projective approach is still lower than for the best projective parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'"]
'104'
['104']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P05-1013.annv3.csv
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'20'", "'0'"]
'30'
'20'
'0'
['30', '20', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'20'"]
'0'
'24'
'20'
['0', '24', '20']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="15" ssid="11">As long as the main evaluation metric is dependency accuracy per word, with state-of-the-art accuracy mostly below 90%, the penalty for not handling non-projective constructions is almost negligible.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'110'", "'15'"]
'30'
'110'
'15'
['30', '110', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="62" ssid="1">In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'0'", "'62'"]
'23'
'0'
'62'
['23', '0', '62']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'110'", "'23'"]
'24'
'110'
'23'
['24', '110', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="22" ssid="18">When the parser is trained on the transformed data, it will ideally learn not only to construct projective dependency structures but also to assign arc labels that encode information about lifts.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'22'"]
'30'
'0'
'22'
['30', '0', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="40" ssid="11">Even this may be nondeterministic, in case the graph contains several non-projective arcs whose lifts interact, but we use the following algorithm to construct a minimal projective transformation D0 = (W, A0) of a (nonprojective) dependency graph D = (W, A): The function SMALLEST-NONP-ARC returns the non-projective arc with the shortest distance from head to dependent (breaking ties from left to right).</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'0'", "'40'"]
'23'
'0'
'40'
['23', '0', '40']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="108" ssid="19">However, while Dienes and Dubey recognize empty categories in a pre-processing step and only let the parser find their antecedents, we use the parser both to detect dislocated dependents and to predict either the type or the location of their syntactic head (or both) and use post-processing only to transform the graph in accordance with the parser’s analysis.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'108'"]
'30'
'0'
'108'
['30', '0', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'24'"]
'0'
'23'
'24'
['0', '23', '24']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S><S sid="14" ssid="10">While the proportion of sentences containing non-projective dependencies is often 15–25%, the total proportion of non-projective arcs is normally only 1–2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'20'", "'14'"]
'0'
'20'
'14'
['0', '20', '14']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="62" ssid="1">In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'62'"]
'0'
'24'
'62'
['0', '24', '62']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'30'"]
'0'
'24'
'30'
['0', '24', '30']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'24'"]
'30'
'0'
'24'
['30', '0', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'24'"]
'0'
'23'
'24'
['0', '23', '24']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="21" ssid="17">First, the training data for the parser is projectivized by applying a minimal number of lifting operations (Kahane et al., 1998) and encoding information about these lifts in arc labels.</S><S sid="45" ssid="16">In order to facilitate this task, we extend the set of arc labels to encode information about lifting operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'21'", "'45'"]
'30'
'21'
'45'
['30', '21', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'110'"]
'30'
'0'
'110'
['30', '0', '110']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="81" ssid="8">However, the overall percentage of non-projective arcs is less than 2% in PDT and less than 1% in DDT.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'110'", "'81'"]
'0'
'110'
'81'
['0', '110', '81']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']



P05-1013
W05-1505
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file P05-1013_swastika.csv
submit_file input/res/Task1/P05-1013.annv3.csv
parsing: input/ref/Task1/P05-1013_swastika.csv
<S sid="49" ssid="20">The baseline simply retains the original labels for all arcs, regardless of whether they have been lifted or not, and the number of distinct labels is therefore simply the number n of distinct dependency types.2 In the first encoding scheme, called Head, we use a new label d&#8593;h for each lifted arc, where d is the dependency relation between the syntactic head and the dependent in the non-projective representation, and h is the dependency relation that the syntactic head has to its own head in the underlying structure.</S>
original cit marker offset is 0
new cit marker offset is 0



['49']
49
['49']
parsed_discourse_facet ['method_citation']
<S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



['109']
109
['109']
parsed_discourse_facet ['method_citation']
<S sid="95" ssid="6">The second main result is that the pseudo-projective approach to parsing (using special arc labels to guide an inverse transformation) gives a further improvement of about one percentage point on attachment score.</S>
original cit marker offset is 0
new cit marker offset is 0



['95']
95
['95']
parsed_discourse_facet ['result_citation']
<S sid="79" ssid="6">In the first part of the experiment, dependency graphs from the treebanks were projectivized using the algorithm described in section 2.</S>
original cit marker offset is 0
new cit marker offset is 0



['79']
79
['79']
parsed_discourse_facet ['method_citation']
<S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



['109']
109
['109']
parsed_discourse_facet ['result_citation']
<S sid="38" ssid="9">Projectivizing a dependency graph by lifting nonprojective arcs is a nondeterministic operation in the general case.</S>
original cit marker offset is 0
new cit marker offset is 0



['38']
38
['38']
parsed_discourse_facet ['method_citation']
<S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



['109']
109
['109']
parsed_discourse_facet ['result_citation']
<S sid="79" ssid="6">In the first part of the experiment, dependency graphs from the treebanks were projectivized using the algorithm described in section 2.</S>
original cit marker offset is 0
new cit marker offset is 0



['79']
79
['79']
parsed_discourse_facet ['method_citation']
<S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



['109']
109
['109']
parsed_discourse_facet ['result_citation']
S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



['109']
109
['109']
Error in Reference Offset
S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



['109']
109
['109']
Error in Reference Offset
    <S sid="86" ssid="13">As expected, the most informative encoding, Head+Path, gives the highest accuracy with over 99% of all non-projective arcs being recovered correctly in both data sets.</S>
original cit marker offset is 0
new cit marker offset is 0



['86']
86
['86']
parsed_discourse_facet ['method_citation']
<S sid="95" ssid="6">The second main result is that the pseudo-projective approach to parsing (using special arc labels to guide an inverse transformation) gives a further improvement of about one percentage point on attachment score.</S>
original cit marker offset is 0
new cit marker offset is 0



['95']
95
['95']
parsed_discourse_facet ['method_citation']
<S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



['109']
109
['109']
parsed_discourse_facet ['result_citation']
 <S sid="51" ssid="22">In the second scheme, Head+Path, we in addition modify the label of every arc along the lifting path from the syntactic to the linear head so that if the original label is p the new label is p&#8595;.</S>
original cit marker offset is 0
new cit marker offset is 0



['51']
51
['51']
parsed_discourse_facet ['method_citation']
<S sid="99" ssid="10">This may seem surprising, given the experiments reported in section 4, but the explanation is probably that the non-projective dependencies that can be recovered at all are of the simple kind that only requires a single lift, where the encoding of path information is often redundant.</S>
original cit marker offset is 0
new cit marker offset is 0



['99']
99
['99']
parsed_discourse_facet ['result_citation']
<S sid="7" ssid="3">From the point of view of computational implementation this can be problematic, since the inclusion of non-projective structures makes the parsing problem more complex and therefore compromises efficiency and in practice also accuracy and robustness.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['method_citation']
<S sid="2" ssid="2">We show how a datadriven deterministic dependency parser, in itself restricted to projective structures, can be combined with graph transformation techniques to produce non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



['2']
2
['2']
parsed_discourse_facet ['aim_citation']
parsing: input/res/Task1/P05-1013.annv3.csv
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'20'", "'0'"]
'30'
'20'
'0'
['30', '20', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'20'"]
'0'
'24'
'20'
['0', '24', '20']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="15" ssid="11">As long as the main evaluation metric is dependency accuracy per word, with state-of-the-art accuracy mostly below 90%, the penalty for not handling non-projective constructions is almost negligible.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'110'", "'15'"]
'30'
'110'
'15'
['30', '110', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="62" ssid="1">In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'0'", "'62'"]
'23'
'0'
'62'
['23', '0', '62']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'110'", "'23'"]
'24'
'110'
'23'
['24', '110', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="22" ssid="18">When the parser is trained on the transformed data, it will ideally learn not only to construct projective dependency structures but also to assign arc labels that encode information about lifts.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'22'"]
'30'
'0'
'22'
['30', '0', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="40" ssid="11">Even this may be nondeterministic, in case the graph contains several non-projective arcs whose lifts interact, but we use the following algorithm to construct a minimal projective transformation D0 = (W, A0) of a (nonprojective) dependency graph D = (W, A): The function SMALLEST-NONP-ARC returns the non-projective arc with the shortest distance from head to dependent (breaking ties from left to right).</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'0'", "'40'"]
'23'
'0'
'40'
['23', '0', '40']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="108" ssid="19">However, while Dienes and Dubey recognize empty categories in a pre-processing step and only let the parser find their antecedents, we use the parser both to detect dislocated dependents and to predict either the type or the location of their syntactic head (or both) and use post-processing only to transform the graph in accordance with the parser’s analysis.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'108'"]
'30'
'0'
'108'
['30', '0', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'24'"]
'0'
'23'
'24'
['0', '23', '24']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S><S sid="14" ssid="10">While the proportion of sentences containing non-projective dependencies is often 15–25%, the total proportion of non-projective arcs is normally only 1–2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'20'", "'14'"]
'0'
'20'
'14'
['0', '20', '14']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="62" ssid="1">In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'62'"]
'0'
'24'
'62'
['0', '24', '62']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'30'"]
'0'
'24'
'30'
['0', '24', '30']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'24'"]
'30'
'0'
'24'
['30', '0', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'24'"]
'0'
'23'
'24'
['0', '23', '24']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="21" ssid="17">First, the training data for the parser is projectivized by applying a minimal number of lifting operations (Kahane et al., 1998) and encoding information about these lifts in arc labels.</S><S sid="45" ssid="16">In order to facilitate this task, we extend the set of arc labels to encode information about lifting operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'21'", "'45'"]
'30'
'21'
'45'
['30', '21', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'110'"]
'30'
'0'
'110'
['30', '0', '110']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="81" ssid="8">However, the overall percentage of non-projective arcs is less than 2% in PDT and less than 1% in DDT.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'110'", "'81'"]
'0'
'110'
'81'
['0', '110', '81']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file W99-0623_swastika.csv
submit_file input/res/Task1/W99-0623.annv3.csv
parsing: input/ref/Task1/W99-0623_swastika.csv
<S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



['85']
85
['85']
parsed_discourse_facet ['aim_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



['120']
120
['120']
parsed_discourse_facet ['result_citation']
<S sid="25" ssid="11">In our particular case the majority requires the agreement of only two parsers because we have only three.</S>
original cit marker offset is 0
new cit marker offset is 0



['25']
25
['25']
parsed_discourse_facet ['method_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



['120']
120
['120']
parsed_discourse_facet ['result_citation']
<S sid="38" ssid="24">Under certain conditions the constituent voting and na&#239;ve Bayes constituent combination techniques are guaranteed to produce sets of constituents with no crossing brackets.</S>
original cit marker offset is 0
new cit marker offset is 0



['38']
38
['38']
parsed_discourse_facet ['result_citation']
<S sid="91" ssid="20">Features and context were initially introduced into the models, but they refused to offer any gains in performance.</S>
original cit marker offset is 0
new cit marker offset is 0



['91']
91
['91']
parsed_discourse_facet ['method_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



['120']
120
['120']
parsed_discourse_facet ['result_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



['120']
120
['120']
parsed_discourse_facet ['result_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



['139']
139
['139']
parsed_discourse_facet ['result_citation']
<S sid="25" ssid="11">In our particular case the majority requires the agreement of only two parsers because we have only three.</S>
original cit marker offset is 0
new cit marker offset is 0



['25']
25
['25']
parsed_discourse_facet ['method_citation']
<S sid="103" ssid="32">The counts represent portions of the approximately 44000 constituents hypothesized by the parsers in the development set.</S>
original cit marker offset is 0
new cit marker offset is 0



['103']
103
['103']
parsed_discourse_facet ['method_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



['139']
139
['139']
parsed_discourse_facet ['result_citation']
<S sid="70" ssid="56">In this case we are interested in finding' the maximum probability parse, ri, and Mi is the set of relevant (binary) parsing decisions made by parser i. ri is a parse selected from among the outputs of the individual parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



['70']
70
['70']
parsed_discourse_facet ['aim_citation']
<S sid="140" ssid="2">For each experiment we gave an nonparametric and a parametric technique for combining parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



['140']
140
['140']
parsed_discourse_facet ['method_citation']
<S sid="70" ssid="56">In this case we are interested in finding' the maximum probability parse, ri, and Mi is the set of relevant (binary) parsing decisions made by parser i. ri is a parse selected from among the outputs of the individual parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



['70']
70
['70']
parsed_discourse_facet ['aim_citation']
<S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



['85']
85
['85']
parsed_discourse_facet ['result_citation']
<S sid="70" ssid="56">In this case we are interested in finding' the maximum probability parse, ri, and Mi is the set of relevant (binary) parsing decisions made by parser i. ri is a parse selected from among the outputs of the individual parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



['70']
70
['70']
parsed_discourse_facet ['aim_citation']
parsing: input/res/Task1/W99-0623.annv3.csv
<S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'120'", "'139'"]
'85'
'120'
'139'
['85', '120', '139']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="96" ssid="25">We call such a constituent an isolated constituent.</S>
original cit marker offset is 0
new cit marker offset is 0



["'120'", "'23'", "'96'"]
'120'
'23'
'96'
['120', '23', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="14" ssid="10">We used these three parsers to explore parser combination techniques.</S><S sid="25" ssid="11">In our particular case the majority requires the agreement of only two parsers because we have only three.</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'14'", "'25'"]
'139'
'14'
'25'
['139', '14', '25']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'77'", "'120'"]
'23'
'77'
'120'
['23', '77', '120']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="13">Another technique for parse hybridization is to use a naïve Bayes classifier to determine which constituents to include in the parse.</S><S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="16" ssid="2">We call this approach parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'15'", "'16'"]
'27'
'15'
'16'
['27', '15', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="96" ssid="25">We call such a constituent an isolated constituent.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'120'", "'96'"]
'23'
'120'
'96'
['23', '120', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="5">Through parser combination we have reduced the precision error rate by 30% and the recall error rate by 6% compared to the best previously published result.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'120'", "'23'"]
'143'
'120'
'23'
['143', '120', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'139'", "'120'"]
'23'
'139'
'120'
['23', '139', '120']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'67'", "'139'", "'77'"]
'67'
'139'
'77'
['67', '139', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S><S sid="143" ssid="5">Through parser combination we have reduced the precision error rate by 30% and the recall error rate by 6% compared to the best previously published result.</S>
original cit marker offset is 0
new cit marker offset is 0



["'120'", "'85'", "'143'"]
'120'
'85'
'143'
['120', '85', '143']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="60" ssid="46">First we present the non-parametric version of parser switching, similarity switching: The intuition for this technique is that we can measure a similarity between parses by counting the constituents they have in common.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'60'", "'120'", "'23'"]
'60'
'120'
'23'
['60', '120', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'67'", "'77'"]
'139'
'67'
'77'
['139', '67', '77']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="78" ssid="7">The set is then compared with the set generated from the Penn Treebank parse to determine the precision and recall.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'67'", "'78'"]
'15'
'67'
'78'
['15', '67', '78']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="96" ssid="25">We call such a constituent an isolated constituent.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S><S sid="16" ssid="2">We call this approach parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'96'", "'77'", "'16'"]
'96'
'77'
'16'
['96', '77', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="118" ssid="47">The maximum precision oracle is an upper bound on the possible gain we can achieve by parse hybridization.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'118'", "'77'"]
'15'
'118'
'77'
['15', '118', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="0" ssid="0">Exploiting Diversity in Natural Language Processing: Combining Parsers</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'0'", "'77'"]
'139'
'0'
'77'
['139', '0', '77']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="78" ssid="7">The set is then compared with the set generated from the Penn Treebank parse to determine the precision and recall.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'67'", "'78'"]
'15'
'67'
'78'
['15', '67', '78']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



W99-0623
A00-2005
0
result_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



W99-0623
N10-1091
0
method_citation
['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']



W99-0623
W05-1518
0
result_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



W99-0623
P01-1005
0
result_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W99-0623
N06-2033
0
result_citation
['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
gold file P87-1015_sweta.csv
submit_file input/res/Task1/P87-1015.annv3.csv
parsing: input/ref/Task1/P87-1015_sweta.csv
<S sid="205" ssid="11">Independence of paths at this level reflects context freeness of rewriting and suggests why they can be recognized efficiently.</S>
original cit marker offset is 0
new cit marker offset is 0



["205'"]
205'
['205']
parsed_discourse_facet ['method_citation']
<S sid="229" ssid="35">In addition, the restricted version of CG's (discussed in Section 6) generates tree sets with independent paths and we hope that it can be included in a more general definition of LCFRS's containing formalisms whose tree sets have path sets that are themselves LCFRL's (as in the case of the restricted indexed grammars, and the hierarchy defined by Weir).</S>
original cit marker offset is 0
new cit marker offset is 0



["229'"]
229'
['229']
parsed_discourse_facet ['method_citation']
<S sid="146" ssid="31">Since every CFL is known to be semilinear (Parikh, 1966), in order to show semilinearity of some language, we need only show the existence of a letter equivalent CFL Our definition of LCFRS's insists that the composition operations are linear and nonerasing.</S>
original cit marker offset is 0
new cit marker offset is 0



["146'"]
146'
['146']
parsed_discourse_facet ['method_citation']
<S sid="201" ssid="7">It is interesting to note, however, that the ability to produce a bounded number of dependent paths (where two dependent paths can share an unbounded amount of information) does not require machinery as powerful as that used in LFG, FUG and IG's.</S>
original cit marker offset is 0
new cit marker offset is 0



["201'"]
201'
['201']
parsed_discourse_facet ['method_citation']
 <S sid="151" ssid="36">We now turn our attention to the recognition of string languages generated by these formalisms (LCFRL's).</S>
original cit marker offset is 0
new cit marker offset is 0



["151'"]
151'
['151']
parsed_discourse_facet ['method_citation']
 <S sid="222" ssid="28">However, in order to capture the properties of various grammatical systems under consideration, our notation is more restrictive that ILFP, which was designed as a general logical notation to characterize the complete class of languages that are recognizable in polynomial time.</S>
original cit marker offset is 0
new cit marker offset is 0



["222'"]
222'
['222']
parsed_discourse_facet ['method_citation']
<S sid="22" ssid="7">Gazdar (1985) argues this is the appropriate analysis of unbounded dependencies in the hypothetical Scandinavian language Norwedish.</S>
    <S sid="23" ssid="8">He also argues that paired English complementizers may also require structural descriptions whose path sets have nested dependencies.</S>
original cit marker offset is 0
new cit marker offset is 0



["22'", "'23'"]
22'
'23'
['22', '23']
parsed_discourse_facet ['method_citation']
 <S sid="156" ssid="41">Giving a recognition algorithm for LCFRL's involves describing the substrings of the input that are spanned by the structures derived by the LCFRS's and how the composition operation combines these substrings.</S>
original cit marker offset is 0
new cit marker offset is 0



["156'"]
156'
['156']
parsed_discourse_facet ['method_citation']
<S sid="221" ssid="27">Members of LCFRS whose operations have this property can be translated into the ILFP notation (Rounds, 1985).</S>
original cit marker offset is 0
new cit marker offset is 0



["221'"]
221'
['221']
parsed_discourse_facet ['method_citation']
<S sid="54" ssid="39">An IG can be viewed as a CFG in which each nonterminal is associated with a stack.</S>
original cit marker offset is 0
new cit marker offset is 0



["54'"]
54'
['54']
parsed_discourse_facet ['method_citation']
<S sid="128" ssid="13">As in the case of the derivation trees of CFG's, nodes are labeled by a member of some finite set of symbols (perhaps only implicit in the grammar as in TAG's) used to denote derived structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["128'"]
128'
['128']
parsed_discourse_facet ['method_citation']
<S sid="217" ssid="23">In considering the recognition of these languages, we were forced to be more specific regarding the relationship between the structures derived by these formalisms and the substrings they span.</S>
original cit marker offset is 0
new cit marker offset is 0



[";217'"]
;217'
[';217']
parsed_discourse_facet ['method_citation']
<S sid="16" ssid="1">From Thatcher's (1973) work, it is obvious that the complexity of the set of paths from root to frontier of trees in a local set (the tree set of a CFG) is regular'.</S>
original cit marker offset is 0
new cit marker offset is 0



["16'"]
16'
['16']
parsed_discourse_facet ['method_citation']
<S sid="16" ssid="1">From Thatcher's (1973) work, it is obvious that the complexity of the set of paths from root to frontier of trees in a local set (the tree set of a CFG) is regular'.</S>
original cit marker offset is 0
new cit marker offset is 0



["16'"]
16'
['16']
parsed_discourse_facet ['method_citation']
<S sid="214" ssid="20">LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S>
original cit marker offset is 0
new cit marker offset is 0



["214'"]
214'
['214']
parsed_discourse_facet ['method_citation']
<S sid="35" ssid="20">TAG's can be used to give the structural descriptions discussed by Gazdar (1985) for the unbounded nested dependencies in Norwedish, for cross serial dependencies in Dutch subordinate clauses, and for the nestings of paired English complementizers.</S>
original cit marker offset is 0
new cit marker offset is 0



["35'"]
35'
['35']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P87-1015.annv3.csv
<S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S><S sid="117" ssid="2">Our goal is to define a class of formal systems, and show that any member of this class will possess certain attractive properties.</S><S sid="110" ssid="16">The independence of paths in the tree sets of the k tI grammatical formalism in this hierarchy can be shown by means of tree pumping lemma of the form t1ti3t .</S>
original cit marker offset is 0
new cit marker offset is 0



["'165'", "'117'", "'110'"]
'165'
'117'
'110'
['165', '117', '110']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="111" ssid="17">.</S><S sid="230" ssid="36">LCFRS's have only been loosely defined in this paper; we have yet to provide a complete set of formal properties associated with members of this class.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'111'", "'230'", "'118'"]
'111'
'230'
'118'
['111', '230', '118']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="214" ssid="20">LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'125'", "'214'"]
'207'
'125'
'214'
['207', '125', '214']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'118'", "'92'"]
'207'
'118'
'92'
['207', '118', '92']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'92'", "'118'"]
'207'
'92'
'118'
['207', '92', '118']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'", "'207'", "'133'"]
'118'
'207'
'133'
['118', '207', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="214" ssid="20">LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S>
original cit marker offset is 0
new cit marker offset is 0



["'165'", "'125'", "'214'"]
'165'
'125'
'214'
['165', '125', '214']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="151" ssid="36">We now turn our attention to the recognition of string languages generated by these formalisms (LCFRL's).</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'151'", "'207'", "'92'"]
'151'
'207'
'92'
['151', '207', '92']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'", "'207'", "'133'"]
'118'
'207'
'133'
['118', '207', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="54" ssid="39">An IG can be viewed as a CFG in which each nonterminal is associated with a stack.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S>
original cit marker offset is 0
new cit marker offset is 0



["'54'", "'118'", "'165'"]
'54'
'118'
'165'
['54', '118', '165']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="75" ssid="60">A multicomponent Tree Adjoining Grammar (MCTAG) consists of a finite set of finite elementary tree sets.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S><S sid="28" ssid="13">A TAG consists of a finite set of elementary trees that are either initial trees or auxiliary trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'75'", "'133'", "'28'"]
'75'
'133'
'28'
['75', '133', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'207'", "'92'"]
'125'
'207'
'92'
['125', '207', '92']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="204" ssid="10">The similarities become apparent when they are studied at the level of derivation structures: derivation nee sets of CFG's, HG's, TAG's, and MCTAG's are all local sets.</S><S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'204'", "'165'"]
'125'
'204'
'165'
['125', '204', '165']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="78" ssid="63">Each member of a set of trees can be adjoined into distinct nodes of trees in a single elementary tree set, i.e, derivations always involve the adjunction of a derived auxiliary tree set into an elementary tree set.</S><S sid="80" ssid="65">The derivation trees of a MCTAG are similar to those of a TAG.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'78'", "'80'"]
'125'
'78'
'80'
['125', '78', '80']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="102" ssid="8">For example, let us consider a tree set containing trees of the form shown in Figure 4a.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'207'", "'102'"]
'125'
'207'
'102'
['125', '207', '102']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="134" ssid="19">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'125'", "'134'"]
'207'
'125'
'134'
['207', '125', '134']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
gold file E03-1005_aakansha.csv
submit_file input/res/Task1/E03-1005.annv3.csv
parsing: input/ref/Task1/E03-1005_aakansha.csv
<S sid="105" ssid="8">The derivation with the smallest sum, or highest rank, is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP, its results are still rather impressive for such a simple model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'105'"]
'105'
['105']
parsed_discourse_facet ['method_citation']
<S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'"]
'145'
['145']
parsed_discourse_facet ['method_citation']
<S sid="80" ssid="32">DOP1 has a serious bias: its subtree estimator provides more probability to nodes with more subtrees (Bonnema et al. 1999).</S>
original cit marker offset is 0
new cit marker offset is 0



["'80'"]
'80'
['80']
parsed_discourse_facet ['method_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'"]
'143'
['143']
parsed_discourse_facet ['method_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="141" ssid="6">This is roughly an 11% relative reduction in error rate over Charniak (2000) and Bods PCFG-reduction reported in Table 1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'", "'141'"]
'140'
'141'
['140', '141']
parsed_discourse_facet ['result_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['result_citation']
<S sid="102" ssid="5">In case the shortest derivation is not unique, Bod (2000b) proposes to back off to a frequency ordering of the subtrees.</S>
    <S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S>
original cit marker offset is 0
new cit marker offset is 0



["'102'", "'103'"]
'102'
'103'
['102', '103']
parsed_discourse_facet ['method_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['result_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['result_citation']
<S sid="46" ssid="43">Most previous notions of best parse tree in DOP1 were based on a probabilistic metric, with Bod (2000b) as a notable exception, who used a simplicity metric based on the shortest derivation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'46'"]
'46'
['46']
parsed_discourse_facet ['method_citation']
<S sid="85" ssid="37">For example, Bod (2001) samples a fixed number of subtrees of each depth, which has the effect of assigning roughly equal weight to each node in the training data, and roughly exponentially less probability for larger trees (see Goodman 2002: 12).</S>
    <S sid="86" ssid="38">Bod reports state-of-the-art results with this method, and observes no decrease in parse accuracy when larger subtrees are included (using subtrees up to depth 14).</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'86'"]
'85'
'86'
['85', '86']
parsed_discourse_facet ['method_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['result_citation']
<S sid="115" ssid="18">The only thing that needs to be changed for Simplicity-DOP is that all subtrees should be assigned equal probabilities.</S>
original cit marker offset is 0
new cit marker offset is 0



["'115'"]
'115'
['115']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/E03-1005.annv3.csv
<S sid="104" ssid="7">Next, the rank of each (shortest) derivation is computed as the sum of the ranks of the subtrees involved.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'", "'143'", "'103'"]
'104'
'143'
'103'
['104', '143', '103']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="0" ssid="0">An Efficient Implementation of a New DOP Model</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'143'", "'0'"]
'145'
'143'
'0'
['145', '143', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="94" ssid="46">This paper presents the first published results with this estimator on the WSJ.</S><S sid="29" ssid="26">Johnson (1998b, 2002) showed that DOP1's subtree estimation method is statistically biased and inconsistent.</S><S sid="43" ssid="40">Bod (2001, 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'", "'29'", "'43'"]
'94'
'29'
'43'
['94', '29', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="21" ssid="18">One instantiation of DOP which has received considerable interest is the model known as DOP12 (Bod 1992).</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'145'", "'21'"]
'143'
'145'
'21'
['143', '145', '21']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="2" ssid="2">This paper proposes an integration of the two models which outperforms each of them separately.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="34" ssid="31">But even with cross-validation, ML-DOP is outperformed by the much simpler DOP1 model on both the ATIS and OVIS treebanks (Bod 2000b).</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'145'", "'34'"]
'2'
'145'
'34'
['2', '145', '34']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="2" ssid="2">This paper proposes an integration of the two models which outperforms each of them separately.</S><S sid="133" ssid="14">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'", "'2'", "'133'"]
'140'
'2'
'133'
['140', '2', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="43" ssid="40">Bod (2001, 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'143'", "'43'"]
'103'
'143'
'43'
['103', '143', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S><S sid="126" ssid="7">We focused on the Labeled Precision (LP) and Labeled Recall (LR) scores, as these are commonly used to rank parsing systems.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'103'", "'126'"]
'143'
'103'
'126'
['143', '103', '126']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="97" ssid="49">In this paper, we will estimate the most probable parse by computing the 10,000 most probable derivations by means of Viterbi n-best, from which the most likely parse is estimated by summing up the probabilities of the derivations that generate the same parse.</S><S sid="25" ssid="22">Many implementations of DOP1 therefore estimate the most probable parse by Monte Carlo techniques (Bod 1998; Chappelier & Rajman 2000), or by Viterbi n-best search (Bod 2001), or by restricting the set of subtrees (Sima'an 1999; Chappelier et al. 2002).</S><S sid="26" ssid="23">Sima'an (1995) gave an efficient algorithm for computing the parse tree generated by the most probable derivation, which in some cases is a reasonable approximation of the most probable parse.</S>
original cit marker offset is 0
new cit marker offset is 0



["'97'", "'25'", "'26'"]
'97'
'25'
'26'
['97', '25', '26']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="133" ssid="14">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S><S sid="41" ssid="38">This paper presents the first published results with Goodman's PCFG-reductions of both Bonnema et al. 's (1999) and Bod's (2001) estimators on the WSJ.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'", "'133'", "'41'"]
'140'
'133'
'41'
['140', '133', '41']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="47" ssid="44">We show that a combination of a probabilistic and a simplicity metric, which chooses the simplest parse from the n likeliest parses, outperforms the use of these metrics alone.</S><S sid="104" ssid="7">Next, the rank of each (shortest) derivation is computed as the sum of the ranks of the subtrees involved.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'47'", "'104'", "'145'"]
'47'
'104'
'145'
['47', '104', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="86" ssid="38">Bod reports state-of-the-art results with this method, and observes no decrease in parse accuracy when larger subtrees are included (using subtrees up to depth 14).</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'86'", "'143'"]
'145'
'86'
'143'
['145', '86', '143']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="3" ssid="3">Together with a PCFGreduction of DOP we obtain improved accuracy and efficiency on the Wall Street Journal treebank Our results show an 11% relative reduction in error rate over previous models, and an average processing time of 3.6 seconds per WSJ sentence.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'3'", "'145'"]
'143'
'3'
'145'
['143', '3', '145']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="142" ssid="7">Compared to the reranking technique in Collins (2000), who obtained an LP of 89.9% and an LR of 89.6%, our results show a 9% relative error rate reduction.</S><S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'142'", "'140'", "'145'"]
'142'
'140'
'145'
['142', '140', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="36" ssid="33">As an alternative, Bonnema et al. (1999) propose a subtree estimator which reduces the probability of a tree by a factor of two for each non-root non-terminal it contains.</S><S sid="22" ssid="19">DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).</S><S sid="50" ssid="2">The probability of a parse tree is computed from the occurrencefrequencies of the subtrees in the treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'22'", "'50'"]
'36'
'22'
'50'
['36', '22', '50']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



E03-1005
P11-1086
0
method_citation
['method_citation', 'aim_citation', 'results_citation', 'implication_citation']



E03-1005
P04-1013
0
result_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



E03-1005
E06-2025
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



E03-1005
P05-1022
0
result_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



E03-1005
W04-0305
0
result_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
gold file P11-1060_sweta.csv
submit_file input/res/Task1/P11-1060.annv3.csv
parsing: input/ref/Task1/P11-1060_sweta.csv
<S sid="8" ssid="4">On the other hand, existing unsupervised semantic parsers (Poon and Domingos, 2009) do not handle deeper linguistic phenomena such as quantification, negation, and superlatives.</S>
original cit marker offset is 0
new cit marker offset is 0



["8'"]
8'
['8']
parsed_discourse_facet ['method_citation']
<S sid="132" ssid="17">Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["132'"]
132'
['132']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="1">We first present a basic version (Section 2.1) of dependency-based compositional semantics (DCS), which captures the core idea of using trees to represent formal semantics.</S>
original cit marker offset is 0
new cit marker offset is 0



["25'"]
25'
['25']
parsed_discourse_facet ['method_citation']
 <S sid="45" ssid="21">The logical forms in DCS are called DCS trees, where nodes are labeled with predicates, and edges are labeled with relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["45'"]
45'
['45']
parsed_discourse_facet ['method_citation']
<S sid="51" ssid="27">It is impossible to represent the semantics of this phrase with just a CSP, so we introduce a new aggregate relation, notated E. Consider a tree hE:ci, whose root is connected to a child c via E. If the denotation of c is a set of values s, the parent&#8217;s denotation is then a singleton set containing s. Formally: Figure 3(a) shows the DCS tree for our running example.</S>
original cit marker offset is 0
new cit marker offset is 0



["51'"]
51'
['51']
parsed_discourse_facet ['method_citation']
 <S sid="166" ssid="51">Our employed (Zettlemoyer and Collins, 2007) or words work pushes the grounded language agenda towards are given multiple lexical entries (Kwiatkowski et deeper representations of language&#8212;think grounded al., 2010). compositional semantics.</S>
original cit marker offset is 0
new cit marker offset is 0



["166'"]
166'
['166']
parsed_discourse_facet ['method_citation']
 <S sid="8" ssid="4">On the other hand, existing unsupervised semantic parsers (Poon and Domingos, 2009) do not handle deeper linguistic phenomena such as quantification, negation, and superlatives.</S>
original cit marker offset is 0
new cit marker offset is 0



["8'"]
8'
['8']
parsed_discourse_facet ['method_citation']
 <S sid="11" ssid="7">Figure 1 shows our probabilistic model: with respect to a world w (database of facts), producing an answer y.</S>
original cit marker offset is 0
new cit marker offset is 0



["11'"]
11'
['11']
parsed_discourse_facet ['method_citation']
  <S sid="115" ssid="91">After training, given a new utterance x, our system outputs the most likely y, summing out the latent logical form z: argmaxy p&#952;(T)(y  |x, z &#8712; &#732;ZL,&#952;(T)).</S>
original cit marker offset is 0
new cit marker offset is 0



["115'"]
115'
['115']
parsed_discourse_facet ['method_citation']
<S sid="132" ssid="17">Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["132'"]
132'
['132']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="1">We first present a basic version (Section 2.1) of dependency-based compositional semantics (DCS), which captures the core idea of using trees to represent formal semantics.</S>
original cit marker offset is 0
new cit marker offset is 0



["25'"]
25'
['25']
parsed_discourse_facet ['method_citation']
<S sid="94" ssid="70">We now turn to the task of mapping natural language For the example in Figure 4(b), the de- utterances to DCS trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["94'"]
94'
['94']
parsed_discourse_facet ['method_citation']
<S sid="132" ssid="17">Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["132'"]
132'
['132']
parsed_discourse_facet ['method_citation']
<S sid="157" ssid="42">Eisenciations due to data sparsity, and having an insuffi- stein et al. (2009) induces conjunctive formulae and ciently large K. uses them as features in another learning problem.</S>
original cit marker offset is 0
new cit marker offset is 0



["157'"]
157'
['157']
parsed_discourse_facet ['method_citation']
<S sid="106" ssid="82">Learning Given a training dataset D containing (x, y) pairs, we define the regularized marginal log-likelihood objective O(&#952;) = E(x,y)ED log p&#952;(JzKw = y  |x, z &#8712; ZL(x)) &#8722; &#955;k&#952;k22, which sums over all DCS trees z that evaluate to the target answer y.</S>
original cit marker offset is 0
new cit marker offset is 0



["106'"]
106'
['106']
parsed_discourse_facet ['method_citation']
<S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S>
original cit marker offset is 0
new cit marker offset is 0



["167'"]
167'
['167']
parsed_discourse_facet ['method_citation']
<S sid="138" ssid="23">Next, we compared our systems (DCS and DCS+) with the state-of-the-art semantic parsers on the full dataset for both GEO and JOBS (see Table 3).</S>
original cit marker offset is 0
new cit marker offset is 0



["138'"]
138'
['138']
parsed_discourse_facet ['method_citation']
<S sid="40" ssid="16">The CSP has two types of constraints: (i) x &#8712; w(p) for each node x labeled with predicate p &#8712; P; and (ii) xj = yj0 (the j-th component of x must equal the j'-th component of y) for each edge (x, y) labeled with j0j &#8712; R. A solution to the CSP is an assignment of nodes to values that satisfies all the constraints.</S>
original cit marker offset is 0
new cit marker offset is 0



["40'"]
40'
['40']
parsed_discourse_facet ['method_citation']
<S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



["171'"]
171'
['171']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P11-1060.annv3.csv
<S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'3'", "'2'"]
'0'
'3'
'2'
['0', '3', '2']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="156" ssid="41">There has been a fair amount of past work on no predicates), confusion of Washington state with this topic: Liang et al. (2010) induces combinatory Washington D.C., learning the wrong lexical asso- logic programs in a non-linguistic setting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'3'", "'156'"]
'2'
'3'
'156'
['2', '3', '156']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="169" ssid="54">The combination rules are encoded in the tems, despite using no annotated logical forms.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'22'", "'6'"]
'169'
'22'
'6'
['169', '22', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="45" ssid="21">The logical forms in DCS are called DCS trees, where nodes are labeled with predicates, and edges are labeled with relations.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'", "'54'", "'21'"]
'45'
'54'
'21'
['45', '54', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'167'", "'54'", "'21'"]
'167'
'54'
'21'
['167', '54', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'0'", "'3'"]
'149'
'0'
'3'
['149', '0', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="163" ssid="48">Feedback from the context; for example, the lexical entry for borders world has been used to guide both syntactic parsing is S\NP/NP : Ay.Ax.border(x, y), which means (Schuler, 2003) and semantic parsing (Popescu et borders looks right for the first argument and left al., 2003; Clarke et al., 2010).</S><S sid="52" ssid="28">The denotation of the middle node is {s}, where s is all major cities.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'163'", "'52'"]
'3'
'163'
'52'
['3', '163', '52']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="169" ssid="54">The combination rules are encoded in the tems, despite using no annotated logical forms.</S><S sid="117" ssid="2">In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'117'", "'6'"]
'169'
'117'
'6'
['169', '117', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="117" ssid="2">In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="35" ssid="11">Although a DCS tree is a logical form, note that it looks like a syntactic dependency tree with predicates in place of words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'117'", "'22'", "'35'"]
'117'
'22'
'35'
['117', '22', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S><S sid="132" ssid="17">Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'6'", "'132'"]
'2'
'6'
'132'
['2', '6', '132']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'0'", "'171'"]
'21'
'0'
'171'
['21', '0', '171']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S><S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'21'", "'149'"]
'0'
'21'
'149'
['0', '21', '149']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'54'", "'167'"]
'149'
'54'
'167'
['149', '54', '167']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="85" ssid="61">Extraction allows us to return the set of consistent values of a marked non-root node.</S><S sid="42" ssid="18">The denotation JzKw (z evaluated on w) is the set of consistent values of the root node (see Figure 2 for an example).</S><S sid="38" ssid="14">Let us start by considering a DCS tree z with only join relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'42'", "'38'"]
'85'
'42'
'38'
['85', '42', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S><S sid="1" ssid="1">Compositional question answering begins by mapping questions to logical forms, but training a semantic parser to perform this mapping typically requires the costly annotation of the target logical forms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'171'", "'1'"]
'3'
'171'
'1'
['3', '171', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'167'", "'54'"]
'149'
'167'
'54'
['149', '167', '54']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="172" ssid="57">Free from the burden It also allows us to easily add new lexical triggers of annotating logical forms, we hope to use our without becoming mired in the semantic formalism. techniques in developing even more accurate and Quantifiers and superlatives significantly compli- broader-coverage language understanding systems. cate scoping in lambda calculus, and often type rais- Acknowledgments We thank Luke Zettlemoyer ing needs to be employed.</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="161" ssid="46">CCG (Steedman, 2000), in which semantic pars- The integration of natural language with denotaing is driven from the lexicon.</S>
original cit marker offset is 0
new cit marker offset is 0



["'172'", "'0'", "'161'"]
'172'
'0'
'161'
['172', '0', '161']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S>
original cit marker offset is 0
new cit marker offset is 0



["'22'", "'6'", "'0'"]
'22'
'6'
'0'
['22', '6', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="48" ssid="24">In addition, trees enable efficient computation, thereby establishing a new connection between dependency syntax and efficient semantic evaluation.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'22'", "'171'"]
'48'
'22'
'171'
['48', '22', '171']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



P11-1060
P12-1045
0
method_citation
['method_citation', 'aim_citation', 'results_citation', 'implication_citation']



P11-1060
D11-1140
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



P11-1060
P12-1051
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file P04-1036_sweta.csv
submit_file input/res/Task1/P04-1036.annv3.csv
parsing: input/ref/Task1/P04-1036_sweta.csv
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["8'"]
8'
['8']
parsed_discourse_facet ['method_citation']
<S sid="82" ssid="11">We also calculate the WSD accuracy that would be obtained on SemCor, when using our first sense in all contexts ( ).</S>
original cit marker offset is 0
new cit marker offset is 0



["82'"]
82'
['82']
parsed_discourse_facet ['method_citation']
<S sid="64" ssid="20">We briefly summarise the two measures here; for a more detailed summary see (Patwardhan et al., 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["64'"]
64'
['64']
parsed_discourse_facet ['method_citation']
<S sid="172" ssid="20">We believe automatic ranking techniques such as ours will be useful for systems that rely on WordNet, for example those that use it for lexical acquisition or WSD.</S>
original cit marker offset is 0
new cit marker offset is 0



["172'"]
172'
['172']
parsed_discourse_facet ['method_citation']
<S sid="153" ssid="1">Most research in WSD concentrates on using contextual features, typically neighbouring words, to help determine the correct sense of a target word.</S>
original cit marker offset is 0
new cit marker offset is 0



["153'"]
153'
['153']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">word sense disambiguation the heuristic of choosing the most common sense is extremely powerful because the distribution of the senses of a word is often skewed.</S>
original cit marker offset is 0
new cit marker offset is 0



["1'"]
1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="165" ssid="13">Lapata and Brew obtain their priors for verb classes directly from subcategorisation evidence in a parsed corpus, whereas we use parsed data to find distributionally similar words (nearest neighbours) to the target word which reflect the different senses of the word and have associated distributional similarity scores which can be used for ranking the senses according to prevalence.</S>
original cit marker offset is 0
new cit marker offset is 0



["165'"]
165'
['165']
parsed_discourse_facet ['method_citation']
<S sid="171" ssid="19">In contrast, we use the neighbours lists and WordNet similarity measures to impose a prevalence ranking on the WordNet senses.</S>
original cit marker offset is 0
new cit marker offset is 0



["171'"]
171'
['171']
parsed_discourse_facet ['method_citation']
<S sid="89" ssid="18">Since both measures gave comparable results we restricted our remaining experiments to jcn because this gave good results for finding the predominant sense, and is much more efficient than lesk, given the precompilation of the IC files.</S>
original cit marker offset is 0
new cit marker offset is 0



["89'"]
89'
['89']
parsed_discourse_facet ['method_citation']
<S sid="172" ssid="20">We believe automatic ranking techniques such as ours will be useful for systems that rely on WordNet, for example those that use it for lexical acquisition or WSD.</S>
original cit marker offset is 0
new cit marker offset is 0



["172'"]
172'
['172']
parsed_discourse_facet ['method_citation']
<S sid="189" ssid="12">Additionally, we need to determine whether senses which do not occur in a wide variety of grammatical contexts fare badly using distributional measures of similarity, and what can be done to combat this problem using relation specific thesauruses.</S>
original cit marker offset is 0
new cit marker offset is 0



["189'"]
189'
['189']
parsed_discourse_facet ['method_citation']
<S sid="87" ssid="16">Again, the automatic ranking outperforms this by a large margin.</S>
original cit marker offset is 0
new cit marker offset is 0



["87'"]
87'
['87']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">word sense disambiguation the heuristic of choosing the most common sense is extremely powerful because the distribution of the senses of a word is often skewed.</S>
original cit marker offset is 0
new cit marker offset is 0



["1'"]
1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="89" ssid="18">Since both measures gave comparable results we restricted our remaining experiments to jcn because this gave good results for finding the predominant sense, and is much more efficient than lesk, given the precompilation of the IC files.</S>
original cit marker offset is 0
new cit marker offset is 0



["89'"]
89'
['89']
parsed_discourse_facet ['method_citation']
 <S sid="137" ssid="14">Additionally, we evaluated our method quantitatively using the Subject Field Codes (SFC) resource (Magnini and Cavagli`a, 2000) which annotates WordNet synsets with domain labels.</S>
original cit marker offset is 0
new cit marker offset is 0



["137'"]
137'
['137']
parsed_discourse_facet ['method_citation']
<S sid="63" ssid="19">We experimented using six of these to provide the in equation 1 above and obtained results well over our baseline, but because of space limitations give results for the two which perform the best.</S>
original cit marker offset is 0
new cit marker offset is 0



["63'"]
63'
['63']
parsed_discourse_facet ['method_citation']
<S sid="159" ssid="7">Magnini and Cavagli`a (2000) have identified WordNet word senses with particular domains, and this has proven useful for high precision WSD (Magnini et al., 2001); indeed in section 5 we used these domain labels for evaluation.</S>
original cit marker offset is 0
new cit marker offset is 0



["159'"]
159'
['159']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P04-1036.annv3.csv
<S sid="107" ssid="5">To disambiguate senses a system should take context into account.</S><S sid="154" ssid="2">In contrast, our work is aimed at discovering the predominant senses from raw text because the first sense heuristic is such a useful one, and because handtagged data is not always available.</S><S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'107'", "'154'", "'8'"]
'107'
'154'
'8'
['107', '154', '8']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="154" ssid="2">In contrast, our work is aimed at discovering the predominant senses from raw text because the first sense heuristic is such a useful one, and because handtagged data is not always available.</S><S sid="162" ssid="10">It only requires raw text from the given domain and because of this it can easily be applied to a new domain, or sense inventory, given sufficient text.</S><S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'154'", "'162'", "'180'"]
'154'
'162'
'180'
['154', '162', '180']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="167" ssid="15">In this work the lists of neighbours are themselves clustered to bring out the various senses of the word.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'167'", "'169'"]
'179'
'167'
'169'
['179', '167', '169']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="171" ssid="19">In contrast, we use the neighbours lists and WordNet similarity measures to impose a prevalence ranking on the WordNet senses.</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'171'", "'0'"]
'179'
'171'
'0'
['179', '171', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'126'", "'15'"]
'0'
'126'
'15'
['0', '126', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'169'", "'180'"]
'179'
'169'
'180'
['179', '169', '180']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="186" ssid="9">In particular, we will use balanced and domain specific corpora to isolate words having very different neighbours, and therefore rankings, in the different corpora and to detect and target words for which there is a highly skewed sense distribution in these corpora.</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'", "'186'", "'0'"]
'126'
'186'
'0'
['126', '186', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="81" ssid="10">4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'81'", "'0'"]
'48'
'81'
'0'
['48', '81', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="66" ssid="22">It uses the glosses of semantically related (according to WordNet) senses too. jcn (Jiang and Conrath, 1997) This score uses corpus data to populate classes (synsets) in the WordNet hierarchy with frequency counts.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'66'", "'4'"]
'179'
'66'
'4'
['179', '66', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'27'", "'45'"]
'169'
'27'
'45'
['169', '27', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'179'", "'45'"]
'48'
'179'
'45'
['48', '179', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S><S sid="58" ssid="14">A noun, , is thus described by a set of co-occurrence triples and associated frequencies, where is a grammatical relation and is a possible cooccurrence with in that relation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'45'", "'58'"]
'179'
'45'
'58'
['179', '45', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'179'", "'27'"]
'8'
'179'
'27'
['8', '179', '27']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="153" ssid="1">Most research in WSD concentrates on using contextual features, typically neighbouring words, to help determine the correct sense of a target word.</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'153'", "'126'", "'4'"]
'153'
'126'
'4'
['153', '126', '4']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="81" ssid="10">4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'81'", "'126'"]
'48'
'81'
'126'
['48', '81', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'169'", "'4'"]
'8'
'169'
'4'
['8', '169', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'27'", "'4'"]
'8'
'27'
'4'
['8', '27', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
gold file W06-3114_sweta.csv
submit_file input/res/Task1/W06-3114.annv3.csv
parsing: input/ref/Task1/W06-3114_sweta.csv
 <S sid="108" ssid="1">The results of the manual and automatic evaluation of the participating system translations is detailed in the figures at the end of this paper.</S>
original cit marker offset is 0
new cit marker offset is 0



["108'"]
108'
['108']
parsed_discourse_facet ['method_citation']
<S sid="34" ssid="27">For more on the participating systems, please refer to the respective system description in the proceedings of the workshop.</S>
original cit marker offset is 0
new cit marker offset is 0



["34'"]
34'
['34']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="11">In addition to the Europarl test set, we also collected 29 editorials from the Project Syndicate website2, which are published in all the four languages of the shared task.</S>
original cit marker offset is 0
new cit marker offset is 0



["18'"]
18'
['18']
parsed_discourse_facet ['method_citation']
 <S sid="151" ssid="44">The statistical systems seem to still lag behind the commercial rule-based competition when translating into morphological rich languages, as demonstrated by the results for English-German and English-French.</S>
original cit marker offset is 0
new cit marker offset is 0



["151'"]
151'
['151']
parsed_discourse_facet ['method_citation']
<S sid="16" ssid="9">The test data was again drawn from a segment of the Europarl corpus from the fourth quarter of 2000, which is excluded from the training data.</S>
original cit marker offset is 0
new cit marker offset is 0



["16'"]
16'
['16']
parsed_discourse_facet ['method_citation']
 <S sid="172" ssid="3">Due to many similarly performing systems, we are not able to draw strong conclusions on the question of correlation of manual and automatic evaluation metrics.</S>
original cit marker offset is 0
new cit marker offset is 0



["172'"]
172'
['172']
parsed_discourse_facet ['method_citation']
 <S sid="36" ssid="2">The BLEU metric, as all currently proposed automatic metrics, is occasionally suspected to be biased towards statistical systems, especially the phrase-based systems currently in use.</S>
original cit marker offset is 0
new cit marker offset is 0



["36'"]
36'
['36']
parsed_discourse_facet ['method_citation']
<S sid="103" ssid="19">Given a set of n sentences, we can compute the sample mean x&#65533; and sample variance s2 of the individual sentence judgements xi: The extend of the confidence interval [x&#8722;d, x+df can be computed by d = 1.96 &#183;&#65533;n (6) Pairwise Comparison: As for the automatic evaluation metric, we want to be able to rank different systems against each other, for which we need assessments of statistical significance on the differences between a pair of systems.</S>
original cit marker offset is 0
new cit marker offset is 0



["103'"]
103'
['103']
parsed_discourse_facet ['method_citation']
<S sid="167" ssid="60">One annotator suggested that this was the case for as much as 10% of our test sentences.</S>
original cit marker offset is 0
new cit marker offset is 0



["167'"]
167'
['167']
parsed_discourse_facet ['method_citation']
<S sid="102" ssid="18">Confidence Interval: To estimate confidence intervals for the average mean scores for the systems, we use standard significance testing.</S>
original cit marker offset is 0
new cit marker offset is 0



["102'"]
102'
['102']
parsed_discourse_facet ['method_citation']
<S sid="123" ssid="16">For the manual scoring, we can distinguish only half of the systems, both in terms of fluency and adequacy.</S>
original cit marker offset is 0
new cit marker offset is 0



["123'"]
123'
['123']
parsed_discourse_facet ['method_citation']
<S sid="34" ssid="27">For more on the participating systems, please refer to the respective system description in the proceedings of the workshop.</S>
original cit marker offset is 0
new cit marker offset is 0



["34'"]
34'
['34']
parsed_discourse_facet ['method_citation']
<S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S>
original cit marker offset is 0
new cit marker offset is 0



["62'"]
62'
['62']
parsed_discourse_facet ['method_citation']
<S sid="126" ssid="19">The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["126'"]
126'
['126']
parsed_discourse_facet ['method_citation']
<S sid="173" ssid="4">The bias of automatic methods in favor of statistical systems seems to be less pronounced on out-of-domain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["173'"]
173'
['173']
parsed_discourse_facet ['method_citation']
 <S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["170'"]
170'
['170']
parsed_discourse_facet ['method_citation']
<S sid="84" ssid="23">The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:</S>
original cit marker offset is 0
new cit marker offset is 0



["84'"]
84'
['84']
parsed_discourse_facet ['method_citation']
<S sid="8" ssid="1">The evaluation framework for the shared task is similar to the one used in last year&#8217;s shared task.</S>
original cit marker offset is 0
new cit marker offset is 0



["8'"]
8'
['8']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W06-3114.annv3.csv
<S sid="153" ssid="46">This is the first time that we organized a large-scale manual evaluation.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="175" ssid="6">Replacing this with an ranked evaluation seems to be more suitable.</S>
original cit marker offset is 0
new cit marker offset is 0



["'153'", "'170'", "'175'"]
'153'
'170'
'175'
['153', '170', '175']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S><S sid="26" ssid="19">Most of these groups follow a phrase-based statistical approach to machine translation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'0'", "'26'"]
'170'
'0'
'26'
['170', '0', '26']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="126" ssid="19">The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'126'"]
'9'
'170'
'126'
['9', '170', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="44" ssid="10">We computed BLEU scores for each submission with a single reference translation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'62'", "'44'"]
'170'
'62'
'44'
['170', '62', '44']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="19" ssid="12">We aligned the texts at a sentence level across all four languages, resulting in 1064 sentence per language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'19'"]
'9'
'170'
'19'
['9', '170', '19']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="36" ssid="2">The BLEU metric, as all currently proposed automatic metrics, is occasionally suspected to be biased towards statistical systems, especially the phrase-based systems currently in use.</S><S sid="35" ssid="1">For the automatic evaluation, we used BLEU, since it is the most established metric in the field.</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'", "'36'", "'35'"]
'62'
'36'
'35'
['62', '36', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="50" ssid="16">Following this method, we repeatedly — say, 1000 times — sample sets of sentences from the output of each system, measure their BLEU score, and use these 1000 BLEU scores as basis for estimating a confidence interval.</S><S sid="139" ssid="32">Given the closeness of most systems and the wide over-lapping confidence intervals it is hard to make strong statements about the correlation between human judgements and automatic scoring methods such as BLEU.</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S>
original cit marker offset is 0
new cit marker offset is 0



["'50'", "'139'", "'62'"]
'50'
'139'
'62'
['50', '139', '62']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="71" ssid="10">Presenting the output of several system allows the human judge to make more informed judgements, contrasting the quality of the different systems.</S><S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'71'", "'140'", "'0'"]
'71'
'140'
'0'
['71', '140', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="52" ssid="18">Pairwise comparison: We can use the same method to assess the statistical significance of one system outperforming another.</S><S sid="102" ssid="18">Confidence Interval: To estimate confidence intervals for the average mean scores for the systems, we use standard significance testing.</S><S sid="50" ssid="16">Following this method, we repeatedly — say, 1000 times — sample sets of sentences from the output of each system, measure their BLEU score, and use these 1000 BLEU scores as basis for estimating a confidence interval.</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'", "'102'", "'50'"]
'52'
'102'
'50'
['52', '102', '50']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="123" ssid="16">For the manual scoring, we can distinguish only half of the systems, both in terms of fluency and adequacy.</S><S sid="84" ssid="23">The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:</S><S sid="80" ssid="19">We collected around 300–400 judgements per judgement type (adequacy or fluency), per system, per language pair.</S>
original cit marker offset is 0
new cit marker offset is 0



["'123'", "'84'", "'80'"]
'123'
'84'
'80'
['123', '84', '80']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="11" ssid="4">To lower the barrier of entrance to the competition, we provided a complete baseline MT system, along with data resources.</S><S sid="117" ssid="10">For instance: if 10 systems participate, and one system does better than 3 others, worse then 2, and is not significant different from the remaining 4, its rank is in the interval 3–7.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'", "'117'", "'170'"]
'11'
'117'
'170'
['11', '117', '170']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="38" ssid="4">The BLEU score has been shown to correlate well with human judgement, when statistical machine translation systems are compared (Doddington, 2002; Przybocki, 2004; Li, 2005).</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="71" ssid="10">Presenting the output of several system allows the human judge to make more informed judgements, contrasting the quality of the different systems.</S>
original cit marker offset is 0
new cit marker offset is 0



["'38'", "'62'", "'71'"]
'38'
'62'
'71'
['38', '62', '71']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="126" ssid="19">The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'126'"]
'9'
'170'
'126'
['9', '170', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="36">For instance, for out-ofdomain English-French, Systran has the best BLEU and manual scores.</S><S sid="173" ssid="4">The bias of automatic methods in favor of statistical systems seems to be less pronounced on out-of-domain test data.</S><S sid="58" ssid="24">We divide up each test set into blocks of 20 sentences (100 blocks for the in-domain test set, 53 blocks for the out-of-domain test set), check for each block, if one system has a higher BLEU score than the other, and then use the sign test.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'173'", "'58'"]
'143'
'173'
'58'
['143', '173', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="64" ssid="3">Also, the argument has been made that machine translation performance should be evaluated via task-based evaluation metrics, i.e. how much it assists performing a useful task, such as supporting human translators or aiding the analysis of texts.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'170'", "'64'"]
'0'
'170'
'64'
['0', '170', '64']
parsed_discourse_facet ['hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="68" ssid="7">We asked participants to each judge 200–300 sentences in terms of fluency and adequacy, the most commonly used manual evaluation metrics.</S><S sid="84" ssid="23">The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'68'", "'84'"]
'170'
'68'
'84'
['170', '68', '84']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="44" ssid="10">We computed BLEU scores for each submission with a single reference translation.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'44'", "'0'"]
'170'
'44'
'0'
['170', '44', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']



W06-3114
D07-1030
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



W06-3114
W11-1002
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



W06-3114
D07-1091
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



W06-3114
P07-1108
0
method_citation
['hypothesis_citation', 'results_citation', 'implication_citation']



W06-3114
E12-3010
0
method_citation
['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
gold file W11-2123_vardha.csv
submit_file input/res/Task1/W11-2123.annv3.csv
parsing: input/ref/Task1/W11-2123_vardha.csv
    <S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S>
original cit marker offset is 0
new cit marker offset is 0



["'12'"]
'12'
['12']
parsed_discourse_facet ['method_citation']
 <S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'7'"]
'7'
['7']
parsed_discourse_facet ['method_citation']
 <S sid="131" ssid="3">Dynamic programming efficiently scores many hypotheses by exploiting the fact that an N-gram language model conditions on at most N &#8722; 1 preceding words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'131'"]
'131'
['131']
parsed_discourse_facet ['method_citation']
 <S sid="21" ssid="16">Performance improvements transfer to the Moses (Koehn et al., 2007), cdec (Dyer et al., 2010), and Joshua (Li et al., 2009) translation systems where our code has been integrated.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
 <S sid="21" ssid="16">Performance improvements transfer to the Moses (Koehn et al., 2007), cdec (Dyer et al., 2010), and Joshua (Li et al., 2009) translation systems where our code has been integrated.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="108" ssid="12">Compared with SRILM, IRSTLM adds several features: lower memory consumption, a binary file format with memory mapping, caching to increase speed, and quantization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'108'"]
'108'
['108']
parsed_discourse_facet ['method_citation']
    <S sid="129" ssid="1">In addition to the optimizations specific to each datastructure described in Section 2, we implement several general optimizations for language modeling.</S>
original cit marker offset is 0
new cit marker offset is 0



["'129'"]
'129'
['129']
parsed_discourse_facet ['method_citation']
    <S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'"]
'199'
['199']
parsed_discourse_facet ['method_citation']
    <S sid="52" ssid="30">Our implementation permits jumping to any n-gram of any length with a single lookup; this appears to be unique among language model implementations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'"]
'52'
['52']
parsed_discourse_facet ['method_citation']
    <S sid="263" ssid="5">Quantization can be improved by jointly encoding probability and backoff.</S>
original cit marker offset is 0
new cit marker offset is 0



["'263'"]
'263'
['263']
parsed_discourse_facet ['method_citation']
    <S sid="52" ssid="30">Our implementation permits jumping to any n-gram of any length with a single lookup; this appears to be unique among language model implementations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'"]
'52'
['52']
parsed_discourse_facet ['method_citation']
    <S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="145" ssid="17">If the context wnf will never extend to the right (i.e. wnf v is not present in the model for all words v) then no subsequent query will match the full context.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'"]
'145'
['145']
parsed_discourse_facet ['method_citation']
 <S sid="182" ssid="1">This section measures performance on shared tasks in order of increasing complexity: sparse lookups, evaluating perplexity of a large file, and translation with Moses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'182'"]
'182'
['182']
parsed_discourse_facet ['method_citation']
    <S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S>
original cit marker offset is 0
new cit marker offset is 0



["'274'"]
'274'
['274']
parsed_discourse_facet ['method_citation']
    <S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S>
original cit marker offset is 0
new cit marker offset is 0



["'12'"]
'12'
['12']
parsed_discourse_facet ['method_citation']
    <S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'7'"]
'7'
['7']
parsed_discourse_facet ['method_citation']
    <S sid="140" ssid="12">We have modified Moses (Koehn et al., 2007) to keep our state with hypotheses; to conserve memory, phrases do not keep state.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['method_citation']
 <S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'"]
'199'
['199']
parsed_discourse_facet ['method_citation']
 <S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'"]
'199'
['199']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W11-2123.annv3.csv
<S sid="97" ssid="1">SRILM (Stolcke, 2002) is widely used within academia.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'97'", "'12'", "'199'"]
'97'
'12'
'199'
['97', '12', '199']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="223" ssid="42">The binary language model from Section 5.2 and text phrase table were forced into disk cache before each run.</S><S sid="203" ssid="22">As noted in Section 4.4, disk cache state is controlled by reading the entire binary file before each test begins.</S><S sid="180" ssid="52">In all of our experiments, the binary file (whether mapped or, in the case of most other packages, interpreted) is loaded into the disk cache in advance so that lazy mapping will never fault to disk.</S>
original cit marker offset is 0
new cit marker offset is 0



["'223'", "'203'", "'180'"]
'223'
'203'
'180'
['223', '203', '180']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="159" ssid="31">Saving state allows our code to walk the data structure exactly once per query.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="10" ssid="5">The problem is to store these two values for a large and sparse set of n-grams in a way that makes queries efficient.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'1'", "'10'"]
'159'
'1'
'10'
['159', '1', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'274'", "'199'"]
'1'
'274'
'199'
['1', '274', '199']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'12'", "'1'"]
'199'
'12'
'1'
['199', '12', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="24" ssid="2">The set of n-grams appearing in a model is sparse, and we want to efficiently find their associated probabilities and backoff penalties.</S><S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'24'", "'7'"]
'199'
'24'
'7'
['199', '24', '7']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="206" ssid="25">Tokens were converted to vocabulary identifiers in advance and state was carried from each query to the next.</S><S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'206'", "'103'"]
'1'
'206'
'103'
['1', '206', '103']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'1'", "'205'"]
'199'
'1'
'205'
['199', '1', '205']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="45" ssid="23">The PROBING data structure is a rather straightforward application of these hash tables to store Ngram language models.</S><S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S><S sid="23" ssid="1">We implement two data structures: PROBING, designed for speed, and TRIE, optimized for memory.</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'", "'274'", "'23'"]
'45'
'274'
'23'
['45', '274', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="92" ssid="70">To quantize, we use the binning method (Federico and Bertoldi, 2006) that sorts values, divides into equally sized bins, and averages within each bin.</S><S sid="34" ssid="12">Therefore, a populated probing hash table consists of an array of buckets that contain either one entry or are empty.</S><S sid="35" ssid="13">Non-empty buckets contain an entry belonging to them or to a preceding bucket where a conflict occurred.</S>
original cit marker offset is 0
new cit marker offset is 0



["'92'", "'34'", "'35'"]
'92'
'34'
'35'
['92', '34', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="275" ssid="2">The PROBING model is 2.4 times as fast as the fastest alternative, SRILM, and uses less memory too.</S><S sid="97" ssid="1">SRILM (Stolcke, 2002) is widely used within academia.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S>
original cit marker offset is 0
new cit marker offset is 0



["'275'", "'97'", "'12'"]
'275'
'97'
'12'
['275', '97', '12']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="102" ssid="6">The PROBING model was designed to improve upon SRILM by using linear probing hash tables (though not arranged in a trie), allocating memory all at once (eliminating the need for full pointers), and being easy to compile.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'199'", "'102'"]
'1'
'199'
'102'
['1', '199', '102']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'1'", "'0'"]
'103'
'1'
'0'
['103', '1', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'12'", "'1'"]
'199'
'12'
'1'
['199', '12', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'103'", "'0'"]
'199'
'103'
'0'
['199', '103', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'205'", "'199'", "'1'"]
'205'
'199'
'1'
['205', '199', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="131" ssid="3">Dynamic programming efficiently scores many hypotheses by exploiting the fact that an N-gram language model conditions on at most N − 1 preceding words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'199'", "'131'"]
'103'
'199'
'131'
['103', '199', '131']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'7'", "'0'"]
'1'
'7'
'0'
['1', '7', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'205'", "'1'"]
'199'
'205'
'1'
['199', '205', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="200" ssid="19">The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'205'", "'200'"]
'199'
'205'
'200'
['199', '205', '200']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



W11-2123
W11-2138
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W11-2123
P13-2003
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W11-2123
W12-3160
0
method_citation
['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']



W11-2123
P13-2073
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W11-2123
P13-1109
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file A97-1014_swastika.csv
submit_file input/res/Task1/A97-1014.annv3.csv
parsing: input/ref/Task1/A97-1014_swastika.csv
<S sid="168" ssid="10">We will closely coordinate the further development of our corpus with the annotation work in Verbmobil and with other German efforts in corpus annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



['168']
168
['168']
parsed_discourse_facet ['aim_citation']
<S sid="168" ssid="10">We will closely coordinate the further development of our corpus with the annotation work in Verbmobil and with other German efforts in corpus annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



['168']
168
['168']
parsed_discourse_facet ['aim_citation']
<S sid="151" ssid="32">For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).</S>
original cit marker offset is 0
new cit marker offset is 0



['151']
151
['151']
parsed_discourse_facet ['method_citation']
<S sid="15" ssid="5">Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.</S>
original cit marker offset is 0
new cit marker offset is 0



['15']
15
['15']
parsed_discourse_facet ['result_citation']
<S sid="47" ssid="37">Argument structure can be represented in terms of unordered trees (with crossing branches).</S>
original cit marker offset is 0
new cit marker offset is 0



['47']
47
['47']
parsed_discourse_facet ['method_citation']
<S sid="167" ssid="9">In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.</S>
original cit marker offset is 0
new cit marker offset is 0



['167']
167
['167']
parsed_discourse_facet ['method_citation']
<S sid="168" ssid="10">We will closely coordinate the further development of our corpus with the annotation work in Verbmobil and with other German efforts in corpus annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



['168']
168
['168']
parsed_discourse_facet ['aim_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



['4']
4
['4']
parsed_discourse_facet ['aim_citation']
<S sid="160" ssid="2">These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.</S>
original cit marker offset is 0
new cit marker offset is 0



['160']
160
['160']
parsed_discourse_facet ['method_citation']
<S sid="127" ssid="8">As the need for certain functionalities becomes obvious with growing annotation experience, we have decided to implement the tool in two stages.</S>
original cit marker offset is 0
new cit marker offset is 0



['127']
127
['127']
parsed_discourse_facet ['method_citation']
<S sid="39" ssid="29">Consider the German sentence (1) daran wird ihn Anna erkennen, &amp;di er weint at-it will him Anna recognise that he cries 'Anna will recognise him at his cry' A sample constituent structure is given below: The fairly short sentence contains three non-local dependencies, marked by co-references between traces and the corresponding nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



['39']
39
['39']
parsed_discourse_facet ['method_citation']
<S sid="72" ssid="17">In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.</S>
original cit marker offset is 0
new cit marker offset is 0



['72']
72
['72']
parsed_discourse_facet ['method_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



['4']
4
['4']
parsed_discourse_facet ['aim_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



['4']
4
['4']
parsed_discourse_facet ['aim_citation']
parsing: input/res/Task1/A97-1014.annv3.csv
<S sid="74" ssid="19">During the first phase, the focus is on annotating correct structures and a coarse-grained classification of grammatical functions, which represent the following areas of information: Dependency type: complements are further classified according to features such as category and case: clausal complements (OC), accusative objects (OA), datives (DA), etc.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S><S sid="170" ssid="12">Our annotation tool supplies efficient manipulation and immediate visualization of argument structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'74'", "'88'", "'170'"]
'74'
'88'
'170'
['74', '88', '170']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="72" ssid="17">In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="144" ssid="25">We distinguish five degrees of automation: So far, about 1100 sentences of our corpus have been annotated.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'", "'4'", "'144'"]
'72'
'4'
'144'
['72', '4', '144']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="153" ssid="34">The tagger rates 90% of all assignments as reliable and carries them out fully automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'159'", "'153'"]
'24'
'159'
'153'
['24', '159', '153']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="15" ssid="5">Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.</S><S sid="57" ssid="2">Argument structure, represented in terms of unordered trees.</S><S sid="0" ssid="0">An Annotation Scheme for Free Word Order Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'57'", "'0'"]
'15'
'57'
'0'
['15', '57', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="111" ssid="24">If the scope of such a word does not directly correspond to a tree node, the word is attached to the lowest node dominating all subconstituents appearing in its scope.</S><S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="47" ssid="37">Argument structure can be represented in terms of unordered trees (with crossing branches).</S>
original cit marker offset is 0
new cit marker offset is 0



["'111'", "'24'", "'47'"]
'111'
'24'
'47'
['111', '24', '47']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'24'", "'4'"]
'159'
'24'
'4'
['159', '24', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="167" ssid="9">In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.</S><S sid="141" ssid="22">The corpus is stored in a SQL database.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'167'", "'141'", "'4'"]
'167'
'141'
'4'
['167', '141', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="166" ssid="8">Syntactically annotated corpora of German have been missing until now.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="1" ssid="1">We describe an annotation scheme and a tool developed for creating linguistically annotated corpora for non-configurational languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'166'", "'4'", "'1'"]
'166'
'4'
'1'
['166', '4', '1']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S><S sid="0" ssid="0">An Annotation Scheme for Free Word Order Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'88'", "'0'"]
'159'
'88'
'0'
['159', '88', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="121" ssid="2">In order to make the annotation process more efficient, extra effort has been put. into the development of an annotation tool.</S><S sid="74" ssid="19">During the first phase, the focus is on annotating correct structures and a coarse-grained classification of grammatical functions, which represent the following areas of information: Dependency type: complements are further classified according to features such as category and case: clausal complements (OC), accusative objects (OA), datives (DA), etc.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'121'", "'74'"]
'159'
'121'
'74'
['159', '121', '74']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="72" ssid="17">In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'", "'4'", "'88'"]
'72'
'4'
'88'
['72', '4', '88']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="141" ssid="22">The corpus is stored in a SQL database.</S><S sid="143" ssid="24">Sentences annotated in previous steps are used as training material for further processing.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'", "'141'", "'143'"]
'4'
'141'
'143'
['4', '141', '143']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="71" ssid="16">However, there is a trade-off between the granularity of information encoded in the labels and the speed and accuracy of annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'", "'159'", "'71'"]
'4'
'159'
'71'
['4', '159', '71']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="160" ssid="2">These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="151" ssid="32">For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).</S>
original cit marker offset is 0
new cit marker offset is 0



["'160'", "'4'", "'151'"]
'160'
'4'
'151'
['160', '4', '151']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



A97-1014
I05-6010
0
result_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



A97-1014
W08-1007
0
aim_citation
['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']



A97-1014
D07-1066
0
aim_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file W99-0613_sweta.csv
submit_file input/res/Task1/W99-0613.annv3.csv
parsing: input/ref/Task1/W99-0613_sweta.csv
<S sid="121" ssid="54">They also describe an application of cotraining to classifying web pages (the to feature sets are the words on the page, and other pages pointing to the page).</S>
original cit marker offset is 0
new cit marker offset is 0



["121'"]
121'
['121']
parsed_discourse_facet ['method_citation']
<S sid="252" ssid="3">The method uses a &amp;quot;soft&amp;quot; measure of the agreement between two classifiers as an objective function; we described an algorithm which directly optimizes this function.</S>
original cit marker offset is 0
new cit marker offset is 0



["252'"]
252'
['252']
parsed_discourse_facet ['method_citation']
 <S sid="91" ssid="24">There are two differences between this method and the DL-CoTrain algorithm: spelling and contextual features, alternating between labeling and learning with the two types of features.</S>
original cit marker offset is 0
new cit marker offset is 0



["91'"]
91'
['91']
parsed_discourse_facet ['method_citation']
<S sid="91" ssid="24">There are two differences between this method and the DL-CoTrain algorithm: spelling and contextual features, alternating between labeling and learning with the two types of features.</S>
original cit marker offset is 0
new cit marker offset is 0



["91'"]
91'
['91']
parsed_discourse_facet ['method_citation']
 <S sid="213" ssid="80">Thus at each iteration the algorithm is forced to pick features for the location, person and organization in turn for the classifier being trained.</S>
original cit marker offset is 0
new cit marker offset is 0



["213'"]
213'
['213']
parsed_discourse_facet ['method_citation']
 <S sid="250" ssid="1">Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.</S>
original cit marker offset is 0
new cit marker offset is 0



["250'"]
250'
['250']
parsed_discourse_facet ['method_citation']
<S sid="39" ssid="33">(Brin 98) ,describes a system for extracting (author, book-title) pairs from the World Wide Web using an approach that bootstraps from an initial seed set of examples.</S>
original cit marker offset is 0
new cit marker offset is 0



["39'"]
39'
['39']
parsed_discourse_facet ['method_citation']
<S sid="202" ssid="69">The CoBoost algorithm just described is for the case where there are two labels: for the named entity task there are three labels, and in general it will be useful to generalize the CoBoost algorithm to the multiclass case.</S>
original cit marker offset is 0
new cit marker offset is 0



["202'"]
202'
['202']
parsed_discourse_facet ['method_citation']
<S sid="61" ssid="15">The following features were used: full-string=x The full string (e.g., for Maury Cooper, full- s tring=Maury_Cooper). contains(x) If the spelling contains more than one word, this feature applies for any words that the string contains (e.g., Maury Cooper contributes two such features, contains (Maury) and contains (Cooper) . allcapl This feature appears if the spelling is a single word which is all capitals (e.g., IBM would contribute this feature). allcap2 This feature appears if the spelling is a single word which is all capitals or full periods, and contains at least one period.</S>
original cit marker offset is 0
new cit marker offset is 0



["61'"]
61'
['61']
parsed_discourse_facet ['method_citation']
<S sid="176" ssid="43">(7) is at 0 when: 1) Vi : sign(gi (xi)) = sign(g2 (xi)); 2) Ig3(xi)l oo; and 3) sign(gi (xi)) = yi for i = 1, , m. In fact, Zco provides a bound on the sum of the classification error of the labeled examples and the number of disagreements between the two classifiers on the unlabeled examples.</S>
original cit marker offset is 0
new cit marker offset is 0



["176'"]
176'
['176']
parsed_discourse_facet ['method_citation']
 <S sid="108" ssid="41">In the cotraining case, (Blum and Mitchell 98) argue that the task should be to induce functions Ii and f2 such that So Ii and 12 must (1) correctly classify the labeled examples, and (2) must agree with each other on the unlabeled examples.</S>
original cit marker offset is 0
new cit marker offset is 0



["108'"]
108'
['108']
parsed_discourse_facet ['method_citation']
<S sid="27" ssid="21">The first method builds on results from (Yarowsky 95) and (Blum and Mitchell 98).</S>
    <S sid="28" ssid="22">(Yarowsky 95) describes an algorithm for word-sense disambiguation that exploits redundancy in contextual features, and gives impressive performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["27'", "'28'"]
27'
'28'
['27', '28']
parsed_discourse_facet ['method_citation']
<S sid="7" ssid="1">Many statistical or machine-learning approaches for natural language problems require a relatively large amount of supervision, in the form of labeled training examples.</S>
original cit marker offset is 0
new cit marker offset is 0



["7'"]
7'
['7']
parsed_discourse_facet ['method_citation']
 <S sid="172" ssid="39">To see this, note thai the first two terms in the above equation correspond to the function that AdaBoost attempts to minimize in the standard supervised setting (Equ.</S>
original cit marker offset is 0
new cit marker offset is 0



["172'"]
172'
['172']
parsed_discourse_facet ['method_citation']
<S sid="85" ssid="18">(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.</S>
original cit marker offset is 0
new cit marker offset is 0



["85'"]
85'
['85']
parsed_discourse_facet ['method_citation']
 <S sid="214" ssid="81">This modification brings the method closer to the DL-CoTrain algorithm described earlier, and is motivated by the intuition that all three labels should be kept healthily populated in the unlabeled examples, preventing one label from dominating &#8212; this deserves more theoretical investigation.</S>
original cit marker offset is 0
new cit marker offset is 0



["214'"]
214'
['214']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W99-0613.annv3.csv
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'133'", "'137'"]
'0'
'133'
'137'
['0', '133', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="174" ssid="41">The two new terms force the two classifiers to agree, as much as possible, on the unlabeled examples.</S><S sid="248" ssid="15">With each iteration more examples are assigned labels by both classifiers, while a high level of agreement (> 94%) is maintained between them.</S><S sid="33" ssid="27">The second algorithm builds on a boosting algorithm called AdaBoost (Freund and Schapire 97; Schapire and Singer 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'248'", "'33'"]
'174'
'248'
'33'
['174', '248', '33']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S><S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="220" ssid="87">(7), such as the likelihood function used in maximum-entropy problems and other generalized additive models (Lafferty 99).</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'133'", "'220'"]
'79'
'133'
'220'
['79', '133', '220']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="40" ssid="34">(Berland and Charniak 99) describe a method for extracting parts of objects from wholes (e.g., &quot;speedometer&quot; from &quot;car&quot;) from a large corpus using hand-crafted patterns.</S><S sid="41" ssid="35">(Hearst 92) describes a method for extracting hyponyms from a corpus (pairs of words in &quot;isa&quot; relations).</S><S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'", "'41'", "'79'"]
'40'
'41'
'79'
['40', '41', '79']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="19" ssid="13">Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.</S><S sid="11" ssid="5">For example, a good classifier would identify Mrs. Frank as a person, Steptoe & Johnson as a company, and Honduras as a location.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'19'", "'11'"]
'0'
'19'
'11'
['0', '19', '11']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S><S sid="250" ssid="1">Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.</S><S sid="179" ssid="46">The algorithm builds two classifiers in parallel from labeled and unlabeled data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'", "'250'", "'179'"]
'137'
'250'
'179'
['137', '250', '179']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="19" ssid="13">Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.</S><S sid="236" ssid="3">We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'19'", "'236'"]
'0'
'19'
'236'
['0', '19', '236']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="16" ssid="10">Supervised methods have been applied quite successfully to the full MUC named-entity task (Bikel et al. 97).</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="133" ssid="66">Fort= 1,...,T:</S>
original cit marker offset is 0
new cit marker offset is 0



["'16'", "'0'", "'133'"]
'16'
'0'
'133'
['16', '0', '133']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="253" ssid="4">We are currently exploring other methods that employ similar ideas and their formal properties.</S><S sid="133" ssid="66">Fort= 1,...,T:</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'253'", "'133'"]
'0'
'253'
'133'
['0', '253', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="251" ssid="2">In addition to a heuristic based on decision list learning, we also presented a boosting-like framework that builds on ideas from (Blum and Mitchell 98).</S><S sid="68" ssid="1">The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).</S><S sid="31" ssid="25">Our first algorithm is similar to Yarowsky's, but with some important modifications motivated by (Blum and Mitchell 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'251'", "'68'", "'31'"]
'251'
'68'
'31'
['251', '68', '31']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="28" ssid="22">(Yarowsky 95) describes an algorithm for word-sense disambiguation that exploits redundancy in contextual features, and gives impressive performance.</S><S sid="39" ssid="33">(Brin 98) ,describes a system for extracting (author, book-title) pairs from the World Wide Web using an approach that bootstraps from an initial seed set of examples.</S><S sid="254" ssid="5">Future work should also extend the approach to build a complete named entity extractor - a method that pulls proper names from text and then classifies them.</S>
original cit marker offset is 0
new cit marker offset is 0



["'28'", "'39'", "'254'"]
'28'
'39'
'254'
['28', '39', '254']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="85" ssid="18">(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="77" ssid="10">In this paper k = 3 (the three labels are person, organization, location), and we set a = 0.1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'0'", "'77'"]
'85'
'0'
'77'
['85', '0', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation']
<S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="68" ssid="1">The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).</S>
original cit marker offset is 0
new cit marker offset is 0



["'133'", "'0'", "'68'"]
'133'
'0'
'68'
['133', '0', '68']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 1
IGNORE THIS: key error 1



W99-0613
W06-2204
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



W99-0613
W06-2207
0
method_citation
['method_citation', 'hypothesis_citation']
gold file P87-1015_vardha.csv
submit_file input/res/Task1/P87-1015.annv3.csv
parsing: input/ref/Task1/P87-1015_vardha.csv
<S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S>
original cit marker offset is 0
new cit marker offset is 0



["'165'"]
'165'
['165']
parsed_discourse_facet ['method_citation']
 <S sid="119" ssid="4">In defining LCFRS's, we hope to generalize the definition of CFG's to formalisms manipulating any structure, e.g. strings, trees, or graphs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'119'"]
'119'
['119']
parsed_discourse_facet ['method_citation']
    <S sid="3" ssid="1">Much of the study of grammatical systems in computational linguistics has been focused on the weak generative capacity of grammatical formalism.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'"]
'3'
['3']
parsed_discourse_facet ['method_citation']
    <S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'"]
'118'
['118']
parsed_discourse_facet ['method_citation']
    <S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'"]
'118'
['118']
parsed_discourse_facet ['method_citation']
    <S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'133'"]
'133'
['133']
parsed_discourse_facet ['method_citation']
 <S sid="138" ssid="23">We can show that languages generated by LCFRS's are semilinear as long as the composition operation does not remove any terminal symbols from its arguments.</S>
original cit marker offset is 0
new cit marker offset is 0



["'138'"]
'138'
['138']
parsed_discourse_facet ['method_citation']
    <S sid="156" ssid="41">Giving a recognition algorithm for LCFRL's involves describing the substrings of the input that are spanned by the structures derived by the LCFRS's and how the composition operation combines these substrings.</S>
original cit marker offset is 0
new cit marker offset is 0



["'156'"]
'156'
['156']
parsed_discourse_facet ['method_citation']
 <S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'"]
'118'
['118']
parsed_discourse_facet ['method_citation']
 <S sid="119" ssid="4">In defining LCFRS's, we hope to generalize the definition of CFG's to formalisms manipulating any structure, e.g. strings, trees, or graphs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'119'"]
'119'
['119']
parsed_discourse_facet ['method_citation']
  <S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'133'"]
'133'
['133']
parsed_discourse_facet ['method_citation']
 <S sid="164" ssid="49">Although embedding this version of LCFRS's in the framework of ILFP developed by Rounds (1985) is straightforward, our motivation was to capture properties shared by a family of grammatical systems and generalize them defining a class of related formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'164'"]
'164'
['164']
parsed_discourse_facet ['method_citation']
 <S sid="204" ssid="10">The similarities become apparent when they are studied at the level of derivation structures: derivation nee sets of CFG's, HG's, TAG's, and MCTAG's are all local sets.</S>
original cit marker offset is 0
new cit marker offset is 0



["'204'"]
'204'
['204']
parsed_discourse_facet ['method_citation']
    <S sid="9" ssid="7">We examine both the complexity of the paths of trees in the tree sets, and the kinds of dependencies that the formalisms can impose between paths.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
    <S sid="28" ssid="13">A TAG consists of a finite set of elementary trees that are either initial trees or auxiliary trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'28'"]
'28'
['28']
parsed_discourse_facet ['method_citation']
 <S sid="138" ssid="23">We can show that languages generated by LCFRS's are semilinear as long as the composition operation does not remove any terminal symbols from its arguments.</S>
original cit marker offset is 0
new cit marker offset is 0



["'138'"]
'138'
['138']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P87-1015.annv3.csv
<S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S><S sid="117" ssid="2">Our goal is to define a class of formal systems, and show that any member of this class will possess certain attractive properties.</S><S sid="110" ssid="16">The independence of paths in the tree sets of the k tI grammatical formalism in this hierarchy can be shown by means of tree pumping lemma of the form t1ti3t .</S>
original cit marker offset is 0
new cit marker offset is 0



["'165'", "'117'", "'110'"]
'165'
'117'
'110'
['165', '117', '110']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="111" ssid="17">.</S><S sid="230" ssid="36">LCFRS's have only been loosely defined in this paper; we have yet to provide a complete set of formal properties associated with members of this class.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'111'", "'230'", "'118'"]
'111'
'230'
'118'
['111', '230', '118']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="214" ssid="20">LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'125'", "'214'"]
'207'
'125'
'214'
['207', '125', '214']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'118'", "'92'"]
'207'
'118'
'92'
['207', '118', '92']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'92'", "'118'"]
'207'
'92'
'118'
['207', '92', '118']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'", "'207'", "'133'"]
'118'
'207'
'133'
['118', '207', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="214" ssid="20">LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S>
original cit marker offset is 0
new cit marker offset is 0



["'165'", "'125'", "'214'"]
'165'
'125'
'214'
['165', '125', '214']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="151" ssid="36">We now turn our attention to the recognition of string languages generated by these formalisms (LCFRL's).</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'151'", "'207'", "'92'"]
'151'
'207'
'92'
['151', '207', '92']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'", "'207'", "'133'"]
'118'
'207'
'133'
['118', '207', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="54" ssid="39">An IG can be viewed as a CFG in which each nonterminal is associated with a stack.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S>
original cit marker offset is 0
new cit marker offset is 0



["'54'", "'118'", "'165'"]
'54'
'118'
'165'
['54', '118', '165']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="75" ssid="60">A multicomponent Tree Adjoining Grammar (MCTAG) consists of a finite set of finite elementary tree sets.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S><S sid="28" ssid="13">A TAG consists of a finite set of elementary trees that are either initial trees or auxiliary trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'75'", "'133'", "'28'"]
'75'
'133'
'28'
['75', '133', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'207'", "'92'"]
'125'
'207'
'92'
['125', '207', '92']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="204" ssid="10">The similarities become apparent when they are studied at the level of derivation structures: derivation nee sets of CFG's, HG's, TAG's, and MCTAG's are all local sets.</S><S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'204'", "'165'"]
'125'
'204'
'165'
['125', '204', '165']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="78" ssid="63">Each member of a set of trees can be adjoined into distinct nodes of trees in a single elementary tree set, i.e, derivations always involve the adjunction of a derived auxiliary tree set into an elementary tree set.</S><S sid="80" ssid="65">The derivation trees of a MCTAG are similar to those of a TAG.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'78'", "'80'"]
'125'
'78'
'80'
['125', '78', '80']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="102" ssid="8">For example, let us consider a tree set containing trees of the form shown in Figure 4a.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'207'", "'102'"]
'125'
'207'
'102'
['125', '207', '102']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="134" ssid="19">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'125'", "'134'"]
'207'
'125'
'134'
['207', '125', '134']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']



P87-1015
P01-1018
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



P87-1015
P09-2003
0
method_citation
['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']



P87-1015
P09-1111
0
method_citation
['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']



P87-1015
N09-1061
0
method_citation
['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']



P87-1015
W10-1407
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file W99-0623_vardha.csv
submit_file input/res/Task1/W99-0623.annv3.csv
parsing: input/ref/Task1/W99-0623_vardha.csv
    <S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'"]
'85'
['85']
parsed_discourse_facet ['method_citation']
<S sid="117" ssid="46">Another way to interpret this is that less than 5% of the correct constituents are missing from the hypotheses generated by the union of the three parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'117'"]
'117'
['117']
parsed_discourse_facet ['method_citation']
<S sid="72" ssid="1">The three parsers were trained and tuned by their creators on various sections of the WSJ portion of the Penn Treebank, leaving only sections 22 and 23 completely untouched during the development of any of the parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'"]
'72'
['72']
parsed_discourse_facet ['method_citation']
    <S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



["'120'"]
'120'
['120']
parsed_discourse_facet ['method_citation']
  <S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'"]
'139'
['139']
parsed_discourse_facet ['method_citation']
 <S sid="84" ssid="13">The first shows how constituent features and context do not help in deciding which parser to trust.</S>
original cit marker offset is 0
new cit marker offset is 0



["'84'"]
'84'
['84']
parsed_discourse_facet ['method_citation']
    <S sid="76" ssid="5">The standard measures for evaluating Penn Treebank parsing performance are precision and recall of the predicted constituents.</S>
original cit marker offset is 0
new cit marker offset is 0



["'76'"]
'76'
['76']
parsed_discourse_facet ['method_citation']
 <S sid="38" ssid="24">Under certain conditions the constituent voting and na&#239;ve Bayes constituent combination techniques are guaranteed to produce sets of constituents with no crossing brackets.</S>
original cit marker offset is 0
new cit marker offset is 0



["'38'"]
'38'
['38']
parsed_discourse_facet ['method_citation']
  <S sid="25" ssid="11">In our particular case the majority requires the agreement of only two parsers because we have only three.</S>
original cit marker offset is 0
new cit marker offset is 0



["'25'"]
'25'
['25']
parsed_discourse_facet ['method_citation']
 <S sid="72" ssid="1">The three parsers were trained and tuned by their creators on various sections of the WSJ portion of the Penn Treebank, leaving only sections 22 and 23 completely untouched during the development of any of the parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'"]
'72'
['72']
parsed_discourse_facet ['method_citation']
    <S sid="87" ssid="16">It is possible one could produce better models by introducing features describing constituents and their contexts because one parser could be much better than the majority of the others in particular situations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'87'"]
'87'
['87']
parsed_discourse_facet ['method_citation']
    <S sid="51" ssid="37">One can trivially create situations in which strictly binary-branching trees are combined to create a tree with only the root node and the terminal nodes, a completely flat structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'"]
'51'
['51']
parsed_discourse_facet ['method_citation']
    <S sid="79" ssid="8">Precision is the portion of hypothesized constituents that are correct and recall is the portion of the Treebank constituents that are hypothesized.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'"]
'79'
['79']
parsed_discourse_facet ['method_citation']
  <S sid="27" ssid="13">Another technique for parse hybridization is to use a na&#239;ve Bayes classifier to determine which constituents to include in the parse.</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'"]
'27'
['27']
parsed_discourse_facet ['method_citation']
 <S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'77'"]
'77'
['77']
parsed_discourse_facet ['method_citation']
  <S sid="11" ssid="7">Similar advances have been made in machine translation (Frederking and Nirenburg, 1994), speech recognition (Fiscus, 1997) and named entity recognition (Borthwick et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'"]
'11'
['11']
parsed_discourse_facet ['method_citation']
  <S sid="116" ssid="45">The maximum precision row is the upper bound on accuracy if we could pick exactly the correct constituents from among the constituents suggested by the three parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'116'"]
'116'
['116']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W99-0623.annv3.csv
<S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'120'", "'139'"]
'85'
'120'
'139'
['85', '120', '139']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="96" ssid="25">We call such a constituent an isolated constituent.</S>
original cit marker offset is 0
new cit marker offset is 0



["'120'", "'23'", "'96'"]
'120'
'23'
'96'
['120', '23', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="14" ssid="10">We used these three parsers to explore parser combination techniques.</S><S sid="25" ssid="11">In our particular case the majority requires the agreement of only two parsers because we have only three.</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'14'", "'25'"]
'139'
'14'
'25'
['139', '14', '25']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'77'", "'120'"]
'23'
'77'
'120'
['23', '77', '120']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="13">Another technique for parse hybridization is to use a naïve Bayes classifier to determine which constituents to include in the parse.</S><S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="16" ssid="2">We call this approach parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'15'", "'16'"]
'27'
'15'
'16'
['27', '15', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="96" ssid="25">We call such a constituent an isolated constituent.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'120'", "'96'"]
'23'
'120'
'96'
['23', '120', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="5">Through parser combination we have reduced the precision error rate by 30% and the recall error rate by 6% compared to the best previously published result.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'120'", "'23'"]
'143'
'120'
'23'
['143', '120', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'139'", "'120'"]
'23'
'139'
'120'
['23', '139', '120']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'67'", "'139'", "'77'"]
'67'
'139'
'77'
['67', '139', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S><S sid="143" ssid="5">Through parser combination we have reduced the precision error rate by 30% and the recall error rate by 6% compared to the best previously published result.</S>
original cit marker offset is 0
new cit marker offset is 0



["'120'", "'85'", "'143'"]
'120'
'85'
'143'
['120', '85', '143']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="60" ssid="46">First we present the non-parametric version of parser switching, similarity switching: The intuition for this technique is that we can measure a similarity between parses by counting the constituents they have in common.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'60'", "'120'", "'23'"]
'60'
'120'
'23'
['60', '120', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'67'", "'77'"]
'139'
'67'
'77'
['139', '67', '77']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="78" ssid="7">The set is then compared with the set generated from the Penn Treebank parse to determine the precision and recall.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'67'", "'78'"]
'15'
'67'
'78'
['15', '67', '78']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="96" ssid="25">We call such a constituent an isolated constituent.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S><S sid="16" ssid="2">We call this approach parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'96'", "'77'", "'16'"]
'96'
'77'
'16'
['96', '77', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="118" ssid="47">The maximum precision oracle is an upper bound on the possible gain we can achieve by parse hybridization.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'118'", "'77'"]
'15'
'118'
'77'
['15', '118', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="0" ssid="0">Exploiting Diversity in Natural Language Processing: Combining Parsers</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'0'", "'77'"]
'139'
'0'
'77'
['139', '0', '77']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="78" ssid="7">The set is then compared with the set generated from the Penn Treebank parse to determine the precision and recall.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'67'", "'78'"]
'15'
'67'
'78'
['15', '67', '78']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 1
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2



W99-0623
N09-2064
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file P08-1028_sweta.csv
submit_file input/res/Task1/P08-1028.annv3.csv
parsing: input/ref/Task1/P08-1028_sweta.csv
<S sid="65" ssid="13">So, if we assume that only the ith components of u and v contribute to the ith component of p, that these components are not dependent on i, and that the function is symmetric with regard to the interchange of u and v, we obtain a simpler instantiation of an additive model: Analogously, under the same assumptions, we obtain the following simpler multiplicative model: only the ith components of u and v contribute to the ith component of p. Another class of models can be derived by relaxing this constraint.</S>
original cit marker offset is 0
new cit marker offset is 0



["65'"]
65'
['65']
parsed_discourse_facet ['method_citation']
 <S sid="75" ssid="23">An extreme form of this differential in the contribution of constituents is where one of the vectors, say u, contributes nothing at all to the combination: Admittedly the model in (8) is impoverished and rather simplistic, however it can serve as a simple baseline against which to compare more sophisticated models.</S>
original cit marker offset is 0
new cit marker offset is 0



["75'"]
75'
['75']
parsed_discourse_facet ['method_citation']
<S sid="42" ssid="15">This poses problems for modeling linguistic data which is typically represented by vectors with non-random structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["42'"]
42'
['42']
parsed_discourse_facet ['method_citation']
 <S sid="21" ssid="17">Central in these models is the notion of compositionality &#8212; the meaning of complex expressions is determined by the meanings of their constituent expressions and the rules used to combine them.</S>
original cit marker offset is 0
new cit marker offset is 0



["21'"]
21'
['21']
parsed_discourse_facet ['method_citation']
    <S sid="195" ssid="7">The resulting vector is sparser but expresses more succinctly the meaning of the predicate-argument structure, and thus allows semantic similarity to be modelled more accurately.</S>
original cit marker offset is 0
new cit marker offset is 0



["195'"]
195'
['195']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="21">We present a general framework for vector-based composition which allows us to consider different classes of models.</S>
original cit marker offset is 0
new cit marker offset is 0



["25'"]
25'
['25']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="21">We present a general framework for vector-based composition which allows us to consider different classes of models.</S>
original cit marker offset is 0
new cit marker offset is 0



["25'"]
25'
['25']
parsed_discourse_facet ['method_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S>
original cit marker offset is 0
new cit marker offset is 0



["57'"]
57'
['57']
parsed_discourse_facet ['method_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["51'"]
51'
['51']
parsed_discourse_facet ['method_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



["190'"]
190'
['190']
parsed_discourse_facet ['method_citation']
 <S sid="29" ssid="2">While neural networks can readily represent single distinct objects, in the case of multiple objects there are fundamental difficulties in keeping track of which features are bound to which objects.</S>
original cit marker offset is 0
new cit marker offset is 0



["29'"]
29'
['29']
parsed_discourse_facet ['method_citation']
    <S sid="38" ssid="11">The projection is defined in terms of circular convolution a mathematical function that compresses the tensor product of two vectors.</S>
original cit marker offset is 0
new cit marker offset is 0



["38'"]
38'
['38']
parsed_discourse_facet ['method_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["51'"]
51'
['51']
parsed_discourse_facet ['method_citation']
<S sid="64" ssid="12">Now, if we assume that p lies in the same space as u and v, avoiding the issues of dimensionality associated with tensor products, and that f is a linear function, for simplicity, of the cartesian product of u and v, then we generate a class of additive models: where A and B are matrices which determine the contributions made by u and v to the product p. In contrast, if we assume that f is a linear function of the tensor product of u and v, then we obtain multiplicative models: where C is a tensor of rank 3, which projects the tensor product of u and v onto the space of p. Further constraints can be introduced to reduce the free parameters in these models.</S>
original cit marker offset is 0
new cit marker offset is 0



["64'"]
64'
['64']
parsed_discourse_facet ['method_citation']
<S sid="163" ssid="76">We expect better models to yield a pattern of similarity scores like those observed in the human ratings (see Figure 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["163'"]
163'
['163']
parsed_discourse_facet ['method_citation']
<S sid="185" ssid="19">The multiplicative model yields a better fit with the experimental data, &#961; = 0.17.</S>
original cit marker offset is 0
new cit marker offset is 0



["185'"]
185'
['185']
parsed_discourse_facet ['method_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



["190'"]
190'
['190']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P08-1028.annv3.csv
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'3'", "'51'"]
'57'
'3'
'51'
['57', '3', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S><S sid="195" ssid="7">The resulting vector is sparser but expresses more succinctly the meaning of the predicate-argument structure, and thus allows semantic similarity to be modelled more accurately.</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'", "'138'", "'195'"]
'51'
'138'
'195'
['51', '138', '195']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'", "'95'", "'138'"]
'51'
'95'
'138'
['51', '95', '138']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'", "'26'", "'3'"]
'95'
'26'
'3'
['95', '26', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'", "'0'", "'51'"]
'95'
'0'
'51'
['95', '0', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="53" ssid="1">We formulate semantic composition as a function of two vectors, u and v. We assume that individual words are represented by vectors acquired from a corpus following any of the parametrisations that have been suggested in the literature.1 We briefly note here that a word’s vector typically represents its co-occurrence with neighboring words.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'53'", "'0'"]
'57'
'53'
'0'
['57', '53', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'189'", "'0'", "'51'"]
'189'
'0'
'51'
['189', '0', '51']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'51'", "'0'"]
'57'
'51'
'0'
['57', '51', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'51'", "'189'"]
'190'
'51'
'189'
['190', '51', '189']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S><S sid="60" ssid="8">To derive specific models from this general framework requires the identification of appropriate constraints to narrow the space of functions being considered.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S>
original cit marker offset is 0
new cit marker offset is 0



["'138'", "'60'", "'26'"]
'138'
'60'
'26'
['138', '60', '26']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="40" ssid="13">Noisy versions of the original vectors can be recovered by means of circular correlation which is the approximate inverse of circular convolution.</S><S sid="38" ssid="11">The projection is defined in terms of circular convolution a mathematical function that compresses the tensor product of two vectors.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'40'", "'38'"]
'190'
'40'
'38'
['190', '40', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="45" ssid="18">Vector addition does not increase the dimensionality of the resulting vector.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'45'", "'51'"]
'190'
'45'
'51'
['190', '45', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'", "'52'", "'3'"]
'26'
'52'
'3'
['26', '52', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'", "'52'", "'3'"]
'26'
'52'
'3'
['26', '52', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="25" ssid="21">We present a general framework for vector-based composition which allows us to consider different classes of models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'52'", "'25'"]
'3'
'52'
'25'
['3', '52', '25']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'26'", "'51'"]
'190'
'26'
'51'
['190', '26', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="48" ssid="21">The idea is to add not only the vectors representing the predicate and its argument but also the neighbors associated with both of them.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'51'", "'48'"]
'190'
'51'
'48'
['190', '51', '48']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



P08-1028
P13-2083
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



P08-1028
P10-1021
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



P08-1028
W11-1310
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
gold file P08-1028_aakansha.csv
submit_file input/res/Task1/P08-1028.annv3.csv
parsing: input/ref/Task1/P08-1028_aakansha.csv
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'"]
'51'
['51']
parsed_discourse_facet ['method_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
    <S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



["'189'", "'190'"]
'189'
'190'
['189', '190']
parsed_discourse_facet ['method_citation']
<S sid="185" ssid="19">The multiplicative model yields a better fit with the experimental data, &#961; = 0.17.</S>
    <S sid="186" ssid="20">The combined model is best overall with &#961; = 0.19.</S>
    <S sid="187" ssid="21">However, the difference between the two models is not statistically significant.</S>
original cit marker offset is 0
new cit marker offset is 0



["'185'", "'186'"]
'185'
'186'
['185', '186']
parsed_discourse_facet ['result_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'"]
'51'
['51']
parsed_discourse_facet ['method_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
    <S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



["'189'", "'190'"]
'189'
'190'
['189', '190']
parsed_discourse_facet ['method_citation']
<S sid="48" ssid="21">The idea is to add not only the vectors representing the predicate and its argument but also the neighbors associated with both of them.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'"]
'48'
['48']
parsed_discourse_facet ['method_citation']
<S sid="53" ssid="1">We formulate semantic composition as a function of two vectors, u and v. We assume that individual words are represented by vectors acquired from a corpus following any of the parametrisations that have been suggested in the literature.1 We briefly note here that a word&#8217;s vector typically represents its co-occurrence with neighboring words.</S><S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S>
original cit marker offset is 0
new cit marker offset is 0



["'53'", "'57'"]
'53'
'57'
['53', '57']
parsed_discourse_facet ['method_citation']
<S sid="68" ssid="16">Although the composition model in (5) is commonly used in the literature, from a linguistic perspective, the model in (6) is more appealing.</S>
    <S sid="69" ssid="17">Simply adding the vectors u and v lumps their contents together rather than allowing the content of one vector to pick out the relevant content of the other.</S>
    <S sid="70" ssid="18">Instead, it could be argued that the contribution of the ith component of u should be scaled according to its relevance to v, and vice versa.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'69'", "'70'"]
'68'
'69'
'70'
['68', '69', '70']
parsed_discourse_facet ['method_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
    <S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



["'189'", "'190'"]
'189'
'190'
['189', '190']
parsed_discourse_facet ['method_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
    <S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



["'189'", "'190'"]
'189'
'190'
['189', '190']
parsed_discourse_facet ['method_citation']
<S sid="24" ssid="20">In this paper we examine models of semantic composition that are empirically grounded and can represent similarity relations.</S>
    <S sid="25" ssid="21">We present a general framework for vector-based composition which allows us to consider different classes of models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'25'"]
'24'
'25'
['24', '25']
parsed_discourse_facet ['method_citation']
<S sid="64" ssid="12">Now, if we assume that p lies in the same space as u and v, avoiding the issues of dimensionality associated with tensor products, and that f is a linear function, for simplicity, of the cartesian product of u and v, then we generate a class of additive models: where A and B are matrices which determine the contributions made by u and v to the product p. In contrast, if we assume that f is a linear function of the tensor product of u and v, then we obtain multiplicative models: where C is a tensor of rank 3, which projects the tensor product of u and v onto the space of p. Further constraints can be introduced to reduce the free parameters in these models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'64'"]
'64'
['64']
parsed_discourse_facet ['method_citation']
<S sid="176" ssid="10">The multiplicative and combined models yield means closer to the human ratings.</S>
    <S sid="177" ssid="11">The difference between High and Low similarity values estimated by these models are statistically significant (p &lt; 0.01 using the Wilcoxon rank sum test).</S>
original cit marker offset is 0
new cit marker offset is 0



["'176'", "'177'"]
'176'
'177'
['176', '177']
parsed_discourse_facet ['method_citation']
<S sid="191" ssid="3">Despite the popularity of additive models, our experimental results showed the superiority of models utilizing multiplicative combinations, at least for the sentence similarity task attempted here.</S>
original cit marker offset is 0
new cit marker offset is 0



["'191'"]
'191'
['191']
parsed_discourse_facet ['method_citation']
<S sid="24" ssid="20">In this paper we examine models of semantic composition that are empirically grounded and can represent similarity relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'"]
'24'
['24']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P08-1028.annv3.csv
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'3'", "'51'"]
'57'
'3'
'51'
['57', '3', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S><S sid="195" ssid="7">The resulting vector is sparser but expresses more succinctly the meaning of the predicate-argument structure, and thus allows semantic similarity to be modelled more accurately.</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'", "'138'", "'195'"]
'51'
'138'
'195'
['51', '138', '195']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'", "'95'", "'138'"]
'51'
'95'
'138'
['51', '95', '138']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'", "'26'", "'3'"]
'95'
'26'
'3'
['95', '26', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'", "'0'", "'51'"]
'95'
'0'
'51'
['95', '0', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="53" ssid="1">We formulate semantic composition as a function of two vectors, u and v. We assume that individual words are represented by vectors acquired from a corpus following any of the parametrisations that have been suggested in the literature.1 We briefly note here that a word’s vector typically represents its co-occurrence with neighboring words.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'53'", "'0'"]
'57'
'53'
'0'
['57', '53', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'189'", "'0'", "'51'"]
'189'
'0'
'51'
['189', '0', '51']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'51'", "'0'"]
'57'
'51'
'0'
['57', '51', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'51'", "'189'"]
'190'
'51'
'189'
['190', '51', '189']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S><S sid="60" ssid="8">To derive specific models from this general framework requires the identification of appropriate constraints to narrow the space of functions being considered.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S>
original cit marker offset is 0
new cit marker offset is 0



["'138'", "'60'", "'26'"]
'138'
'60'
'26'
['138', '60', '26']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="40" ssid="13">Noisy versions of the original vectors can be recovered by means of circular correlation which is the approximate inverse of circular convolution.</S><S sid="38" ssid="11">The projection is defined in terms of circular convolution a mathematical function that compresses the tensor product of two vectors.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'40'", "'38'"]
'190'
'40'
'38'
['190', '40', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="45" ssid="18">Vector addition does not increase the dimensionality of the resulting vector.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'45'", "'51'"]
'190'
'45'
'51'
['190', '45', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'", "'52'", "'3'"]
'26'
'52'
'3'
['26', '52', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'", "'52'", "'3'"]
'26'
'52'
'3'
['26', '52', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="25" ssid="21">We present a general framework for vector-based composition which allows us to consider different classes of models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'52'", "'25'"]
'3'
'52'
'25'
['3', '52', '25']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'26'", "'51'"]
'190'
'26'
'51'
['190', '26', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="48" ssid="21">The idea is to add not only the vectors representing the predicate and its argument but also the neighbors associated with both of them.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'51'", "'48'"]
'190'
'51'
'48'
['190', '51', '48']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2



P08-1028
D08-1094
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



P08-1028
D11-1094
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



P08-1028
P10-1021
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file A00-2030_aakansha.csv
submit_file input/res/Task1/A00-2030.annv3.csv
parsing: input/ref/Task1/A00-2030_aakansha.csv
<S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'"]
'4'
['4']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
    <S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'"]
'33'
'34'
['33', '34']
parsed_discourse_facet ['method_citation']
<S sid="49" ssid="9">By necessity, we adopted the strategy of hand marking only the semantics.</S>
    <S sid="50" ssid="10">Figure 4 shows an example of the semantic annotation, which was the only type of manual annotation we performed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'49'", "'50'"]
'49'
'50'
['49', '50']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
    <S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'"]
'33'
'34'
['33', '34']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="8">Instead, our parsing algorithm, trained on the UPenn TREEBANK, was run on the New York Times source to create unsupervised syntactic training which was constrained to be consistent with semantic annotation.</S
original cit marker offset is 0
new cit marker offset is 0



["'10'"]
'10'
['10']
parsed_discourse_facet ['method_citation']
<S sid="16" ssid="6">For the following example, the The Template Relations (TR) task involves identifying instances of three relations in the text: TR builds on TE in that TR reports binary relations between elements of TE.</S>
original cit marker offset is 0
new cit marker offset is 0



["'16'"]
'16'
['16']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
    <S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'"]
'33'
'34'
['33', '34']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
    <S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'"]
'33'
'34'
['33', '34']
parsed_discourse_facet ['method_citation']
<S sid="23" ssid="6">An integrated model can limit the propagation of errors by making all decisions jointly.</S>
    <S sid="24" ssid="7">For this reason, we focused on designing an integrated model in which tagging, namefinding, parsing, and semantic interpretation decisions all have the opportunity to mutually influence each other.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'24'"]
'23'
'24'
['23', '24']
parsed_discourse_facet ['method_citation']
<S sid="23" ssid="6">An integrated model can limit the propagation of errors by making all decisions jointly.</S>
    <S sid="24" ssid="7">For this reason, we focused on designing an integrated model in which tagging, namefinding, parsing, and semantic interpretation decisions all have the opportunity to mutually influence each other.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'24'"]
'23'
'24'
['23', '24']
parsed_discourse_facet ['method_citation']
<S sid="23" ssid="6">An integrated model can limit the propagation of errors by making all decisions jointly.</S>
    <S sid="24" ssid="7">For this reason, we focused on designing an integrated model in which tagging, namefinding, parsing, and semantic interpretation decisions all have the opportunity to mutually influence each other.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
    <S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'24'", "'33'", "'34'"]
'23'
'24'
'33'
'34'
['23', '24', '33', '34']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
    <S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'"]
'33'
'34'
['33', '34']
parsed_discourse_facet ['method_citation']
<S sid="60" ssid="1">In our statistical model, trees are generated according to a process similar to that described in (Collins 1996, 1997).</S>
    <S sid="61" ssid="2">The detailed probability structure differs, however, in that it was designed to jointly perform part-of-speech tagging, name finding, syntactic parsing, and relation finding in a single process.</S>
original cit marker offset is 0
new cit marker offset is 0



["'60'", "'61'"]
'60'
'61'
['60', '61']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'"]
'33'
['33']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
    <S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'"]
'33'
'34'
['33', '34']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
    <S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'"]
'33'
'34'
['33', '34']
parsed_discourse_facet ['method_citation']
<S sid="11" ssid="1">We evaluated the new approach to information extraction on two of the tasks of the Seventh Message Understanding Conference (MUC-7) and reported in (Marsh, 1998).</S>
    <S sid="12" ssid="2">The Template Element (TE) task identifies organizations, persons, locations, and some artifacts (rocket and airplane-related artifacts).</S><S sid="16" ssid="6">For the following example, the The Template Relations (TR) task involves identifying instances of three relations in the text: TR builds on TE in that TR reports binary relations between elements of TE.</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'", "'12'", "'16'"]
'11'
'12'
'16'
['11', '12', '16']
parsed_discourse_facet ['method_citation']
<S sid="105" ssid="2">A single model proved capable of performing all necessary sentential processing, both syntactic and semantic.</S>
original cit marker offset is 0
new cit marker offset is 0



["'105'"]
'105'
['105']
parsed_discourse_facet ['result_citation']
<S sid="60" ssid="1">In our statistical model, trees are generated according to a process similar to that described in (Collins 1996, 1997).</S>
    <S sid="61" ssid="2">The detailed probability structure differs, however, in that it was designed to jointly perform part-of-speech tagging, name finding, syntactic parsing, and relation finding in a single process.</S>
original cit marker offset is 0
new cit marker offset is 0



["'60'", "'61'"]
'60'
'61'
['60', '61']
parsed_discourse_facet ['method_citation']
<S sid="16" ssid="6">For the following example, the The Template Relations (TR) task involves identifying instances of three relations in the text: TR builds on TE in that TR reports binary relations between elements of TE.</S>
original cit marker offset is 0
new cit marker offset is 0



["'16'"]
'16'
['16']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/A00-2030.annv3.csv
<S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'6'", "'0'"]
'2'
'6'
'0'
['2', '6', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'0'"]
'33'
'34'
'0'
['33', '34', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="95" ssid="14">The semantics — that is, the entities and relations — can then be directly extracted from these sentential trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'95'"]
'33'
'34'
'95'
['33', '34', '95']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'58'"]
'33'
'34'
'58'
['33', '34', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="51" ssid="11">To produce a corpus of augmented parse trees, we used the following multi-step training procedure which exploited the Penn TREEBANK Applying this procedure yielded a new version of the semantically annotated corpus, now annotated with complete augmented trees like that in Figure 3.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'51'", "'0'"]
'33'
'51'
'0'
['33', '51', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S><S sid="56" ssid="2">For example, in the phrase &quot;Lt. Cmdr.</S><S sid="38" ssid="6">Other labels indicate relations among entities.</S>
original cit marker offset is 0
new cit marker offset is 0



["'6'", "'56'", "'38'"]
'6'
'56'
'38'
['6', '56', '38']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'34'", "'33'"]
'0'
'34'
'33'
['0', '34', '33']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'0'"]
'33'
'34'
'0'
['33', '34', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="76" ssid="17">Finally, word features, fm, for modifiers are predicted based on the modifier, cm, the partof-speech tag of the modifier word , t„„ the part-of-speech tag of the head word th, the head word itself, wh, and whether or not the modifier head word, w„„ is known or unknown.</S><S sid="63" ssid="4">Head words, along with their part-of-speech tags and features, are generated for each modifier as soon as the modifier is created.</S><S sid="22" ssid="5">There is no opportunity for a later stage, such as parsing, to influence or correct an earlier stage such as part-of-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'76'", "'63'", "'22'"]
'76'
'63'
'22'
['76', '63', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="23" ssid="6">An integrated model can limit the propagation of errors by making all decisions jointly.</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'104'"]
'0'
'23'
'104'
['0', '23', '104']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'33'", "'58'"]
'34'
'33'
'58'
['34', '33', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'6'"]
'0'
'2'
'6'
['0', '2', '6']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'0'", "'6'"]
'33'
'0'
'6'
['33', '0', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'0'", "'34'"]
'33'
'0'
'34'
['33', '0', '34']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'0'", "'58'"]
'34'
'0'
'58'
['34', '0', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'33'", "'0'"]
'34'
'33'
'0'
['34', '33', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="76" ssid="17">Finally, word features, fm, for modifiers are predicted based on the modifier, cm, the partof-speech tag of the modifier word , t„„ the part-of-speech tag of the head word th, the head word itself, wh, and whether or not the modifier head word, w„„ is known or unknown.</S><S sid="63" ssid="4">Head words, along with their part-of-speech tags and features, are generated for each modifier as soon as the modifier is created.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'76'", "'63'", "'0'"]
'76'
'63'
'0'
['76', '63', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S><S sid="11" ssid="1">We evaluated the new approach to information extraction on two of the tasks of the Seventh Message Understanding Conference (MUC-7) and reported in (Marsh, 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'104'", "'11'"]
'0'
'104'
'11'
['0', '104', '11']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'104'", "'58'"]
'0'
'104'
'58'
['0', '104', '58']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file W06-3114_aakansha.csv
submit_file input/res/Task1/W06-3114.annv3.csv
parsing: input/ref/Task1/W06-3114_aakansha.csv
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'"]
'170'
['170']
parsed_discourse_facet ['method_citation']
<S sid="8" ssid="1">The evaluation framework for the shared task is similar to the one used in last year&#8217;s shared task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="36" ssid="2">The BLEU metric, as all currently proposed automatic metrics, is occasionally suspected to be biased towards statistical systems, especially the phrase-based systems currently in use.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="36" ssid="2">The BLEU metric, as all currently proposed automatic metrics, is occasionally suspected to be biased towards statistical systems, especially the phrase-based systems currently in use.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
<S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['method_citation']
<S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['method_citation']
<S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['method_citation']
<S sid="102" ssid="18">Confidence Interval: To estimate confidence intervals for the average mean scores for the systems, we use standard significance testing.</S>
original cit marker offset is 0
new cit marker offset is 0



["'102'"]
'102'
['102']
parsed_discourse_facet ['method_citation']
<S sid="84" ssid="23">The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:</S>
original cit marker offset is 0
new cit marker offset is 0



["'84'"]
'84'
['84']
parsed_discourse_facet ['method_citation']
<S sid="11" ssid="4">To lower the barrier of entrance to the competition, we provided a complete baseline MT system, along with data resources.</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'"]
'11'
['11']
parsed_discourse_facet ['method_citation']
<S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['method_citation']
<S sid="126" ssid="19">The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'"]
'126'
['126']
parsed_discourse_facet ['method_citation']
<S sid="15" ssid="8">Out-of-domain test data is from the Project Syndicate web site, a compendium of political commentary.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'"]
'15'
['15']
parsed_discourse_facet ['method_citation']
<S sid="8" ssid="1">The evaluation framework for the shared task is similar to the one used in last year&#8217;s shared task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
<S sid="90" ssid="6">Another way to view the judgements is that they are less quality judgements of machine translation systems per se, but rankings of machine translation systems.</S>
original cit marker offset is 0
new cit marker offset is 0



["'90'"]
'90'
['90']
parsed_discourse_facet ['method_citation']
<S sid="5" ssid="3">&#8226; We evaluated translation from English, in addition to into English.</S>
    <S sid="6" ssid="4">English was again paired with German, French, and Spanish.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'6'"]
'5'
'6'
['5', '6']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W06-3114.annv3.csv
<S sid="153" ssid="46">This is the first time that we organized a large-scale manual evaluation.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="175" ssid="6">Replacing this with an ranked evaluation seems to be more suitable.</S>
original cit marker offset is 0
new cit marker offset is 0



["'153'", "'170'", "'175'"]
'153'
'170'
'175'
['153', '170', '175']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S><S sid="26" ssid="19">Most of these groups follow a phrase-based statistical approach to machine translation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'0'", "'26'"]
'170'
'0'
'26'
['170', '0', '26']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="126" ssid="19">The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'126'"]
'9'
'170'
'126'
['9', '170', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="44" ssid="10">We computed BLEU scores for each submission with a single reference translation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'62'", "'44'"]
'170'
'62'
'44'
['170', '62', '44']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="19" ssid="12">We aligned the texts at a sentence level across all four languages, resulting in 1064 sentence per language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'19'"]
'9'
'170'
'19'
['9', '170', '19']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="36" ssid="2">The BLEU metric, as all currently proposed automatic metrics, is occasionally suspected to be biased towards statistical systems, especially the phrase-based systems currently in use.</S><S sid="35" ssid="1">For the automatic evaluation, we used BLEU, since it is the most established metric in the field.</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'", "'36'", "'35'"]
'62'
'36'
'35'
['62', '36', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="50" ssid="16">Following this method, we repeatedly — say, 1000 times — sample sets of sentences from the output of each system, measure their BLEU score, and use these 1000 BLEU scores as basis for estimating a confidence interval.</S><S sid="139" ssid="32">Given the closeness of most systems and the wide over-lapping confidence intervals it is hard to make strong statements about the correlation between human judgements and automatic scoring methods such as BLEU.</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S>
original cit marker offset is 0
new cit marker offset is 0



["'50'", "'139'", "'62'"]
'50'
'139'
'62'
['50', '139', '62']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="71" ssid="10">Presenting the output of several system allows the human judge to make more informed judgements, contrasting the quality of the different systems.</S><S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'71'", "'140'", "'0'"]
'71'
'140'
'0'
['71', '140', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="52" ssid="18">Pairwise comparison: We can use the same method to assess the statistical significance of one system outperforming another.</S><S sid="102" ssid="18">Confidence Interval: To estimate confidence intervals for the average mean scores for the systems, we use standard significance testing.</S><S sid="50" ssid="16">Following this method, we repeatedly — say, 1000 times — sample sets of sentences from the output of each system, measure their BLEU score, and use these 1000 BLEU scores as basis for estimating a confidence interval.</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'", "'102'", "'50'"]
'52'
'102'
'50'
['52', '102', '50']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="123" ssid="16">For the manual scoring, we can distinguish only half of the systems, both in terms of fluency and adequacy.</S><S sid="84" ssid="23">The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:</S><S sid="80" ssid="19">We collected around 300–400 judgements per judgement type (adequacy or fluency), per system, per language pair.</S>
original cit marker offset is 0
new cit marker offset is 0



["'123'", "'84'", "'80'"]
'123'
'84'
'80'
['123', '84', '80']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="11" ssid="4">To lower the barrier of entrance to the competition, we provided a complete baseline MT system, along with data resources.</S><S sid="117" ssid="10">For instance: if 10 systems participate, and one system does better than 3 others, worse then 2, and is not significant different from the remaining 4, its rank is in the interval 3–7.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'", "'117'", "'170'"]
'11'
'117'
'170'
['11', '117', '170']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="38" ssid="4">The BLEU score has been shown to correlate well with human judgement, when statistical machine translation systems are compared (Doddington, 2002; Przybocki, 2004; Li, 2005).</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="71" ssid="10">Presenting the output of several system allows the human judge to make more informed judgements, contrasting the quality of the different systems.</S>
original cit marker offset is 0
new cit marker offset is 0



["'38'", "'62'", "'71'"]
'38'
'62'
'71'
['38', '62', '71']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="126" ssid="19">The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'126'"]
'9'
'170'
'126'
['9', '170', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="36">For instance, for out-ofdomain English-French, Systran has the best BLEU and manual scores.</S><S sid="173" ssid="4">The bias of automatic methods in favor of statistical systems seems to be less pronounced on out-of-domain test data.</S><S sid="58" ssid="24">We divide up each test set into blocks of 20 sentences (100 blocks for the in-domain test set, 53 blocks for the out-of-domain test set), check for each block, if one system has a higher BLEU score than the other, and then use the sign test.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'173'", "'58'"]
'143'
'173'
'58'
['143', '173', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="64" ssid="3">Also, the argument has been made that machine translation performance should be evaluated via task-based evaluation metrics, i.e. how much it assists performing a useful task, such as supporting human translators or aiding the analysis of texts.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'170'", "'64'"]
'0'
'170'
'64'
['0', '170', '64']
parsed_discourse_facet ['hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="68" ssid="7">We asked participants to each judge 200–300 sentences in terms of fluency and adequacy, the most commonly used manual evaluation metrics.</S><S sid="84" ssid="23">The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'68'", "'84'"]
'170'
'68'
'84'
['170', '68', '84']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="44" ssid="10">We computed BLEU scores for each submission with a single reference translation.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'44'", "'0'"]
'170'
'44'
'0'
['170', '44', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']



W06-3114
W06-3120
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



W06-3114
C08-1074
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W06-3114
P07-1083
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W06-3114
W07-0738
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



W06-3114
D07-1030
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



W06-3114
W08-0406
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file A97-1014_vardha.csv
submit_file input/res/Task1/A97-1014.annv3.csv
parsing: input/ref/Task1/A97-1014_vardha.csv
<S sid="72" ssid="17">In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'"]
'72'
['72']
parsed_discourse_facet ['method_citation']
 <S sid="144" ssid="25">We distinguish five degrees of automation: So far, about 1100 sentences of our corpus have been annotated.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'"]
'144'
['144']
parsed_discourse_facet ['method_citation']
<S sid="14" ssid="4">Corpora annotated with syntactic structures are commonly referred to as trctbank.5.</S>
original cit marker offset is 0
new cit marker offset is 0



["'14'"]
'14'
['14']
parsed_discourse_facet ['method_citation']
<S sid="15" ssid="5">Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'"]
'15'
['15']
parsed_discourse_facet ['method_citation']
  <S sid="36" ssid="26">As for free word order languages, the following features may cause problems: sition between the two poles.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
 <S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'"]
'24'
['24']
parsed_discourse_facet ['method_citation']
 <S sid="160" ssid="2">These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.</S>
original cit marker offset is 0
new cit marker offset is 0



["'160'"]
'160'
['160']
parsed_discourse_facet ['method_citation']
 <S sid="151" ssid="32">For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).</S>
original cit marker offset is 0
new cit marker offset is 0



["'151'"]
'151'
['151']
parsed_discourse_facet ['method_citation']
 <S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'"]
'4'
['4']
parsed_discourse_facet ['method_citation']
<S sid="160" ssid="2">These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.</S>
original cit marker offset is 0
new cit marker offset is 0



["'160'"]
'160'
['160']
parsed_discourse_facet ['method_citation']
 <S sid="167" ssid="9">In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.</S>
original cit marker offset is 0
new cit marker offset is 0



["'167'"]
'167'
['167']
parsed_discourse_facet ['method_citation']
<S sid="39" ssid="29">Consider the German sentence (1) daran wird ihn Anna erkennen, &amp;di er weint at-it will him Anna recognise that he cries 'Anna will recognise him at his cry' A sample constituent structure is given below: The fairly short sentence contains three non-local dependencies, marked by co-references between traces and the corresponding nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'39'"]
'39'
['39']
parsed_discourse_facet ['method_citation']
 <S sid="151" ssid="32">For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).</S>
original cit marker offset is 0
new cit marker offset is 0



["'151'"]
'151'
['151']
parsed_discourse_facet ['method_citation']
<S sid="71" ssid="16">However, there is a trade-off between the granularity of information encoded in the labels and the speed and accuracy of annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'71'"]
'71'
['71']
parsed_discourse_facet ['method_citation']
 <S sid="144" ssid="25">We distinguish five degrees of automation: So far, about 1100 sentences of our corpus have been annotated.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'"]
'144'
['144']
parsed_discourse_facet ['method_citation']
<S sid="160" ssid="2">These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.</S>
original cit marker offset is 0
new cit marker offset is 0



["'160'"]
'160'
['160']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/A97-1014.annv3.csv
<S sid="74" ssid="19">During the first phase, the focus is on annotating correct structures and a coarse-grained classification of grammatical functions, which represent the following areas of information: Dependency type: complements are further classified according to features such as category and case: clausal complements (OC), accusative objects (OA), datives (DA), etc.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S><S sid="170" ssid="12">Our annotation tool supplies efficient manipulation and immediate visualization of argument structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'74'", "'88'", "'170'"]
'74'
'88'
'170'
['74', '88', '170']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="72" ssid="17">In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="144" ssid="25">We distinguish five degrees of automation: So far, about 1100 sentences of our corpus have been annotated.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'", "'4'", "'144'"]
'72'
'4'
'144'
['72', '4', '144']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="153" ssid="34">The tagger rates 90% of all assignments as reliable and carries them out fully automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'159'", "'153'"]
'24'
'159'
'153'
['24', '159', '153']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="15" ssid="5">Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.</S><S sid="57" ssid="2">Argument structure, represented in terms of unordered trees.</S><S sid="0" ssid="0">An Annotation Scheme for Free Word Order Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'57'", "'0'"]
'15'
'57'
'0'
['15', '57', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="111" ssid="24">If the scope of such a word does not directly correspond to a tree node, the word is attached to the lowest node dominating all subconstituents appearing in its scope.</S><S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="47" ssid="37">Argument structure can be represented in terms of unordered trees (with crossing branches).</S>
original cit marker offset is 0
new cit marker offset is 0



["'111'", "'24'", "'47'"]
'111'
'24'
'47'
['111', '24', '47']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'24'", "'4'"]
'159'
'24'
'4'
['159', '24', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="167" ssid="9">In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.</S><S sid="141" ssid="22">The corpus is stored in a SQL database.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'167'", "'141'", "'4'"]
'167'
'141'
'4'
['167', '141', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="166" ssid="8">Syntactically annotated corpora of German have been missing until now.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="1" ssid="1">We describe an annotation scheme and a tool developed for creating linguistically annotated corpora for non-configurational languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'166'", "'4'", "'1'"]
'166'
'4'
'1'
['166', '4', '1']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S><S sid="0" ssid="0">An Annotation Scheme for Free Word Order Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'88'", "'0'"]
'159'
'88'
'0'
['159', '88', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="121" ssid="2">In order to make the annotation process more efficient, extra effort has been put. into the development of an annotation tool.</S><S sid="74" ssid="19">During the first phase, the focus is on annotating correct structures and a coarse-grained classification of grammatical functions, which represent the following areas of information: Dependency type: complements are further classified according to features such as category and case: clausal complements (OC), accusative objects (OA), datives (DA), etc.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'121'", "'74'"]
'159'
'121'
'74'
['159', '121', '74']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="72" ssid="17">In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'", "'4'", "'88'"]
'72'
'4'
'88'
['72', '4', '88']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="141" ssid="22">The corpus is stored in a SQL database.</S><S sid="143" ssid="24">Sentences annotated in previous steps are used as training material for further processing.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'", "'141'", "'143'"]
'4'
'141'
'143'
['4', '141', '143']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="71" ssid="16">However, there is a trade-off between the granularity of information encoded in the labels and the speed and accuracy of annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'", "'159'", "'71'"]
'4'
'159'
'71'
['4', '159', '71']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="160" ssid="2">These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="151" ssid="32">For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).</S>
original cit marker offset is 0
new cit marker offset is 0



["'160'", "'4'", "'151'"]
'160'
'4'
'151'
['160', '4', '151']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 1
IGNORE THIS: key error 1



A97-1014
E99-1016
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



A97-1014
I05-6010
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



A97-1014
W08-1007
0
method_citation
['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']



A97-1014
D07-1066
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file P11-1061_sweta.csv
submit_file input/res/Task1/P11-1061.annv3.csv
parsing: input/ref/Task1/P11-1061_sweta.csv
 <S sid="9" ssid="5">Unfortunately, the best completely unsupervised English POS tagger (that does not make use of a tagging dictionary) reaches only 76.1% accuracy (Christodoulopoulos et al., 2010), making its practical usability questionable at best.</S>
original cit marker offset is 0
new cit marker offset is 0



["9'"]
9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="47" ssid="13">Our monolingual similarity function (for connecting pairs of foreign trigram types) is the same as the one used by Subramanya et al. (2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["47'"]
47'
['47']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["10'"]
10'
['10']
parsed_discourse_facet ['method_citation']
<S sid="70" ssid="1">Given the bilingual graph described in the previous section, we can use label propagation to project the English POS labels to the foreign language.</S>
original cit marker offset is 0
new cit marker offset is 0



["70'"]
70'
['70']
parsed_discourse_facet ['method_citation']
<S sid="52" ssid="18">This is similar to stacking the different feature instantiations into long (sparse) vectors and computing the cosine similarity between them.</S>
original cit marker offset is 0
new cit marker offset is 0



["52'"]
52'
['52']
parsed_discourse_facet ['method_citation']
 <S sid="83" ssid="14">We then extract a set of possible tags tx(y) by eliminating labels whose probability is below a threshold value &#964;: We describe how we choose &#964; in &#167;6.4.</S>
original cit marker offset is 0
new cit marker offset is 0



["83'"]
83'
['83']
parsed_discourse_facet ['method_citation']
<S sid="113" ssid="13">For each language under consideration, Petrov et al. (2011) provide a mapping A from the fine-grained language specific POS tags in the foreign treebank to the universal POS tags.</S>
original cit marker offset is 0
new cit marker offset is 0



["113'"]
113'
['113']
parsed_discourse_facet ['method_citation']
<S sid="3" ssid="3">We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["3'"]
3'
['3']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S>
original cit marker offset is 0
new cit marker offset is 0



["18'"]
18'
['18']
parsed_discourse_facet ['method_citation']
 <S sid="13" ssid="9">(2009) study related but different multilingual grammar and tagger induction tasks, where it is assumed that no labeled data at all is available.</S>
original cit marker offset is 0
new cit marker offset is 0



["13'"]
13'
['13']
parsed_discourse_facet ['method_citation']
 <S sid="3" ssid="3">We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["3'"]
3'
['3']
parsed_discourse_facet ['method_citation']
<S sid="120" ssid="20">We were intentionally lenient with our baselines: bilingual information by projecting POS tags directly across alignments in the parallel data.</S>
original cit marker offset is 0
new cit marker offset is 0



["120'"]
120'
['120']
parsed_discourse_facet ['method_citation']
<S sid="2" ssid="2">Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["2'"]
2'
['2']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="15">Syntactic universals are a well studied concept in linguistics (Carnie, 2002; Newmeyer, 2005), and were recently used in similar form by Naseem et al. (2010) for multilingual grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["19'"]
19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="153" ssid="16">Figure 2 shows an excerpt of a sentence from the Italian test set and the tags assigned by four different models, as well as the gold tags.</S>
original cit marker offset is 0
new cit marker offset is 0



["153'"]
153'
['153']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S>
original cit marker offset is 0
new cit marker offset is 0



["18'"]
18'
['18']
parsed_discourse_facet ['method_citation']
<S sid="161" ssid="4">Our results outperform strong unsupervised baselines as well as approaches that rely on direct projections, and bridge the gap between purely supervised and unsupervised POS tagging models.</S>
original cit marker offset is 0
new cit marker offset is 0



["161'"]
161'
['161']
parsed_discourse_facet ['method_citation']
<S sid="23" ssid="19">Our final average POS tagging accuracy of 83.4% compares very favorably to the average accuracy of Berg-Kirkpatrick et al.&#8217;s monolingual unsupervised state-of-the-art model (73.0%), and considerably bridges the gap to fully supervised POS tagging performance (96.6%).</S>
original cit marker offset is 0
new cit marker offset is 0



["23'"]
23'
['23']
parsed_discourse_facet ['method_citation']
<S sid="23" ssid="19">Our final average POS tagging accuracy of 83.4% compares very favorably to the average accuracy of Berg-Kirkpatrick et al.&#8217;s monolingual unsupervised state-of-the-art model (73.0%), and considerably bridges the gap to fully supervised POS tagging performance (96.6%).</S>
original cit marker offset is 0
new cit marker offset is 0



["23'"]
23'
['23']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P11-1061.annv3.csv
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="6" ssid="2">Supervised part-of-speech (POS) taggers, for example, approach the level of inter-annotator agreement (Shen et al., 2007, 97.3% accuracy for English).</S><S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'6'", "'18'"]
'0'
'6'
'18'
['0', '6', '18']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'7'", "'27'"]
'0'
'7'
'27'
['0', '7', '27']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="3" ssid="3">We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).</S><S sid="35" ssid="1">In graph-based learning approaches one constructs a graph whose vertices are labeled and unlabeled examples, and whose weighted edges encode the degree to which the examples they link have the same label (Zhu et al., 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'3'", "'35'"]
'0'
'3'
'35'
['0', '3', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="52" ssid="18">This is similar to stacking the different feature instantiations into long (sparse) vectors and computing the cosine similarity between them.</S><S sid="51" ssid="17">For each trigram type x2 x3 x4 in a sequence x1 x2 x3 x4 x5, we count how many times that trigram type co-occurs with the different instantiations of each concept, and compute the point-wise mutual information (PMI) between the two.5 The similarity between two trigram types is given by summing over the PMI values over feature instantiations that they have in common.</S><S sid="42" ssid="8">The foreign language vertices (denoted by Vf) correspond to foreign trigram types, exactly as in Subramanya et al. (2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'", "'51'", "'42'"]
'52'
'51'
'42'
['52', '51', '42']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="31" ssid="8">By aggregating the POS labels of the English tokens to types, we can generate label distributions for the English vertices.</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'7'", "'31'"]
'27'
'7'
'31'
['27', '7', '31']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S><S sid="6" ssid="2">Supervised part-of-speech (POS) taggers, for example, approach the level of inter-annotator agreement (Shen et al., 2007, 97.3% accuracy for English).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'6'"]
'0'
'24'
'6'
['0', '24', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="85" ssid="16">We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).</S><S sid="3" ssid="3">We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'85'", "'3'"]
'0'
'85'
'3'
['0', '85', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S><S sid="158" ssid="1">We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'18'", "'158'"]
'0'
'18'
'158'
['0', '18', '158']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="2" ssid="2">Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.</S><S sid="16" ssid="12">To this end, we construct a bilingual graph over word types to establish a connection between the two languages (§3), and then use graph label propagation to project syntactic information from English to the foreign language (§4).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'16'"]
'0'
'2'
'16'
['0', '2', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="71" ssid="2">We use label propagation in two stages to generate soft labels on all the vertices in the graph.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="35" ssid="1">In graph-based learning approaches one constructs a graph whose vertices are labeled and unlabeled examples, and whose weighted edges encode the degree to which the examples they link have the same label (Zhu et al., 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'71'", "'0'", "'35'"]
'71'
'0'
'35'
['71', '0', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S><S sid="160" ssid="3">Our results suggest that it is possible to learn accurate POS taggers for languages which do not have any annotated data, but have translations into a resource-rich language.</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'", "'160'", "'24'"]
'106'
'160'
'24'
['106', '160', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S><S sid="160" ssid="3">Our results suggest that it is possible to learn accurate POS taggers for languages which do not have any annotated data, but have translations into a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'160'"]
'0'
'24'
'160'
['0', '24', '160']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="46" ssid="12">We use two different similarity functions to define the edge weights among the foreign vertices and between vertices from different languages.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S>
original cit marker offset is 0
new cit marker offset is 0



["'46'", "'0'", "'106'"]
'46'
'0'
'106'
['46', '0', '106']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="144" ssid="7">For comparison, the completely unsupervised feature-HMM baseline accuracy on the universal POS tags for English is 79.4%, and goes up to 88.7% with a treebank dictionary.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'7'", "'144'"]
'0'
'7'
'144'
['0', '7', '144']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="2" ssid="2">Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'24'"]
'0'
'2'
'24'
['0', '2', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'", "'0'", "'10'"]
'106'
'0'
'10'
['106', '0', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="56" ssid="22">To define a similarity function between the English and the foreign vertices, we rely on high-confidence word alignments.</S><S sid="57" ssid="23">Since our graph is built from a parallel corpus, we can use standard word alignment techniques to align the English sentences De 5Note that many combinations are impossible giving a PMI value of 0; e.g., when the trigram type and the feature instantiation don’t have words in common. and their foreign language translations Df.6 Label propagation in the graph will provide coverage and high recall, and we therefore extract only intersected high-confidence (> 0.9) alignments De�f.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S>
original cit marker offset is 0
new cit marker offset is 0



["'56'", "'57'", "'0'"]
'56'
'57'
'0'
['56', '57', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="85" ssid="16">We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'0'", "'85'"]
'27'
'0'
'85'
['27', '0', '85']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



P11-1061
N12-1052
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



P11-1061
N12-1090
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
gold file P08-1028_swastika.csv
submit_file input/res/Task1/P08-1028.annv3.csv
parsing: input/ref/Task1/P08-1028_swastika.csv
<S sid="21" ssid="17">Central in these models is the notion of compositionality &#8212; the meaning of complex expressions is determined by the meanings of their constituent expressions and the rules used to combine them.</S>
original cit marker offset is 0
new cit marker offset is 0



['21']
21
['21']
parsed_discourse_facet ['method_citation']
<S sid="27" ssid="23">Our results show that the multiplicative models are superior and correlate significantly with behavioral data.</S>
original cit marker offset is 0
new cit marker offset is 0



['27']
27
['27']
parsed_discourse_facet ['result_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
original cit marker offset is 0
new cit marker offset is 0



['189']
189
['189']
parsed_discourse_facet ['aim_citation']
<S sid="53" ssid="1">We formulate semantic composition as a function of two vectors, u and v. We assume that individual words are represented by vectors acquired from a corpus following any of the parametrisations that have been suggested in the literature.1 We briefly note here that a word&#8217;s vector typically represents its co-occurrence with neighboring words.</S>
original cit marker offset is 0
new cit marker offset is 0



['53']
53
['53']
parsed_discourse_facet ['method_citation']
<S sid="76" ssid="24">The models considered so far assume that components do not &#8216;interfere&#8217; with each other, i.e., that It is also possible to re-introduce the dependence on K into the model of vector composition.</S>
original cit marker offset is 0
new cit marker offset is 0



['76']
76
['76']
parsed_discourse_facet ['method_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S>
original cit marker offset is 0
new cit marker offset is 0



['57']
57
['57']
parsed_discourse_facet ['method_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S>
original cit marker offset is 0
new cit marker offset is 0



['57']
57
['57']
parsed_discourse_facet ['method_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



['190']
190
['190']
parsed_discourse_facet ['result_citation']
<S sid="60" ssid="8">To derive specific models from this general framework requires the identification of appropriate constraints to narrow the space of functions being considered.</S>
original cit marker offset is 0
new cit marker offset is 0



['60']
60
['60']
parsed_discourse_facet ['method_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



['190']
190
['190']
parsed_discourse_facet ['result_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



['190']
190
['190']
parsed_discourse_facet ['result_citation']
<S sid="73" ssid="21">Relaxing the assumption of symmetry in the case of the simple additive model produces a model which weighs the contribution of the two components differently: This allows additive models to become more syntax aware, since semantically important constituents can participate more actively in the composition.</S>
original cit marker offset is 0
new cit marker offset is 0



['73']
73
['73']
parsed_discourse_facet ['result_citation']
<S sid="99" ssid="12">In order to establish an independent measure of sentence similarity, we assembled a set of experimental materials and elicited similarity ratings from human subjects.</S>
original cit marker offset is 0
new cit marker offset is 0



['99']
99
['99']
parsed_discourse_facet ['method_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
original cit marker offset is 0
new cit marker offset is 0



['189']
189
['189']
parsed_discourse_facet ['aim_citation']
<S sid="191" ssid="3">Despite the popularity of additive models, our experimental results showed the superiority of models utilizing multiplicative combinations, at least for the sentence similarity task attempted here.</S>
original cit marker offset is 0
new cit marker offset is 0



['191']
191
['191']
parsed_discourse_facet ['result_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



['190']
190
['190']
parsed_discourse_facet ['result_citation']
parsing: input/res/Task1/P08-1028.annv3.csv
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'3'", "'51'"]
'57'
'3'
'51'
['57', '3', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S><S sid="195" ssid="7">The resulting vector is sparser but expresses more succinctly the meaning of the predicate-argument structure, and thus allows semantic similarity to be modelled more accurately.</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'", "'138'", "'195'"]
'51'
'138'
'195'
['51', '138', '195']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'", "'95'", "'138'"]
'51'
'95'
'138'
['51', '95', '138']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'", "'26'", "'3'"]
'95'
'26'
'3'
['95', '26', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'", "'0'", "'51'"]
'95'
'0'
'51'
['95', '0', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="53" ssid="1">We formulate semantic composition as a function of two vectors, u and v. We assume that individual words are represented by vectors acquired from a corpus following any of the parametrisations that have been suggested in the literature.1 We briefly note here that a word’s vector typically represents its co-occurrence with neighboring words.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'53'", "'0'"]
'57'
'53'
'0'
['57', '53', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'189'", "'0'", "'51'"]
'189'
'0'
'51'
['189', '0', '51']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'51'", "'0'"]
'57'
'51'
'0'
['57', '51', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'51'", "'189'"]
'190'
'51'
'189'
['190', '51', '189']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S><S sid="60" ssid="8">To derive specific models from this general framework requires the identification of appropriate constraints to narrow the space of functions being considered.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S>
original cit marker offset is 0
new cit marker offset is 0



["'138'", "'60'", "'26'"]
'138'
'60'
'26'
['138', '60', '26']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="40" ssid="13">Noisy versions of the original vectors can be recovered by means of circular correlation which is the approximate inverse of circular convolution.</S><S sid="38" ssid="11">The projection is defined in terms of circular convolution a mathematical function that compresses the tensor product of two vectors.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'40'", "'38'"]
'190'
'40'
'38'
['190', '40', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="45" ssid="18">Vector addition does not increase the dimensionality of the resulting vector.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'45'", "'51'"]
'190'
'45'
'51'
['190', '45', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'", "'52'", "'3'"]
'26'
'52'
'3'
['26', '52', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'", "'52'", "'3'"]
'26'
'52'
'3'
['26', '52', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="25" ssid="21">We present a general framework for vector-based composition which allows us to consider different classes of models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'52'", "'25'"]
'3'
'52'
'25'
['3', '52', '25']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'26'", "'51'"]
'190'
'26'
'51'
['190', '26', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="48" ssid="21">The idea is to add not only the vectors representing the predicate and its argument but also the neighbors associated with both of them.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'51'", "'48'"]
'190'
'51'
'48'
['190', '51', '48']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



P08-1028
P13-2083
0
result_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



P08-1028
P10-1021
0
result_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



P08-1028
W11-1310
0
result_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
gold file W06-3114_swastika.csv
submit_file input/res/Task1/W06-3114.annv3.csv
parsing: input/ref/Task1/W06-3114_swastika.csv
<S sid="47" ssid="13">Because of this, we retokenized and lowercased submitted output with our own tokenizer, which was also used to prepare the training and test data.</S>
original cit marker offset is 0
new cit marker offset is 0



['47']
47
['47']
parsed_discourse_facet ['method_citation']
    <S sid="8" ssid="1">The evaluation framework for the shared task is similar to the one used in last year&#8217;s shared task.</S>
original cit marker offset is 0
new cit marker offset is 0



['8']
8
['8']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="11">In addition to the Europarl test set, we also collected 29 editorials from the Project Syndicate website2, which are published in all the four languages of the shared task.</S>
original cit marker offset is 0
new cit marker offset is 0



['18']
18
['18']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="11">In addition to the Europarl test set, we also collected 29 editorials from the Project Syndicate website2, which are published in all the four languages of the shared task.</S>
original cit marker offset is 0
new cit marker offset is 0



['18']
18
['18']
parsed_discourse_facet ['method_citation']
<S sid="144" ssid="37">Our suspicion is that BLEU is very sensitive to jargon, to selecting exactly the right words, and not synonyms that human judges may appreciate as equally good.</S>
original cit marker offset is 0
new cit marker offset is 0



['144']
144
['144']
parsed_discourse_facet ['result_citation']
<S sid="145" ssid="38">This is can not be the only explanation, since the discrepancy still holds, for instance, for out-of-domain French-English, where Systran receives among the best adequacy and fluency scores, but a worse BLEU score than all but one statistical system.</S>
original cit marker offset is 0
new cit marker offset is 0



['145']
145
['145']
parsed_discourse_facet ['result_citation']
    <S sid="103" ssid="19">Given a set of n sentences, we can compute the sample mean x&#65533; and sample variance s2 of the individual sentence judgements xi: The extend of the confidence interval [x&#8722;d, x+df can be computed by d = 1.96 &#183;&#65533;n (6) Pairwise Comparison: As for the automatic evaluation metric, we want to be able to rank different systems against each other, for which we need assessments of statistical significance on the differences between a pair of systems.</S>
original cit marker offset is 0
new cit marker offset is 0



['103']
103
['103']
parsed_discourse_facet ['method_citation']
<S sid="50" ssid="16">Following this method, we repeatedly &#8212; say, 1000 times &#8212; sample sets of sentences from the output of each system, measure their BLEU score, and use these 1000 BLEU scores as basis for estimating a confidence interval.</S>
original cit marker offset is 0
new cit marker offset is 0



['50']
50
['50']
parsed_discourse_facet ['method_citation']
<S sid="68" ssid="7">We asked participants to each judge 200&#8211;300 sentences in terms of fluency and adequacy, the most commonly used manual evaluation metrics.</S>
original cit marker offset is 0
new cit marker offset is 0



['68']
68
['68']
parsed_discourse_facet ['method_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



['170']
170
['170']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="11">In addition to the Europarl test set, we also collected 29 editorials from the Project Syndicate website2, which are published in all the four languages of the shared task.</S>
original cit marker offset is 0
new cit marker offset is 0



['18']
18
['18']
parsed_discourse_facet ['method_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



['170']
170
['170']
parsed_discourse_facet ['method_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



['170']
170
['170']
parsed_discourse_facet ['method_citation']
<S sid="92" ssid="8">The way judgements are collected, human judges tend to use the scores to rank systems against each other.</S>
original cit marker offset is 0
new cit marker offset is 0



['92']
92
['92']
parsed_discourse_facet ['result_citation']
<S sid="145" ssid="38">This is can not be the only explanation, since the discrepancy still holds, for instance, for out-of-domain French-English, where Systran receives among the best adequacy and fluency scores, but a worse BLEU score than all but one statistical system.</S>
original cit marker offset is 0
new cit marker offset is 0



['145']
145
['145']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W06-3114.annv3.csv
<S sid="153" ssid="46">This is the first time that we organized a large-scale manual evaluation.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="175" ssid="6">Replacing this with an ranked evaluation seems to be more suitable.</S>
original cit marker offset is 0
new cit marker offset is 0



["'153'", "'170'", "'175'"]
'153'
'170'
'175'
['153', '170', '175']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S><S sid="26" ssid="19">Most of these groups follow a phrase-based statistical approach to machine translation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'0'", "'26'"]
'170'
'0'
'26'
['170', '0', '26']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="126" ssid="19">The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'126'"]
'9'
'170'
'126'
['9', '170', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="44" ssid="10">We computed BLEU scores for each submission with a single reference translation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'62'", "'44'"]
'170'
'62'
'44'
['170', '62', '44']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="19" ssid="12">We aligned the texts at a sentence level across all four languages, resulting in 1064 sentence per language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'19'"]
'9'
'170'
'19'
['9', '170', '19']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="36" ssid="2">The BLEU metric, as all currently proposed automatic metrics, is occasionally suspected to be biased towards statistical systems, especially the phrase-based systems currently in use.</S><S sid="35" ssid="1">For the automatic evaluation, we used BLEU, since it is the most established metric in the field.</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'", "'36'", "'35'"]
'62'
'36'
'35'
['62', '36', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="50" ssid="16">Following this method, we repeatedly — say, 1000 times — sample sets of sentences from the output of each system, measure their BLEU score, and use these 1000 BLEU scores as basis for estimating a confidence interval.</S><S sid="139" ssid="32">Given the closeness of most systems and the wide over-lapping confidence intervals it is hard to make strong statements about the correlation between human judgements and automatic scoring methods such as BLEU.</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S>
original cit marker offset is 0
new cit marker offset is 0



["'50'", "'139'", "'62'"]
'50'
'139'
'62'
['50', '139', '62']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="71" ssid="10">Presenting the output of several system allows the human judge to make more informed judgements, contrasting the quality of the different systems.</S><S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'71'", "'140'", "'0'"]
'71'
'140'
'0'
['71', '140', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="52" ssid="18">Pairwise comparison: We can use the same method to assess the statistical significance of one system outperforming another.</S><S sid="102" ssid="18">Confidence Interval: To estimate confidence intervals for the average mean scores for the systems, we use standard significance testing.</S><S sid="50" ssid="16">Following this method, we repeatedly — say, 1000 times — sample sets of sentences from the output of each system, measure their BLEU score, and use these 1000 BLEU scores as basis for estimating a confidence interval.</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'", "'102'", "'50'"]
'52'
'102'
'50'
['52', '102', '50']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="123" ssid="16">For the manual scoring, we can distinguish only half of the systems, both in terms of fluency and adequacy.</S><S sid="84" ssid="23">The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:</S><S sid="80" ssid="19">We collected around 300–400 judgements per judgement type (adequacy or fluency), per system, per language pair.</S>
original cit marker offset is 0
new cit marker offset is 0



["'123'", "'84'", "'80'"]
'123'
'84'
'80'
['123', '84', '80']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="11" ssid="4">To lower the barrier of entrance to the competition, we provided a complete baseline MT system, along with data resources.</S><S sid="117" ssid="10">For instance: if 10 systems participate, and one system does better than 3 others, worse then 2, and is not significant different from the remaining 4, its rank is in the interval 3–7.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'", "'117'", "'170'"]
'11'
'117'
'170'
['11', '117', '170']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="38" ssid="4">The BLEU score has been shown to correlate well with human judgement, when statistical machine translation systems are compared (Doddington, 2002; Przybocki, 2004; Li, 2005).</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="71" ssid="10">Presenting the output of several system allows the human judge to make more informed judgements, contrasting the quality of the different systems.</S>
original cit marker offset is 0
new cit marker offset is 0



["'38'", "'62'", "'71'"]
'38'
'62'
'71'
['38', '62', '71']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="126" ssid="19">The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'126'"]
'9'
'170'
'126'
['9', '170', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="36">For instance, for out-ofdomain English-French, Systran has the best BLEU and manual scores.</S><S sid="173" ssid="4">The bias of automatic methods in favor of statistical systems seems to be less pronounced on out-of-domain test data.</S><S sid="58" ssid="24">We divide up each test set into blocks of 20 sentences (100 blocks for the in-domain test set, 53 blocks for the out-of-domain test set), check for each block, if one system has a higher BLEU score than the other, and then use the sign test.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'173'", "'58'"]
'143'
'173'
'58'
['143', '173', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="64" ssid="3">Also, the argument has been made that machine translation performance should be evaluated via task-based evaluation metrics, i.e. how much it assists performing a useful task, such as supporting human translators or aiding the analysis of texts.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'170'", "'64'"]
'0'
'170'
'64'
['0', '170', '64']
parsed_discourse_facet ['hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="68" ssid="7">We asked participants to each judge 200–300 sentences in terms of fluency and adequacy, the most commonly used manual evaluation metrics.</S><S sid="84" ssid="23">The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'68'", "'84'"]
'170'
'68'
'84'
['170', '68', '84']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="44" ssid="10">We computed BLEU scores for each submission with a single reference translation.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'44'", "'0'"]
'170'
'44'
'0'
['170', '44', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2



W06-3114
W08-0406
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



W06-3114
P07-1108
0
method_citation
['hypothesis_citation', 'results_citation', 'implication_citation']
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file W99-0613_vardha.csv
submit_file input/res/Task1/W99-0613.annv3.csv
parsing: input/ref/Task1/W99-0613_vardha.csv
    <S sid="9" ssid="3">This paper discusses the use of unlabeled examples for the problem of named entity classification.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
    <S sid="35" ssid="29">AdaBoost finds a weighted combination of simple (weak) classifiers, where the weights are chosen to minimize a function that bounds the classification error on a set of training examples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'35'"]
'35'
['35']
parsed_discourse_facet ['method_citation']
    <S sid="134" ssid="1">This section describes an algorithm based on boosting algorithms, which were previously developed for supervised machine learning problems.</S>
original cit marker offset is 0
new cit marker offset is 0



["'134'"]
'134'
['134']
parsed_discourse_facet ['method_citation']
    <S sid="236" ssid="3">We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.</S>
original cit marker offset is 0
new cit marker offset is 0



["'236'"]
'236'
['236']
parsed_discourse_facet ['method_citation']
    <S sid="8" ssid="2">Recent results (e.g., (Yarowsky 95; Brill 95; Blum and Mitchell 98)) have suggested that unlabeled data can be used quite profitably in reducing the need for supervision.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
    <S sid="42" ssid="36">(Riloff and Shepherd 97) describe a bootstrapping approach for acquiring nouns in particular categories (such as &amp;quot;vehicle&amp;quot; or &amp;quot;weapon&amp;quot; categories).</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'"]
'42'
['42']
parsed_discourse_facet ['method_citation']
    <S sid="236" ssid="3">We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.</S>
original cit marker offset is 0
new cit marker offset is 0



["'236'"]
'236'
['236']
parsed_discourse_facet ['method_citation']
    <S sid="222" ssid="1">The Expectation Maximization (EM) algorithm (Dempster, Laird and Rubin 77) is a common approach for unsupervised training; in this section we describe its application to the named entity problem.</S>
original cit marker offset is 0
new cit marker offset is 0



["'222'"]
'222'
['222']
parsed_discourse_facet ['method_citation']
    <S sid="30" ssid="24">(Blum and Mitchell 98) offer a promising formulation of redundancy, also prove some results about how the use of can help classification, and suggest an objective function when training with unlabeled examples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'"]
'30'
['30']
parsed_discourse_facet ['method_citation']
 <S sid="26" ssid="20">We present two algorithms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'"]
'26'
['26']
parsed_discourse_facet ['method_citation']
    <S sid="7" ssid="1">Many statistical or machine-learning approaches for natural language problems require a relatively large amount of supervision, in the form of labeled training examples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'7'"]
'7'
['7']
parsed_discourse_facet ['method_citation']
    <S sid="32" ssid="26">The algorithm can be viewed as heuristically optimizing an objective function suggested by (Blum and Mitchell 98); empirically it is shown to be quite successful in optimizing this criterion.</S>
original cit marker offset is 0
new cit marker offset is 0



["'32'"]
'32'
['32']
parsed_discourse_facet ['method_citation']
    <S sid="47" ssid="1">971,746 sentences of New York Times text were parsed using the parser of (Collins 96).1 Word sequences that met the following criteria were then extracted as named entity examples: whose head is a singular noun (tagged NN).</S>
original cit marker offset is 0
new cit marker offset is 0



["'47'"]
'47'
['47']
parsed_discourse_facet ['method_citation']
    <S sid="127" ssid="60">The DL-CoTrain algorithm can be motivated as being a greedy method of satisfying the above 2 constraints.</S>
original cit marker offset is 0
new cit marker offset is 0



["'127'"]
'127'
['127']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W99-0613.annv3.csv
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'133'", "'137'"]
'0'
'133'
'137'
['0', '133', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="174" ssid="41">The two new terms force the two classifiers to agree, as much as possible, on the unlabeled examples.</S><S sid="248" ssid="15">With each iteration more examples are assigned labels by both classifiers, while a high level of agreement (> 94%) is maintained between them.</S><S sid="33" ssid="27">The second algorithm builds on a boosting algorithm called AdaBoost (Freund and Schapire 97; Schapire and Singer 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'248'", "'33'"]
'174'
'248'
'33'
['174', '248', '33']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S><S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="220" ssid="87">(7), such as the likelihood function used in maximum-entropy problems and other generalized additive models (Lafferty 99).</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'133'", "'220'"]
'79'
'133'
'220'
['79', '133', '220']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="40" ssid="34">(Berland and Charniak 99) describe a method for extracting parts of objects from wholes (e.g., &quot;speedometer&quot; from &quot;car&quot;) from a large corpus using hand-crafted patterns.</S><S sid="41" ssid="35">(Hearst 92) describes a method for extracting hyponyms from a corpus (pairs of words in &quot;isa&quot; relations).</S><S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'", "'41'", "'79'"]
'40'
'41'
'79'
['40', '41', '79']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="19" ssid="13">Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.</S><S sid="11" ssid="5">For example, a good classifier would identify Mrs. Frank as a person, Steptoe & Johnson as a company, and Honduras as a location.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'19'", "'11'"]
'0'
'19'
'11'
['0', '19', '11']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S><S sid="250" ssid="1">Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.</S><S sid="179" ssid="46">The algorithm builds two classifiers in parallel from labeled and unlabeled data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'", "'250'", "'179'"]
'137'
'250'
'179'
['137', '250', '179']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="19" ssid="13">Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.</S><S sid="236" ssid="3">We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'19'", "'236'"]
'0'
'19'
'236'
['0', '19', '236']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="16" ssid="10">Supervised methods have been applied quite successfully to the full MUC named-entity task (Bikel et al. 97).</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="133" ssid="66">Fort= 1,...,T:</S>
original cit marker offset is 0
new cit marker offset is 0



["'16'", "'0'", "'133'"]
'16'
'0'
'133'
['16', '0', '133']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="253" ssid="4">We are currently exploring other methods that employ similar ideas and their formal properties.</S><S sid="133" ssid="66">Fort= 1,...,T:</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'253'", "'133'"]
'0'
'253'
'133'
['0', '253', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="251" ssid="2">In addition to a heuristic based on decision list learning, we also presented a boosting-like framework that builds on ideas from (Blum and Mitchell 98).</S><S sid="68" ssid="1">The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).</S><S sid="31" ssid="25">Our first algorithm is similar to Yarowsky's, but with some important modifications motivated by (Blum and Mitchell 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'251'", "'68'", "'31'"]
'251'
'68'
'31'
['251', '68', '31']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="28" ssid="22">(Yarowsky 95) describes an algorithm for word-sense disambiguation that exploits redundancy in contextual features, and gives impressive performance.</S><S sid="39" ssid="33">(Brin 98) ,describes a system for extracting (author, book-title) pairs from the World Wide Web using an approach that bootstraps from an initial seed set of examples.</S><S sid="254" ssid="5">Future work should also extend the approach to build a complete named entity extractor - a method that pulls proper names from text and then classifies them.</S>
original cit marker offset is 0
new cit marker offset is 0



["'28'", "'39'", "'254'"]
'28'
'39'
'254'
['28', '39', '254']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="85" ssid="18">(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="77" ssid="10">In this paper k = 3 (the three labels are person, organization, location), and we set a = 0.1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'0'", "'77'"]
'85'
'0'
'77'
['85', '0', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation']
<S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="68" ssid="1">The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).</S>
original cit marker offset is 0
new cit marker offset is 0



["'133'", "'0'", "'68'"]
'133'
'0'
'68'
['133', '0', '68']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: key error 1
IGNORE THIS: key error 1
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2



W99-0613
W03-1022
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file A00-2018_akanksha.csv
submit_file input/res/Task1/A00-2018.annv3.csv
parsing: input/ref/Task1/A00-2018_akanksha.csv
<S sid="90" ssid="1">We created a parser based upon the maximumentropy-inspired model of the last section, smoothed using standard deleted interpolation.</S>
    <S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'90'", "'91'"]
'90'
'91'
['90', '91']
parsed_discourse_facet ['method_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length &lt; 40, and 89.5% for sentences of length &lt; 100, when trained and tested on the previously established [5,9,10,15,17] &amp;quot;standard&amp;quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'"]
'5'
['5']
parsed_discourse_facet ['method_citation']
<S sid="90" ssid="1">We created a parser based upon the maximumentropy-inspired model of the last section, smoothed using standard deleted interpolation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'90'"]
'90'
['90']
parsed_discourse_facet ['method_citation']
<S sid="48" ssid="17">Maximum-entropy models have two benefits for a parser builder.</S>
    <S sid="49" ssid="18">First, as already implicit in our discussion, factoring the probability computation into a sequence of values corresponding to various &amp;quot;features&amp;quot; suggests that the probability model should be easily changeable &#8212; just change the set of features used.</S>
    <S sid="51" ssid="20">Second, and this is a point we have not yet mentioned, the features used in these models need have no particular independence of one another.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'49'", "'51'"]
'48'
'49'
'51'
['48', '49', '51']
parsed_discourse_facet ['method_citation']
<S sid="90" ssid="1">We created a parser based upon the maximumentropy-inspired model of the last section, smoothed using standard deleted interpolation.</S>
    <S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
    <S sid="92" ssid="3">For runs with the generative model based upon Markov grammar statistics, the first pass uses the same statistics, but conditioned only on standard PCFG information.</S>
    <S sid="93" ssid="4">This allows the second pass to see expansions not present in the training corpus.</S>
    <S sid="94" ssid="5">We use the gathered statistics for all observed words, even those with very low counts, though obviously our deleted interpolation smoothing gives less emphasis to observed probabilities for rare words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'90'", "'91'", "'92'", "'93'", "'94'"]
'90'
'91'
'92'
'93'
'94'
['90', '91', '92', '93', '94']
parsed_discourse_facet ['method_citation']
�NA�
original cit marker offset is 0
new cit marker offset is 0



['0']
0
['0']
Error in Reference Offset
<S sid="90" ssid="1">We created a parser based upon the maximumentropy-inspired model of the last section, smoothed using standard deleted interpolation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'90'"]
'90'
['90']
parsed_discourse_facet ['method_citation']
<S sid="90" ssid="1">We created a parser based upon the maximumentropy-inspired model of the last section, smoothed using standard deleted interpolation.</S>
    <S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
    <S sid="92" ssid="3">For runs with the generative model based upon Markov grammar statistics, the first pass uses the same statistics, but conditioned only on standard PCFG information.</S>
    <S sid="93" ssid="4">This allows the second pass to see expansions not present in the training corpus.</S>
    <S sid="94" ssid="5">We use the gathered statistics for all observed words, even those with very low counts, though obviously our deleted interpolation smoothing gives less emphasis to observed probabilities for rare words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'90'", "'91'", "'92'", "'93'", "'94'"]
'90'
'91'
'92'
'93'
'94'
['90', '91', '92', '93', '94']
parsed_discourse_facet ['method_citation']
<S sid="38" ssid="7">To compute a probability in a log-linear model one first defines a set of &amp;quot;features&amp;quot;, functions from the space of configurations over which one is trying to compute probabilities to integers that denote the number of times some pattern occurs in the input.</S>
    <S sid="39" ssid="8">In our work we assume that any feature can occur at most once, so features are boolean-valued: 0 if the pattern does not occur, 1 if it does.</S>
    <S sid="40" ssid="9">In the parser we further assume that features are chosen from certain feature schemata and that every feature is a boolean conjunction of sub-features.</S>
original cit marker offset is 0
new cit marker offset is 0



["'38'", "'39'", "'40'"]
'38'
'39'
'40'
['38', '39', '40']
parsed_discourse_facet ['method_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length &lt; 40 and 89.5% on sentences of length &lt; 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'"]
'174'
['174']
parsed_discourse_facet ['result_citation']
<S sid="85" ssid="54">As partition-function calculation is typically the major on-line computational problem for maximum-entropy models, this simplifies the model significantly.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'"]
'85'
['85']
parsed_discourse_facet ['method_citation']
<S sid="63" ssid="32">As we discuss in more detail in Section 5, several different features in the context surrounding c are useful to include in H: the label, head pre-terminal and head of the parent of c (denoted as lp, tp, hp), the label of c's left sibling (lb for &amp;quot;before&amp;quot;), and the label of the grandparent of c (la).</S><S sid="143" ssid="34">The first is simply that if we first guess the pre-terminal, when we go to guess the head the first thing we can condition upon is the pre-terminal, i.e., we compute p(h I t).</S><S sid="146" ssid="37">The second major reason why first guessing the pre-terminal makes so much difference is that it can be used when backing off the lexical head in computing the probability of the rule expansion.</S>
original cit marker offset is 0
new cit marker offset is 0



["'63'", "'143'", "'146'"]
'63'
'143'
'146'
['63', '143', '146']
parsed_discourse_facet ['method_citation']
???<S sid="78" ssid="47">With some prior knowledge, non-zero values can greatly speed up this process because fewer iterations are required for convergence.</S>                                        <S sid="79" ssid="48">We comment on this because in our example we can substantially speed up the process by choosing values picked so that, when the maximum-entropy equation is expressed in the form of Equation 4, the gi have as their initial values the values of the corresponding terms in Equation 7.</S>
original cit marker offset is 0
new cit marker offset is 0



["'78'", "'79'"]
'78'
'79'
['78', '79']
parsed_discourse_facet ['method_citation']
<S sid="90" ssid="1">We created a parser based upon the maximumentropy-inspired model of the last section, smoothed using standard deleted interpolation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'90'"]
'90'
['90']
parsed_discourse_facet ['method_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length &lt; 40 and 89.5% on sentences of length &lt; 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'"]
'174'
['174']
parsed_discourse_facet ['result_citation']
parsing: input/res/Task1/A00-2018.annv3.csv
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'5'", "'174'"]
'130'
'5'
'174'
['130', '5', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'130'", "'5'"]
'174'
'130'
'5'
['174', '130', '5']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'91'", "'174'"]
'130'
'91'
'174'
['130', '91', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'1'", "'174'"]
'130'
'1'
'174'
['130', '1', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="7" ssid="3">Following [5,10], our parser is based upon a probabilistic generative model.</S><S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'7'", "'91'"]
'5'
'7'
'91'
['5', '7', '91']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'5'", "'1'"]
'174'
'5'
'1'
['174', '5', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="7" ssid="3">Following [5,10], our parser is based upon a probabilistic generative model.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'7'", "'130'"]
'5'
'7'
'130'
['5', '7', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'5'", "'1'"]
'174'
'5'
'1'
['174', '5', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="114" ssid="5">That parser, as stated in Figure 1, achieves an average precision/recall of 87.5.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'174'", "'114'"]
'130'
'174'
'114'
['130', '174', '114']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="141" ssid="32">(For example, part-ofspeech tagging using the most probable preterminal for each word is 90% accurate [8].)</S><S sid="125" ssid="16">For example, the final version of our system achieves an average precision/recall of 90.1% on the test corpus but an average precision/recall of only 89.7% on the development corpus.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'141'", "'125'", "'174'"]
'141'
'125'
'174'
['141', '125', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'1'"]
'5'
'174'
'1'
['5', '174', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="115" ssid="6">As noted in [5], that system is based upon a &quot;tree-bank grammar&quot; - a grammar read directly off the training corpus.</S><S sid="129" ssid="20">It makes no use of special maximum-entropyinspired features (though their presence made it much easier to perform these experiments), it does not guess the pre-terminal before guessing the lexical head, and it uses a tree-bank grammar rather than a Markov grammar.</S><S sid="28" ssid="17">More generally, one can condition on the m previously generated labels, thereby obtaining an mth-order Markov grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["'115'", "'129'", "'28'"]
'115'
'129'
'28'
['115', '129', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'130'"]
'5'
'174'
'130'
['5', '174', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'130'"]
'5'
'174'
'130'
['5', '174', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="180" ssid="7">From our perspective, perhaps the two most important numbers to come out of this research are the overall error reduction of 13% over the results in [9] and the intermediateresult improvement of nearly 2% on labeled precision/recall due to the simple idea of guessing the head's pre-terminal before guessing the head.</S><S sid="184" ssid="11">The first is the slight, but important, improvement achieved by using this model over conventional deleted interpolation, as indicated in Figure 2.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'180'", "'184'", "'5'"]
'180'
'184'
'5'
['180', '184', '5']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2



A00-2018
W11-0610
0
method_citation
['method_citation', 'aim_citation', 'results_citation', 'implication_citation']



A00-2018
N06-1039
0
method_citation
['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
gold file E03-1005_swastika.csv
submit_file input/res/Task1/E03-1005.annv3.csv
parsing: input/ref/Task1/E03-1005_swastika.csv
<S sid="105" ssid="8">The derivation with the smallest sum, or highest rank, is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP, its results are still rather impressive for such a simple model.</S>
original cit marker offset is 0
new cit marker offset is 0



['105']
105
['105']
parsed_discourse_facet ['result_citation']
    <S sid="41" ssid="38">This paper presents the first published results with Goodman's PCFG-reductions of both Bonnema et al. 's (1999) and Bod's (2001) estimators on the WSJ.</S>
original cit marker offset is 0
new cit marker offset is 0



['41']
41
['41']
parsed_discourse_facet ['aim_citation']
<S sid="80" ssid="32">DOP1 has a serious bias: its subtree estimator provides more probability to nodes with more subtrees (Bonnema et al. 1999).</S>
original cit marker offset is 0
new cit marker offset is 0



['80']
80
['80']
parsed_discourse_facet ['result_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S>
original cit marker offset is 0
new cit marker offset is 0



['143']
143
['143']
parsed_discourse_facet ['method_citation']
<S sid="146" ssid="11">This paper also re-affirmed that the coarsegrained approach of using all subtrees from a treebank outperforms the fine-grained approach of specifically modeling lexical-syntactic depen dencies (as e.g. in Collins 1999 and Charniak 2000).</S>
original cit marker offset is 0
new cit marker offset is 0



['146']
146
['146']
parsed_discourse_facet ['method_citation']
    <S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>
original cit marker offset is 0
new cit marker offset is 0



['140']
140
['140']
parsed_discourse_facet ['result_citation']
<S sid="105" ssid="8">The derivation with the smallest sum, or highest rank, is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP, its results are still rather impressive for such a simple model.</S>
original cit marker offset is 0
new cit marker offset is 0



['105']
105
['105']
parsed_discourse_facet ['result_citation']
    <S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>
original cit marker offset is 0
new cit marker offset is 0



['140']
140
['140']
parsed_discourse_facet ['result_citation']
<S sid="100" ssid="3">In Bod (2000b), an alternative notion for the best parse tree was proposed based on a simplicity criterion: instead of producing the most probable tree, this model produced the tree generated by the shortest derivation with the fewest training subtrees.</S>
original cit marker offset is 0
new cit marker offset is 0



['100']
100
['100']
parsed_discourse_facet ['result_citation']
    <S sid="30" ssid="27">Bod (2000a) solved this problem by training the subtree probabilities by a maximum likelihood procedure based on Expectation-Maximization.</S>
original cit marker offset is 0
new cit marker offset is 0



['30']
30
['30']
parsed_discourse_facet ['method_citation']
    <S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>
original cit marker offset is 0
new cit marker offset is 0



['140']
140
['140']
parsed_discourse_facet ['result_citation']
    <S sid="30" ssid="27">Bod (2000a) solved this problem by training the subtree probabilities by a maximum likelihood procedure based on Expectation-Maximization.</S>
original cit marker offset is 0
new cit marker offset is 0



['30']
30
['30']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/E03-1005.annv3.csv
<S sid="104" ssid="7">Next, the rank of each (shortest) derivation is computed as the sum of the ranks of the subtrees involved.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'", "'143'", "'103'"]
'104'
'143'
'103'
['104', '143', '103']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="0" ssid="0">An Efficient Implementation of a New DOP Model</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'143'", "'0'"]
'145'
'143'
'0'
['145', '143', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="94" ssid="46">This paper presents the first published results with this estimator on the WSJ.</S><S sid="29" ssid="26">Johnson (1998b, 2002) showed that DOP1's subtree estimation method is statistically biased and inconsistent.</S><S sid="43" ssid="40">Bod (2001, 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'", "'29'", "'43'"]
'94'
'29'
'43'
['94', '29', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="21" ssid="18">One instantiation of DOP which has received considerable interest is the model known as DOP12 (Bod 1992).</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'145'", "'21'"]
'143'
'145'
'21'
['143', '145', '21']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="2" ssid="2">This paper proposes an integration of the two models which outperforms each of them separately.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="34" ssid="31">But even with cross-validation, ML-DOP is outperformed by the much simpler DOP1 model on both the ATIS and OVIS treebanks (Bod 2000b).</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'145'", "'34'"]
'2'
'145'
'34'
['2', '145', '34']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="2" ssid="2">This paper proposes an integration of the two models which outperforms each of them separately.</S><S sid="133" ssid="14">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'", "'2'", "'133'"]
'140'
'2'
'133'
['140', '2', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="43" ssid="40">Bod (2001, 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'143'", "'43'"]
'103'
'143'
'43'
['103', '143', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S><S sid="126" ssid="7">We focused on the Labeled Precision (LP) and Labeled Recall (LR) scores, as these are commonly used to rank parsing systems.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'103'", "'126'"]
'143'
'103'
'126'
['143', '103', '126']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="97" ssid="49">In this paper, we will estimate the most probable parse by computing the 10,000 most probable derivations by means of Viterbi n-best, from which the most likely parse is estimated by summing up the probabilities of the derivations that generate the same parse.</S><S sid="25" ssid="22">Many implementations of DOP1 therefore estimate the most probable parse by Monte Carlo techniques (Bod 1998; Chappelier & Rajman 2000), or by Viterbi n-best search (Bod 2001), or by restricting the set of subtrees (Sima'an 1999; Chappelier et al. 2002).</S><S sid="26" ssid="23">Sima'an (1995) gave an efficient algorithm for computing the parse tree generated by the most probable derivation, which in some cases is a reasonable approximation of the most probable parse.</S>
original cit marker offset is 0
new cit marker offset is 0



["'97'", "'25'", "'26'"]
'97'
'25'
'26'
['97', '25', '26']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="133" ssid="14">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S><S sid="41" ssid="38">This paper presents the first published results with Goodman's PCFG-reductions of both Bonnema et al. 's (1999) and Bod's (2001) estimators on the WSJ.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'", "'133'", "'41'"]
'140'
'133'
'41'
['140', '133', '41']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="47" ssid="44">We show that a combination of a probabilistic and a simplicity metric, which chooses the simplest parse from the n likeliest parses, outperforms the use of these metrics alone.</S><S sid="104" ssid="7">Next, the rank of each (shortest) derivation is computed as the sum of the ranks of the subtrees involved.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'47'", "'104'", "'145'"]
'47'
'104'
'145'
['47', '104', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="86" ssid="38">Bod reports state-of-the-art results with this method, and observes no decrease in parse accuracy when larger subtrees are included (using subtrees up to depth 14).</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'86'", "'143'"]
'145'
'86'
'143'
['145', '86', '143']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="3" ssid="3">Together with a PCFGreduction of DOP we obtain improved accuracy and efficiency on the Wall Street Journal treebank Our results show an 11% relative reduction in error rate over previous models, and an average processing time of 3.6 seconds per WSJ sentence.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'3'", "'145'"]
'143'
'3'
'145'
['143', '3', '145']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="142" ssid="7">Compared to the reranking technique in Collins (2000), who obtained an LP of 89.9% and an LR of 89.6%, our results show a 9% relative error rate reduction.</S><S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'142'", "'140'", "'145'"]
'142'
'140'
'145'
['142', '140', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="36" ssid="33">As an alternative, Bonnema et al. (1999) propose a subtree estimator which reduces the probability of a tree by a factor of two for each non-root non-terminal it contains.</S><S sid="22" ssid="19">DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).</S><S sid="50" ssid="2">The probability of a parse tree is computed from the occurrencefrequencies of the subtrees in the treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'22'", "'50'"]
'36'
'22'
'50'
['36', '22', '50']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2



E03-1005
P11-1086
0
method_citation
['method_citation', 'aim_citation', 'results_citation', 'implication_citation']



E03-1005
P04-1013
0
result_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



E03-1005
P05-1022
0
result_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



E03-1005
W04-0305
0
result_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
gold file P04-1036_vardha.csv
submit_file input/res/Task1/P04-1036.annv3.csv
parsing: input/ref/Task1/P04-1036_vardha.csv
    <S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
    <S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'"]
'15'
['15']
parsed_discourse_facet ['method_citation']
<S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'"]
'45'
['45']
parsed_discourse_facet ['method_citation']
<S sid="66" ssid="22">It uses the glosses of semantically related (according to WordNet) senses too. jcn (Jiang and Conrath, 1997) This score uses corpus data to populate classes (synsets) in the WordNet hierarchy with frequency counts.</S>
original cit marker offset is 0
new cit marker offset is 0



["'66'"]
'66'
['66']
parsed_discourse_facet ['method_citation']
 <S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'"]
'126'
['126']
parsed_discourse_facet ['method_citation']
<S sid="101" ssid="30">Thus, if we used the sense ranking as a heuristic for an &#8220;all nouns&#8221; task we would expect to get precision in the region of 60%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'101'"]
'101'
['101']
parsed_discourse_facet ['method_citation']
 <S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'"]
'126'
['126']
parsed_discourse_facet ['method_citation']
 <S sid="115" ssid="13">Our automatically acquired predominant sense performs nearly as well as the first sense provided by SemCor, which is very encouraging given that our method only uses raw text, with no manual labelling.</S>
original cit marker offset is 0
new cit marker offset is 0



["'115'"]
'115'
['115']
parsed_discourse_facet ['method_citation']
  <S sid="89" ssid="18">Since both measures gave comparable results we restricted our remaining experiments to jcn because this gave good results for finding the predominant sense, and is much more efficient than lesk, given the precompilation of the IC files.</S>
original cit marker offset is 0
new cit marker offset is 0



["'89'"]
'89'
['89']
parsed_discourse_facet ['method_citation']
 <S sid="137" ssid="14">Additionally, we evaluated our method quantitatively using the Subject Field Codes (SFC) resource (Magnini and Cavagli`a, 2000) which annotates WordNet synsets with domain labels.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'"]
'137'
['137']
parsed_discourse_facet ['method_citation']
75 ssid="4">We generated a thesaurus entry for all polysemous nouns which occurred in SemCor with a frequency 2, and in the BNC with a frequency 10 in the grammatical relations listed in section 2.1 above.</S>
original cit marker offset is 0
new cit marker offset is 0



["'75'"]
'75'
['75']
Error in Reference Offset
 <S sid="155" ssid="3">A major benefit of our work, rather than reliance on hand-tagged training data such as SemCor, is that this method permits us to produce predominant senses for the domain and text type required.</S>
original cit marker offset is 0
new cit marker offset is 0



["'155'"]
'155'
['155']
parsed_discourse_facet ['method_citation']
  <S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
 <S sid="155" ssid="3">A major benefit of our work, rather than reliance on hand-tagged training data such as SemCor, is that this method permits us to produce predominant senses for the domain and text type required.</S>
original cit marker offset is 0
new cit marker offset is 0



["'155'"]
'155'
['155']
parsed_discourse_facet ['method_citation']
<S sid="68" ssid="24">We are of course able to apply the method to other versions of WordNet. synset, is incremented with the frequency counts from the corpus of all words belonging to that synset, directly or via the hyponymy relation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'"]
'68'
['68']
parsed_discourse_facet ['method_citation']
    <S sid="13" ssid="6">The high performance of the first sense baseline is due to the skewed frequency distribution of word senses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'13'"]
'13'
['13']
parsed_discourse_facet ['method_citation']
  <S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P04-1036.annv3.csv
<S sid="107" ssid="5">To disambiguate senses a system should take context into account.</S><S sid="154" ssid="2">In contrast, our work is aimed at discovering the predominant senses from raw text because the first sense heuristic is such a useful one, and because handtagged data is not always available.</S><S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'107'", "'154'", "'8'"]
'107'
'154'
'8'
['107', '154', '8']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="154" ssid="2">In contrast, our work is aimed at discovering the predominant senses from raw text because the first sense heuristic is such a useful one, and because handtagged data is not always available.</S><S sid="162" ssid="10">It only requires raw text from the given domain and because of this it can easily be applied to a new domain, or sense inventory, given sufficient text.</S><S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'154'", "'162'", "'180'"]
'154'
'162'
'180'
['154', '162', '180']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="167" ssid="15">In this work the lists of neighbours are themselves clustered to bring out the various senses of the word.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'167'", "'169'"]
'179'
'167'
'169'
['179', '167', '169']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="171" ssid="19">In contrast, we use the neighbours lists and WordNet similarity measures to impose a prevalence ranking on the WordNet senses.</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'171'", "'0'"]
'179'
'171'
'0'
['179', '171', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'126'", "'15'"]
'0'
'126'
'15'
['0', '126', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'169'", "'180'"]
'179'
'169'
'180'
['179', '169', '180']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="186" ssid="9">In particular, we will use balanced and domain specific corpora to isolate words having very different neighbours, and therefore rankings, in the different corpora and to detect and target words for which there is a highly skewed sense distribution in these corpora.</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'", "'186'", "'0'"]
'126'
'186'
'0'
['126', '186', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="81" ssid="10">4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'81'", "'0'"]
'48'
'81'
'0'
['48', '81', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="66" ssid="22">It uses the glosses of semantically related (according to WordNet) senses too. jcn (Jiang and Conrath, 1997) This score uses corpus data to populate classes (synsets) in the WordNet hierarchy with frequency counts.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'66'", "'4'"]
'179'
'66'
'4'
['179', '66', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'27'", "'45'"]
'169'
'27'
'45'
['169', '27', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'179'", "'45'"]
'48'
'179'
'45'
['48', '179', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S><S sid="58" ssid="14">A noun, , is thus described by a set of co-occurrence triples and associated frequencies, where is a grammatical relation and is a possible cooccurrence with in that relation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'45'", "'58'"]
'179'
'45'
'58'
['179', '45', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'179'", "'27'"]
'8'
'179'
'27'
['8', '179', '27']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="153" ssid="1">Most research in WSD concentrates on using contextual features, typically neighbouring words, to help determine the correct sense of a target word.</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'153'", "'126'", "'4'"]
'153'
'126'
'4'
['153', '126', '4']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="81" ssid="10">4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'81'", "'126'"]
'48'
'81'
'126'
['48', '81', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'169'", "'4'"]
'8'
'169'
'4'
['8', '169', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'27'", "'4'"]
'8'
'27'
'4'
['8', '27', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']



P04-1036
S12-1097
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']



P04-1036
W12-2429
0
method_citation
['method_citation', 'hypothesis_citation', 'implication_citation']
gold file A00-2018_sweta.csv
submit_file input/res/Task1/A00-2018.annv3.csv
parsing: input/ref/Task1/A00-2018_sweta.csv
 <S sid="17" ssid="6">In Section 5 we present some results in which the possible expansions of a constituent are fixed in advanced by extracting a tree-bank grammar [3] from the training corpus.</S>
original cit marker offset is 0
new cit marker offset is 0



["17'"]
17'
['17']
parsed_discourse_facet ['method_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length &lt; 40, and 89.5% for sentences of length &lt; 100, when trained and tested on the previously established [5,9,10,15,17] &amp;quot;standard&amp;quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["5'"]
5'
['5']
parsed_discourse_facet ['method_citation']
 <S sid="17" ssid="6">In Section 5 we present some results in which the possible expansions of a constituent are fixed in advanced by extracting a tree-bank grammar [3] from the training corpus.</S>
original cit marker offset is 0
new cit marker offset is 0



["17'"]
17'
['17']
parsed_discourse_facet ['method_citation']
<S sid="120" ssid="11">Second, Char97 uses unsupervised learning in that the original system was run on about thirty million words of unparsed text, the output was taken as &amp;quot;correct&amp;quot;, and statistics were collected on the resulting parses.</S>
original cit marker offset is 0
new cit marker offset is 0



["120'"]
120'
['120']
parsed_discourse_facet ['method_citation']
<S sid="119" ssid="10">(It is &amp;quot;soft&amp;quot; clustering in that a word can belong to more than one cluster with different weights - the weights express the probability of producing the word given that one is going to produce a word from that cluster.)</S>
original cit marker offset is 0
new cit marker offset is 0



["119'"]
119'
['119']
parsed_discourse_facet ['method_citation']
<S sid="95" ssid="6">We guess the preterminals of words that are not observed in the training data using statistics on capitalization, hyphenation, word endings (the last two letters), and the probability that a given pre-terminal is realized using a previously unobserved word.</S>
original cit marker offset is 0
new cit marker offset is 0



["95'"]
95'
['95']
parsed_discourse_facet ['method_citation']
 <S sid="175" ssid="2">This corresponds to an error reduction of 13% over the best previously published single parser results on this test set, those of Collins [9].</S>
original cit marker offset is 0
new cit marker offset is 0



["175'"]
175'
['175']
parsed_discourse_facet ['method_citation']
<S sid="92" ssid="3">For runs with the generative model based upon Markov grammar statistics, the first pass uses the same statistics, but conditioned only on standard PCFG information.</S>
original cit marker offset is 0
new cit marker offset is 0



["92'"]
92'
['92']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &amp;quot;standard&amp;quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["1'"]
1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="126" ssid="17">This is indicated in Figure 2, where the model labeled &amp;quot;Best&amp;quot; has precision of 89.8% and recall of 89.6% for an average of 89.7%, 0.4% lower than the results on the official test corpus.</S>
original cit marker offset is 0
new cit marker offset is 0



["126'"]
126'
['126']
parsed_discourse_facet ['method_citation']
<S sid="12" ssid="1">The model assigns a probability to a parse by a top-down process of considering each constituent c in Ir and for each c first guessing the pre-terminal of c, t(c) (t for &amp;quot;tag&amp;quot;), then the lexical head of c, h(c), and then the expansion of c into further constituents e(c).</S>
original cit marker offset is 0
new cit marker offset is 0



["12'"]
12'
['12']
parsed_discourse_facet ['method_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length &lt; 40 and 89.5% on sentences of length &lt; 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["174'"]
174'
['174']
parsed_discourse_facet ['method_citation']
<S sid="63" ssid="32">As we discuss in more detail in Section 5, several different features in the context surrounding c are useful to include in H: the label, head pre-terminal and head of the parent of c (denoted as lp, tp, hp), the label of c's left sibling (lb for &amp;quot;before&amp;quot;), and the label of the grandparent of c (la).</S>
original cit marker offset is 0
new cit marker offset is 0



["63'"]
63'
['63']
parsed_discourse_facet ['method_citation']
<S sid="78" ssid="47">With some prior knowledge, non-zero values can greatly speed up this process because fewer iterations are required for convergence.</S>
original cit marker offset is 0
new cit marker offset is 0



["78'"]
78'
['78']
parsed_discourse_facet ['method_citation']
 <S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["91'"]
91'
['91']
parsed_discourse_facet ['method_citation']
<S sid="180" ssid="7">From our perspective, perhaps the two most important numbers to come out of this research are the overall error reduction of 13% over the results in [9] and the intermediateresult improvement of nearly 2% on labeled precision/recall due to the simple idea of guessing the head's pre-terminal before guessing the head.</S>
original cit marker offset is 0
new cit marker offset is 0



["180'"]
180'
['180']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/A00-2018.annv3.csv
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'5'", "'174'"]
'130'
'5'
'174'
['130', '5', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'130'", "'5'"]
'174'
'130'
'5'
['174', '130', '5']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'91'", "'174'"]
'130'
'91'
'174'
['130', '91', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'1'", "'174'"]
'130'
'1'
'174'
['130', '1', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="7" ssid="3">Following [5,10], our parser is based upon a probabilistic generative model.</S><S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'7'", "'91'"]
'5'
'7'
'91'
['5', '7', '91']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'5'", "'1'"]
'174'
'5'
'1'
['174', '5', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="7" ssid="3">Following [5,10], our parser is based upon a probabilistic generative model.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'7'", "'130'"]
'5'
'7'
'130'
['5', '7', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'5'", "'1'"]
'174'
'5'
'1'
['174', '5', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="114" ssid="5">That parser, as stated in Figure 1, achieves an average precision/recall of 87.5.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'174'", "'114'"]
'130'
'174'
'114'
['130', '174', '114']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="141" ssid="32">(For example, part-ofspeech tagging using the most probable preterminal for each word is 90% accurate [8].)</S><S sid="125" ssid="16">For example, the final version of our system achieves an average precision/recall of 90.1% on the test corpus but an average precision/recall of only 89.7% on the development corpus.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'141'", "'125'", "'174'"]
'141'
'125'
'174'
['141', '125', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'1'"]
'5'
'174'
'1'
['5', '174', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="115" ssid="6">As noted in [5], that system is based upon a &quot;tree-bank grammar&quot; - a grammar read directly off the training corpus.</S><S sid="129" ssid="20">It makes no use of special maximum-entropyinspired features (though their presence made it much easier to perform these experiments), it does not guess the pre-terminal before guessing the lexical head, and it uses a tree-bank grammar rather than a Markov grammar.</S><S sid="28" ssid="17">More generally, one can condition on the m previously generated labels, thereby obtaining an mth-order Markov grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["'115'", "'129'", "'28'"]
'115'
'129'
'28'
['115', '129', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'130'"]
'5'
'174'
'130'
['5', '174', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'130'"]
'5'
'174'
'130'
['5', '174', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="180" ssid="7">From our perspective, perhaps the two most important numbers to come out of this research are the overall error reduction of 13% over the results in [9] and the intermediateresult improvement of nearly 2% on labeled precision/recall due to the simple idea of guessing the head's pre-terminal before guessing the head.</S><S sid="184" ssid="11">The first is the slight, but important, improvement achieved by using this model over conventional deleted interpolation, as indicated in Figure 2.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'180'", "'184'", "'5'"]
'180'
'184'
'5'
['180', '184', '5']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



A00-2018
W11-0610
0
method_citation
['method_citation', 'aim_citation', 'results_citation', 'implication_citation']



A00-2018
P04-1042
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
gold file E03-1005_sweta.csv
submit_file input/res/Task1/E03-1005.annv3.csv
parsing: input/ref/Task1/E03-1005_sweta.csv
<S sid="20" ssid="17">Thus the major innovations of DOP are: 2. the use of arbitrarily large fragments rather than restricted ones Both have gained or are gaining wide usage, and are also becoming relevant for theoretical linguistics (see Bod et al. 2003a).</S>
original cit marker offset is 0
new cit marker offset is 0



["20'"]
20'
['20']
parsed_discourse_facet ['method_citation']
 <S sid="74" ssid="26">Goodman's main theorem is that this construction produces PCFG derivations isomorphic to DOP derivations with equal probability.</S>
original cit marker offset is 0
new cit marker offset is 0



["74'"]
74'
['74']
parsed_discourse_facet ['method_citation']
<S sid="44" ssid="41">But while Bod's estimator obtains state-of-the-art results on the WSJ, comparable to Charniak (2000) and Collins (2000), Bonnema et al. 's estimator performs worse and is comparable to Collins (1996).</S>
original cit marker offset is 0
new cit marker offset is 0



["44'"]
44'
['44']
parsed_discourse_facet ['method_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["143'"]
143'
['143']
parsed_discourse_facet ['method_citation']
<S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["145'"]
145'
['145']
parsed_discourse_facet ['method_citation']
<S sid="134" ssid="15">This may be explained by the fact our best results in Bod (2001) were obtained by testing various subtree restrictions until the highest accuracy was obtained, while in the current experiment we used all subtrees as given by the PCFG-reduction.</S>
original cit marker offset is 0
new cit marker offset is 0



["134'"]
134'
['134']
parsed_discourse_facet ['method_citation']
<S sid="22" ssid="19">DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).</S>
original cit marker offset is 0
new cit marker offset is 0



["22'"]
22'
['22']
parsed_discourse_facet ['method_citation']
<S sid="133" ssid="14">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S>
original cit marker offset is 0
new cit marker offset is 0



["133'"]
133'
['133']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="22">Many implementations of DOP1 therefore estimate the most probable parse by Monte Carlo techniques (Bod 1998; Chappelier &amp; Rajman 2000), or by Viterbi n-best search (Bod 2001), or by restricting the set of subtrees (Sima'an 1999; Chappelier et al. 2002).</S>
original cit marker offset is 0
new cit marker offset is 0



["25'"]
25'
['25']
parsed_discourse_facet ['method_citation']
<S sid="38" ssid="35">Although Bod's method obtains very competitive results on the Wall Street Journal (WSJ) task, the parsing time was reported to be over 200 seconds per sentence (Bod 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["38'"]
38'
['38']
parsed_discourse_facet ['method_citation']
 <S sid="100" ssid="3">In Bod (2000b), an alternative notion for the best parse tree was proposed based on a simplicity criterion: instead of producing the most probable tree, this model produced the tree generated by the shortest derivation with the fewest training subtrees.</S>
original cit marker offset is 0
new cit marker offset is 0



["100'"]
100'
['100']
parsed_discourse_facet ['method_citation']
<S sid="32" ssid="29">However, ML-DOP suffers from overlearning if the subtrees are trained on the same treebank trees as they are derived from.</S>
original cit marker offset is 0
new cit marker offset is 0



["32'"]
32'
['32']
parsed_discourse_facet ['method_citation']
 <S sid="130" ssid="11">While the PCFG reduction of Bod (2001) obtains state-of-the-art results on the WSJ, comparable to Charniak (2000), Bonnema et al. 's estimator performs worse and is comparable to Collins (1996).</S>
original cit marker offset is 0
new cit marker offset is 0



["130'"]
130'
['130']
parsed_discourse_facet ['method_citation']
 <S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>
original cit marker offset is 0
new cit marker offset is 0



["140'"]
140'
['140']
parsed_discourse_facet ['method_citation']
<S sid="27" ssid="24">Goodman (1996, 1998) developed a polynomial time PCFG-reduction of DOP1 whose size is linear in the size of the training set, thus converting the exponential number of subtrees to a compact grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["27'"]
27'
['27']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/E03-1005.annv3.csv
<S sid="104" ssid="7">Next, the rank of each (shortest) derivation is computed as the sum of the ranks of the subtrees involved.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'", "'143'", "'103'"]
'104'
'143'
'103'
['104', '143', '103']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="0" ssid="0">An Efficient Implementation of a New DOP Model</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'143'", "'0'"]
'145'
'143'
'0'
['145', '143', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="94" ssid="46">This paper presents the first published results with this estimator on the WSJ.</S><S sid="29" ssid="26">Johnson (1998b, 2002) showed that DOP1's subtree estimation method is statistically biased and inconsistent.</S><S sid="43" ssid="40">Bod (2001, 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'", "'29'", "'43'"]
'94'
'29'
'43'
['94', '29', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="21" ssid="18">One instantiation of DOP which has received considerable interest is the model known as DOP12 (Bod 1992).</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'145'", "'21'"]
'143'
'145'
'21'
['143', '145', '21']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="2" ssid="2">This paper proposes an integration of the two models which outperforms each of them separately.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="34" ssid="31">But even with cross-validation, ML-DOP is outperformed by the much simpler DOP1 model on both the ATIS and OVIS treebanks (Bod 2000b).</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'145'", "'34'"]
'2'
'145'
'34'
['2', '145', '34']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="2" ssid="2">This paper proposes an integration of the two models which outperforms each of them separately.</S><S sid="133" ssid="14">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'", "'2'", "'133'"]
'140'
'2'
'133'
['140', '2', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="43" ssid="40">Bod (2001, 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'143'", "'43'"]
'103'
'143'
'43'
['103', '143', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S><S sid="126" ssid="7">We focused on the Labeled Precision (LP) and Labeled Recall (LR) scores, as these are commonly used to rank parsing systems.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'103'", "'126'"]
'143'
'103'
'126'
['143', '103', '126']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="97" ssid="49">In this paper, we will estimate the most probable parse by computing the 10,000 most probable derivations by means of Viterbi n-best, from which the most likely parse is estimated by summing up the probabilities of the derivations that generate the same parse.</S><S sid="25" ssid="22">Many implementations of DOP1 therefore estimate the most probable parse by Monte Carlo techniques (Bod 1998; Chappelier & Rajman 2000), or by Viterbi n-best search (Bod 2001), or by restricting the set of subtrees (Sima'an 1999; Chappelier et al. 2002).</S><S sid="26" ssid="23">Sima'an (1995) gave an efficient algorithm for computing the parse tree generated by the most probable derivation, which in some cases is a reasonable approximation of the most probable parse.</S>
original cit marker offset is 0
new cit marker offset is 0



["'97'", "'25'", "'26'"]
'97'
'25'
'26'
['97', '25', '26']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="133" ssid="14">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S><S sid="41" ssid="38">This paper presents the first published results with Goodman's PCFG-reductions of both Bonnema et al. 's (1999) and Bod's (2001) estimators on the WSJ.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'", "'133'", "'41'"]
'140'
'133'
'41'
['140', '133', '41']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="47" ssid="44">We show that a combination of a probabilistic and a simplicity metric, which chooses the simplest parse from the n likeliest parses, outperforms the use of these metrics alone.</S><S sid="104" ssid="7">Next, the rank of each (shortest) derivation is computed as the sum of the ranks of the subtrees involved.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'47'", "'104'", "'145'"]
'47'
'104'
'145'
['47', '104', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="86" ssid="38">Bod reports state-of-the-art results with this method, and observes no decrease in parse accuracy when larger subtrees are included (using subtrees up to depth 14).</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'86'", "'143'"]
'145'
'86'
'143'
['145', '86', '143']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="3" ssid="3">Together with a PCFGreduction of DOP we obtain improved accuracy and efficiency on the Wall Street Journal treebank Our results show an 11% relative reduction in error rate over previous models, and an average processing time of 3.6 seconds per WSJ sentence.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'3'", "'145'"]
'143'
'3'
'145'
['143', '3', '145']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="142" ssid="7">Compared to the reranking technique in Collins (2000), who obtained an LP of 89.9% and an LR of 89.6%, our results show a 9% relative error rate reduction.</S><S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'142'", "'140'", "'145'"]
'142'
'140'
'145'
['142', '140', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="36" ssid="33">As an alternative, Bonnema et al. (1999) propose a subtree estimator which reduces the probability of a tree by a factor of two for each non-root non-terminal it contains.</S><S sid="22" ssid="19">DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).</S><S sid="50" ssid="2">The probability of a parse tree is computed from the occurrencefrequencies of the subtrees in the treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'22'", "'50'"]
'36'
'22'
'50'
['36', '22', '50']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



E03-1005
P11-1086
0
method_citation
['method_citation', 'aim_citation', 'results_citation', 'implication_citation']



E03-1005
W06-2905
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



E03-1005
W04-0305
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
gold file A00-2018_vardha.csv
submit_file input/res/Task1/A00-2018.annv3.csv
parsing: input/ref/Task1/A00-2018_vardha.csv
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length &lt; 40, and 89.5% for sentences of length &lt; 100, when trained and tested on the previously established [5,9,10,15,17] &amp;quot;standard&amp;quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'"]
'5'
['5']
parsed_discourse_facet ['method_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length &lt; 40, and 89.5% for sentences of length &lt; 100, when trained and tested on the previously established [5,9,10,15,17] &amp;quot;standard&amp;quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'"]
'5'
['5']
parsed_discourse_facet ['method_citation']
<S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'91'"]
'91'
['91']
parsed_discourse_facet ['method_citation']
<S sid="39" ssid="8">In our work we assume that any feature can occur at most once, so features are boolean-valued: 0 if the pattern does not occur, 1 if it does.</S>
original cit marker offset is 0
new cit marker offset is 0



["'39'"]
'39'
['39']
parsed_discourse_facet ['method_citation']
<S sid="162" ssid="53">Given we are already at the 88% level of accuracy, we judge a 0.6% improvement to be very much worth while.</S>
original cit marker offset is 0
new cit marker offset is 0



["'162'"]
'162'
['162']
parsed_discourse_facet ['method_citation']
 <S sid="87" ssid="56">In a pure maximum-entropy model this is done by feature selection, as in Ratnaparkhi's maximum-entropy parser [17].</S>
original cit marker offset is 0
new cit marker offset is 0



["'87'"]
'87'
['87']
parsed_discourse_facet ['method_citation']
<S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'91'"]
'91'
['91']
parsed_discourse_facet ['method_citation']
 <S sid="176" ssid="3">That the previous three best parsers on this test [5,9,17] all perform within a percentage point of each other, despite quite different basic mechanisms, led some researchers to wonder if there might be some maximum level of parsing performance that could be obtained using the treebank for training, and to conjecture that perhaps we were at it.</S>
original cit marker offset is 0
new cit marker offset is 0



["'176'"]
'176'
['176']
parsed_discourse_facet ['method_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length &lt; 40 and 89.5% on sentences of length &lt; 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'"]
'174'
['174']
parsed_discourse_facet ['method_citation']
 <S sid="101" ssid="12">In keeping with the standard methodology [5, 9,10,15,17], we used the Penn Wall Street Journal tree-bank [16] with sections 2-21 for training, section 23 for testing, and section 24 for development (debugging and tuning).</S>
original cit marker offset is 0
new cit marker offset is 0



["'101'"]
'101'
['101']
parsed_discourse_facet ['method_citation']
<S sid="155" ssid="46">For example, in the Penn Treebank a vp with both main and auxiliary verbs has the structure shown in Figure 3.</S>
original cit marker offset is 0
new cit marker offset is 0



["'155'"]
'155'
['155']
parsed_discourse_facet ['method_citation']
  <S sid="17" ssid="6">In Section 5 we present some results in which the possible expansions of a constituent are fixed in advanced by extracting a tree-bank grammar [3] from the training corpus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'17'"]
'17'
['17']
parsed_discourse_facet ['method_citation']
<S sid="162" ssid="53">Given we are already at the 88% level of accuracy, we judge a 0.6% improvement to be very much worth while.</S>
original cit marker offset is 0
new cit marker offset is 0



["'162'"]
'162'
['162']
parsed_discourse_facet ['method_citation']
 <S sid="40" ssid="9">In the parser we further assume that features are chosen from certain feature schemata and that every feature is a boolean conjunction of sub-features.</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'"]
'40'
['40']
parsed_discourse_facet ['method_citation']
 <S sid="79" ssid="48">We comment on this because in our example we can substantially speed up the process by choosing values picked so that, when the maximum-entropy equation is expressed in the form of Equation 4, the gi have as their initial values the values of the corresponding terms in Equation 7.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'"]
'79'
['79']
parsed_discourse_facet ['method_citation']
    <S sid="40" ssid="9">In the parser we further assume that features are chosen from certain feature schemata and that every feature is a boolean conjunction of sub-features.</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'"]
'40'
['40']
parsed_discourse_facet ['method_citation']
    <S sid="175" ssid="2">This corresponds to an error reduction of 13% over the best previously published single parser results on this test set, those of Collins [9].</S>
original cit marker offset is 0
new cit marker offset is 0



["'175'"]
'175'
['175']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/A00-2018.annv3.csv
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'5'", "'174'"]
'130'
'5'
'174'
['130', '5', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'130'", "'5'"]
'174'
'130'
'5'
['174', '130', '5']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'91'", "'174'"]
'130'
'91'
'174'
['130', '91', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'1'", "'174'"]
'130'
'1'
'174'
['130', '1', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="7" ssid="3">Following [5,10], our parser is based upon a probabilistic generative model.</S><S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'7'", "'91'"]
'5'
'7'
'91'
['5', '7', '91']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'5'", "'1'"]
'174'
'5'
'1'
['174', '5', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="7" ssid="3">Following [5,10], our parser is based upon a probabilistic generative model.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'7'", "'130'"]
'5'
'7'
'130'
['5', '7', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'5'", "'1'"]
'174'
'5'
'1'
['174', '5', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="114" ssid="5">That parser, as stated in Figure 1, achieves an average precision/recall of 87.5.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'174'", "'114'"]
'130'
'174'
'114'
['130', '174', '114']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="141" ssid="32">(For example, part-ofspeech tagging using the most probable preterminal for each word is 90% accurate [8].)</S><S sid="125" ssid="16">For example, the final version of our system achieves an average precision/recall of 90.1% on the test corpus but an average precision/recall of only 89.7% on the development corpus.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'141'", "'125'", "'174'"]
'141'
'125'
'174'
['141', '125', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'1'"]
'5'
'174'
'1'
['5', '174', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="115" ssid="6">As noted in [5], that system is based upon a &quot;tree-bank grammar&quot; - a grammar read directly off the training corpus.</S><S sid="129" ssid="20">It makes no use of special maximum-entropyinspired features (though their presence made it much easier to perform these experiments), it does not guess the pre-terminal before guessing the lexical head, and it uses a tree-bank grammar rather than a Markov grammar.</S><S sid="28" ssid="17">More generally, one can condition on the m previously generated labels, thereby obtaining an mth-order Markov grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["'115'", "'129'", "'28'"]
'115'
'129'
'28'
['115', '129', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'130'"]
'5'
'174'
'130'
['5', '174', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'130'"]
'5'
'174'
'130'
['5', '174', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="180" ssid="7">From our perspective, perhaps the two most important numbers to come out of this research are the overall error reduction of 13% over the results in [9] and the intermediateresult improvement of nearly 2% on labeled precision/recall due to the simple idea of guessing the head's pre-terminal before guessing the head.</S><S sid="184" ssid="11">The first is the slight, but important, improvement achieved by using this model over conventional deleted interpolation, as indicated in Figure 2.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'180'", "'184'", "'5'"]
'180'
'184'
'5'
['180', '184', '5']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
IGNORE THIS: key error 2
IGNORE THIS: key error 2
IGNORE THIS: key error 2



A00-2018
N10-1002
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']



A00-2018
W11-0610
0
method_citation
['method_citation', 'aim_citation', 'results_citation', 'implication_citation']



A00-2018
W06-3119
0
method_citation
['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5
IGNORE THIS: Key error 5





input/ref/Task1/P04-1036_aakansha.csv
input/res/Task1/P04-1036.annv3.csv
parsing: input/ref/Task1/P04-1036_aakansha.csv
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
<S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'"]
'15'
['15']
parsed_discourse_facet ['method_citation']
<S sid="41" ssid="34">In this paper we describe and evaluate a method for ranking senses of nouns to obtain the predominant sense of a word using the neighbours from automatically acquired thesauruses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'41'"]
'41'
['41']
parsed_discourse_facet ['method_citation']
<S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'"]
'4'
['4']
parsed_discourse_facet ['method_citation']
<S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'"]
'15'
['15']
parsed_discourse_facet ['method_citation']
<S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
    <S sid="181" ssid="4">This is just 5% lower than results using the first sense in the manually labelled SemCor, and we obtain 67% precision on polysemous nouns that are not in SemCor.</S>
original cit marker offset is 0
new cit marker offset is 0



["'180'", "'181'"]
'180'
'181'
['180', '181']
parsed_discourse_facet ['result_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'"]
'126'
['126']
parsed_discourse_facet ['method_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'"]
'48'
['48']
parsed_discourse_facet ['method_citation']
<S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'"]
'169'
['169']
parsed_discourse_facet ['result_citation']
<S sid="171" ssid="19">In contrast, we use the neighbours lists and WordNet similarity measures to impose a prevalence ranking on the WordNet senses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'171'"]
'171'
['171']
parsed_discourse_facet ['method_citation']
<S sid="171" ssid="19">In contrast, we use the neighbours lists and WordNet similarity measures to impose a prevalence ranking on the WordNet senses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'171'"]
'171'
['171']
parsed_discourse_facet ['method_citation']
<S sid="115" ssid="13">Our automatically acquired predominant sense performs nearly as well as the first sense provided by SemCor, which is very encouraging given that our method only uses raw text, with no manual labelling.</S>
original cit marker offset is 0
new cit marker offset is 0



["'115'"]
'115'
['115']
parsed_discourse_facet ['method_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'"]
'126'
['126']
parsed_discourse_facet ['method_citation']
<S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
    <S sid="181" ssid="4">This is just 5% lower than results using the first sense in the manually labelled SemCor, and we obtain 67% precision on polysemous nouns that are not in SemCor.</S>
original cit marker offset is 0
new cit marker offset is 0



["'180'", "'181'"]
'180'
'181'
['180', '181']
parsed_discourse_facet ['result_citation']
<S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'180'"]
'180'
['180']
parsed_discourse_facet ['method_citation']
<S sid="41" ssid="34">In this paper we describe and evaluate a method for ranking senses of nouns to obtain the predominant sense of a word using the neighbours from automatically acquired thesauruses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'41'"]
'41'
['41']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P04-1036.annv3.csv
<S sid="107" ssid="5">To disambiguate senses a system should take context into account.</S><S sid="154" ssid="2">In contrast, our work is aimed at discovering the predominant senses from raw text because the first sense heuristic is such a useful one, and because handtagged data is not always available.</S><S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'107'", "'154'", "'8'"]
'107'
'154'
'8'
['107', '154', '8']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="154" ssid="2">In contrast, our work is aimed at discovering the predominant senses from raw text because the first sense heuristic is such a useful one, and because handtagged data is not always available.</S><S sid="162" ssid="10">It only requires raw text from the given domain and because of this it can easily be applied to a new domain, or sense inventory, given sufficient text.</S><S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'154'", "'162'", "'180'"]
'154'
'162'
'180'
['154', '162', '180']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="167" ssid="15">In this work the lists of neighbours are themselves clustered to bring out the various senses of the word.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'167'", "'169'"]
'179'
'167'
'169'
['179', '167', '169']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="171" ssid="19">In contrast, we use the neighbours lists and WordNet similarity measures to impose a prevalence ranking on the WordNet senses.</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'171'", "'0'"]
'179'
'171'
'0'
['179', '171', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'126'", "'15'"]
'0'
'126'
'15'
['0', '126', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'169'", "'180'"]
'179'
'169'
'180'
['179', '169', '180']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="186" ssid="9">In particular, we will use balanced and domain specific corpora to isolate words having very different neighbours, and therefore rankings, in the different corpora and to detect and target words for which there is a highly skewed sense distribution in these corpora.</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'", "'186'", "'0'"]
'126'
'186'
'0'
['126', '186', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="81" ssid="10">4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'81'", "'0'"]
'48'
'81'
'0'
['48', '81', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="66" ssid="22">It uses the glosses of semantically related (according to WordNet) senses too. jcn (Jiang and Conrath, 1997) This score uses corpus data to populate classes (synsets) in the WordNet hierarchy with frequency counts.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'66'", "'4'"]
'179'
'66'
'4'
['179', '66', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'27'", "'45'"]
'169'
'27'
'45'
['169', '27', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'179'", "'45'"]
'48'
'179'
'45'
['48', '179', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S><S sid="58" ssid="14">A noun, , is thus described by a set of co-occurrence triples and associated frequencies, where is a grammatical relation and is a possible cooccurrence with in that relation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'45'", "'58'"]
'179'
'45'
'58'
['179', '45', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'179'", "'27'"]
'8'
'179'
'27'
['8', '179', '27']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="153" ssid="1">Most research in WSD concentrates on using contextual features, typically neighbouring words, to help determine the correct sense of a target word.</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'153'", "'126'", "'4'"]
'153'
'126'
'4'
['153', '126', '4']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="81" ssid="10">4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'81'", "'126'"]
'48'
'81'
'126'
['48', '81', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'169'", "'4'"]
'8'
'169'
'4'
['8', '169', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'27'", "'4'"]
'8'
'27'
'4'
['8', '27', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['In this paper we describe and evaluate a method for ranking senses of nouns to obtain the predominant sense of a word using the neighbours from automatically acquired thesauruses.'])
dict_values(['We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'In this work the lists of neighbours are themselves clustered to bring out the various senses of the word.', 'This method obtains precision of 61% and recall 51%.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02339', '(95%-conf.int.', '0.02339', '-', '0.02339)']
['system', 'ROUGE-S*', 'Average_P:', '0.03810', '(95%-conf.int.', '0.03810', '-', '0.03810)']
['system', 'ROUGE-S*', 'Average_F:', '0.02899', '(95%-conf.int.', '0.02899', '-', '0.02899)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:171', 'P:105', 'F:4']
dict_values(['The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.', 'This is just 5% lower than results using the first sense in the manually labelled SemCor, and we obtain 67% precision on polysemous nouns that are not in SemCor.'])
dict_values(['We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'This method obtains precision of 61% and recall 51%.', 'The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.'])
['system', 'ROUGE-S*', 'Average_R:', '0.41734', '(95%-conf.int.', '0.41734', '-', '0.41734)']
['system', 'ROUGE-S*', 'Average_P:', '0.36898', '(95%-conf.int.', '0.36898', '-', '0.36898)']
['system', 'ROUGE-S*', 'Average_F:', '0.39167', '(95%-conf.int.', '0.39167', '-', '0.39167)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:561', 'F:207']
dict_values(['To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.'])
dict_values(['To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.', '4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).', 'Finding Predominant Word Senses in Untagged Text'])
['system', 'ROUGE-S*', 'Average_R:', '0.14550', '(95%-conf.int.', '0.14550', '-', '0.14550)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.25404', '(95%-conf.int.', '0.25404', '-', '0.25404)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:55', 'F:55']
dict_values(['This method obtains precision of 61% and recall 51%.'])
dict_values(['We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'It uses the glosses of semantically related (according to WordNet) senses too. jcn (Jiang and Conrath, 1997) This score uses corpus data to populate classes (synsets) in the WordNet hierarchy with frequency counts.', 'We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:780', 'P:15', 'F:0']
dict_values(['Our automatically acquired predominant sense performs nearly as well as the first sense provided by SemCor, which is very encouraging given that our method only uses raw text, with no manual labelling.'])
dict_values(['We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).', 'A noun, , is thus described by a set of co-occurrence triples and associated frequencies, where is a grammatical relation and is a possible cooccurrence with in that relation.'])
['system', 'ROUGE-S*', 'Average_R:', '0.03218', '(95%-conf.int.', '0.03218', '-', '0.03218)']
['system', 'ROUGE-S*', 'Average_P:', '0.13333', '(95%-conf.int.', '0.13333', '-', '0.13333)']
['system', 'ROUGE-S*', 'Average_F:', '0.05185', '(95%-conf.int.', '0.05185', '-', '0.05185)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:105', 'F:14']
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.'])
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.', 'We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'We use WordNet as our sense inventory for this work.'])
['system', 'ROUGE-S*', 'Average_R:', '0.28571', '(95%-conf.int.', '0.28571', '-', '0.28571)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.44444', '(95%-conf.int.', '0.44444', '-', '0.44444)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:231', 'P:66', 'F:66']
dict_values(['We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.'])
dict_values(['Most research in WSD concentrates on using contextual features, typically neighbouring words, to help determine the correct sense of a target word.', 'We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.', 'We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.04444', '(95%-conf.int.', '0.04444', '-', '0.04444)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.08511', '(95%-conf.int.', '0.08511', '-', '0.08511)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:28', 'F:28']
dict_values(['The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.', 'This is just 5% lower than results using the first sense in the manually labelled SemCor, and we obtain 67% precision on polysemous nouns that are not in SemCor.'])
dict_values(['To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.', '4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).', 'We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.'])
['system', 'ROUGE-S*', 'Average_R:', '0.04828', '(95%-conf.int.', '0.04828', '-', '0.04828)']
['system', 'ROUGE-S*', 'Average_P:', '0.03743', '(95%-conf.int.', '0.03743', '-', '0.03743)']
['system', 'ROUGE-S*', 'Average_F:', '0.04217', '(95%-conf.int.', '0.04217', '-', '0.04217)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:561', 'F:21']
dict_values(['The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.'])
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.', 'This method obtains precision of 61% and recall 51%.', 'We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02083', '(95%-conf.int.', '0.02083', '-', '0.02083)']
['system', 'ROUGE-S*', 'Average_P:', '0.05789', '(95%-conf.int.', '0.05789', '-', '0.05789)']
['system', 'ROUGE-S*', 'Average_F:', '0.03064', '(95%-conf.int.', '0.03064', '-', '0.03064)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:190', 'F:11']
dict_values(['In this paper we describe and evaluate a method for ranking senses of nouns to obtain the predominant sense of a word using the neighbours from automatically acquired thesauruses.'])
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.', 'We use WordNet as our sense inventory for this work.', 'We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02366', '(95%-conf.int.', '0.02366', '-', '0.02366)']
['system', 'ROUGE-S*', 'Average_P:', '0.10476', '(95%-conf.int.', '0.10476', '-', '0.10476)']
['system', 'ROUGE-S*', 'Average_F:', '0.03860', '(95%-conf.int.', '0.03860', '-', '0.03860)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:465', 'P:105', 'F:11']
0.3740489962595101 0.10413299895867002 0.13675099863249002





input/ref/Task1/A00-2030_vardha.csv
input/res/Task1/A00-2030.annv3.csv
parsing: input/ref/Task1/A00-2030_vardha.csv
 <S sid="11" ssid="1">We evaluated the new approach to information extraction on two of the tasks of the Seventh Message Understanding Conference (MUC-7) and reported in (Marsh, 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'"]
'11'
['11']
parsed_discourse_facet ['method_citation']
<S sid="52" ssid="1">In this section, we describe the algorithm that was used to automatically produce augmented trees, starting with a) human-generated semantic annotations and b) machinegenerated syntactic parse trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'"]
'52'
['52']
parsed_discourse_facet ['method_citation']
<S sid="50" ssid="10">Figure 4 shows an example of the semantic annotation, which was the only type of manual annotation we performed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'50'"]
'50'
['50']
parsed_discourse_facet ['method_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'"]
'34'
['34']
parsed_discourse_facet ['method_citation']
 <S sid="106" ssid="3">We were able to use the Penn TREEBANK to estimate the syntactic parameters; no additional syntactic training was required.</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'"]
'106'
['106']
parsed_discourse_facet ['method_citation']
 <S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'6'"]
'6'
['6']
parsed_discourse_facet ['method_citation']
 <S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'6'"]
'6'
['6']
parsed_discourse_facet ['method_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'"]
'34'
['34']
parsed_discourse_facet ['method_citation']
<S sid="12" ssid="2">The Template Element (TE) task identifies organizations, persons, locations, and some artifacts (rocket and airplane-related artifacts).</S>
original cit marker offset is 0
new cit marker offset is 0



["'12'"]
'12'
['12']
parsed_discourse_facet ['method_citation']
 <S sid="3" ssid="1">Since 1995, a few statistical parsing algorithms (Magerman, 1995; Collins, 1996 and 1997; Charniak, 1997; Rathnaparki, 1997) demonstrated a breakthrough in parsing accuracy, as measured against the University of Pennsylvania TREEBANK as a gold standard.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'"]
'3'
['3']
parsed_discourse_facet ['method_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'"]
'34'
['34']
parsed_discourse_facet ['method_citation']
<S sid="32" ssid="15">Because generative statistical models had already proven successful for each of the first three stages, we were optimistic that some of their properties &#8212; especially their ability to learn from large amounts of data, and their robustness when presented with unexpected inputs &#8212; would also benefit semantic analysis.</S>
original cit marker offset is 0
new cit marker offset is 0



["'32'"]
'32'
['32']
parsed_discourse_facet ['method_citation']
 <S sid="10" ssid="8">Instead, our parsing algorithm, trained on the UPenn TREEBANK, was run on the New York Times source to create unsupervised syntactic training which was constrained to be consistent with semantic annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'10'"]
'10'
['10']
parsed_discourse_facet ['method_citation']
<S sid="94" ssid="13">Given a new sentence, the outcome of this search process is a tree structure that encodes both the syntactic and semantic structure of the sentence.</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'"]
'94'
['94']
parsed_discourse_facet ['method_citation']
    <S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'6'"]
'6'
['6']
parsed_discourse_facet ['method_citation']
 <S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'"]
'104'
['104']
parsed_discourse_facet ['method_citation']
 <S sid="26" ssid="9">We were already using a generative statistical model for part-of-speech tagging (Weischedel et al. 1993), and more recently, had begun using a generative statistical model for name finding (Bikel et al.</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'"]
'26'
['26']
parsed_discourse_facet ['method_citation']
    <S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'6'"]
'6'
['6']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="2">Currently, the prevailing architecture for dividing sentential processing is a four-stage pipeline consisting of: Since we were interested in exploiting recent advances in parsing, replacing the syntactic analysis stage of the standard pipeline with a modern statistical parser was an obvious possibility.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'"]
'19'
['19']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/A00-2030.annv3.csv
<S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'6'", "'0'"]
'2'
'6'
'0'
['2', '6', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'0'"]
'33'
'34'
'0'
['33', '34', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="95" ssid="14">The semantics — that is, the entities and relations — can then be directly extracted from these sentential trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'95'"]
'33'
'34'
'95'
['33', '34', '95']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'58'"]
'33'
'34'
'58'
['33', '34', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="51" ssid="11">To produce a corpus of augmented parse trees, we used the following multi-step training procedure which exploited the Penn TREEBANK Applying this procedure yielded a new version of the semantically annotated corpus, now annotated with complete augmented trees like that in Figure 3.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'51'", "'0'"]
'33'
'51'
'0'
['33', '51', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S><S sid="56" ssid="2">For example, in the phrase &quot;Lt. Cmdr.</S><S sid="38" ssid="6">Other labels indicate relations among entities.</S>
original cit marker offset is 0
new cit marker offset is 0



["'6'", "'56'", "'38'"]
'6'
'56'
'38'
['6', '56', '38']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'34'", "'33'"]
'0'
'34'
'33'
['0', '34', '33']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'0'"]
'33'
'34'
'0'
['33', '34', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="76" ssid="17">Finally, word features, fm, for modifiers are predicted based on the modifier, cm, the partof-speech tag of the modifier word , t„„ the part-of-speech tag of the head word th, the head word itself, wh, and whether or not the modifier head word, w„„ is known or unknown.</S><S sid="63" ssid="4">Head words, along with their part-of-speech tags and features, are generated for each modifier as soon as the modifier is created.</S><S sid="22" ssid="5">There is no opportunity for a later stage, such as parsing, to influence or correct an earlier stage such as part-of-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'76'", "'63'", "'22'"]
'76'
'63'
'22'
['76', '63', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="23" ssid="6">An integrated model can limit the propagation of errors by making all decisions jointly.</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'104'"]
'0'
'23'
'104'
['0', '23', '104']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'33'", "'58'"]
'34'
'33'
'58'
['34', '33', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'6'"]
'0'
'2'
'6'
['0', '2', '6']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'0'", "'6'"]
'33'
'0'
'6'
['33', '0', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'0'", "'34'"]
'33'
'0'
'34'
['33', '0', '34']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'0'", "'58'"]
'34'
'0'
'58'
['34', '0', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'33'", "'0'"]
'34'
'33'
'0'
['34', '33', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="76" ssid="17">Finally, word features, fm, for modifiers are predicted based on the modifier, cm, the partof-speech tag of the modifier word , t„„ the part-of-speech tag of the head word th, the head word itself, wh, and whether or not the modifier head word, w„„ is known or unknown.</S><S sid="63" ssid="4">Head words, along with their part-of-speech tags and features, are generated for each modifier as soon as the modifier is created.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'76'", "'63'", "'0'"]
'76'
'63'
'0'
['76', '63', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S><S sid="11" ssid="1">We evaluated the new approach to information extraction on two of the tasks of the Seventh Message Understanding Conference (MUC-7) and reported in (Marsh, 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'104'", "'11'"]
'0'
'104'
'11'
['0', '104', '11']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'104'", "'58'"]
'0'
'104'
'58'
['0', '104', '58']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
dict_values(['We were able to use the Penn TREEBANK to estimate the syntactic parameters; no additional syntactic training was required.'])
dict_values(['Our integrated model represents syntax and semantics jointly using augmented parse trees.', 'To produce a corpus of augmented parse trees, we used the following multi-step training procedure which exploited the Penn TREEBANK Applying this procedure yielded a new version of the semantically annotated corpus, now annotated with complete augmented trees like that in Figure 3.', 'A Novel Use of Statistical Parsing to Extract Information from Text'])
['system', 'ROUGE-S*', 'Average_R:', '0.00135', '(95%-conf.int.', '0.00135', '-', '0.00135)']
['system', 'ROUGE-S*', 'Average_P:', '0.02778', '(95%-conf.int.', '0.02778', '-', '0.02778)']
['system', 'ROUGE-S*', 'Average_F:', '0.00257', '(95%-conf.int.', '0.00257', '-', '0.00257)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:741', 'P:36', 'F:1']
dict_values(['In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.'])
dict_values(['In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.', 'For example, in the phrase &quot;Lt. Cmdr.', 'Other labels indicate relations among entities.'])
['system', 'ROUGE-S*', 'Average_R:', '0.43333', '(95%-conf.int.', '0.43333', '-', '0.43333)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.60465', '(95%-conf.int.', '0.60465', '-', '0.60465)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:210', 'P:91', 'F:91']
dict_values(['In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.'])
dict_values(['A Novel Use of Statistical Parsing to Extract Information from Text', 'In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.', 'Our integrated model represents syntax and semantics jointly using augmented parse trees.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:276', 'P:91', 'F:0']
dict_values(['The Template Element (TE) task identifies organizations, persons, locations, and some artifacts (rocket and airplane-related artifacts).'])
dict_values(['Finally, word features, fm, for modifiers are predicted based on the modifier, cm, the partof-speech tag of the modifier word , t„„ the part-of-speech tag of the head word th, the head word itself, wh, and whether or not the modifier head word, w„„ is known or unknown.', 'Head words, along with their part-of-speech tags and features, are generated for each modifier as soon as the modifier is created.', 'There is no opportunity for a later stage, such as parsing, to influence or correct an earlier stage such as part-of-speech tagging.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1035', 'P:78', 'F:0']
dict_values(['Since 1995, a few statistical parsing algorithms (Magerman, 1995; Collins, 1996 and 1997; Charniak, 1997; Rathnaparki, 1997) demonstrated a breakthrough in parsing accuracy, as measured against the University of Pennsylvania TREEBANK as a gold standard.'])
dict_values(['A Novel Use of Statistical Parsing to Extract Information from Text', 'An integrated model can limit the propagation of errors by making all decisions jointly.', 'We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00923', '(95%-conf.int.', '0.00923', '-', '0.00923)']
['system', 'ROUGE-S*', 'Average_P:', '0.01186', '(95%-conf.int.', '0.01186', '-', '0.01186)']
['system', 'ROUGE-S*', 'Average_F:', '0.01038', '(95%-conf.int.', '0.01038', '-', '0.01038)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:253', 'F:3']
dict_values(['Because generative statistical models had already proven successful for each of the first three stages, we were optimistic that some of their properties &#8212; especially their ability to learn from large amounts of data, and their robustness when presented with unexpected inputs &#8212; would also benefit semantic analysis.'])
dict_values(['A Novel Use of Statistical Parsing to Extract Information from Text', 'In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.', 'In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:741', 'P:253', 'F:0']
dict_values(['Instead, our parsing algorithm, trained on the UPenn TREEBANK, was run on the New York Times source to create unsupervised syntactic training which was constrained to be consistent with semantic annotation.'])
dict_values(['Our integrated model represents syntax and semantics jointly using augmented parse trees.', 'A Novel Use of Statistical Parsing to Extract Information from Text', 'In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:136', 'F:0']
dict_values(['Given a new sentence, the outcome of this search process is a tree structure that encodes both the syntactic and semantic structure of the sentence.'])
dict_values(['Our integrated model represents syntax and semantics jointly using augmented parse trees.', 'A Novel Use of Statistical Parsing to Extract Information from Text', 'In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01812', '(95%-conf.int.', '0.01812', '-', '0.01812)']
['system', 'ROUGE-S*', 'Average_P:', '0.09091', '(95%-conf.int.', '0.09091', '-', '0.09091)']
['system', 'ROUGE-S*', 'Average_F:', '0.03021', '(95%-conf.int.', '0.03021', '-', '0.03021)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:276', 'P:55', 'F:5']
dict_values(['In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.'])
dict_values(['In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.', 'A Novel Use of Statistical Parsing to Extract Information from Text', 'Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00246', '(95%-conf.int.', '0.00246', '-', '0.00246)']
['system', 'ROUGE-S*', 'Average_P:', '0.01099', '(95%-conf.int.', '0.01099', '-', '0.01099)']
['system', 'ROUGE-S*', 'Average_F:', '0.00402', '(95%-conf.int.', '0.00402', '-', '0.00402)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:406', 'P:91', 'F:1']
dict_values(['We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.'])
dict_values(['In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.', 'Our integrated model represents syntax and semantics jointly using augmented parse trees.', 'A Novel Use of Statistical Parsing to Extract Information from Text'])
['system', 'ROUGE-S*', 'Average_R:', '0.00362', '(95%-conf.int.', '0.00362', '-', '0.00362)']
['system', 'ROUGE-S*', 'Average_P:', '0.01282', '(95%-conf.int.', '0.01282', '-', '0.01282)']
['system', 'ROUGE-S*', 'Average_F:', '0.00565', '(95%-conf.int.', '0.00565', '-', '0.00565)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:276', 'P:78', 'F:1']
dict_values(['We were already using a generative statistical model for part-of-speech tagging (Weischedel et al. 1993), and more recently, had begun using a generative statistical model for name finding (Bikel et al.'])
dict_values(['Finally, word features, fm, for modifiers are predicted based on the modifier, cm, the partof-speech tag of the modifier word , t„„ the part-of-speech tag of the head word th, the head word itself, wh, and whether or not the modifier head word, w„„ is known or unknown.', 'Head words, along with their part-of-speech tags and features, are generated for each modifier as soon as the modifier is created.', 'A Novel Use of Statistical Parsing to Extract Information from Text'])
['system', 'ROUGE-S*', 'Average_R:', '0.01220', '(95%-conf.int.', '0.01220', '-', '0.01220)']
['system', 'ROUGE-S*', 'Average_P:', '0.06536', '(95%-conf.int.', '0.06536', '-', '0.06536)']
['system', 'ROUGE-S*', 'Average_F:', '0.02055', '(95%-conf.int.', '0.02055', '-', '0.02055)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:820', 'P:153', 'F:10']
dict_values(['In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.'])
dict_values(['A Novel Use of Statistical Parsing to Extract Information from Text', 'We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.', 'We evaluated the new approach to information extraction on two of the tasks of the Seventh Message Understanding Conference (MUC-7) and reported in (Marsh, 1998).'])
['system', 'ROUGE-S*', 'Average_R:', '0.07258', '(95%-conf.int.', '0.07258', '-', '0.07258)']
['system', 'ROUGE-S*', 'Average_P:', '0.39560', '(95%-conf.int.', '0.39560', '-', '0.39560)']
['system', 'ROUGE-S*', 'Average_F:', '0.12266', '(95%-conf.int.', '0.12266', '-', '0.12266)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:91', 'F:36']
dict_values(['Currently, the prevailing architecture for dividing sentential processing is a four-stage pipeline consisting of: Since we were interested in exploiting recent advances in parsing, replacing the syntactic analysis stage of the standard pipeline with a modern statistical parser was an obvious possibility.'])
dict_values(['A Novel Use of Statistical Parsing to Extract Information from Text', 'We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.', 'Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00403', '(95%-conf.int.', '0.00403', '-', '0.00403)']
['system', 'ROUGE-S*', 'Average_P:', '0.00725', '(95%-conf.int.', '0.00725', '-', '0.00725)']
['system', 'ROUGE-S*', 'Average_F:', '0.00518', '(95%-conf.int.', '0.00518', '-', '0.00518)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:276', 'F:2']
0.12481307596297635 0.04283999967046155 0.061989999523153844





input/ref/Task1/P11-1061_aakansha.csv
input/res/Task1/P11-1061.annv3.csv
parsing: input/ref/Task1/P11-1061_aakansha.csv
<S sid="40" ssid="6">We extend Subramanya et al.&#8217;s intuitions to our bilingual setup.</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'"]
'40'
['40']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'10'"]
'10'
['10']
parsed_discourse_facet ['method_citation']
<S sid="15" ssid="11">First, we use a novel graph-based framework for projecting syntactic information across language boundaries.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'"]
'15'
['15']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="2">Central to our approach (see Algorithm 1) is a bilingual similarity graph built from a sentence-aligned parallel corpus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'25'"]
'25'
['25']
parsed_discourse_facet ['method_citation']
<S sid="29" ssid="6">To establish a soft correspondence between the two languages, we use a second similarity function, which leverages standard unsupervised word alignment statistics (&#167;3.3).3 Since we have no labeled foreign data, our goal is to project syntactic information from the English side to the foreign side.</S>
original cit marker offset is 0
new cit marker offset is 0



["'29'"]
'29'
['29']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S>
original cit marker offset is 0
new cit marker offset is 0



["'18'"]
'18'
['18']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S>
original cit marker offset is 0
new cit marker offset is 0



["'18'"]
'18'
['18']
parsed_discourse_facet ['method_citation']
<S sid="158" ssid="1">We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'158'"]
'158'
['158']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="17">These universal POS categories not only facilitate the transfer of POS information from one language to another, but also relieve us from using controversial evaluation metrics,2 by establishing a direct correspondence between the induced hidden states in the foreign language and the observed English labels.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="158" ssid="1">We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'158'"]
'158'
['158']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="17">These universal POS categories not only facilitate the transfer of POS information from one language to another, but also relieve us from using controversial evaluation metrics,2 by establishing a direct correspondence between the induced hidden states in the foreign language and the observed English labels.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'10'"]
'10'
['10']
parsed_discourse_facet ['method_citation']
<S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'"]
'24'
['24']
parsed_discourse_facet ['method_citation']
<S sid="17" ssid="13">Second, we treat the projected labels as features in an unsupervised model (&#167;5), rather than using them directly for supervised training.</S>
original cit marker offset is 0
new cit marker offset is 0



["'17'"]
'17'
['17']
parsed_discourse_facet ['method_citation']
<S sid="111" ssid="11">We use the universal POS tagset of Petrov et al. (2011) in our experiments.10 This set C consists of the following 12 coarse-grained tags: NOUN (nouns), VERB (verbs), ADJ (adjectives), ADV (adverbs), PRON (pronouns), DET (determiners), ADP (prepositions or postpositions), NUM (numerals), CONJ (conjunctions), PRT (particles), PUNC (punctuation marks) and X (a catch-all for other categories such as abbreviations or foreign words).</S>
original cit marker offset is 0
new cit marker offset is 0



["'111'"]
'111'
['111']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'10'"]
'10'
['10']
parsed_discourse_facet ['method_citation']
<S sid="29" ssid="6">To establish a soft correspondence between the two languages, we use a second similarity function, which leverages standard unsupervised word alignment statistics (&#167;3.3).3 Since we have no labeled foreign data, our goal is to project syntactic information from the English side to the foreign side.</S>
original cit marker offset is 0
new cit marker offset is 0



["'29'"]
'29'
['29']
parsed_discourse_facet ['method_citation']
<S sid="161" ssid="4">Our results outperform strong unsupervised baselines as well as approaches that rely on direct projections, and bridge the gap between purely supervised and unsupervised POS tagging models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'161'"]
'161'
['161']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P11-1061.annv3.csv
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="6" ssid="2">Supervised part-of-speech (POS) taggers, for example, approach the level of inter-annotator agreement (Shen et al., 2007, 97.3% accuracy for English).</S><S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'6'", "'18'"]
'0'
'6'
'18'
['0', '6', '18']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'7'", "'27'"]
'0'
'7'
'27'
['0', '7', '27']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="3" ssid="3">We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).</S><S sid="35" ssid="1">In graph-based learning approaches one constructs a graph whose vertices are labeled and unlabeled examples, and whose weighted edges encode the degree to which the examples they link have the same label (Zhu et al., 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'3'", "'35'"]
'0'
'3'
'35'
['0', '3', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="52" ssid="18">This is similar to stacking the different feature instantiations into long (sparse) vectors and computing the cosine similarity between them.</S><S sid="51" ssid="17">For each trigram type x2 x3 x4 in a sequence x1 x2 x3 x4 x5, we count how many times that trigram type co-occurs with the different instantiations of each concept, and compute the point-wise mutual information (PMI) between the two.5 The similarity between two trigram types is given by summing over the PMI values over feature instantiations that they have in common.</S><S sid="42" ssid="8">The foreign language vertices (denoted by Vf) correspond to foreign trigram types, exactly as in Subramanya et al. (2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'", "'51'", "'42'"]
'52'
'51'
'42'
['52', '51', '42']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="31" ssid="8">By aggregating the POS labels of the English tokens to types, we can generate label distributions for the English vertices.</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'7'", "'31'"]
'27'
'7'
'31'
['27', '7', '31']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S><S sid="6" ssid="2">Supervised part-of-speech (POS) taggers, for example, approach the level of inter-annotator agreement (Shen et al., 2007, 97.3% accuracy for English).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'6'"]
'0'
'24'
'6'
['0', '24', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="85" ssid="16">We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).</S><S sid="3" ssid="3">We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'85'", "'3'"]
'0'
'85'
'3'
['0', '85', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S><S sid="158" ssid="1">We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'18'", "'158'"]
'0'
'18'
'158'
['0', '18', '158']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="2" ssid="2">Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.</S><S sid="16" ssid="12">To this end, we construct a bilingual graph over word types to establish a connection between the two languages (§3), and then use graph label propagation to project syntactic information from English to the foreign language (§4).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'16'"]
'0'
'2'
'16'
['0', '2', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="71" ssid="2">We use label propagation in two stages to generate soft labels on all the vertices in the graph.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="35" ssid="1">In graph-based learning approaches one constructs a graph whose vertices are labeled and unlabeled examples, and whose weighted edges encode the degree to which the examples they link have the same label (Zhu et al., 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'71'", "'0'", "'35'"]
'71'
'0'
'35'
['71', '0', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S><S sid="160" ssid="3">Our results suggest that it is possible to learn accurate POS taggers for languages which do not have any annotated data, but have translations into a resource-rich language.</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'", "'160'", "'24'"]
'106'
'160'
'24'
['106', '160', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S><S sid="160" ssid="3">Our results suggest that it is possible to learn accurate POS taggers for languages which do not have any annotated data, but have translations into a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'160'"]
'0'
'24'
'160'
['0', '24', '160']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="46" ssid="12">We use two different similarity functions to define the edge weights among the foreign vertices and between vertices from different languages.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S>
original cit marker offset is 0
new cit marker offset is 0



["'46'", "'0'", "'106'"]
'46'
'0'
'106'
['46', '0', '106']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="144" ssid="7">For comparison, the completely unsupervised feature-HMM baseline accuracy on the universal POS tags for English is 79.4%, and goes up to 88.7% with a treebank dictionary.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'7'", "'144'"]
'0'
'7'
'144'
['0', '7', '144']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="2" ssid="2">Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'24'"]
'0'
'2'
'24'
['0', '2', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'", "'0'", "'10'"]
'106'
'0'
'10'
['106', '0', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="56" ssid="22">To define a similarity function between the English and the foreign vertices, we rely on high-confidence word alignments.</S><S sid="57" ssid="23">Since our graph is built from a parallel corpus, we can use standard word alignment techniques to align the English sentences De 5Note that many combinations are impossible giving a PMI value of 0; e.g., when the trigram type and the feature instantiation don’t have words in common. and their foreign language translations Df.6 Label propagation in the graph will provide coverage and high recall, and we therefore extract only intersected high-confidence (> 0.9) alignments De�f.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S>
original cit marker offset is 0
new cit marker offset is 0



["'56'", "'57'", "'0'"]
'56'
'57'
'0'
['56', '57', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="85" ssid="16">We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'0'", "'85'"]
'27'
'0'
'85'
['27', '0', '85']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['We extend Subramanya et al.&#8217;s intuitions to our bilingual setup.'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'Supervised part-of-speech (POS) taggers, for example, approach the level of inter-annotator agreement (Shen et al., 2007, 97.3% accuracy for English).', 'To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:21', 'F:0']
dict_values(['To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.', 'Graph construction does not require any labeled data, but makes use of two similarity functions.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01846', '(95%-conf.int.', '0.01846', '-', '0.01846)']
['system', 'ROUGE-S*', 'Average_P:', '0.01136', '(95%-conf.int.', '0.01136', '-', '0.01136)']
['system', 'ROUGE-S*', 'Average_F:', '0.01407', '(95%-conf.int.', '0.01407', '-', '0.01407)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:528', 'F:6']
dict_values(['To establish a soft correspondence between the two languages, we use a second similarity function, which leverages standard unsupervised word alignment statistics (&#167;3.3).3 Since we have no labeled foreign data, our goal is to project syntactic information from the English side to the foreign side.'])
dict_values(['Graph construction does not require any labeled data, but makes use of two similarity functions.', 'However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.', 'By aggregating the POS labels of the English tokens to types, we can generate label distributions for the English vertices.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02463', '(95%-conf.int.', '0.02463', '-', '0.02463)']
['system', 'ROUGE-S*', 'Average_P:', '0.02849', '(95%-conf.int.', '0.02849', '-', '0.02849)']
['system', 'ROUGE-S*', 'Average_F:', '0.02642', '(95%-conf.int.', '0.02642', '-', '0.02642)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:406', 'P:351', 'F:10']
dict_values(['To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).', 'We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).'])
['system', 'ROUGE-S*', 'Average_R:', '0.01051', '(95%-conf.int.', '0.01051', '-', '0.01051)']
['system', 'ROUGE-S*', 'Average_P:', '0.10606', '(95%-conf.int.', '0.10606', '-', '0.10606)']
['system', 'ROUGE-S*', 'Average_F:', '0.01913', '(95%-conf.int.', '0.01913', '-', '0.01913)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:66', 'F:7']
dict_values(['We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).', 'We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.'])
['system', 'ROUGE-S*', 'Average_R:', '0.11828', '(95%-conf.int.', '0.11828', '-', '0.11828)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.21154', '(95%-conf.int.', '0.21154', '-', '0.21154)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:465', 'P:55', 'F:55']
dict_values(['These universal POS categories not only facilitate the transfer of POS information from one language to another, but also relieve us from using controversial evaluation metrics,2 by establishing a direct correspondence between the induced hidden states in the foreign language and the observed English labels.'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.', 'To this end, we construct a bilingual graph over word types to establish a connection between the two languages (§3), and then use graph label propagation to project syntactic information from English to the foreign language (§4).'])
['system', 'ROUGE-S*', 'Average_R:', '0.01661', '(95%-conf.int.', '0.01661', '-', '0.01661)']
['system', 'ROUGE-S*', 'Average_P:', '0.05435', '(95%-conf.int.', '0.05435', '-', '0.05435)']
['system', 'ROUGE-S*', 'Average_F:', '0.02545', '(95%-conf.int.', '0.02545', '-', '0.02545)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:276', 'F:15']
dict_values(['We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.'])
dict_values(['We use label propagation in two stages to generate soft labels on all the vertices in the graph.', 'Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'In graph-based learning approaches one constructs a graph whose vertices are labeled and unlabeled examples, and whose weighted edges encode the degree to which the examples they link have the same label (Zhu et al., 2003).'])
['system', 'ROUGE-S*', 'Average_R:', '0.02381', '(95%-conf.int.', '0.02381', '-', '0.02381)']
['system', 'ROUGE-S*', 'Average_P:', '0.27273', '(95%-conf.int.', '0.27273', '-', '0.27273)']
['system', 'ROUGE-S*', 'Average_F:', '0.04380', '(95%-conf.int.', '0.04380', '-', '0.04380)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:55', 'F:15']
dict_values(['To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.', 'Our results suggest that it is possible to learn accurate POS taggers for languages which do not have any annotated data, but have translations into a resource-rich language.'])
['system', 'ROUGE-S*', 'Average_R:', '0.09916', '(95%-conf.int.', '0.09916', '-', '0.09916)']
['system', 'ROUGE-S*', 'Average_P:', '0.11174', '(95%-conf.int.', '0.11174', '-', '0.11174)']
['system', 'ROUGE-S*', 'Average_F:', '0.10508', '(95%-conf.int.', '0.10508', '-', '0.10508)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:595', 'P:528', 'F:59']
dict_values(['The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.'])
dict_values(['We use two different similarity functions to define the edge weights among the foreign vertices and between vertices from different languages.', 'Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00769', '(95%-conf.int.', '0.00769', '-', '0.00769)']
['system', 'ROUGE-S*', 'Average_P:', '0.06593', '(95%-conf.int.', '0.06593', '-', '0.06593)']
['system', 'ROUGE-S*', 'Average_F:', '0.01378', '(95%-conf.int.', '0.01378', '-', '0.01378)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:780', 'P:91', 'F:6']
dict_values(['We use the universal POS tagset of Petrov et al. (2011) in our experiments.10 This set C consists of the following 12 coarse-grained tags: NOUN (nouns), VERB (verbs), ADJ (adjectives), ADV (adverbs), PRON (pronouns), DET (determiners), ADP (prepositions or postpositions), NUM (numerals), CONJ (conjunctions), PRT (particles), PUNC (punctuation marks) and X (a catch-all for other categories such as abbreviations or foreign words).'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.', 'The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00300', '(95%-conf.int.', '0.00300', '-', '0.00300)']
['system', 'ROUGE-S*', 'Average_P:', '0.00221', '(95%-conf.int.', '0.00221', '-', '0.00221)']
['system', 'ROUGE-S*', 'Average_F:', '0.00255', '(95%-conf.int.', '0.00255', '-', '0.00255)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:903', 'F:2']
dict_values(['Our results outperform strong unsupervised baselines as well as approaches that rely on direct projections, and bridge the gap between purely supervised and unsupervised POS tagging models.'])
dict_values(['Graph construction does not require any labeled data, but makes use of two similarity functions.', 'Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).'])
['system', 'ROUGE-S*', 'Average_R:', '0.02116', '(95%-conf.int.', '0.02116', '-', '0.02116)']
['system', 'ROUGE-S*', 'Average_P:', '0.05882', '(95%-conf.int.', '0.05882', '-', '0.05882)']
['system', 'ROUGE-S*', 'Average_F:', '0.03113', '(95%-conf.int.', '0.03113', '-', '0.03113)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:136', 'F:8']
0.155608180403562 0.031209999716272727 0.04481363595623968





input/ref/Task1/P05-1013_aakansha.csv
input/res/Task1/P05-1013.annv3.csv
parsing: input/ref/Task1/P05-1013_aakansha.csv
<S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'"]
'20'
['20']
parsed_discourse_facet ['method_citation']
<S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'"]
'24'
['24']
parsed_discourse_facet ['method_citation']
<S sid="106" ssid="17">However, the accuracy is considerably higher than previously reported results for robust non-projective parsing of Czech, with a best performance of 73% UAS (Holan, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'"]
'106'
['106']
parsed_discourse_facet ['method_citation']
<S sid="86" ssid="13">As expected, the most informative encoding, Head+Path, gives the highest accuracy with over 99% of all non-projective arcs being recovered correctly in both data sets.</S>
original cit marker offset is 0
new cit marker offset is 0



["'86'"]
'86'
['86']
parsed_discourse_facet ['method_citation']
<S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'"]
'20'
['20']
parsed_discourse_facet ['method_citation']
<S sid="36" ssid="7">As observed by Kahane et al. (1998), any (nonprojective) dependency graph can be transformed into a projective one by a lifting operation, which replaces each non-projective arc wj wk by a projective arc wi &#8212;* wk such that wi &#8212;*&#8727; wj holds in the original graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
<S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'109'"]
'109'
['109']
parsed_discourse_facet ['method_citation']
<S sid="36" ssid="7">As observed by Kahane et al. (1998), any (nonprojective) dependency graph can be transformed into a projective one by a lifting operation, which replaces each non-projective arc wj wk by a projective arc wi &#8212;* wk such that wi &#8212;*&#8727; wj holds in the original graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
<S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'"]
'23'
['23']
parsed_discourse_facet ['method_citation']
<S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'"]
'24'
['24']
parsed_discourse_facet ['method_citation']
<S sid="80" ssid="7">As shown in Table 3, the proportion of sentences containing some non-projective dependency ranges from about 15% in DDT to almost 25% in PDT.</S>
    <S sid="81"  ssid="8">However, the overall percentage of non-projective arcs is less than 2% in PDT and less than 1% in DDT.</S>
original cit marker offset is 0
new cit marker offset is 0



["'80'", "'81'"]
'80'
'81'
['80', '81']
parsed_discourse_facet ['method_citation']
<S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'"]
'24'
['24']
parsed_discourse_facet ['method_citation']
<S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'"]
'20'
['20']
parsed_discourse_facet ['method_citation']
<S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'"]
'24'
['24']
parsed_discourse_facet ['method_citation']
<S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'"]
'20'
['20']
parsed_discourse_facet ['method_citation']
<S sid="49" ssid="20">The baseline simply retains the original labels for all arcs, regardless of whether they have been lifted or not, and the number of distinct labels is therefore simply the number n of distinct dependency types.2 In the first encoding scheme, called Head, we use a new label d&#8593;h for each lifted arc, where d is the dependency relation between the syntactic head and the dependent in the non-projective representation, and h is the dependency relation that the syntactic head has to its own head in the underlying structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'49'"]
'49'
['49']
parsed_discourse_facet ['method_citation']
<S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'109'"]
'109'
['109']
parsed_discourse_facet ['method_citation']
<S sid="14" ssid="10">While the proportion of sentences containing non-projective dependencies is often 15&#8211;25%, the total proportion of non-projective arcs is normally only 1&#8211;2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'14'"]
'14'
['14']
parsed_discourse_facet ['method_citation']
<S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'"]
'20'
['20']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P05-1013.annv3.csv
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'20'", "'0'"]
'30'
'20'
'0'
['30', '20', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'20'"]
'0'
'24'
'20'
['0', '24', '20']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="15" ssid="11">As long as the main evaluation metric is dependency accuracy per word, with state-of-the-art accuracy mostly below 90%, the penalty for not handling non-projective constructions is almost negligible.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'110'", "'15'"]
'30'
'110'
'15'
['30', '110', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="62" ssid="1">In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'0'", "'62'"]
'23'
'0'
'62'
['23', '0', '62']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'110'", "'23'"]
'24'
'110'
'23'
['24', '110', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="22" ssid="18">When the parser is trained on the transformed data, it will ideally learn not only to construct projective dependency structures but also to assign arc labels that encode information about lifts.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'22'"]
'30'
'0'
'22'
['30', '0', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="40" ssid="11">Even this may be nondeterministic, in case the graph contains several non-projective arcs whose lifts interact, but we use the following algorithm to construct a minimal projective transformation D0 = (W, A0) of a (nonprojective) dependency graph D = (W, A): The function SMALLEST-NONP-ARC returns the non-projective arc with the shortest distance from head to dependent (breaking ties from left to right).</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'0'", "'40'"]
'23'
'0'
'40'
['23', '0', '40']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="108" ssid="19">However, while Dienes and Dubey recognize empty categories in a pre-processing step and only let the parser find their antecedents, we use the parser both to detect dislocated dependents and to predict either the type or the location of their syntactic head (or both) and use post-processing only to transform the graph in accordance with the parser’s analysis.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'108'"]
'30'
'0'
'108'
['30', '0', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'24'"]
'0'
'23'
'24'
['0', '23', '24']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S><S sid="14" ssid="10">While the proportion of sentences containing non-projective dependencies is often 15–25%, the total proportion of non-projective arcs is normally only 1–2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'20'", "'14'"]
'0'
'20'
'14'
['0', '20', '14']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="62" ssid="1">In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'62'"]
'0'
'24'
'62'
['0', '24', '62']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'30'"]
'0'
'24'
'30'
['0', '24', '30']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'24'"]
'30'
'0'
'24'
['30', '0', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'24'"]
'0'
'23'
'24'
['0', '23', '24']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="21" ssid="17">First, the training data for the parser is projectivized by applying a minimal number of lifting operations (Kahane et al., 1998) and encoding information about these lifts in arc labels.</S><S sid="45" ssid="16">In order to facilitate this task, we extend the set of arc labels to encode information about lifting operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'21'", "'45'"]
'30'
'21'
'45'
['30', '21', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'110'"]
'30'
'0'
'110'
['30', '0', '110']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="81" ssid="8">However, the overall percentage of non-projective arcs is less than 2% in PDT and less than 1% in DDT.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'110'", "'81'"]
'0'
'110'
'81'
['0', '110', '81']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
dict_values(['In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.', 'Pseudo-Projective Dependency Parsing'])
['system', 'ROUGE-S*', 'Average_R:', '0.20920', '(95%-conf.int.', '0.20920', '-', '0.20920)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.34601', '(95%-conf.int.', '0.34601', '-', '0.34601)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:91', 'F:91']
dict_values(['We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).'])
dict_values(['Pseudo-Projective Dependency Parsing', 'We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).', 'In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.'])
['system', 'ROUGE-S*', 'Average_R:', '0.13547', '(95%-conf.int.', '0.13547', '-', '0.13547)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.23861', '(95%-conf.int.', '0.23861', '-', '0.23861)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:406', 'P:55', 'F:55']
dict_values(['However, the accuracy is considerably higher than previously reported results for robust non-projective parsing of Czech, with a best performance of 73% UAS (Holan, 2004).'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.', 'As long as the main evaluation metric is dependency accuracy per word, with state-of-the-art accuracy mostly below 90%, the penalty for not handling non-projective constructions is almost negligible.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01742', '(95%-conf.int.', '0.01742', '-', '0.01742)']
['system', 'ROUGE-S*', 'Average_P:', '0.22857', '(95%-conf.int.', '0.22857', '-', '0.22857)']
['system', 'ROUGE-S*', 'Average_F:', '0.03237', '(95%-conf.int.', '0.03237', '-', '0.03237)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1378', 'P:105', 'F:24']
dict_values(['As expected, the most informative encoding, Head+Path, gives the highest accuracy with over 99% of all non-projective arcs being recovered correctly in both data sets.'])
dict_values(['Pseudo-Projective Dependency Parsing', 'We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).', 'By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00093', '(95%-conf.int.', '0.00093', '-', '0.00093)']
['system', 'ROUGE-S*', 'Average_P:', '0.01099', '(95%-conf.int.', '0.01099', '-', '0.01099)']
['system', 'ROUGE-S*', 'Average_F:', '0.00171', '(95%-conf.int.', '0.00171', '-', '0.00171)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:91', 'F:1']
dict_values(['In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.'])
dict_values(['By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.', 'Pseudo-Projective Dependency Parsing', 'In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).'])
['system', 'ROUGE-S*', 'Average_R:', '0.01052', '(95%-conf.int.', '0.01052', '-', '0.01052)']
['system', 'ROUGE-S*', 'Average_P:', '0.19780', '(95%-conf.int.', '0.19780', '-', '0.19780)']
['system', 'ROUGE-S*', 'Average_F:', '0.01998', '(95%-conf.int.', '0.01998', '-', '0.01998)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1711', 'P:91', 'F:18']
dict_values(['As observed by Kahane et al. (1998), any (nonprojective) dependency graph can be transformed into a projective one by a lifting operation, which replaces each non-projective arc wj wk by a projective arc wi &#8212;* wk such that wi &#8212;*&#8727; wj holds in the original graph.'])
dict_values(['We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).', 'The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.', 'By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02327', '(95%-conf.int.', '0.02327', '-', '0.02327)']
['system', 'ROUGE-S*', 'Average_P:', '0.14021', '(95%-conf.int.', '0.14021', '-', '0.14021)']
['system', 'ROUGE-S*', 'Average_F:', '0.03991', '(95%-conf.int.', '0.03991', '-', '0.03991)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2278', 'P:378', 'F:53']
dict_values(['We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'Pseudo-Projective Dependency Parsing', 'When the parser is trained on the transformed data, it will ideally learn not only to construct projective dependency structures but also to assign arc labels that encode information about lifts.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05444', '(95%-conf.int.', '0.05444', '-', '0.05444)']
['system', 'ROUGE-S*', 'Average_P:', '0.25714', '(95%-conf.int.', '0.25714', '-', '0.25714)']
['system', 'ROUGE-S*', 'Average_F:', '0.08985', '(95%-conf.int.', '0.08985', '-', '0.08985)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:105', 'F:27']
dict_values(['As observed by Kahane et al. (1998), any (nonprojective) dependency graph can be transformed into a projective one by a lifting operation, which replaces each non-projective arc wj wk by a projective arc wi &#8212;* wk such that wi &#8212;*&#8727; wj holds in the original graph.'])
dict_values(['By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.', 'Pseudo-Projective Dependency Parsing', 'Even this may be nondeterministic, in case the graph contains several non-projective arcs whose lifts interact, but we use the following algorithm to construct a minimal projective transformation D0 = (W, A0) of a (nonprojective) dependency graph D = (W, A): The function SMALLEST-NONP-ARC returns the non-projective arc with the shortest distance from head to dependent (breaking ties from left to right).'])
['system', 'ROUGE-S*', 'Average_R:', '0.02261', '(95%-conf.int.', '0.02261', '-', '0.02261)']
['system', 'ROUGE-S*', 'Average_P:', '0.13228', '(95%-conf.int.', '0.13228', '-', '0.13228)']
['system', 'ROUGE-S*', 'Average_F:', '0.03862', '(95%-conf.int.', '0.03862', '-', '0.03862)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2211', 'P:378', 'F:50']
dict_values(['By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'Pseudo-Projective Dependency Parsing', 'However, while Dienes and Dubey recognize empty categories in a pre-processing step and only let the parser find their antecedents, we use the parser both to detect dislocated dependents and to predict either the type or the location of their syntactic head (or both) and use post-processing only to transform the graph in accordance with the parser’s analysis.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02990', '(95%-conf.int.', '0.02990', '-', '0.02990)']
['system', 'ROUGE-S*', 'Average_P:', '0.05444', '(95%-conf.int.', '0.05444', '-', '0.05444)']
['system', 'ROUGE-S*', 'Average_F:', '0.03860', '(95%-conf.int.', '0.03860', '-', '0.03860)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:496', 'F:27']
dict_values(['We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).'])
dict_values(['Pseudo-Projective Dependency Parsing', 'By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.', 'We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).'])
['system', 'ROUGE-S*', 'Average_R:', '0.05088', '(95%-conf.int.', '0.05088', '-', '0.05088)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.09683', '(95%-conf.int.', '0.09683', '-', '0.09683)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:55', 'F:55']
dict_values(['As shown in Table 3, the proportion of sentences containing some non-projective dependency ranges from about 15% in DDT to almost 25% in PDT.', 'However, the overall percentage of non-projective arcs is less than 2% in PDT and less than 1% in DDT.'])
dict_values(['Pseudo-Projective Dependency Parsing', 'In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.', 'While the proportion of sentences containing non-projective dependencies is often 15–25%, the total proportion of non-projective arcs is normally only 1–2%.'])
['system', 'ROUGE-S*', 'Average_R:', '0.10115', '(95%-conf.int.', '0.10115', '-', '0.10115)']
['system', 'ROUGE-S*', 'Average_P:', '0.25731', '(95%-conf.int.', '0.25731', '-', '0.25731)']
['system', 'ROUGE-S*', 'Average_F:', '0.14521', '(95%-conf.int.', '0.14521', '-', '0.14521)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:171', 'F:44']
dict_values(['We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).'])
dict_values(['Pseudo-Projective Dependency Parsing', 'We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).', 'In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).'])
['system', 'ROUGE-S*', 'Average_R:', '0.07824', '(95%-conf.int.', '0.07824', '-', '0.07824)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.14512', '(95%-conf.int.', '0.14512', '-', '0.14512)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:703', 'P:55', 'F:55']
dict_values(['The baseline simply retains the original labels for all arcs, regardless of whether they have been lifted or not, and the number of distinct labels is therefore simply the number n of distinct dependency types.2 In the first encoding scheme, called Head, we use a new label d&#8593;h for each lifted arc, where d is the dependency relation between the syntactic head and the dependent in the non-projective representation, and h is the dependency relation that the syntactic head has to its own head in the underlying structure.'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'First, the training data for the parser is projectivized by applying a minimal number of lifting operations (Kahane et al., 1998) and encoding information about these lifts in arc labels.', 'In order to facilitate this task, we extend the set of arc labels to encode information about lifting operations.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05854', '(95%-conf.int.', '0.05854', '-', '0.05854)']
['system', 'ROUGE-S*', 'Average_P:', '0.06478', '(95%-conf.int.', '0.06478', '-', '0.06478)']
['system', 'ROUGE-S*', 'Average_F:', '0.06150', '(95%-conf.int.', '0.06150', '-', '0.06150)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:820', 'P:741', 'F:48']
dict_values(['We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.'])
dict_values(['Pseudo-Projective Dependency Parsing', 'We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).', 'By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.'])
['system', 'ROUGE-S*', 'Average_R:', '0.03053', '(95%-conf.int.', '0.03053', '-', '0.03053)']
['system', 'ROUGE-S*', 'Average_P:', '0.31429', '(95%-conf.int.', '0.31429', '-', '0.31429)']
['system', 'ROUGE-S*', 'Average_F:', '0.05565', '(95%-conf.int.', '0.05565', '-', '0.05565)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:105', 'F:33']
dict_values(['While the proportion of sentences containing non-projective dependencies is often 15&#8211;25%, the total proportion of non-projective arcs is normally only 1&#8211;2%.'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'Pseudo-Projective Dependency Parsing', 'The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00488', '(95%-conf.int.', '0.00488', '-', '0.00488)']
['system', 'ROUGE-S*', 'Average_P:', '0.04396', '(95%-conf.int.', '0.04396', '-', '0.04396)']
['system', 'ROUGE-S*', 'Average_F:', '0.00878', '(95%-conf.int.', '0.00878', '-', '0.00878)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:820', 'P:91', 'F:4']
dict_values(['In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.'])
dict_values(['Pseudo-Projective Dependency Parsing', 'We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).', 'By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02220', '(95%-conf.int.', '0.02220', '-', '0.02220)']
['system', 'ROUGE-S*', 'Average_P:', '0.26374', '(95%-conf.int.', '0.26374', '-', '0.26374)']
['system', 'ROUGE-S*', 'Average_F:', '0.04096', '(95%-conf.int.', '0.04096', '-', '0.04096)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:91', 'F:24']
0.3728443726697227 0.053136249667898434 0.08748187445323828





input/ref/Task1/W99-0613_aakansha.csv
input/res/Task1/W99-0613.annv3.csv
parsing: input/ref/Task1/W99-0613_aakansha.csv
<S sid="9" ssid="3">This paper discusses the use of unlabeled examples for the problem of named entity classification.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="36" ssid="30">Roughly speaking, the new algorithm presented in this paper performs a similar search, but instead minimizes a bound on the number of (unlabeled) examples on which two classifiers disagree.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
<S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'"]
'137'
['137']
parsed_discourse_facet ['method_citation']
<S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'"]
'79'
['79']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="4">The task is to learn a function from an input string (proper name) to its type, which we will assume to be one of the categories Person, Organization, or Location.</S>
original cit marker offset is 0
new cit marker offset is 0



["'10'"]
'10'
['10']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="12">But we will show that the use of unlabeled data can drastically reduce the need for supervision.</S>
original cit marker offset is 0
new cit marker offset is 0



["'18'"]
'18'
['18']
parsed_discourse_facet ['method_citation']
<S sid="236" ssid="3">We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.</S>
    <S sid="237" ssid="4">The numbers falling into the location, person, organization categories were 186, 289 and 402 respectively.</S>
original cit marker offset is 0
new cit marker offset is 0



["'236'", "'237'"]
'236'
'237'
['236', '237']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="3">This paper discusses the use of unlabeled examples for the problem of named entity classification.</S>
    <S sid="10" ssid="4">The task is to learn a function from an input string (proper name) to its type, which we will assume to be one of the categories Person, Organization, or Location.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'10'"]
'9'
'10'
['9', '10']
parsed_discourse_facet ['method_citation']
<S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S><S sid="139" ssid="6">This section describes AdaBoost, which is the basis for the CoBoost algorithm.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'", "'39'"]
'137'
'39'
['137', '39']
parsed_discourse_facet ['method_citation']
<S sid="26" ssid="20">We present two algorithms.</S>
    <S sid="27" ssid="21">The first method builds on results from (Yarowsky 95) and (Blum and Mitchell 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'", "'27'"]
'26'
'27'
['26', '27']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="12">But we will show that the use of unlabeled data can drastically reduce the need for supervision.</S>
original cit marker offset is 0
new cit marker offset is 0



["'18'"]
'18'
['18']
parsed_discourse_facet ['method_citation']
<S sid="85" ssid="18">(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'"]
'85'
['85']
parsed_discourse_facet ['method_citation']
<S sid="8" ssid="2">Recent results (e.g., (Yarowsky 95; Brill 95; Blum and Mitchell 98)) have suggested that unlabeled data can be used quite profitably in reducing the need for supervision.</S>
    <S sid="9" ssid="3">This paper discusses the use of unlabeled examples for the problem of named entity classification.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'9'"]
'8'
'9'
['8', '9']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W99-0613.annv3.csv
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'133'", "'137'"]
'0'
'133'
'137'
['0', '133', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="174" ssid="41">The two new terms force the two classifiers to agree, as much as possible, on the unlabeled examples.</S><S sid="248" ssid="15">With each iteration more examples are assigned labels by both classifiers, while a high level of agreement (> 94%) is maintained between them.</S><S sid="33" ssid="27">The second algorithm builds on a boosting algorithm called AdaBoost (Freund and Schapire 97; Schapire and Singer 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'248'", "'33'"]
'174'
'248'
'33'
['174', '248', '33']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S><S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="220" ssid="87">(7), such as the likelihood function used in maximum-entropy problems and other generalized additive models (Lafferty 99).</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'133'", "'220'"]
'79'
'133'
'220'
['79', '133', '220']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="40" ssid="34">(Berland and Charniak 99) describe a method for extracting parts of objects from wholes (e.g., &quot;speedometer&quot; from &quot;car&quot;) from a large corpus using hand-crafted patterns.</S><S sid="41" ssid="35">(Hearst 92) describes a method for extracting hyponyms from a corpus (pairs of words in &quot;isa&quot; relations).</S><S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'", "'41'", "'79'"]
'40'
'41'
'79'
['40', '41', '79']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="19" ssid="13">Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.</S><S sid="11" ssid="5">For example, a good classifier would identify Mrs. Frank as a person, Steptoe & Johnson as a company, and Honduras as a location.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'19'", "'11'"]
'0'
'19'
'11'
['0', '19', '11']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S><S sid="250" ssid="1">Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.</S><S sid="179" ssid="46">The algorithm builds two classifiers in parallel from labeled and unlabeled data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'", "'250'", "'179'"]
'137'
'250'
'179'
['137', '250', '179']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="19" ssid="13">Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.</S><S sid="236" ssid="3">We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'19'", "'236'"]
'0'
'19'
'236'
['0', '19', '236']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="16" ssid="10">Supervised methods have been applied quite successfully to the full MUC named-entity task (Bikel et al. 97).</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="133" ssid="66">Fort= 1,...,T:</S>
original cit marker offset is 0
new cit marker offset is 0



["'16'", "'0'", "'133'"]
'16'
'0'
'133'
['16', '0', '133']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="253" ssid="4">We are currently exploring other methods that employ similar ideas and their formal properties.</S><S sid="133" ssid="66">Fort= 1,...,T:</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'253'", "'133'"]
'0'
'253'
'133'
['0', '253', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="251" ssid="2">In addition to a heuristic based on decision list learning, we also presented a boosting-like framework that builds on ideas from (Blum and Mitchell 98).</S><S sid="68" ssid="1">The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).</S><S sid="31" ssid="25">Our first algorithm is similar to Yarowsky's, but with some important modifications motivated by (Blum and Mitchell 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'251'", "'68'", "'31'"]
'251'
'68'
'31'
['251', '68', '31']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="28" ssid="22">(Yarowsky 95) describes an algorithm for word-sense disambiguation that exploits redundancy in contextual features, and gives impressive performance.</S><S sid="39" ssid="33">(Brin 98) ,describes a system for extracting (author, book-title) pairs from the World Wide Web using an approach that bootstraps from an initial seed set of examples.</S><S sid="254" ssid="5">Future work should also extend the approach to build a complete named entity extractor - a method that pulls proper names from text and then classifies them.</S>
original cit marker offset is 0
new cit marker offset is 0



["'28'", "'39'", "'254'"]
'28'
'39'
'254'
['28', '39', '254']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="85" ssid="18">(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="77" ssid="10">In this paper k = 3 (the three labels are person, organization, location), and we set a = 0.1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'0'", "'77'"]
'85'
'0'
'77'
['85', '0', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation']
<S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="68" ssid="1">The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).</S>
original cit marker offset is 0
new cit marker offset is 0



["'133'", "'0'", "'68'"]
'133'
'0'
'68'
['133', '0', '68']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['Roughly speaking, the new algorithm presented in this paper performs a similar search, but instead minimizes a bound on the number of (unlabeled) examples on which two classifiers disagree.'])
dict_values(['The two new terms force the two classifiers to agree, as much as possible, on the unlabeled examples.', 'With each iteration more examples are assigned labels by both classifiers, while a high level of agreement (> 94%) is maintained between them.', 'The second algorithm builds on a boosting algorithm called AdaBoost (Freund and Schapire 97; Schapire and Singer 98).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00794', '(95%-conf.int.', '0.00794', '-', '0.00794)']
['system', 'ROUGE-S*', 'Average_P:', '0.02857', '(95%-conf.int.', '0.02857', '-', '0.02857)']
['system', 'ROUGE-S*', 'Average_F:', '0.01242', '(95%-conf.int.', '0.01242', '-', '0.01242)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:105', 'F:3']
dict_values(['The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.'])
dict_values(['2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).', 'Fort= 1,...,T:', '(7), such as the likelihood function used in maximum-entropy problems and other generalized additive models (Lafferty 99).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00460', '(95%-conf.int.', '0.00460', '-', '0.00460)']
['system', 'ROUGE-S*', 'Average_P:', '0.05556', '(95%-conf.int.', '0.05556', '-', '0.05556)']
['system', 'ROUGE-S*', 'Average_F:', '0.00849', '(95%-conf.int.', '0.00849', '-', '0.00849)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:36', 'F:2']
dict_values(['The task is to learn a function from an input string (proper name) to its type, which we will assume to be one of the categories Person, Organization, or Location.'])
dict_values(['Unsupervised Models for Named Entity Classification Collins', 'Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.', 'For example, a good classifier would identify Mrs. Frank as a person, Steptoe & Johnson as a company, and Honduras as a location.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00855', '(95%-conf.int.', '0.00855', '-', '0.00855)']
['system', 'ROUGE-S*', 'Average_P:', '0.03846', '(95%-conf.int.', '0.03846', '-', '0.03846)']
['system', 'ROUGE-S*', 'Average_F:', '0.01399', '(95%-conf.int.', '0.01399', '-', '0.01399)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:78', 'F:3']
dict_values(['But we will show that the use of unlabeled data can drastically reduce the need for supervision.'])
dict_values(['The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.', 'Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.', 'The algorithm builds two classifiers in parallel from labeled and unlabeled data.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01709', '(95%-conf.int.', '0.01709', '-', '0.01709)']
['system', 'ROUGE-S*', 'Average_P:', '0.40000', '(95%-conf.int.', '0.40000', '-', '0.40000)']
['system', 'ROUGE-S*', 'Average_F:', '0.03279', '(95%-conf.int.', '0.03279', '-', '0.03279)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:15', 'F:6']
dict_values(['We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.', 'The numbers falling into the location, person, organization categories were 186, 289 and 402 respectively.'])
dict_values(['Unsupervised Models for Named Entity Classification Collins', 'Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.', 'We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.'])
['system', 'ROUGE-S*', 'Average_R:', '0.13846', '(95%-conf.int.', '0.13846', '-', '0.13846)']
['system', 'ROUGE-S*', 'Average_P:', '0.26316', '(95%-conf.int.', '0.26316', '-', '0.26316)']
['system', 'ROUGE-S*', 'Average_F:', '0.18145', '(95%-conf.int.', '0.18145', '-', '0.18145)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:171', 'F:45']
dict_values(['This paper discusses the use of unlabeled examples for the problem of named entity classification.', 'The task is to learn a function from an input string (proper name) to its type, which we will assume to be one of the categories Person, Organization, or Location.'])
dict_values(['Supervised methods have been applied quite successfully to the full MUC named-entity task (Bikel et al. 97).', 'Unsupervised Models for Named Entity Classification Collins', 'Fort= 1,...,T:'])
['system', 'ROUGE-S*', 'Average_R:', '0.04211', '(95%-conf.int.', '0.04211', '-', '0.04211)']
['system', 'ROUGE-S*', 'Average_P:', '0.03810', '(95%-conf.int.', '0.03810', '-', '0.03810)']
['system', 'ROUGE-S*', 'Average_F:', '0.04000', '(95%-conf.int.', '0.04000', '-', '0.04000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:190', 'P:210', 'F:8']
dict_values(['The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.', 'This section describes AdaBoost, which is the basis for the CoBoost algorithm.'])
dict_values(['Unsupervised Models for Named Entity Classification Collins', 'We are currently exploring other methods that employ similar ideas and their formal properties.', 'Fort= 1,...,T:'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:105', 'P:105', 'F:0']
dict_values(['We present two algorithms.', 'The first method builds on results from (Yarowsky 95) and (Blum and Mitchell 98).'])
dict_values(['In addition to a heuristic based on decision list learning, we also presented a boosting-like framework that builds on ideas from (Blum and Mitchell 98).', 'The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).', "Our first algorithm is similar to Yarowsky's, but with some important modifications motivated by (Blum and Mitchell 98)."])
['system', 'ROUGE-S*', 'Average_R:', '0.07487', '(95%-conf.int.', '0.07487', '-', '0.07487)']
['system', 'ROUGE-S*', 'Average_P:', '0.76364', '(95%-conf.int.', '0.76364', '-', '0.76364)']
['system', 'ROUGE-S*', 'Average_F:', '0.13636', '(95%-conf.int.', '0.13636', '-', '0.13636)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:55', 'F:42']
dict_values(['(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.'])
dict_values(['(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.', 'Unsupervised Models for Named Entity Classification Collins', 'In this paper k = 3 (the three labels are person, organization, location), and we set a = 0.1.'])
['system', 'ROUGE-S*', 'Average_R:', '0.49412', '(95%-conf.int.', '0.49412', '-', '0.49412)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.66142', '(95%-conf.int.', '0.66142', '-', '0.66142)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1275', 'P:630', 'F:630']
dict_values(['Recent results (e.g., (Yarowsky 95; Brill 95; Blum and Mitchell 98)) have suggested that unlabeled data can be used quite profitably in reducing the need for supervision.', 'This paper discusses the use of unlabeled examples for the problem of named entity classification.'])
dict_values(['Fort= 1,...,T:', 'Unsupervised Models for Named Entity Classification Collins', 'The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).'])
['system', 'ROUGE-S*', 'Average_R:', '0.02614', '(95%-conf.int.', '0.02614', '-', '0.02614)']
['system', 'ROUGE-S*', 'Average_P:', '0.01581', '(95%-conf.int.', '0.01581', '-', '0.01581)']
['system', 'ROUGE-S*', 'Average_F:', '0.01970', '(95%-conf.int.', '0.01970', '-', '0.01970)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:153', 'P:253', 'F:4']
0.26032999739670004 0.08138799918612002 0.11066199889338003





input/ref/Task1/P08-1102_aakansha.csv
input/res/Task1/P08-1102.annv3.csv
parsing: input/ref/Task1/P08-1102_aakansha.csv
<S sid="130" ssid="1">We proposed a cascaded linear model for Chinese Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'"]
'130'
['130']
parsed_discourse_facet ['method_citation']
<S sid="42" ssid="14">As predications generated from such templates depend on the current character, we name these templates lexical-target.</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'"]
'42'
['42']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="21">According to Ng and Low (2004), the segmentation task can be transformed to a tagging problem by assigning each character a boundary tag of the following four types: We can extract segmentation result by splitting the labelled result into subsequences of pattern s or bm*e which denote single-character word and multicharacter word respectively.</S>
original cit marker offset is 0
new cit marker offset is 0



["'25'"]
'25'
['25']
parsed_discourse_facet ['method_citation']
<S sid="130" ssid="1">We proposed a cascaded linear model for Chinese Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'"]
'130'
['130']
parsed_discourse_facet ['method_citation']
<S sid="34" ssid="6">The feature templates we adopted are selected from those of Ng and Low (2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'"]
'34'
['34']
parsed_discourse_facet ['method_citation']
<S sid="12" ssid="8">Besides the usual character-based features, additional features dependent on POS&#8217;s or words can also be employed to improve the performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["'12'"]
'12'
['12']
parsed_discourse_facet ['method_citation']
<S sid="130" ssid="1">We proposed a cascaded linear model for Chinese Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'"]
'130'
['130']
parsed_discourse_facet ['method_citation']
<S sid="130" ssid="1">We proposed a cascaded linear model for Chinese Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'"]
'130'
['130']
parsed_discourse_facet ['method_citation']
<S sid="121" ssid="32">Among other features, the 4-gram POS LM plays the most important role, removing this feature causes F-measure decrement of 0.33 points on segmentation and 0.71 points on Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



["'121'"]
'121'
['121']
parsed_discourse_facet ['method_citation']
<S sid="37" ssid="9">C represents a Chinese character while the subscript of C indicates its position in the sentence relative to the current character (it has the subscript 0).</S>
original cit marker offset is 0
new cit marker offset is 0



["'37'"]
'37'
['37']
parsed_discourse_facet ['method_citation']
<S sid="73" ssid="24">For instance, if the word w appears N times in training corpus and is labelled as POS t for n times, the probability Pr(t|w) can be estimated by the formula below: The probability Pr(w|t) could be estimated through the same approach.</S>
original cit marker offset is 0
new cit marker offset is 0



["'73'"]
'73'
['73']
parsed_discourse_facet ['method_citation']
<S sid="46" ssid="18">Following Collins, we use a function GEN(x) generating all candidate results of an input x , a representation 4) mapping each training example (x, y) &#8712; X &#215; Y to a feature vector 4)(x, y) &#8712; Rd, and a parameter vector &#945;&#65533; &#8712; Rd corresponding to the feature vector. d means the dimension of the vector space, it equals to the amount of features in the model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'46'"]
'46'
['46']
parsed_discourse_facet ['method_citation']
<S sid="12" ssid="8">Besides the usual character-based features, additional features dependent on POS&#8217;s or words can also be employed to improve the performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["'12'"]
'12'
['12']
parsed_discourse_facet ['method_citation']
<S sid="130" ssid="1">We proposed a cascaded linear model for Chinese Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'"]
'130'
['130']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P08-1102.annv3.csv
<S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="22" ssid="18">2 Segmentation and POS Tagging Given a Chinese character sequence: while the segmentation and POS tagging result can be depicted as: Here, Ci (i = L.n) denotes Chinese character, ti (i = L.m) denotes POS tag, and Cl:r (l < r) denotes character sequence ranges from Cl to Cr.</S><S sid="79" ssid="4">By maintaining a stack of size N at each position i of the sequence, we can preserve the top N best candidate labelled results of subsequence C1:i during decoding.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'22'", "'79'"]
'9'
'22'
'79'
['9', '22', '79']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="25" ssid="21">According to Ng and Low (2004), the segmentation task can be transformed to a tagging problem by assigning each character a boundary tag of the following four types: We can extract segmentation result by splitting the labelled result into subsequences of pattern s or bm*e which denote single-character word and multicharacter word respectively.</S><S sid="28" ssid="24">A subsequence of boundary-POS labelling result indicates a word with POS t only if the boundary tag sequence composed of its boundary part conforms to s or bm*e style, and all POS tags in its POS part equal to t. For example, a tag sequence b NN m NN e NN represents a threecharacter word with POS tag NN.</S><S sid="10" ssid="6">Since the typical approach of discriminative models treats segmentation as a labelling problem by assigning each character a boundary tag (Xue and Shen, 2003), Joint S&T can be conducted in a labelling fashion by expanding boundary tags to include POS information (Ng and Low, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'25'", "'28'", "'10'"]
'25'
'28'
'10'
['25', '28', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S><S sid="42" ssid="14">As predications generated from such templates depend on the current character, we name these templates lexical-target.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'1'", "'42'"]
'0'
'1'
'42'
['0', '1', '42']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="25" ssid="21">According to Ng and Low (2004), the segmentation task can be transformed to a tagging problem by assigning each character a boundary tag of the following four types: We can extract segmentation result by splitting the labelled result into subsequences of pattern s or bm*e which denote single-character word and multicharacter word respectively.</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'25'", "'1'"]
'0'
'25'
'1'
['0', '25', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'2'", "'24'"]
'9'
'2'
'24'
['9', '2', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="130" ssid="1">We proposed a cascaded linear model for Chinese Joint S&T.</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'130'", "'1'"]
'0'
'130'
'1'
['0', '130', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S><S sid="67" ssid="18">Language model (LM) provides linguistic probabilities of a word sequence.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'1'", "'67'"]
'0'
'1'
'67'
['0', '1', '67']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="56" ssid="7">To alleviate the drawbacks, we propose a cascaded linear model.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="85" ssid="10">Lines 3 — 11 generate a N-best list for each character position i.</S>
original cit marker offset is 0
new cit marker offset is 0



["'56'", "'0'", "'85'"]
'56'
'0'
'85'
['56', '0', '85']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="5" ssid="1">Word segmentation and part-of-speech (POS) tagging are important tasks in computer processing of Chinese and other Asian languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'9'", "'5'"]
'24'
'9'
'5'
['24', '9', '5']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="23" ssid="19">We can see that segmentation and POS tagging task is to divide a character sequence into several subsequences and label each of them a POS tag.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'9'", "'23'"]
'0'
'9'
'23'
['0', '9', '23']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="19" ssid="15">In addition, as these knowledge sources are regarded as separate features, we can train their corresponding models independently with each other.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="8" ssid="4">Another widely used discriminative method is the perceptron algorithm (Collins, 2002), which achieves comparable performance to CRFs with much faster training, so we base this work on the perceptron.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'", "'0'", "'8'"]
'19'
'0'
'8'
['19', '0', '8']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="42" ssid="14">As predications generated from such templates depend on the current character, we name these templates lexical-target.</S><S sid="41" ssid="13">We add a field C0 to each template in the upper column, so that it can carry out predication according to not only the context but also the current character itself.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'41'", "'0'"]
'42'
'41'
'0'
['42', '41', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="62" ssid="13">Suppose we have n features gj (j = 1..n) coupled with n corresponding weights wj (j = 1..n), each feature gj gives a score gj(r) to a candidate r, then the total score of r is given by: The decoding procedure aims to find the candidate r* with the highest score: While the mission of the training procedure is to tune the weights wj(j = 1..n) to guarantee that the candidate r with the highest score happens to be the best result with a high probability.</S><S sid="16" ssid="12">Shown in Figure 1, the cascaded model has a two-layer architecture, with a characterbased perceptron as the core combined with other real-valued features such as language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'62'", "'16'"]
'2'
'62'
'16'
['2', '62', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="58" ssid="9">Instead of incorporating all features into the perceptron directly, we first trained the perceptron using character-based features, and several other sub-models using additional ones such as word or POS n-grams, then trained the outside-layer linear model using the outputs of these sub-models, including the perceptron.</S><S sid="16" ssid="12">Shown in Figure 1, the cascaded model has a two-layer architecture, with a characterbased perceptron as the core combined with other real-valued features such as language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'58'", "'16'"]
'2'
'58'
'16'
['2', '58', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="31" ssid="3">The perceptron has been used in many NLP tasks, such as POS tagging (Collins, 2002), Chinese word segmentation (Ng and Low, 2004; Zhang and Clark, 2007) and so on.</S><S sid="10" ssid="6">Since the typical approach of discriminative models treats segmentation as a labelling problem by assigning each character a boundary tag (Xue and Shen, 2003), Joint S&T can be conducted in a labelling fashion by expanding boundary tags to include POS information (Ng and Low, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'31'", "'10'"]
'0'
'31'
'10'
['0', '31', '10']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'9'", "'2'"]
'24'
'9'
'2'
['24', '9', '2']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
Length 0 input/ref/Task1/P08-1102_aakansha.csv
0.0 0.0 0.0





input/ref/Task1/J01-2004_aakansha.csv
input/res/Task1/J01-2004.annv3.csv
parsing: input/ref/Task1/J01-2004_aakansha.csv
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S>
original cit marker offset is 0
new cit marker offset is 0



["'372'"]
'372'
['372']
parsed_discourse_facet ['method_citation']
<S sid="17" ssid="5">This paper will examine language modeling for speech recognition from a natural language processing point of view.</S>
original cit marker offset is 0
new cit marker offset is 0



["'17'"]
'17'
['17']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="9">First, the top-down parsing algorithm builds a set of rooted candidate parse trees from left to right over the string, which allows it to calculate a generative probability for each prefix string from the probabilistic grammar, and hence a conditional probability for each word given the previous words and the probabilistic grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="9">First, the top-down parsing algorithm builds a set of rooted candidate parse trees from left to right over the string, which allows it to calculate a generative probability for each prefix string from the probabilistic grammar, and hence a conditional probability for each word given the previous words and the probabilistic grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="302" ssid="58">In the beam search approach outlined above, we can estimate the string's probability in the same manner, by summing the probabilities of the parses that the algorithm finds.</S>
original cit marker offset is 0
new cit marker offset is 0



["'302'"]
'302'
['302']
parsed_discourse_facet ['method_citation']
<S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



["'31'"]
'31'
['31']
parsed_discourse_facet ['method_citation']
<S sid="79" ssid="37">This underspecification of the nonterminal predictions (e.g., VP-VBD in the example in Figure 2, as opposed to NP), allows lexical items to become part of the left context, and so be used to condition production probabilities, even the production probabilities of constituents that dominate them in the unfactored tree.</S>
    <S sid="80" ssid="38">It also brings words further downstream into the look-ahead at the point of specification.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'80'"]
'79'
'80'
['79', '80']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="9">First, the top-down parsing algorithm builds a set of rooted candidate parse trees from left to right over the string, which allows it to calculate a generative probability for each prefix string from the probabilistic grammar, and hence a conditional probability for each word given the previous words and the probabilistic grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="138" ssid="42">Our approach is found to yield very accurate parses efficiently, and, in addition, to lend itself straightforwardly to estimating word probabilities on-line, that is, in a single pass from left to right.</S>
original cit marker offset is 0
new cit marker offset is 0



["'138'"]
'138'
['138']
parsed_discourse_facet ['method_citation']
<S sid="291" ssid="47">Also, the parser returns a set of candidate parses, from which we have been choosing the top ranked; if we use an oracle to choose the parse with the highest accuracy from among the candidates (which averaged 70.0 in number per sentence), we find an average labeled precision/recall of 94.1, for sentences of length &lt; 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'291'"]
'291'
['291']
parsed_discourse_facet ['method_citation']
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S>
original cit marker offset is 0
new cit marker offset is 0



['372']
372
['372']
parsed_discourse_facet ['method_citation']
<S sid="209" ssid="113">This parser is essentially a stochastic version of the top-down parser described in Aho, Sethi, and Ullman (1986).</S>
    <S sid="210" ssid="114">It uses a PCFG with a conditional probability model of the sort defined in the previous section.</S>
original cit marker offset is 0
new cit marker offset is 0



["'209'", "'210'"]
'209'
'210'
['209', '210']
parsed_discourse_facet ['method_citation']
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S>
original cit marker offset is 0
new cit marker offset is 0



["'372'"]
'372'
['372']
parsed_discourse_facet ['method_citation']
<S sid="20" ssid="8">Two features of our top-down parsing approach will emerge as key to its success.</S>
    <S sid="21" ssid="9">First, the top-down parsing algorithm builds a set of rooted candidate parse trees from left to right over the string, which allows it to calculate a generative probability for each prefix string from the probabilistic grammar, and hence a conditional probability for each word given the previous words and the probabilistic grammar.</S><S sid="32" ssid="20">A second key feature of our approach is that top-down guidance improves the efficiency of the search as more and more conditioning events are extracted from the derivation for use in the probabilistic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'", "'21'", "'32'"]
'20'
'21'
'32'
['20', '21', '32']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="9">First, the top-down parsing algorithm builds a set of rooted candidate parse trees from left to right over the string, which allows it to calculate a generative probability for each prefix string from the probabilistic grammar, and hence a conditional probability for each word given the previous words and the probabilistic grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["'31'"]
'31'
['31']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="21">Because the rooted partial derivation is fully connected, all of the conditioning information that might be extracted from the top-down left context has already been specified, and a conditional probability model built on this information will not impose any additional burden on the search.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'"]
'33'
['33']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/J01-2004.annv3.csv
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S><S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'372'", "'0'"]
'388'
'372'
'0'
['388', '372', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="15" ssid="3">In the past few years, however, some improvements have been made over these language models through the use of statistical methods of natural language processing, and the development of innovative, linguistically well-motivated techniques for improving language models for speech recognition is generating more interest among computational linguists.</S><S sid="17" ssid="5">This paper will examine language modeling for speech recognition from a natural language processing point of view.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'15'", "'17'"]
'388'
'15'
'17'
['388', '15', '17']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="19" ssid="7">A new language model, based on probabilistic top-down parsing, will be outlined and compared with the previous literature, and extensive empirical results will be presented which demonstrate its utility.</S><S sid="10" ssid="4">A new language model that utilizes probabilistic top-down parsing is then outlined, and empirical results show that it improves upon previous work in test corpus perplexity.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'19'", "'10'"]
'388'
'19'
'10'
['388', '19', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="207" ssid="111">The model allows us to assign probabilities to derivations, which can be used by the parsing algorithm to decide heuristically which candidates are promising and should be expanded, and which are less promising and should be pruned.</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'207'", "'137'"]
'388'
'207'
'137'
['388', '207', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="134" ssid="38">The parsers with the highest published broad-coverage parsing accuracy, which include Charniak (1997, 2000), Collins (1997, 1999), and Ratnaparkhi (1997), all utilize simple and straightforward statistically based search heuristics, pruning the search-space quite dramatically!'</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'134'", "'137'"]
'388'
'134'
'137'
['388', '134', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="268" ssid="24">This is an incremental parser with a pruning strategy and no backtracking.</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S><S sid="223" ssid="127">We implement this as a beam search.</S>
original cit marker offset is 0
new cit marker offset is 0



["'268'", "'137'", "'223'"]
'268'
'137'
'223'
['268', '137', '223']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="231" ssid="135">Since we do not know the POS for the word, we must sum the LAP for all POS For a PCFG G, a stack S = Ao An$ (which we will write AN and a look-ahead terminal item wi, we define the look-ahead probability as follows: We recursively estimate this with two empirically observed conditional probabilities for every nonterminal A,: 13(A, w,a) and P(A, c).</S><S sid="224" ssid="128">For each word position i, we have a separate priority queue H, of analyses with look-ahead w,.</S><S sid="108" ssid="12">Another approach that uses syntactic structure for language modeling has been to use a shift-reduce parser to &quot;surface&quot; c-commanding phrasal headwords or part-of-speech (POS) tags from arbitrarily far back in the prefix string, for use in a trigram-like model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'231'", "'224'", "'108'"]
'231'
'224'
'108'
['231', '224', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="223" ssid="127">We implement this as a beam search.</S><S sid="109" ssid="13">A shift-reduce parser operates from left to right using a stack and a pointer to the next word in the input string.9 Each stack entry consists minimally of a nonterminal label.</S><S sid="138" ssid="42">Our approach is found to yield very accurate parses efficiently, and, in addition, to lend itself straightforwardly to estimating word probabilities on-line, that is, in a single pass from left to right.</S>
original cit marker offset is 0
new cit marker offset is 0



["'223'", "'109'", "'138'"]
'223'
'109'
'138'
['223', '109', '138']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="274" ssid="30">This structure is evaluated for precision and recall, which is entirely appropriate for these incomplete as well as complete parses.</S><S sid="214" ssid="118">A candidate analysis C = (D, 8, PD, F, wn consists of a derivation D, a stack S. a derivation probability PD, a figure of merit F, and a string w7 remaining to be parsed.</S><S sid="223" ssid="127">We implement this as a beam search.</S>
original cit marker offset is 0
new cit marker offset is 0



["'274'", "'214'", "'223'"]
'274'
'214'
'223'
['274', '214', '223']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="291" ssid="47">Also, the parser returns a set of candidate parses, from which we have been choosing the top ranked; if we use an oracle to choose the parse with the highest accuracy from among the candidates (which averaged 70.0 in number per sentence), we find an average labeled precision/recall of 94.1, for sentences of length < 100.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="9" ssid="3">A lexicalized probabilistic topdown parser is then presented, which performs very well, in terms of both the accuracy of returned parses and the efficiency with which they are found, relative to the best broad-coverage statistical parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'291'", "'388'", "'9'"]
'291'
'388'
'9'
['291', '388', '9']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S><S sid="355" ssid="111">In order to get a sense of whether these perplexity reduction results can translate to improvement in a speech recognition task, we performed a very small preliminary experiment on n-best lists.</S><S sid="214" ssid="118">A candidate analysis C = (D, 8, PD, F, wn consists of a derivation D, a stack S. a derivation probability PD, a figure of merit F, and a string w7 remaining to be parsed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'372'", "'355'", "'214'"]
'372'
'355'
'214'
['372', '355', '214']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S><S sid="102" ssid="6">One approach to syntactic language modeling is to use this distribution directly as a language model.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'102'", "'388'"]
'0'
'102'
'388'
['0', '102', '388']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="313" ssid="69">By utilizing a figure of merit to identify promising analyses, we are simply focusing our attention on those parses that are likely to have a high probability, and thus we are increasing the amount of probability mass that we do capture, of the total possible.</S><S sid="100" ssid="4">The approach that we will subsequently present uses the probabilistic grammar as its language model, but only includes probability mass from those parses that are found, that is, it uses the parser to find a subset of the total set of parses (hopefully most of the high-probability parses) and uses the sum of their probabilities as an estimate of the true probability given the grammar.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S>
original cit marker offset is 0
new cit marker offset is 0



["'313'", "'100'", "'388'"]
'313'
'100'
'388'
['313', '100', '388']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="263" ssid="19">Following standard practice, we will be reporting scores only for non-part-of-speech constituents, which are called labeled recall (LR) and labeled precision (LP).</S><S sid="245" ssid="1">The empirical results will be presented in three stages: (i) trials to examine the accuracy and efficiency of the parser; (ii) trials to examine its effect on test corpus perplexity and recognition performance; and (iii) trials to examine the effect of beam variation on these performance measures.</S><S sid="108" ssid="12">Another approach that uses syntactic structure for language modeling has been to use a shift-reduce parser to &quot;surface&quot; c-commanding phrasal headwords or part-of-speech (POS) tags from arbitrarily far back in the prefix string, for use in a trigram-like model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'263'", "'245'", "'108'"]
'263'
'245'
'108'
['263', '245', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="329" ssid="85">Table 3 shows several things.</S><S sid="19" ssid="7">A new language model, based on probabilistic top-down parsing, will be outlined and compared with the previous literature, and extensive empirical results will be presented which demonstrate its utility.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'329'", "'19'"]
'388'
'329'
'19'
['388', '329', '19']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="397" ssid="10">A top-down parser, in contrast to a standard bottom-up chart parser, has enough information to predict empty categories only where they are likely to occur.</S><S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S><S sid="209" ssid="113">This parser is essentially a stochastic version of the top-down parser described in Aho, Sethi, and Ullman (1986).</S>
original cit marker offset is 0
new cit marker offset is 0



["'397'", "'0'", "'209'"]
'397'
'0'
'209'
['397', '0', '209']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="269" ssid="25">In such a model, it is possible to commit to a set of partial analyses at a particular point that cannot be completed given the rest of the input string (i.e., the parser can &quot;garden path&quot;).</S><S sid="310" ssid="66">This is a subset of the possible leftmost partial derivations with respect to the prefix string W. Since RV is produced by expanding only analyses on priority queue H;', the set of complete trees consistent with the partial derivations on priority queue Ht is a subset of the set of complete trees consistent with the partial derivations on priority queue HT'', that is, the total probability mass represented by the priority queues is monotonically decreasing.</S><S sid="306" ssid="62">Recall the discussion of the grammar models above, and our definition of the set of partial derivations Dw, with respect to a prefix string wil) (see Equations 2 and 7).</S>
original cit marker offset is 0
new cit marker offset is 0



["'269'", "'310'", "'306'"]
'269'
'310'
'306'
['269', '310', '306']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.'])
dict_values(['The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.', 'The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.', 'Probabilistic Top-Down Parsing and Language Modeling'])
['system', 'ROUGE-S*', 'Average_R:', '0.20920', '(95%-conf.int.', '0.20920', '-', '0.20920)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.34601', '(95%-conf.int.', '0.34601', '-', '0.34601)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:91', 'F:91']
dict_values(['This paper will examine language modeling for speech recognition from a natural language processing point of view.'])
dict_values(['The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.', 'In the past few years, however, some improvements have been made over these language models through the use of statistical methods of natural language processing, and the development of innovative, linguistically well-motivated techniques for improving language models for speech recognition is generating more interest among computational linguists.', 'This paper will examine language modeling for speech recognition from a natural language processing point of view.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05088', '(95%-conf.int.', '0.05088', '-', '0.05088)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.09683', '(95%-conf.int.', '0.09683', '-', '0.09683)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:55', 'F:55']
dict_values(['This underspecification of the nonterminal predictions (e.g., VP-VBD in the example in Figure 2, as opposed to NP), allows lexical items to become part of the left context, and so be used to condition production probabilities, even the production probabilities of constituents that dominate them in the unfactored tree.', 'It also brings words further downstream into the look-ahead at the point of specification.'])
dict_values(['Since we do not know the POS for the word, we must sum the LAP for all POS For a PCFG G, a stack S = Ao An$ (which we will write AN and a look-ahead terminal item wi, we define the look-ahead probability as follows: We recursively estimate this with two empirically observed conditional probabilities for every nonterminal A,: 13(A, w,a) and P(A, c).', 'For each word position i, we have a separate priority queue H, of analyses with look-ahead w,.', 'Another approach that uses syntactic structure for language modeling has been to use a shift-reduce parser to &quot;surface&quot; c-commanding phrasal headwords or part-of-speech (POS) tags from arbitrarily far back in the prefix string, for use in a trigram-like model.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01212', '(95%-conf.int.', '0.01212', '-', '0.01212)']
['system', 'ROUGE-S*', 'Average_P:', '0.04433', '(95%-conf.int.', '0.04433', '-', '0.04433)']
['system', 'ROUGE-S*', 'Average_F:', '0.01904', '(95%-conf.int.', '0.01904', '-', '0.01904)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1485', 'P:406', 'F:18']
dict_values(['Also, the parser returns a set of candidate parses, from which we have been choosing the top ranked; if we use an oracle to choose the parse with the highest accuracy from among the candidates (which averaged 70.0 in number per sentence), we find an average labeled precision/recall of 94.1, for sentences of length &lt; 100.'])
dict_values(['Also, the parser returns a set of candidate parses, from which we have been choosing the top ranked; if we use an oracle to choose the parse with the highest accuracy from among the candidates (which averaged 70.0 in number per sentence), we find an average labeled precision/recall of 94.1, for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.86897', '(95%-conf.int.', '0.86897', '-', '0.86897)']
['system', 'ROUGE-S*', 'Average_F:', '0.92989', '(95%-conf.int.', '0.92989', '-', '0.92989)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:435', 'F:378']
dict_values(['The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.'])
dict_values(['The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.', 'In order to get a sense of whether these perplexity reduction results can translate to improvement in a speech recognition task, we performed a very small preliminary experiment on n-best lists.', 'A candidate analysis C = (D, 8, PD, F, wn consists of a derivation D, a stack S. a derivation probability PD, a figure of merit F, and a string w7 remaining to be parsed.'])
['system', 'ROUGE-S*', 'Average_R:', '0.08792', '(95%-conf.int.', '0.08792', '-', '0.08792)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.16163', '(95%-conf.int.', '0.16163', '-', '0.16163)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1035', 'P:91', 'F:91']
dict_values(['This parser is essentially a stochastic version of the top-down parser described in Aho, Sethi, and Ullman (1986).', 'It uses a PCFG with a conditional probability model of the sort defined in the previous section.'])
dict_values(['Probabilistic Top-Down Parsing and Language Modeling', 'One approach to syntactic language modeling is to use this distribution directly as a language model.', 'The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00362', '(95%-conf.int.', '0.00362', '-', '0.00362)']
['system', 'ROUGE-S*', 'Average_P:', '0.00654', '(95%-conf.int.', '0.00654', '-', '0.00654)']
['system', 'ROUGE-S*', 'Average_F:', '0.00466', '(95%-conf.int.', '0.00466', '-', '0.00466)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:276', 'P:153', 'F:1']
dict_values(['The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.'])
dict_values(['By utilizing a figure of merit to identify promising analyses, we are simply focusing our attention on those parses that are likely to have a high probability, and thus we are increasing the amount of probability mass that we do capture, of the total possible.', 'The approach that we will subsequently present uses the probabilistic grammar as its language model, but only includes probability mass from those parses that are found, that is, it uses the parser to find a subset of the total set of parses (hopefully most of the high-probability parses) and uses the sum of their probabilities as an estimate of the true probability given the grammar.', 'The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1540', 'P:91', 'F:0']
dict_values(['Because the rooted partial derivation is fully connected, all of the conditioning information that might be extracted from the top-down left context has already been specified, and a conditional probability model built on this information will not impose any additional burden on the search.'])
dict_values(['In such a model, it is possible to commit to a set of partial analyses at a particular point that cannot be completed given the rest of the input string (i.e., the parser can &quot;garden path&quot;).', "This is a subset of the possible leftmost partial derivations with respect to the prefix string W. Since RV is produced by expanding only analyses on priority queue H;', the set of complete trees consistent with the partial derivations on priority queue Ht is a subset of the set of complete trees consistent with the partial derivations on priority queue HT'', that is, the total probability mass represented by the priority queues is monotonically decreasing.", 'Recall the discussion of the grammar models above, and our definition of the set of partial derivations Dw, with respect to a prefix string wil) (see Equations 2 and 7).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00241', '(95%-conf.int.', '0.00241', '-', '0.00241)']
['system', 'ROUGE-S*', 'Average_P:', '0.03158', '(95%-conf.int.', '0.03158', '-', '0.03158)']
['system', 'ROUGE-S*', 'Average_F:', '0.00449', '(95%-conf.int.', '0.00449', '-', '0.00449)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2485', 'P:190', 'F:6']
0.4939274938259064 0.17076874786539067 0.1953187475585157





input/ref/Task1/D10-1044_aakansha.csv
input/res/Task1/D10-1044.annv3.csv
parsing: input/ref/Task1/D10-1044_aakansha.csv
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'"]
'144'
['144']
parsed_discourse_facet ['method_citation']
<S sid="95" ssid="32">Phrase tables were extracted from the IN and OUT training corpora (not the dev as was used for instance weighting models), and phrase pairs in the intersection of the IN and OUT phrase tables were used as positive examples, with two alternate definitions of negative examples: The classifier trained using the 2nd definition had higher accuracy on a development set.</S>
    <S sid="96" ssid="33">We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'", "'96'"]
'95'
'96'
['95', '96']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="6">In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material&#8212;though adequate for reasonable performance&#8212;is also available.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'"]
'62'
['62']
parsed_discourse_facet ['method_citation']
<S sid="28" ssid="25">We train linear mixture models for conditional phrase pair probabilities over IN and OUT so as to maximize the likelihood of an empirical joint phrase-pair distribution extracted from a development set.</S>
original cit marker offset is 0
new cit marker offset is 0



["'28'"]
'28'
['28']
parsed_discourse_facet ['method_citation']
<S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'"]
'23'
['23']
parsed_discourse_facet ['method_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'"]
'144'
['144']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="6">In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material&#8212;though adequate for reasonable performance&#8212;is also available.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="28" ssid="25">We train linear mixture models for conditional phrase pair probabilities over IN and OUT so as to maximize the likelihood of an empirical joint phrase-pair distribution extracted from a development set.</S>
original cit marker offset is 0
new cit marker offset is 0



["'28'"]
'28'
['28']
parsed_discourse_facet ['method_citation']
<S sid="75" ssid="12">However, it is robust, efficient, and easy to implement.4 To perform the maximization in (7), we used the popular L-BFGS algorithm (Liu and Nocedal, 1989), which requires gradient information.</S>
original cit marker offset is 0
new cit marker offset is 0



["'75'"]
'75'
['75']
parsed_discourse_facet ['method_citation']
<S sid="31" ssid="28">For comparison to information-retrieval inspired baselines, eg (L&#168;u et al., 2007), we select sentences from OUT using language model perplexities from IN.</S>
original cit marker offset is 0
new cit marker offset is 0



["'31'"]
'31'
['31']
parsed_discourse_facet ['method_citation']
<S sid="22" ssid="19">Within this framework, we use features intended to capture degree of generality, including the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'22'"]
'22'
['22']
parsed_discourse_facet ['method_citation']
<S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'"]
'23'
['23']
parsed_discourse_facet ['method_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'"]
'62'
['62']
parsed_discourse_facet ['method_citation']
<S sid="119" ssid="23">The 2nd block contains the IR system, which was tuned by selecting text in multiples of the size of the EMEA training corpus, according to dev set performance.</S>
    <S sid="120" ssid="24">This significantly underperforms log-linear combination.</S>
original cit marker offset is 0
new cit marker offset is 0



["'119'", "'120'"]
'119'
'120'
['119', '120']
parsed_discourse_facet ['result_citation']
<S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S>
    <S sid="24" ssid="21">Sentence pairs are the natural instances for SMT, but sentences often contain a mix of domain-specific and general language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'24'"]
'23'
'24'
['23', '24']
parsed_discourse_facet ['method_citation']
<S sid="40" ssid="4">We focus here instead on adapting the two most important features: the language model (LM), which estimates the probability p(wIh) of a target word w following an ngram h; and the translation models (TM) p(slt) and p(t1s), which give the probability of source phrase s translating to target phrase t, and vice versa.</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'"]
'40'
['40']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/D10-1044.annv3.csv
<S sid="143" ssid="12">Other work includes transferring latent topic distributions from source to target language for LM adaptation, (Tam et al., 2007) and adapting features at the sentence level to different categories of sentence (Finch and Sumita, 2008).</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="4" ssid="1">Domain adaptation is a common concern when optimizing empirical NLP applications.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'1'", "'4'"]
'143'
'1'
'4'
['143', '1', '4']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="65" ssid="2">Matsoukas et al (2009) generalize it by learning weights on sentence pairs that are used when estimating relative-frequency phrase-pair probabilities.</S><S sid="96" ssid="33">We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'65'", "'96'"]
'68'
'65'
'96'
['68', '65', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="9" ssid="6">In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material—though adequate for reasonable performance—is also available.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'", "'1'", "'9'"]
'144'
'1'
'9'
['144', '1', '9']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'", "'145'", "'1'"]
'62'
'145'
'1'
['62', '145', '1']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S><S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'62'"]
'0'
'23'
'62'
['0', '23', '62']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="65" ssid="2">Matsoukas et al (2009) generalize it by learning weights on sentence pairs that are used when estimating relative-frequency phrase-pair probabilities.</S><S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="67" ssid="4">We extend the Matsoukas et al approach in several ways.</S>
original cit marker offset is 0
new cit marker offset is 0



["'65'", "'68'", "'67'"]
'65'
'68'
'67'
['65', '68', '67']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="18">This highly effective approach is not directly applicable to the multinomial models used for core SMT components, which have no natural method for combining split features, so we rely on an instance-weighting approach (Jiang and Zhai, 2007) to downweight domain-specific examples in OUT.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'145'", "'0'"]
'21'
'145'
'0'
['21', '145', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="148" ssid="5">Mixing, smoothing, and instance-feature weights are learned at the same time using an efficient maximum-likelihood procedure that relies on only a small in-domain development corpus.</S><S sid="97" ssid="1">We carried out translation experiments in two different settings.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'148'", "'97'"]
'145'
'148'
'97'
['145', '148', '97']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S><S sid="117" ssid="21">The natural baseline (baseline) outperforms the pure IN system only for EMEA/EP fren.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'117'", "'62'"]
'0'
'117'
'62'
['0', '117', '62']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="42" ssid="6">The natural baseline approach is to concatenate data from IN and OUT.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="28" ssid="25">We train linear mixture models for conditional phrase pair probabilities over IN and OUT so as to maximize the likelihood of an empirical joint phrase-pair distribution extracted from a development set.</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'145'", "'28'"]
'42'
'145'
'28'
['42', '145', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="84" ssid="21">An alternate approximation to (8) would be to let w,\(s, t) directly approximate pˆI(s, t).</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="32" ssid="29">This is a straightforward technique that is arguably better suited to the adaptation task than the standard method of treating representative IN sentences as queries, then pooling the match results.</S>
original cit marker offset is 0
new cit marker offset is 0



["'84'", "'1'", "'32'"]
'84'
'1'
'32'
['84', '1', '32']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="75" ssid="12">However, it is robust, efficient, and easy to implement.4 To perform the maximization in (7), we used the popular L-BFGS algorithm (Liu and Nocedal, 1989), which requires gradient information.</S><S sid="84" ssid="21">An alternate approximation to (8) would be to let w,\(s, t) directly approximate pˆI(s, t).</S><S sid="63" ssid="27">The number of top-ranked pairs to retain is chosen to optimize dev-set BLEU score.</S>
original cit marker offset is 0
new cit marker offset is 0



["'75'", "'84'", "'63'"]
'75'
'84'
'63'
['75', '84', '63']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S><S sid="31" ssid="28">For comparison to information-retrieval inspired baselines, eg (L¨u et al., 2007), we select sentences from OUT using language model perplexities from IN.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'", "'31'", "'1'"]
'144'
'31'
'1'
['144', '31', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="22" ssid="19">Within this framework, we use features intended to capture degree of generality, including the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S>
original cit marker offset is 0
new cit marker offset is 0



["'22'", "'145'", "'0'"]
'22'
'145'
'0'
['22', '145', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'145'", "'1'"]
'23'
'145'
'1'
['23', '145', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'62'", "'1'"]
'145'
'62'
'1'
['145', '62', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="42" ssid="6">The natural baseline approach is to concatenate data from IN and OUT.</S><S sid="117" ssid="21">The natural baseline (baseline) outperforms the pure IN system only for EMEA/EP fren.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'117'", "'145'"]
'42'
'117'
'145'
['42', '117', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="38" ssid="2">The toplevel weights are trained to maximize a metric such as BLEU on a small development set of approximately 1000 sentence pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'1'", "'38'"]
'68'
'1'
'38'
['68', '1', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="40" ssid="4">We focus here instead on adapting the two most important features: the language model (LM), which estimates the probability p(wIh) of a target word w following an ngram h; and the translation models (TM) p(slt) and p(t1s), which give the probability of source phrase s translating to target phrase t, and vice versa.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'40'", "'145'"]
'68'
'40'
'145'
['68', '40', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.'])
dict_values(['Other work includes transferring latent topic distributions from source to target language for LM adaptation, (Tam et al., 2007) and adapting features at the sentence level to different categories of sentence (Finch and Sumita, 2008).', 'We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.', 'Domain adaptation is a common concern when optimizing empirical NLP applications.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01388', '(95%-conf.int.', '0.01388', '-', '0.01388)']
['system', 'ROUGE-S*', 'Average_P:', '0.19231', '(95%-conf.int.', '0.19231', '-', '0.19231)']
['system', 'ROUGE-S*', 'Average_F:', '0.02588', '(95%-conf.int.', '0.02588', '-', '0.02588)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:78', 'F:15']
dict_values(['Phrase tables were extracted from the IN and OUT training corpora (not the dev as was used for instance weighting models), and phrase pairs in the intersection of the IN and OUT phrase tables were used as positive examples, with two alternate definitions of negative examples: The classifier trained using the 2nd definition had higher accuracy on a development set.', 'We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.'])
dict_values(['First, we learn weights on individual phrase pairs rather than sentences.', 'Matsoukas et al (2009) generalize it by learning weights on sentence pairs that are used when estimating relative-frequency phrase-pair probabilities.', 'We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.'])
['system', 'ROUGE-S*', 'Average_R:', '0.20860', '(95%-conf.int.', '0.20860', '-', '0.20860)']
['system', 'ROUGE-S*', 'Average_P:', '0.13798', '(95%-conf.int.', '0.13798', '-', '0.13798)']
['system', 'ROUGE-S*', 'Average_F:', '0.16610', '(95%-conf.int.', '0.16610', '-', '0.16610)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:465', 'P:703', 'F:97']
dict_values(['In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material&#8212;though adequate for reasonable performance&#8212;is also available.'])
dict_values(['In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.', 'We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.', 'In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material—though adequate for reasonable performance—is also available.'])
['system', 'ROUGE-S*', 'Average_R:', '0.15160', '(95%-conf.int.', '0.15160', '-', '0.15160)']
['system', 'ROUGE-S*', 'Average_P:', '0.81429', '(95%-conf.int.', '0.81429', '-', '0.81429)']
['system', 'ROUGE-S*', 'Average_F:', '0.25561', '(95%-conf.int.', '0.25561', '-', '0.25561)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1128', 'P:210', 'F:171']
dict_values(['To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.'])
dict_values(['To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.', 'Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.', 'We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.'])
['system', 'ROUGE-S*', 'Average_R:', '0.14634', '(95%-conf.int.', '0.14634', '-', '0.14634)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.25532', '(95%-conf.int.', '0.25532', '-', '0.25532)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:820', 'P:120', 'F:120']
dict_values(['In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material&#8212;though adequate for reasonable performance&#8212;is also available.'])
dict_values(['Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation', 'The natural baseline (baseline) outperforms the pure IN system only for EMEA/EP fren.', 'To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00568', '(95%-conf.int.', '0.00568', '-', '0.00568)']
['system', 'ROUGE-S*', 'Average_P:', '0.01429', '(95%-conf.int.', '0.01429', '-', '0.01429)']
['system', 'ROUGE-S*', 'Average_F:', '0.00813', '(95%-conf.int.', '0.00813', '-', '0.00813)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:210', 'F:3']
dict_values(['Within this framework, we use features intended to capture degree of generality, including the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.'])
dict_values(['Within this framework, we use features intended to capture degree of generality, including the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.', 'Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.', 'Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation'])
['system', 'ROUGE-S*', 'Average_R:', '0.17931', '(95%-conf.int.', '0.17931', '-', '0.17931)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.30409', '(95%-conf.int.', '0.30409', '-', '0.30409)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:78', 'F:78']
dict_values(['Our second contribution is to apply instance weighting at the level of phrase pairs.'])
dict_values(['Our second contribution is to apply instance weighting at the level of phrase pairs.', 'Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.', 'We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.'])
['system', 'ROUGE-S*', 'Average_R:', '0.04234', '(95%-conf.int.', '0.04234', '-', '0.04234)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.08124', '(95%-conf.int.', '0.08124', '-', '0.08124)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:21', 'F:21']
dict_values(['Our second contribution is to apply instance weighting at the level of phrase pairs.', 'Sentence pairs are the natural instances for SMT, but sentences often contain a mix of domain-specific and general language.'])
dict_values(['First, we learn weights on individual phrase pairs rather than sentences.', 'We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.', 'The toplevel weights are trained to maximize a metric such as BLEU on a small development set of approximately 1000 sentence pairs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.06667', '(95%-conf.int.', '0.06667', '-', '0.06667)']
['system', 'ROUGE-S*', 'Average_P:', '0.27451', '(95%-conf.int.', '0.27451', '-', '0.27451)']
['system', 'ROUGE-S*', 'Average_F:', '0.10728', '(95%-conf.int.', '0.10728', '-', '0.10728)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:153', 'F:42']
dict_values(['We focus here instead on adapting the two most important features: the language model (LM), which estimates the probability p(wIh) of a target word w following an ngram h; and the translation models (TM) p(slt) and p(t1s), which give the probability of source phrase s translating to target phrase t, and vice versa.'])
dict_values(['First, we learn weights on individual phrase pairs rather than sentences.', 'We focus here instead on adapting the two most important features: the language model (LM), which estimates the probability p(wIh) of a target word w following an ngram h; and the translation models (TM) p(slt) and p(t1s), which give the probability of source phrase s translating to target phrase t, and vice versa.', 'Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.'])
['system', 'ROUGE-S*', 'Average_R:', '0.38870', '(95%-conf.int.', '0.38870', '-', '0.38870)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.55981', '(95%-conf.int.', '0.55981', '-', '0.55981)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:351', 'F:351']
0.6037088821810125 0.1336799985146667 0.1959399978228889





input/ref/Task1/A97-1014_sweta.csv
input/res/Task1/A97-1014.annv3.csv
parsing: input/ref/Task1/A97-1014_sweta.csv
<S sid="168" ssid="10">We will closely coordinate the further development of our corpus with the annotation work in Verbmobil and with other German efforts in corpus annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



["168'"]
168'
['168']
parsed_discourse_facet ['method_citation']
<S sid="165" ssid="7">In addition the approach provides empirical material for psycholinguistic investigation, since preferences for the choice of certain syntactic constructions, linea.rizations, and attachments that have been observed in online experiments of language production and comprehension can now be put in relation with the frequency of these alternatives in larger amounts of texts.</S>
original cit marker offset is 0
new cit marker offset is 0



["165'"]
165'
['165']
parsed_discourse_facet ['method_citation']
<S sid="145" ssid="26">This amount of data suffices as training material to reliably assign the grammatical functions if the user determines the elements of a phrase and its type (step 1 of the list above).</S>
original cit marker offset is 0
new cit marker offset is 0



["145'"]
145'
['145']
parsed_discourse_facet ['method_citation']
<S sid="15" ssid="5">Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.<
original cit marker offset is 0
new cit marker offset is 0



["15'"]
15'
['15']
parsed_discourse_facet ['method_citation']
<S sid="41" ssid="31">Apart from this rather technical problem, two further arguments speak against phrase structure as the structural pivot of the annotation scheme: Finally, the structural handling of free word order means stating well-formedness constraints on structures involving many trace-filler dependencies, which has proved tedious.</S>
original cit marker offset is 0
new cit marker offset is 0



["41'"]
41'
['41']
parsed_discourse_facet ['method_citation']
<S sid="47" ssid="37">Argument structure can be represented in terms of unordered trees (with crossing branches).</S>
original cit marker offset is 0
new cit marker offset is 0



["47'"]
47'
['47']
parsed_discourse_facet ['method_citation']
<S sid="167" ssid="9">In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.</S>
original cit marker offset is 0
new cit marker offset is 0



["167'"]
167'
['167']
parsed_discourse_facet ['method_citation']
 <S sid="167" ssid="9">In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.</S>
original cit marker offset is 0
new cit marker offset is 0



["167'"]
167'
['167']
parsed_discourse_facet ['method_citation']
<S sid="39" ssid="29">Consider the German sentence (1) daran wird ihn Anna erkennen, &amp;di er weint at-it will him Anna recognise that he cries 'Anna will recognise him at his cry' A sample constituent structure is given below: The fairly short sentence contains three non-local dependencies, marked by co-references between traces and the corresponding nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["39'"]
39'
['39']
parsed_discourse_facet ['method_citation']
<S sid="160" ssid="2">These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.</S>
original cit marker offset is 0
new cit marker offset is 0



["160'"]
160'
['160']
parsed_discourse_facet ['method_citation']
<S sid="166" ssid="8">Syntactically annotated corpora of German have been missing until now.</S>
original cit marker offset is 0
new cit marker offset is 0



["166'"]
166'
['166']
parsed_discourse_facet ['method_citation']
<S sid="166" ssid="8">Syntactically annotated corpora of German have been missing until now.</S>
original cit marker offset is 0
new cit marker offset is 0



["166'"]
166'
['166']
parsed_discourse_facet ['method_citation']
<S sid="143" ssid="24">Sentences annotated in previous steps are used as training material for further processing.</S>
original cit marker offset is 0
new cit marker offset is 0



["143'"]
143'
['143']
parsed_discourse_facet ['method_citation']
  <S sid="71" ssid="16">However, there is a trade-off between the granularity of information encoded in the labels and the speed and accuracy of annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



["71'"]
71'
['71']
parsed_discourse_facet ['method_citation']
  <S sid="167" ssid="9">In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.</S>
original cit marker offset is 0
new cit marker offset is 0



["167'"]
167'
['167']
parsed_discourse_facet ['method_citation']
<S sid="151" ssid="32">For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).</S>
original cit marker offset is 0
new cit marker offset is 0



["151'"]
151'
['151']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/A97-1014.annv3.csv
<S sid="74" ssid="19">During the first phase, the focus is on annotating correct structures and a coarse-grained classification of grammatical functions, which represent the following areas of information: Dependency type: complements are further classified according to features such as category and case: clausal complements (OC), accusative objects (OA), datives (DA), etc.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S><S sid="170" ssid="12">Our annotation tool supplies efficient manipulation and immediate visualization of argument structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'74'", "'88'", "'170'"]
'74'
'88'
'170'
['74', '88', '170']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="72" ssid="17">In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="144" ssid="25">We distinguish five degrees of automation: So far, about 1100 sentences of our corpus have been annotated.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'", "'4'", "'144'"]
'72'
'4'
'144'
['72', '4', '144']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="153" ssid="34">The tagger rates 90% of all assignments as reliable and carries them out fully automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'159'", "'153'"]
'24'
'159'
'153'
['24', '159', '153']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="15" ssid="5">Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.</S><S sid="57" ssid="2">Argument structure, represented in terms of unordered trees.</S><S sid="0" ssid="0">An Annotation Scheme for Free Word Order Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'57'", "'0'"]
'15'
'57'
'0'
['15', '57', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="111" ssid="24">If the scope of such a word does not directly correspond to a tree node, the word is attached to the lowest node dominating all subconstituents appearing in its scope.</S><S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="47" ssid="37">Argument structure can be represented in terms of unordered trees (with crossing branches).</S>
original cit marker offset is 0
new cit marker offset is 0



["'111'", "'24'", "'47'"]
'111'
'24'
'47'
['111', '24', '47']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'24'", "'4'"]
'159'
'24'
'4'
['159', '24', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="167" ssid="9">In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.</S><S sid="141" ssid="22">The corpus is stored in a SQL database.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'167'", "'141'", "'4'"]
'167'
'141'
'4'
['167', '141', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="166" ssid="8">Syntactically annotated corpora of German have been missing until now.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="1" ssid="1">We describe an annotation scheme and a tool developed for creating linguistically annotated corpora for non-configurational languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'166'", "'4'", "'1'"]
'166'
'4'
'1'
['166', '4', '1']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S><S sid="0" ssid="0">An Annotation Scheme for Free Word Order Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'88'", "'0'"]
'159'
'88'
'0'
['159', '88', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="121" ssid="2">In order to make the annotation process more efficient, extra effort has been put. into the development of an annotation tool.</S><S sid="74" ssid="19">During the first phase, the focus is on annotating correct structures and a coarse-grained classification of grammatical functions, which represent the following areas of information: Dependency type: complements are further classified according to features such as category and case: clausal complements (OC), accusative objects (OA), datives (DA), etc.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'121'", "'74'"]
'159'
'121'
'74'
['159', '121', '74']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="72" ssid="17">In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'", "'4'", "'88'"]
'72'
'4'
'88'
['72', '4', '88']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="141" ssid="22">The corpus is stored in a SQL database.</S><S sid="143" ssid="24">Sentences annotated in previous steps are used as training material for further processing.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'", "'141'", "'143'"]
'4'
'141'
'143'
['4', '141', '143']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="71" ssid="16">However, there is a trade-off between the granularity of information encoded in the labels and the speed and accuracy of annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'", "'159'", "'71'"]
'4'
'159'
'71'
['4', '159', '71']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="160" ssid="2">These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="151" ssid="32">For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).</S>
original cit marker offset is 0
new cit marker offset is 0



["'160'", "'4'", "'151'"]
'160'
'4'
'151'
['160', '4', '151']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['In addition the approach provides empirical material for psycholinguistic investigation, since preferences for the choice of certain syntactic constructions, linea.rizations, and attachments that have been observed in online experiments of language production and comprehension can now be put in relation with the frequency of these alternatives in larger amounts of texts.'])
dict_values(['In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.', "The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.", 'We distinguish five degrees of automation: So far, about 1100 sentences of our corpus have been annotated.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:325', 'F:0']
dict_values(['This amount of data suffices as training material to reliably assign the grammatical functions if the user determines the elements of a phrase and its type (step 1 of the list above).'])
dict_values(['The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.', 'As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.', 'The tagger rates 90% of all assignments as reliable and carries them out fully automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:136', 'F:0']
dict_values(['Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.'])
dict_values(['Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.', 'Argument structure, represented in terms of unordered trees.', 'An Annotation Scheme for Free Word Order Languages'])
['system', 'ROUGE-S*', 'Average_R:', '0.29915', '(95%-conf.int.', '0.29915', '-', '0.29915)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.46053', '(95%-conf.int.', '0.46053', '-', '0.46053)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:105', 'F:105']
dict_values(['In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.'])
dict_values(['As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.', 'The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.', "The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction."])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:703', 'P:91', 'F:0']
dict_values(['In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.'])
dict_values(['In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.', 'The corpus is stored in a SQL database.', "The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction."])
['system', 'ROUGE-S*', 'Average_R:', '0.20920', '(95%-conf.int.', '0.20920', '-', '0.20920)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.34601', '(95%-conf.int.', '0.34601', '-', '0.34601)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:91', 'F:91']
dict_values(['These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.'])
dict_values(['As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.', 'As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.', 'An Annotation Scheme for Free Word Order Languages'])
['system', 'ROUGE-S*', 'Average_R:', '0.01008', '(95%-conf.int.', '0.01008', '-', '0.01008)']
['system', 'ROUGE-S*', 'Average_P:', '0.28571', '(95%-conf.int.', '0.28571', '-', '0.28571)']
['system', 'ROUGE-S*', 'Average_F:', '0.01948', '(95%-conf.int.', '0.01948', '-', '0.01948)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:595', 'P:21', 'F:6']
dict_values(['Syntactically annotated corpora of German have been missing until now.'])
dict_values(['As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.', 'In order to make the annotation process more efficient, extra effort has been put. into the development of an annotation tool.', 'During the first phase, the focus is on annotating correct structures and a coarse-grained classification of grammatical functions, which represent the following areas of information: Dependency type: complements are further classified according to features such as category and case: clausal complements (OC), accusative objects (OA), datives (DA), etc.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1378', 'P:10', 'F:0']
dict_values(['Syntactically annotated corpora of German have been missing until now.'])
dict_values(['In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.', "The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.", 'As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00450', '(95%-conf.int.', '0.00450', '-', '0.00450)']
['system', 'ROUGE-S*', 'Average_P:', '0.30000', '(95%-conf.int.', '0.30000', '-', '0.30000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00888', '(95%-conf.int.', '0.00888', '-', '0.00888)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:10', 'F:3']
dict_values(['Sentences annotated in previous steps are used as training material for further processing.'])
dict_values(["The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.", 'The corpus is stored in a SQL database.', 'Sentences annotated in previous steps are used as training material for further processing.'])
['system', 'ROUGE-S*', 'Average_R:', '0.08300', '(95%-conf.int.', '0.08300', '-', '0.08300)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.15328', '(95%-conf.int.', '0.15328', '-', '0.15328)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:253', 'P:21', 'F:21']
dict_values(['However, there is a trade-off between the granularity of information encoded in the labels and the speed and accuracy of annotation.'])
dict_values(["The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.", 'As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.', 'However, there is a trade-off between the granularity of information encoded in the labels and the speed and accuracy of annotation.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05303', '(95%-conf.int.', '0.05303', '-', '0.05303)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.10072', '(95%-conf.int.', '0.10072', '-', '0.10072)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:28', 'F:28']
dict_values(['For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).'])
dict_values(['These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.', "The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.", 'For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).'])
['system', 'ROUGE-S*', 'Average_R:', '0.12644', '(95%-conf.int.', '0.12644', '-', '0.12644)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.22449', '(95%-conf.int.', '0.22449', '-', '0.22449)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:55', 'F:55']
0.5077918135655289 0.0713999993509091 0.11939908982364465





input/ref/Task1/P11-1060_aakansha.csv
input/res/Task1/P11-1060.annv3.csv
parsing: input/ref/Task1/P11-1060_aakansha.csv
<S sid="11" ssid="7">Figure 1 shows our probabilistic model: with respect to a world w (database of facts), producing an answer y.</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'"]
'11'
['11']
parsed_discourse_facet ['method_citation']
<S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'"]
'2'
['2']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="5">As in Clarke et al. (2010), we obviate the need for annotated logical forms by considering the endto-end problem of mapping questions to answers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="112" ssid="88">Our learning algorithm alternates between (i) using the current parameters &#952; to generate the K-best set &#732;ZL,&#952;(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.</S>
original cit marker offset is 0
new cit marker offset is 0



["'112'"]
'112'
['112']
parsed_discourse_facet ['method_citation']
<S sid="35" ssid="11">Although a DCS tree is a logical form, note that it looks like a syntactic dependency tree with predicates in place of words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'"]
'11'
['11']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="6">However, we still model the logical form (now as a latent variable) to capture the complexities of language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'10'"]
'10'
['10']
parsed_discourse_facet ['method_citation']
<S sid="36" ssid="12">It is this transparency between syntax and semantics provided by DCS which leads to a simple and streamlined compositional semantics suitable for program induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
<S sid="42" ssid="18">The denotation JzKw (z evaluated on w) is the set of consistent values of the root node (see Figure 2 for an example).</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'"]
'42'
['42']
parsed_discourse_facet ['method_citation']
<S sid="106" ssid="82">Learning Given a training dataset D containing (x, y) pairs, we define the regularized marginal log-likelihood objective O(&#952;) = E(x,y)ED log p&#952;(JzKw = y  |x, z &#8712; ZL(x)) &#8722; &#955;k&#952;k22, which sums over all DCS trees z that evaluate to the target answer y.</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'"]
'106'
['106']
parsed_discourse_facet ['method_citation']
<S sid="45" ssid="21">The logical forms in DCS are called DCS trees, where nodes are labeled with predicates, and edges are labeled with relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'"]
'45'
['45']
parsed_discourse_facet ['method_citation']
<S sid="88" ssid="64">Generalized Quantification (d.ri = Q) Generalized quantifiers are predicates on two sets, a restrictor A and a nuclear scope B.</S>
original cit marker offset is 0
new cit marker offset is 0



["'88'"]
'88'
['88']
parsed_discourse_facet ['method_citation']
<S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'171'"]
'171'
['171']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P11-1060.annv3.csv
<S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'3'", "'2'"]
'0'
'3'
'2'
['0', '3', '2']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="156" ssid="41">There has been a fair amount of past work on no predicates), confusion of Washington state with this topic: Liang et al. (2010) induces combinatory Washington D.C., learning the wrong lexical asso- logic programs in a non-linguistic setting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'3'", "'156'"]
'2'
'3'
'156'
['2', '3', '156']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="169" ssid="54">The combination rules are encoded in the tems, despite using no annotated logical forms.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'22'", "'6'"]
'169'
'22'
'6'
['169', '22', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="45" ssid="21">The logical forms in DCS are called DCS trees, where nodes are labeled with predicates, and edges are labeled with relations.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'", "'54'", "'21'"]
'45'
'54'
'21'
['45', '54', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'167'", "'54'", "'21'"]
'167'
'54'
'21'
['167', '54', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'0'", "'3'"]
'149'
'0'
'3'
['149', '0', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="163" ssid="48">Feedback from the context; for example, the lexical entry for borders world has been used to guide both syntactic parsing is S\NP/NP : Ay.Ax.border(x, y), which means (Schuler, 2003) and semantic parsing (Popescu et borders looks right for the first argument and left al., 2003; Clarke et al., 2010).</S><S sid="52" ssid="28">The denotation of the middle node is {s}, where s is all major cities.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'163'", "'52'"]
'3'
'163'
'52'
['3', '163', '52']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="169" ssid="54">The combination rules are encoded in the tems, despite using no annotated logical forms.</S><S sid="117" ssid="2">In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'117'", "'6'"]
'169'
'117'
'6'
['169', '117', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="117" ssid="2">In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="35" ssid="11">Although a DCS tree is a logical form, note that it looks like a syntactic dependency tree with predicates in place of words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'117'", "'22'", "'35'"]
'117'
'22'
'35'
['117', '22', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S><S sid="132" ssid="17">Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'6'", "'132'"]
'2'
'6'
'132'
['2', '6', '132']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'0'", "'171'"]
'21'
'0'
'171'
['21', '0', '171']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S><S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'21'", "'149'"]
'0'
'21'
'149'
['0', '21', '149']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'54'", "'167'"]
'149'
'54'
'167'
['149', '54', '167']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="85" ssid="61">Extraction allows us to return the set of consistent values of a marked non-root node.</S><S sid="42" ssid="18">The denotation JzKw (z evaluated on w) is the set of consistent values of the root node (see Figure 2 for an example).</S><S sid="38" ssid="14">Let us start by considering a DCS tree z with only join relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'42'", "'38'"]
'85'
'42'
'38'
['85', '42', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S><S sid="1" ssid="1">Compositional question answering begins by mapping questions to logical forms, but training a semantic parser to perform this mapping typically requires the costly annotation of the target logical forms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'171'", "'1'"]
'3'
'171'
'1'
['3', '171', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'167'", "'54'"]
'149'
'167'
'54'
['149', '167', '54']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="172" ssid="57">Free from the burden It also allows us to easily add new lexical triggers of annotating logical forms, we hope to use our without becoming mired in the semantic formalism. techniques in developing even more accurate and Quantifiers and superlatives significantly compli- broader-coverage language understanding systems. cate scoping in lambda calculus, and often type rais- Acknowledgments We thank Luke Zettlemoyer ing needs to be employed.</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="161" ssid="46">CCG (Steedman, 2000), in which semantic pars- The integration of natural language with denotaing is driven from the lexicon.</S>
original cit marker offset is 0
new cit marker offset is 0



["'172'", "'0'", "'161'"]
'172'
'0'
'161'
['172', '0', '161']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S>
original cit marker offset is 0
new cit marker offset is 0



["'22'", "'6'", "'0'"]
'22'
'6'
'0'
['22', '6', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="48" ssid="24">In addition, trees enable efficient computation, thereby establishing a new connection between dependency syntax and efficient semantic evaluation.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'22'", "'171'"]
'48'
'22'
'171'
['48', '22', '171']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['Figure 1 shows our probabilistic model: with respect to a world w (database of facts), producing an answer y.'])
dict_values(['Learning Dependency-Based Compositional Semantics', 'In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.', 'In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:55', 'F:0']
dict_values(['The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).'])
dict_values(['In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.', 'A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.', 'The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).'])
['system', 'ROUGE-S*', 'Average_R:', '0.15766', '(95%-conf.int.', '0.15766', '-', '0.15766)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.27237', '(95%-conf.int.', '0.27237', '-', '0.27237)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:105', 'F:105']
dict_values(['Our learning algorithm alternates between (i) using the current parameters &#952; to generate the K-best set &#732;ZL,&#952;(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.'])
dict_values(['The combination rules are encoded in the tems, despite using no annotated logical forms.', 'In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.', 'Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:300', 'F:0']
dict_values(['Although a DCS tree is a logical form, note that it looks like a syntactic dependency tree with predicates in place of words.'])
dict_values(['In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.', 'The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.', 'Although a DCS tree is a logical form, note that it looks like a syntactic dependency tree with predicates in place of words.'])
['system', 'ROUGE-S*', 'Average_R:', '0.07824', '(95%-conf.int.', '0.07824', '-', '0.07824)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.14512', '(95%-conf.int.', '0.14512', '-', '0.14512)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:703', 'P:55', 'F:55']
dict_values(['The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).'])
dict_values(['In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.', 'Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).', 'Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00244', '(95%-conf.int.', '0.00244', '-', '0.00244)']
['system', 'ROUGE-S*', 'Average_P:', '0.01905', '(95%-conf.int.', '0.01905', '-', '0.01905)']
['system', 'ROUGE-S*', 'Average_F:', '0.00432', '(95%-conf.int.', '0.00432', '-', '0.00432)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:820', 'P:105', 'F:2']
dict_values(['The denotation JzKw (z evaluated on w) is the set of consistent values of the root node (see Figure 2 for an example).'])
dict_values(['Extraction allows us to return the set of consistent values of a marked non-root node.', 'The denotation JzKw (z evaluated on w) is the set of consistent values of the root node (see Figure 2 for an example).', 'Let us start by considering a DCS tree z with only join relations.'])
['system', 'ROUGE-S*', 'Average_R:', '0.17787', '(95%-conf.int.', '0.17787', '-', '0.17787)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.30201', '(95%-conf.int.', '0.30201', '-', '0.30201)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:253', 'P:45', 'F:45']
dict_values(['The logical forms in DCS are called DCS trees, where nodes are labeled with predicates, and edges are labeled with relations.'])
dict_values(['Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.', 'In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.', 'A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01270', '(95%-conf.int.', '0.01270', '-', '0.01270)']
['system', 'ROUGE-S*', 'Average_P:', '0.12121', '(95%-conf.int.', '0.12121', '-', '0.12121)']
['system', 'ROUGE-S*', 'Average_F:', '0.02299', '(95%-conf.int.', '0.02299', '-', '0.02299)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:66', 'F:8']
dict_values(['Generalized Quantification (d.ri = Q) Generalized quantifiers are predicates on two sets, a restrictor A and a nuclear scope B.'])
dict_values(['Free from the burden It also allows us to easily add new lexical triggers of annotating logical forms, we hope to use our without becoming mired in the semantic formalism. techniques in developing even more accurate and Quantifiers and superlatives significantly compli- broader-coverage language understanding systems. cate scoping in lambda calculus, and often type rais- Acknowledgments We thank Luke Zettlemoyer ing needs to be employed.', 'Learning Dependency-Based Compositional Semantics', 'CCG (Steedman, 2000), in which semantic pars- The integration of natural language with denotaing is driven from the lexicon.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00075', '(95%-conf.int.', '0.00075', '-', '0.00075)']
['system', 'ROUGE-S*', 'Average_P:', '0.02222', '(95%-conf.int.', '0.02222', '-', '0.02222)']
['system', 'ROUGE-S*', 'Average_F:', '0.00146', '(95%-conf.int.', '0.00146', '-', '0.00146)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1326', 'P:45', 'F:1']
dict_values(['This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.'])
dict_values(['In addition, trees enable efficient computation, thereby establishing a new connection between dependency syntax and efficient semantic evaluation.', 'The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.', 'This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.'])
['system', 'ROUGE-S*', 'Average_R:', '0.14902', '(95%-conf.int.', '0.14902', '-', '0.14902)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.25939', '(95%-conf.int.', '0.25939', '-', '0.25939)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1275', 'P:190', 'F:190']
0.46249777263891373 0.06429777706335803 0.11196222097819755





input/ref/Task1/P08-1102_sweta.csv
input/res/Task1/P08-1102.annv3.csv
parsing: input/ref/Task1/P08-1102_sweta.csv
<S sid="21" ssid="17">Experiments show that our cascaded model can utilize different knowledge sources effectively and obtain accuracy improvements on both segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



["21'"]
21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="28" ssid="24">A subsequence of boundary-POS labelling result indicates a word with POS t only if the boundary tag sequence composed of its boundary part conforms to s or bm*e style, and all POS tags in its POS part equal to t. For example, a tag sequence b NN m NN e NN represents a threecharacter word with POS tag NN.</S>
original cit marker offset is 0
new cit marker offset is 0



["28'"]
28'
['28']
parsed_discourse_facet ['method_citation']
<S sid="43" ssid="15">Note that the templates of Ng and Low (2004) have already contained some lexical-target ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["43'"]
43'
['43']
parsed_discourse_facet ['method_citation']
<S sid="92" ssid="3">The second was conducted on the Penn Chinese Treebank 5.0 (CTB5.0) to test the performance of the cascaded model on segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



["92'"]
92'
['92']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&amp;T).</S>
original cit marker offset is 0
new cit marker offset is 0



["9'"]
9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="5">In following subsections, we describe the feature templates and the perceptron training algorithm.</S>
    <S sid="34" ssid="6">The feature templates we adopted are selected from those of Ng and Low (2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["33'", "'34'"]
33'
'34'
['33', '34']
parsed_discourse_facet ['method_citation']
<S sid="12" ssid="8">Besides the usual character-based features, additional features dependent on POS&#8217;s or words can also be employed to improve the performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["12'"]
12'
['12']
parsed_discourse_facet ['method_citation']
<S sid="64" ssid="15">In our experiments we trained a 3-gram word language model measuring the fluency of the segmentation result, a 4-gram POS language model functioning as the product of statetransition probabilities in HMM, and a word-POS co-occurrence model describing how much probably a word sequence coexists with a POS sequence.</S>
original cit marker offset is 0
new cit marker offset is 0



["64'"]
64'
['64']
parsed_discourse_facet ['method_citation']
<S sid="79" ssid="4">By maintaining a stack of size N at each position i of the sequence, we can preserve the top N best candidate labelled results of subsequence C1:i during decoding.</S>
original cit marker offset is 0
new cit marker offset is 0



["79'"]
79'
['79']
parsed_discourse_facet ['method_citation']
<S sid="96" ssid="7">In order to test the performance of the lexical-target templates and meanwhile determine the best iterations over the training corpus, we randomly chosen 2, 000 shorter sentences (less than 50 words) as the development set and the rest as the training set (84, 294 sentences), then trained a perceptron model named NON-LEX using only nonlexical-target features and another named LEX using both the two kinds of features.</S>
original cit marker offset is 0
new cit marker offset is 0



["96'"]
96'
['96']
parsed_discourse_facet ['method_citation']
<S sid="91" ssid="2">The first was conducted to test the performance of the perceptron on segmentation on the corpus from SIGHAN Bakeoff 2, including the Academia Sinica Corpus (AS), the Hong Kong City University Corpus (CityU), the Peking University Corpus (PKU) and the Microsoft Research Corpus (MSR).</S>
original cit marker offset is 0
new cit marker offset is 0



["91'"]
91'
['91']
parsed_discourse_facet ['method_citation']
 <S sid="16" ssid="12">Shown in Figure 1, the cascaded model has a two-layer architecture, with a characterbased perceptron as the core combined with other real-valued features such as language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["16'"]
16'
['16']
parsed_discourse_facet ['method_citation']
<S sid="35" ssid="7">To compare with others conveniently, we excluded the ones forbidden by the close test regulation of SIGHAN, for example, Pu(C0), indicating whether character C0 is a punctuation.</S>
original cit marker offset is 0
new cit marker offset is 0



["35'"]
35'
['35']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["91'"]
91'
['91']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P08-1102.annv3.csv
<S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="22" ssid="18">2 Segmentation and POS Tagging Given a Chinese character sequence: while the segmentation and POS tagging result can be depicted as: Here, Ci (i = L.n) denotes Chinese character, ti (i = L.m) denotes POS tag, and Cl:r (l < r) denotes character sequence ranges from Cl to Cr.</S><S sid="79" ssid="4">By maintaining a stack of size N at each position i of the sequence, we can preserve the top N best candidate labelled results of subsequence C1:i during decoding.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'22'", "'79'"]
'9'
'22'
'79'
['9', '22', '79']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="25" ssid="21">According to Ng and Low (2004), the segmentation task can be transformed to a tagging problem by assigning each character a boundary tag of the following four types: We can extract segmentation result by splitting the labelled result into subsequences of pattern s or bm*e which denote single-character word and multicharacter word respectively.</S><S sid="28" ssid="24">A subsequence of boundary-POS labelling result indicates a word with POS t only if the boundary tag sequence composed of its boundary part conforms to s or bm*e style, and all POS tags in its POS part equal to t. For example, a tag sequence b NN m NN e NN represents a threecharacter word with POS tag NN.</S><S sid="10" ssid="6">Since the typical approach of discriminative models treats segmentation as a labelling problem by assigning each character a boundary tag (Xue and Shen, 2003), Joint S&T can be conducted in a labelling fashion by expanding boundary tags to include POS information (Ng and Low, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'25'", "'28'", "'10'"]
'25'
'28'
'10'
['25', '28', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S><S sid="42" ssid="14">As predications generated from such templates depend on the current character, we name these templates lexical-target.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'1'", "'42'"]
'0'
'1'
'42'
['0', '1', '42']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="25" ssid="21">According to Ng and Low (2004), the segmentation task can be transformed to a tagging problem by assigning each character a boundary tag of the following four types: We can extract segmentation result by splitting the labelled result into subsequences of pattern s or bm*e which denote single-character word and multicharacter word respectively.</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'25'", "'1'"]
'0'
'25'
'1'
['0', '25', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'2'", "'24'"]
'9'
'2'
'24'
['9', '2', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="130" ssid="1">We proposed a cascaded linear model for Chinese Joint S&T.</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'130'", "'1'"]
'0'
'130'
'1'
['0', '130', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S><S sid="67" ssid="18">Language model (LM) provides linguistic probabilities of a word sequence.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'1'", "'67'"]
'0'
'1'
'67'
['0', '1', '67']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="56" ssid="7">To alleviate the drawbacks, we propose a cascaded linear model.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="85" ssid="10">Lines 3 — 11 generate a N-best list for each character position i.</S>
original cit marker offset is 0
new cit marker offset is 0



["'56'", "'0'", "'85'"]
'56'
'0'
'85'
['56', '0', '85']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="5" ssid="1">Word segmentation and part-of-speech (POS) tagging are important tasks in computer processing of Chinese and other Asian languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'9'", "'5'"]
'24'
'9'
'5'
['24', '9', '5']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="23" ssid="19">We can see that segmentation and POS tagging task is to divide a character sequence into several subsequences and label each of them a POS tag.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'9'", "'23'"]
'0'
'9'
'23'
['0', '9', '23']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="19" ssid="15">In addition, as these knowledge sources are regarded as separate features, we can train their corresponding models independently with each other.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="8" ssid="4">Another widely used discriminative method is the perceptron algorithm (Collins, 2002), which achieves comparable performance to CRFs with much faster training, so we base this work on the perceptron.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'", "'0'", "'8'"]
'19'
'0'
'8'
['19', '0', '8']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="42" ssid="14">As predications generated from such templates depend on the current character, we name these templates lexical-target.</S><S sid="41" ssid="13">We add a field C0 to each template in the upper column, so that it can carry out predication according to not only the context but also the current character itself.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'41'", "'0'"]
'42'
'41'
'0'
['42', '41', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="62" ssid="13">Suppose we have n features gj (j = 1..n) coupled with n corresponding weights wj (j = 1..n), each feature gj gives a score gj(r) to a candidate r, then the total score of r is given by: The decoding procedure aims to find the candidate r* with the highest score: While the mission of the training procedure is to tune the weights wj(j = 1..n) to guarantee that the candidate r with the highest score happens to be the best result with a high probability.</S><S sid="16" ssid="12">Shown in Figure 1, the cascaded model has a two-layer architecture, with a characterbased perceptron as the core combined with other real-valued features such as language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'62'", "'16'"]
'2'
'62'
'16'
['2', '62', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="58" ssid="9">Instead of incorporating all features into the perceptron directly, we first trained the perceptron using character-based features, and several other sub-models using additional ones such as word or POS n-grams, then trained the outside-layer linear model using the outputs of these sub-models, including the perceptron.</S><S sid="16" ssid="12">Shown in Figure 1, the cascaded model has a two-layer architecture, with a characterbased perceptron as the core combined with other real-valued features such as language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'58'", "'16'"]
'2'
'58'
'16'
['2', '58', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="31" ssid="3">The perceptron has been used in many NLP tasks, such as POS tagging (Collins, 2002), Chinese word segmentation (Ng and Low, 2004; Zhang and Clark, 2007) and so on.</S><S sid="10" ssid="6">Since the typical approach of discriminative models treats segmentation as a labelling problem by assigning each character a boundary tag (Xue and Shen, 2003), Joint S&T can be conducted in a labelling fashion by expanding boundary tags to include POS information (Ng and Low, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'31'", "'10'"]
'0'
'31'
'10'
['0', '31', '10']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'9'", "'2'"]
'24'
'9'
'2'
['24', '9', '2']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
Length 0 input/ref/Task1/P08-1102_sweta.csv
0.0 0.0 0.0





input/ref/Task1/D09-1092_sweta.csv
input/res/Task1/D09-1092.annv3.csv
parsing: input/ref/Task1/D09-1092_sweta.csv
 <S sid="32" ssid="8">Outside of the field of topic modeling, Kawaba et al. (Kawaba et al., 2008) use a Wikipedia-based model to perform sentiment analysis of blog posts.</S>
original cit marker offset is 0
new cit marker offset is 0



["32'"]
32'
['32']
parsed_discourse_facet ['method_citation']
<S sid="39" ssid="5">Additionally, PLTM assumes that each &#8220;topic&#8221; consists of a set of discrete distributions over words&#8212;one for each language l = 1, ... , L. In other words, rather than using a single set of topics &#934; = {&#966;1, ... , &#966;T}, as in LDA, there are L sets of language-specific topics, &#934;1, ... , &#934;L, each of which is drawn from a language-specific symmetric Dirichlet with concentration parameter &#946;l.</S>
original cit marker offset is 0
new cit marker offset is 0



["39'"]
39'
['39']
parsed_discourse_facet ['method_citation']
<S sid="138" ssid="87">We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.</S>
original cit marker offset is 0
new cit marker offset is 0



["138'"]
138'
['138']
parsed_discourse_facet ['method_citation']
 <S sid="196" ssid="5">When applied to comparable document collections such as Wikipedia, PLTM supports data-driven analysis of differences and similarities across all languages for readers who understand any one language.</S>
original cit marker offset is 0
new cit marker offset is 0



["196'"]
196'
['196']
parsed_discourse_facet ['method_citation']
<S sid="111" ssid="60">In order to simulate this scenario we create a set of variations of the EuroParl corpus by treating some documents as if they have no parallel/comparable texts &#8211; i.e., we put each of these documents in a single-document tuple.</S>
original cit marker offset is 0
new cit marker offset is 0



["111'"]
111'
['111']
parsed_discourse_facet ['method_citation']
<S sid="128" ssid="77">Although the PLTM is clearly not a substitute for a machine translation system&#8212;it has no way to represent syntax or even multi-word phrases&#8212;it is clear from the examples in figure 2 that the sets of high probability words in different languages for a given topic are likely to include translations.</S>
original cit marker offset is 0
new cit marker offset is 0



["128'"]
128'
['128']
parsed_discourse_facet ['method_citation']
<S sid="122" ssid="71">Divergence drops significantly when the proportion of &#8220;glue&#8221; tuples increases from 0.01 to 0.25.</S>
original cit marker offset is 0
new cit marker offset is 0



["122'"]
122'
['122']
parsed_discourse_facet ['method_citation']
 <S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["35'"]
35'
['35']
parsed_discourse_facet ['method_citation']
 <S sid="110" ssid="59">Continuing with the example above, one might extract a set of connected Wikipedia articles related to the focus of the journal and then train PLTM on a joint corpus consisting of journal papers and Wikipedia articles.</S>
original cit marker offset is 0
new cit marker offset is 0



["110'"]
110'
['110']
parsed_discourse_facet ['method_citation']
<S sid="30" ssid="6">However, they evaluate their model on only two languages (English and Chinese), and do not use the model to detect differences between languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["30'"]
30'
['30']
parsed_discourse_facet ['method_citation']
    <S sid="146" ssid="95">In addition to enhancing lexicons by aligning topic-specific vocabulary, PLTM may also be useful for adapting machine translation systems to new domains by finding translations or near translations in an unstructured corpus.</S>
original cit marker offset is 0
new cit marker offset is 0



["146'"]
146'
['146']
parsed_discourse_facet ['method_citation']
<S sid="77" ssid="26">Maximum topic probability in document Although the posterior distribution over topics for each tuple is not concentrated on one topic, it is worth checking that this is not simply because the model is assigning a single topic to the 1We use the R density function. tokens in each of the languages.</
original cit marker offset is 0
new cit marker offset is 0



["77'"]
77'
['77']
parsed_discourse_facet ['method_citation']
 <S sid="156" ssid="105">We use both Jensen-Shannon divergence and cosine distance.</S>
original cit marker offset is 0
new cit marker offset is 0



["156'"]
156'
['156']
parsed_discourse_facet ['method_citation']
<S sid="31" ssid="7">They also provide little analysis of the differences between polylingual and single-language topic models.</S>
original cit marker offset is 0
new cit marker offset is 0



["31'"]
31'
['31']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="15">We employ a set of direct translations, the EuroParl corpus, to evaluate whether PLTM can accurately infer topics when documents genuinely contain the same content.</S>
original cit marker offset is 0
new cit marker offset is 0



["19'"]
19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="131" ssid="80">We evaluate sets of high-probability words in each topic and multilingual &#8220;synsets&#8221; by comparing them to entries in human-constructed bilingual dictionaries, as done by Haghighi et al. (2008).</S>
original cit marker offset is 0
new cit marker offset is 0



["131'"]
131'
['131']
parsed_discourse_facet ['method_citation']
<S sid="196" ssid="5">When applied to comparable document collections such as Wikipedia, PLTM supports data-driven analysis of differences and similarities across all languages for readers who understand any one language.</S>
original cit marker offset is 0
new cit marker offset is 0



["196'"]
196'
['196']
parsed_discourse_facet ['method_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["192'"]
192'
['192']
parsed_discourse_facet ['method_citation']
<S sid="195" ssid="4">Additionally, PLTM can support the creation of bilingual lexica for low resource language pairs, providing candidate translations for more computationally intense alignment processes without the sentence-aligned translations typically used in such tasks.</S>
original cit marker offset is 0
new cit marker offset is 0



["195'"]
195'
['195']
parsed_discourse_facet ['method_citation']
<S sid="6" ssid="2">Topic models have been used for analyzing topic trends in research literature (Mann et al., 2006; Hall et al., 2008), inferring captions for images (Blei and Jordan, 2003), social network analysis in email (McCallum et al., 2005), and expanding queries with topically related words in information retrieval (Wei and Croft, 2006).</S>
original cit marker offset is 0
new cit marker offset is 0



["6'"]
6'
['6']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/D09-1092.annv3.csv
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="3" ssid="3">We introduce a polylingual topic model that discovers topics aligned across multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'36'", "'3'"]
'192'
'36'
'3'
['192', '36', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'36'"]
'192'
'35'
'36'
['192', '35', '36']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="137" ssid="86">For every topic t we select a small number K of the most probable words in English (e) and in each “translation” language (E): Wte and Wtt, respectively.</S><S sid="134" ssid="83">Each lexicon is a set of pairs consisting of an English word and a translated word, 1we, wt}.</S><S sid="138" ssid="87">We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'", "'134'", "'138'"]
'137'
'134'
'138'
['137', '134', '138']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="0" ssid="0">Polylingual Topic Models</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'0'", "'36'"]
'192'
'0'
'36'
['192', '0', '36']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'148'", "'192'", "'36'"]
'148'
'192'
'36'
['148', '192', '36']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="19" ssid="15">We employ a set of direct translations, the EuroParl corpus, to evaluate whether PLTM can accurately infer topics when documents genuinely contain the same content.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'19'"]
'192'
'35'
'19'
['192', '35', '19']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="182" ssid="16">As with EuroParl, we can calculate the JensenShannon divergence between pairs of documents within a comparable document tuple.</S><S sid="156" ssid="105">We use both Jensen-Shannon divergence and cosine distance.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'182'", "'156'", "'148'"]
'182'
'156'
'148'
['182', '156', '148']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'192'", "'35'"]
'36'
'192'
'35'
['36', '192', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="9" ssid="5">In this paper, we present the polylingual topic model (PLTM).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'9'"]
'192'
'35'
'9'
['192', '35', '9']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="28" ssid="4">We take a simpler approach that is more suitable for topically similar document tuples (where documents are not direct translations of one another) in more than two languages.</S><S sid="30" ssid="6">However, they evaluate their model on only two languages (English and Chinese), and do not use the model to detect differences between languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'28'", "'30'"]
'192'
'28'
'30'
['192', '28', '30']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="28" ssid="4">We take a simpler approach that is more suitable for topically similar document tuples (where documents are not direct translations of one another) in more than two languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'28'", "'148'"]
'192'
'28'
'148'
['192', '28', '148']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="54" ssid="3">Although direct translations in multiple languages are relatively rare (in contrast with comparable documents), we use direct translations to explore the characteristics of the model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'54'"]
'192'
'35'
'54'
['192', '35', '54']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="156" ssid="105">We use both Jensen-Shannon divergence and cosine distance.</S><S sid="182" ssid="16">As with EuroParl, we can calculate the JensenShannon divergence between pairs of documents within a comparable document tuple.</S><S sid="118" ssid="67">We calculate the Jensen-Shannon divergence between the topic distributions for each pair of individual documents in S that were originally part of the same tuple prior to separation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'156'", "'182'", "'118'"]
'156'
'182'
'118'
['156', '182', '118']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="110" ssid="59">Continuing with the example above, one might extract a set of connected Wikipedia articles related to the focus of the journal and then train PLTM on a joint corpus consisting of journal papers and Wikipedia articles.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'110'"]
'192'
'148'
'110'
['192', '148', '110']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="6" ssid="2">Topic models have been used for analyzing topic trends in research literature (Mann et al., 2006; Hall et al., 2008), inferring captions for images (Blei and Jordan, 2003), social network analysis in email (McCallum et al., 2005), and expanding queries with topically related words in information retrieval (Wei and Croft, 2006).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'6'"]
'192'
'35'
'6'
['192', '35', '6']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'35'", "'192'", "'36'"]
'35'
'192'
'36'
['35', '192', '36']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="10" ssid="6">We demonstrate its utility and explore its characteristics using two polylingual corpora: proceedings of the European parliament (in eleven languages) and a collection of Wikipedia articles (in twelve languages).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'10'"]
'192'
'148'
'10'
['192', '148', '10']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="105" ssid="54">An important application for polylingual topic modeling is to use small numbers of comparable document tuples to link topics in larger collections of distinct, non-comparable documents in multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'192'", "'105'"]
'36'
'192'
'105'
['36', '192', '105']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'35'"]
'192'
'148'
'35'
['192', '148', '35']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
dict_values(['Outside of the field of topic modeling, Kawaba et al. (Kawaba et al., 2008) use a Wikipedia-based model to perform sentiment analysis of blog posts.'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.', 'We introduce a polylingual topic model that discovers topics aligned across multiple languages.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01290', '(95%-conf.int.', '0.01290', '-', '0.01290)']
['system', 'ROUGE-S*', 'Average_P:', '0.05000', '(95%-conf.int.', '0.05000', '-', '0.05000)']
['system', 'ROUGE-S*', 'Average_F:', '0.02051', '(95%-conf.int.', '0.02051', '-', '0.02051)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:465', 'P:120', 'F:6']
dict_values(['Additionally, PLTM assumes that each &#8220;topic&#8221; consists of a set of discrete distributions over words&#8212;one for each language l = 1, ... , L. In other words, rather than using a single set of topics &#934; = {&#966;1, ... , &#966;T}, as in LDA, there are L sets of language-specific topics, &#934;1, ... , &#934;L, each of which is drawn from a language-specific symmetric Dirichlet with concentration parameter &#946;l.'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.', 'Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.'])
['system', 'ROUGE-S*', 'Average_R:', '0.04694', '(95%-conf.int.', '0.04694', '-', '0.04694)']
['system', 'ROUGE-S*', 'Average_P:', '0.04694', '(95%-conf.int.', '0.04694', '-', '0.04694)']
['system', 'ROUGE-S*', 'Average_F:', '0.04694', '(95%-conf.int.', '0.04694', '-', '0.04694)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:703', 'P:703', 'F:33']
dict_values(['We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.'])
dict_values(['For every topic t we select a small number K of the most probable words in English (e) and in each “translation” language (E): Wte and Wtt, respectively.', 'Each lexicon is a set of pairs consisting of an English word and a translated word, 1we, wt}.', 'We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.'])
['system', 'ROUGE-S*', 'Average_R:', '0.13904', '(95%-conf.int.', '0.13904', '-', '0.13904)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.24413', '(95%-conf.int.', '0.24413', '-', '0.24413)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:78', 'F:78']
dict_values(['When applied to comparable document collections such as Wikipedia, PLTM supports data-driven analysis of differences and similarities across all languages for readers who understand any one language.'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'Polylingual Topic Models', 'Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01667', '(95%-conf.int.', '0.01667', '-', '0.01667)']
['system', 'ROUGE-S*', 'Average_P:', '0.04167', '(95%-conf.int.', '0.04167', '-', '0.04167)']
['system', 'ROUGE-S*', 'Average_F:', '0.02381', '(95%-conf.int.', '0.02381', '-', '0.02381)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:120', 'F:5']
dict_values(['In order to simulate this scenario we create a set of variations of the EuroParl corpus by treating some documents as if they have no parallel/comparable texts &#8211; i.e., we put each of these documents in a single-document tuple.'])
dict_values(['To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.', 'We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02326', '(95%-conf.int.', '0.02326', '-', '0.02326)']
['system', 'ROUGE-S*', 'Average_P:', '0.12281', '(95%-conf.int.', '0.12281', '-', '0.12281)']
['system', 'ROUGE-S*', 'Average_F:', '0.03911', '(95%-conf.int.', '0.03911', '-', '0.03911)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:171', 'F:21']
dict_values(['Divergence drops significantly when the proportion of &#8220;glue&#8221; tuples increases from 0.01 to 0.25.'])
dict_values(['As with EuroParl, we can calculate the JensenShannon divergence between pairs of documents within a comparable document tuple.', 'We use both Jensen-Shannon divergence and cosine distance.', 'To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00168', '(95%-conf.int.', '0.00168', '-', '0.00168)']
['system', 'ROUGE-S*', 'Average_P:', '0.01282', '(95%-conf.int.', '0.01282', '-', '0.01282)']
['system', 'ROUGE-S*', 'Average_F:', '0.00297', '(95%-conf.int.', '0.00297', '-', '0.00297)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:595', 'P:78', 'F:1']
dict_values(['We employ a set of direct translations, the EuroParl corpus, to evaluate whether PLTM can accurately infer topics when documents genuinely contain the same content.'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.', 'Continuing with the example above, one might extract a set of connected Wikipedia articles related to the focus of the journal and then train PLTM on a joint corpus consisting of journal papers and Wikipedia articles.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02041', '(95%-conf.int.', '0.02041', '-', '0.02041)']
['system', 'ROUGE-S*', 'Average_P:', '0.26374', '(95%-conf.int.', '0.26374', '-', '0.26374)']
['system', 'ROUGE-S*', 'Average_F:', '0.03788', '(95%-conf.int.', '0.03788', '-', '0.03788)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1176', 'P:91', 'F:24']
dict_values(['We evaluate sets of high-probability words in each topic and multilingual &#8220;synsets&#8221; by comparing them to entries in human-constructed bilingual dictionaries, as done by Haghighi et al. (2008).'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.', 'Topic models have been used for analyzing topic trends in research literature (Mann et al., 2006; Hall et al., 2008), inferring captions for images (Blei and Jordan, 2003), social network analysis in email (McCallum et al., 2005), and expanding queries with topically related words in information retrieval (Wei and Croft, 2006).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00159', '(95%-conf.int.', '0.00159', '-', '0.00159)']
['system', 'ROUGE-S*', 'Average_P:', '0.01754', '(95%-conf.int.', '0.01754', '-', '0.01754)']
['system', 'ROUGE-S*', 'Average_F:', '0.00291', '(95%-conf.int.', '0.00291', '-', '0.00291)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1891', 'P:171', 'F:3']
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.', 'We demonstrate its utility and explore its characteristics using two polylingual corpora: proceedings of the European parliament (in eleven languages) and a collection of Wikipedia articles (in twelve languages).'])
['system', 'ROUGE-S*', 'Average_R:', '0.04163', '(95%-conf.int.', '0.04163', '-', '0.04163)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.07993', '(95%-conf.int.', '0.07993', '-', '0.07993)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:45', 'F:45']
dict_values(['Topic models have been used for analyzing topic trends in research literature (Mann et al., 2006; Hall et al., 2008), inferring captions for images (Blei and Jordan, 2003), social network analysis in email (McCallum et al., 2005), and expanding queries with topically related words in information retrieval (Wei and Croft, 2006).'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.', 'The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02590', '(95%-conf.int.', '0.02590', '-', '0.02590)']
['system', 'ROUGE-S*', 'Average_P:', '0.04444', '(95%-conf.int.', '0.04444', '-', '0.04444)']
['system', 'ROUGE-S*', 'Average_F:', '0.03273', '(95%-conf.int.', '0.03273', '-', '0.03273)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:630', 'F:28']
0.25999599740004004 0.03300199966998 0.05309199946908001





input/ref/Task1/D09-1092_swastika.csv
input/res/Task1/D09-1092.annv3.csv
parsing: input/ref/Task1/D09-1092_swastika.csv
<S sid="193" ssid="2">We analyzed the characteristics of PLTM in comparison to monolingual LDA, and demonstrated that it is possible to discover aligned topics.</S>
original cit marker offset is 0
new cit marker offset is 0



['193']
193
['193']
parsed_discourse_facet ['result_citation']
<S sid="114" ssid="63">Ideally, the &#8220;glue&#8221; documents in g will be sufficient to align the topics across languages, and will cause comparable documents in S to have similar distributions over topics even though they are modeled independently.</S>
original cit marker offset is 0
new cit marker offset is 0



['114']
114
['114']
parsed_discourse_facet ['aim_citation']
<S sid="138" ssid="87">We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.</S>
original cit marker offset is 0
new cit marker offset is 0



['138']
138
['138']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="14">In this paper, we use two polylingual corpora to answer various critical questions related to polylingual topic models.</S>
original cit marker offset is 0
new cit marker offset is 0



['18']
18
['18']
parsed_discourse_facet ['method_citation']
<S sid="55" ssid="4">The EuroParl corpus consists of parallel texts in eleven western European languages: Danish, German, Greek, English, Spanish, Finnish, French, Italian, Dutch, Portuguese and Swedish.</S>
original cit marker offset is 0
new cit marker offset is 0



['55']
55
['55']
parsed_discourse_facet ['method_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



['192']
192
['192']
parsed_discourse_facet ['result_citation']
<S sid="119" ssid="68">The lower the divergence, the more similar the distributions are to each other.</S>
original cit marker offset is 0
new cit marker offset is 0



['119']
119
['119']
parsed_discourse_facet ['result_citation']
<S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S>
original cit marker offset is 0
new cit marker offset is 0



['148']
148
['148']
parsed_discourse_facet ['method_citation']
<S sid="193" ssid="2">We analyzed the characteristics of PLTM in comparison to monolingual LDA, and demonstrated that it is possible to discover aligned topics.</S>
original cit marker offset is 0
new cit marker offset is 0



['193']
193
['193']
parsed_discourse_facet ['result_citation']
<S sid="184" ssid="18">Interestingly, we find that almost all languages in our corpus, including several pairs that have historically been in conflict, show average JS divergences of between approximately 0.08 and 0.12 for T = 400, consistent with our findings for EuroParl translations.</S>
original cit marker offset is 0
new cit marker offset is 0



['184']
184
['184']
parsed_discourse_facet ['result_citation']
<S sid="193" ssid="2">We analyzed the characteristics of PLTM in comparison to monolingual LDA, and demonstrated that it is possible to discover aligned topics.</S>
original cit marker offset is 0
new cit marker offset is 0



['193']
193
['193']
parsed_discourse_facet ['result_citation']
<S sid="163" ssid="112">Performance continues to improve with longer documents, most likely due to better topic inference.</S>
original cit marker offset is 0
new cit marker offset is 0



['163']
163
['163']
parsed_discourse_facet ['result_citation']
<S sid="184" ssid="18">Interestingly, we find that almost all languages in our corpus, including several pairs that have historically been in conflict, show average JS divergences of between approximately 0.08 and 0.12 for T = 400, consistent with our findings for EuroParl translations.</S>
original cit marker offset is 0
new cit marker offset is 0



['184']
184
['184']
parsed_discourse_facet ['result_citation']
<S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S>
original cit marker offset is 0
new cit marker offset is 0



['148']
148
['148']
parsed_discourse_facet ['method_citation']
<S sid="184" ssid="18">Interestingly, we find that almost all languages in our corpus, including several pairs that have historically been in conflict, show average JS divergences of between approximately 0.08 and 0.12 for T = 400, consistent with our findings for EuroParl translations.</S>
original cit marker offset is 0
new cit marker offset is 0



['184']
184
['184']
parsed_discourse_facet ['result_citation']
<S sid="193" ssid="2">We analyzed the characteristics of PLTM in comparison to monolingual LDA, and demonstrated that it is possible to discover aligned topics.</S>
original cit marker offset is 0
new cit marker offset is 0



['193']
193
['193']
parsed_discourse_facet ['result_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



['192']
192
['192']
parsed_discourse_facet ['result_citation']
<S sid="105" ssid="54">An important application for polylingual topic modeling is to use small numbers of comparable document tuples to link topics in larger collections of distinct, non-comparable documents in multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



['105']
105
['105']
parsed_discourse_facet ['method_citation']
    <S sid="10" ssid="6">We demonstrate its utility and explore its characteristics using two polylingual corpora: proceedings of the European parliament (in eleven languages) and a collection of Wikipedia articles (in twelve languages).</S>
original cit marker offset is 0
new cit marker offset is 0



['10']
10
['10']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/D09-1092.annv3.csv
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="3" ssid="3">We introduce a polylingual topic model that discovers topics aligned across multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'36'", "'3'"]
'192'
'36'
'3'
['192', '36', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'36'"]
'192'
'35'
'36'
['192', '35', '36']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="137" ssid="86">For every topic t we select a small number K of the most probable words in English (e) and in each “translation” language (E): Wte and Wtt, respectively.</S><S sid="134" ssid="83">Each lexicon is a set of pairs consisting of an English word and a translated word, 1we, wt}.</S><S sid="138" ssid="87">We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'", "'134'", "'138'"]
'137'
'134'
'138'
['137', '134', '138']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="0" ssid="0">Polylingual Topic Models</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'0'", "'36'"]
'192'
'0'
'36'
['192', '0', '36']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'148'", "'192'", "'36'"]
'148'
'192'
'36'
['148', '192', '36']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="19" ssid="15">We employ a set of direct translations, the EuroParl corpus, to evaluate whether PLTM can accurately infer topics when documents genuinely contain the same content.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'19'"]
'192'
'35'
'19'
['192', '35', '19']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="182" ssid="16">As with EuroParl, we can calculate the JensenShannon divergence between pairs of documents within a comparable document tuple.</S><S sid="156" ssid="105">We use both Jensen-Shannon divergence and cosine distance.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'182'", "'156'", "'148'"]
'182'
'156'
'148'
['182', '156', '148']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'192'", "'35'"]
'36'
'192'
'35'
['36', '192', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="9" ssid="5">In this paper, we present the polylingual topic model (PLTM).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'9'"]
'192'
'35'
'9'
['192', '35', '9']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="28" ssid="4">We take a simpler approach that is more suitable for topically similar document tuples (where documents are not direct translations of one another) in more than two languages.</S><S sid="30" ssid="6">However, they evaluate their model on only two languages (English and Chinese), and do not use the model to detect differences between languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'28'", "'30'"]
'192'
'28'
'30'
['192', '28', '30']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="28" ssid="4">We take a simpler approach that is more suitable for topically similar document tuples (where documents are not direct translations of one another) in more than two languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'28'", "'148'"]
'192'
'28'
'148'
['192', '28', '148']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="54" ssid="3">Although direct translations in multiple languages are relatively rare (in contrast with comparable documents), we use direct translations to explore the characteristics of the model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'54'"]
'192'
'35'
'54'
['192', '35', '54']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="156" ssid="105">We use both Jensen-Shannon divergence and cosine distance.</S><S sid="182" ssid="16">As with EuroParl, we can calculate the JensenShannon divergence between pairs of documents within a comparable document tuple.</S><S sid="118" ssid="67">We calculate the Jensen-Shannon divergence between the topic distributions for each pair of individual documents in S that were originally part of the same tuple prior to separation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'156'", "'182'", "'118'"]
'156'
'182'
'118'
['156', '182', '118']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="110" ssid="59">Continuing with the example above, one might extract a set of connected Wikipedia articles related to the focus of the journal and then train PLTM on a joint corpus consisting of journal papers and Wikipedia articles.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'110'"]
'192'
'148'
'110'
['192', '148', '110']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="6" ssid="2">Topic models have been used for analyzing topic trends in research literature (Mann et al., 2006; Hall et al., 2008), inferring captions for images (Blei and Jordan, 2003), social network analysis in email (McCallum et al., 2005), and expanding queries with topically related words in information retrieval (Wei and Croft, 2006).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'6'"]
'192'
'35'
'6'
['192', '35', '6']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'35'", "'192'", "'36'"]
'35'
'192'
'36'
['35', '192', '36']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="10" ssid="6">We demonstrate its utility and explore its characteristics using two polylingual corpora: proceedings of the European parliament (in eleven languages) and a collection of Wikipedia articles (in twelve languages).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'10'"]
'192'
'148'
'10'
['192', '148', '10']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="105" ssid="54">An important application for polylingual topic modeling is to use small numbers of comparable document tuples to link topics in larger collections of distinct, non-comparable documents in multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'192'", "'105'"]
'36'
'192'
'105'
['36', '192', '105']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'35'"]
'192'
'148'
'35'
['192', '148', '35']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
dict_values(['We analyzed the characteristics of PLTM in comparison to monolingual LDA, and demonstrated that it is possible to discover aligned topics.'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.', 'We introduce a polylingual topic model that discovers topics aligned across multiple languages.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01290', '(95%-conf.int.', '0.01290', '-', '0.01290)']
['system', 'ROUGE-S*', 'Average_P:', '0.13333', '(95%-conf.int.', '0.13333', '-', '0.13333)']
['system', 'ROUGE-S*', 'Average_F:', '0.02353', '(95%-conf.int.', '0.02353', '-', '0.02353)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:465', 'P:45', 'F:6']
dict_values(['Ideally, the &#8220;glue&#8221; documents in g will be sufficient to align the topics across languages, and will cause comparable documents in S to have similar distributions over topics even though they are modeled independently.'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.', 'Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01991', '(95%-conf.int.', '0.01991', '-', '0.01991)']
['system', 'ROUGE-S*', 'Average_P:', '0.11667', '(95%-conf.int.', '0.11667', '-', '0.11667)']
['system', 'ROUGE-S*', 'Average_F:', '0.03402', '(95%-conf.int.', '0.03402', '-', '0.03402)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:703', 'P:120', 'F:14']
dict_values(['We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.'])
dict_values(['For every topic t we select a small number K of the most probable words in English (e) and in each “translation” language (E): Wte and Wtt, respectively.', 'Each lexicon is a set of pairs consisting of an English word and a translated word, 1we, wt}.', 'We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.'])
['system', 'ROUGE-S*', 'Average_R:', '0.13904', '(95%-conf.int.', '0.13904', '-', '0.13904)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.24413', '(95%-conf.int.', '0.24413', '-', '0.24413)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:78', 'F:78']
dict_values(['In this paper, we use two polylingual corpora to answer various critical questions related to polylingual topic models.'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'Polylingual Topic Models', 'Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02000', '(95%-conf.int.', '0.02000', '-', '0.02000)']
['system', 'ROUGE-S*', 'Average_P:', '0.13333', '(95%-conf.int.', '0.13333', '-', '0.13333)']
['system', 'ROUGE-S*', 'Average_F:', '0.03478', '(95%-conf.int.', '0.03478', '-', '0.03478)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:45', 'F:6']
dict_values(['The EuroParl corpus consists of parallel texts in eleven western European languages: Danish, German, Greek, English, Spanish, Finnish, French, Italian, Dutch, Portuguese and Swedish.'])
dict_values(['To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.', 'We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00775', '(95%-conf.int.', '0.00775', '-', '0.00775)']
['system', 'ROUGE-S*', 'Average_P:', '0.03684', '(95%-conf.int.', '0.03684', '-', '0.03684)']
['system', 'ROUGE-S*', 'Average_F:', '0.01281', '(95%-conf.int.', '0.01281', '-', '0.01281)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:190', 'F:7']
dict_values(['The lower the divergence, the more similar the distributions are to each other.'])
dict_values(['As with EuroParl, we can calculate the JensenShannon divergence between pairs of documents within a comparable document tuple.', 'We use both Jensen-Shannon divergence and cosine distance.', 'To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00168', '(95%-conf.int.', '0.00168', '-', '0.00168)']
['system', 'ROUGE-S*', 'Average_P:', '0.16667', '(95%-conf.int.', '0.16667', '-', '0.16667)']
['system', 'ROUGE-S*', 'Average_F:', '0.00333', '(95%-conf.int.', '0.00333', '-', '0.00333)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:595', 'P:6', 'F:1']
dict_values(['To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.', 'Continuing with the example above, one might extract a set of connected Wikipedia articles related to the focus of the journal and then train PLTM on a joint corpus consisting of journal papers and Wikipedia articles.'])
['system', 'ROUGE-S*', 'Average_R:', '0.17857', '(95%-conf.int.', '0.17857', '-', '0.17857)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.30303', '(95%-conf.int.', '0.30303', '-', '0.30303)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1176', 'P:210', 'F:210']
dict_values(['Interestingly, we find that almost all languages in our corpus, including several pairs that have historically been in conflict, show average JS divergences of between approximately 0.08 and 0.12 for T = 400, consistent with our findings for EuroParl translations.'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.', 'Topic models have been used for analyzing topic trends in research literature (Mann et al., 2006; Hall et al., 2008), inferring captions for images (Blei and Jordan, 2003), social network analysis in email (McCallum et al., 2005), and expanding queries with topically related words in information retrieval (Wei and Croft, 2006).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1891', 'P:231', 'F:0']
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.', 'We demonstrate its utility and explore its characteristics using two polylingual corpora: proceedings of the European parliament (in eleven languages) and a collection of Wikipedia articles (in twelve languages).'])
['system', 'ROUGE-S*', 'Average_R:', '0.04163', '(95%-conf.int.', '0.04163', '-', '0.04163)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.07993', '(95%-conf.int.', '0.07993', '-', '0.07993)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:45', 'F:45']
dict_values(['We demonstrate its utility and explore its characteristics using two polylingual corpora: proceedings of the European parliament (in eleven languages) and a collection of Wikipedia articles (in twelve languages).'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.', 'The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00278', '(95%-conf.int.', '0.00278', '-', '0.00278)']
['system', 'ROUGE-S*', 'Average_P:', '0.02500', '(95%-conf.int.', '0.02500', '-', '0.02500)']
['system', 'ROUGE-S*', 'Average_F:', '0.00500', '(95%-conf.int.', '0.00500', '-', '0.00500)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:120', 'F:3']
0.36118399638816007 0.04242599957574001 0.07405599925944001





input/ref/Task1/J01-2004_sweta.csv
input/res/Task1/J01-2004.annv3.csv
parsing: input/ref/Task1/J01-2004_sweta.csv
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S>
original cit marker offset is 0
new cit marker offset is 0



["372'"]
372'
['372']
parsed_discourse_facet ['method_citation']
<S sid="40" ssid="28">The following section will provide some background in probabilistic context-free grammars and language modeling for speech recognition.</S>
    <S sid="41" ssid="29">There will also be a brief review of previous work using syntactic information for language modeling, before we introduce our model in Section 4.</S>
    <S sid="42" ssid="30">Three parse trees: (a) a complete parse tree; (b) a complete parse tree with an explicit stop symbol; and (c) a partial parse tree.</S>
original cit marker offset is 0
new cit marker offset is 0



["40'", "'41'", "'42'"]
40'
'41'
'42'
['40', '41', '42']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="13">A parser that is not left to right, but which has rooted derivations, e.g., a headfirst parser, will be able to calculate generative joint probabilities for entire strings; however, it will not be able to calculate probabilities for each word conditioned on previously generated words, unless each derivation generates the words in the string in exactly the same order.</S>
original cit marker offset is 0
new cit marker offset is 0



["25'"]
25'
['25']
parsed_discourse_facet ['method_citation']
<S sid="364" ssid="120">We follow Chelba (2000) in dealing with this problem: for parsing purposes, we use the Penn Treebank tokenization; for interpolation with the provided trigram model, and for evaluation, the lattice tokenization is used.</S>
original cit marker offset is 0
new cit marker offset is 0



["364'"]
364'
['364']
parsed_discourse_facet ['method_citation']
<S sid="302" ssid="58">In the beam search approach outlined above, we can estimate the string's probability in the same manner, by summing the probabilities of the parses that the algorithm finds.</S>
original cit marker offset is 0
new cit marker offset is 0



["302'"]
302'
['302']
parsed_discourse_facet ['method_citation']
 <S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



["31'"]
31'
['31']
parsed_discourse_facet ['method_citation']
<S sid="231" ssid="135">Since we do not know the POS for the word, we must sum the LAP for all POS For a PCFG G, a stack S = Ao An$ (which we will write AN and a look-ahead terminal item wi, we define the look-ahead probability as follows: We recursively estimate this with two empirically observed conditional probabilities for every nonterminal A,: 13(A, w,a) and P(A, c).</S>
original cit marker offset is 0
new cit marker offset is 0



["231'"]
231'
['231']
parsed_discourse_facet ['method_citation']
<S sid="297" ssid="53">The differences between a k-best and a beam-search parser (not to mention the use of dynamic programming) make a running time difference unsurprising.</S>
original cit marker offset is 0
new cit marker offset is 0



["297'"]
297'
['297']
parsed_discourse_facet ['method_citation']
<S sid="133" ssid="37">Statistically based heuristic best-first or beam-search strategies (Caraballo and Charniak 1998; Charniak, Goldwater, and Johnson 1998; Goodman 1997) have yielded an enormous improvement in the quality and speed of parsers, even without any guarantee that the parse returned is, in fact, that with the maximum likelihood for the probability model.</S>
original cit marker offset is 0
new cit marker offset is 0



["133'"]
133'
['133']
parsed_discourse_facet ['method_citation']
<S sid="291" ssid="47">Also, the parser returns a set of candidate parses, from which we have been choosing the top ranked; if we use an oracle to choose the parse with the highest accuracy from among the candidates (which averaged 70.0 in number per sentence), we find an average labeled precision/recall of 94.1, for sentences of length &lt; 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["291'"]
291'
['291']
parsed_discourse_facet ['method_citation']
<S sid="355" ssid="111">In order to get a sense of whether these perplexity reduction results can translate to improvement in a speech recognition task, we performed a very small preliminary experiment on n-best lists.</S>
original cit marker offset is 0
new cit marker offset is 0



["355'"]
355'
['355']
parsed_discourse_facet ['method_citation']
<S sid="59" ssid="17">A PCFG is a CFG with a probability assigned to each rule; specifically, each righthand side has a probability given the left-hand side of the rule.</S>
original cit marker offset is 0
new cit marker offset is 0



["59'"]
59'
['59']
parsed_discourse_facet ['method_citation']
<S sid="100" ssid="4">The approach that we will subsequently present uses the probabilistic grammar as its language model, but only includes probability mass from those parses that are found, that is, it uses the parser to find a subset of the total set of parses (hopefully most of the high-probability parses) and uses the sum of their probabilities as an estimate of the true probability given the grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["100'"]
100'
['100']
parsed_discourse_facet ['method_citation']
<S sid="108" ssid="12">Another approach that uses syntactic structure for language modeling has been to use a shift-reduce parser to &amp;quot;surface&amp;quot; c-commanding phrasal headwords or part-of-speech (POS) tags from arbitrarily far back in the prefix string, for use in a trigram-like model.</S>
original cit marker offset is 0
new cit marker offset is 0



["108'"]
108'
['108']
parsed_discourse_facet ['method_citation']
<S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



["31'"]
31'
['31']
parsed_discourse_facet ['method_citation']
<S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



["31'"]
31'
['31']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/J01-2004.annv3.csv
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S><S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'372'", "'0'"]
'388'
'372'
'0'
['388', '372', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="15" ssid="3">In the past few years, however, some improvements have been made over these language models through the use of statistical methods of natural language processing, and the development of innovative, linguistically well-motivated techniques for improving language models for speech recognition is generating more interest among computational linguists.</S><S sid="17" ssid="5">This paper will examine language modeling for speech recognition from a natural language processing point of view.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'15'", "'17'"]
'388'
'15'
'17'
['388', '15', '17']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="19" ssid="7">A new language model, based on probabilistic top-down parsing, will be outlined and compared with the previous literature, and extensive empirical results will be presented which demonstrate its utility.</S><S sid="10" ssid="4">A new language model that utilizes probabilistic top-down parsing is then outlined, and empirical results show that it improves upon previous work in test corpus perplexity.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'19'", "'10'"]
'388'
'19'
'10'
['388', '19', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="207" ssid="111">The model allows us to assign probabilities to derivations, which can be used by the parsing algorithm to decide heuristically which candidates are promising and should be expanded, and which are less promising and should be pruned.</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'207'", "'137'"]
'388'
'207'
'137'
['388', '207', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="134" ssid="38">The parsers with the highest published broad-coverage parsing accuracy, which include Charniak (1997, 2000), Collins (1997, 1999), and Ratnaparkhi (1997), all utilize simple and straightforward statistically based search heuristics, pruning the search-space quite dramatically!'</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'134'", "'137'"]
'388'
'134'
'137'
['388', '134', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="268" ssid="24">This is an incremental parser with a pruning strategy and no backtracking.</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S><S sid="223" ssid="127">We implement this as a beam search.</S>
original cit marker offset is 0
new cit marker offset is 0



["'268'", "'137'", "'223'"]
'268'
'137'
'223'
['268', '137', '223']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="231" ssid="135">Since we do not know the POS for the word, we must sum the LAP for all POS For a PCFG G, a stack S = Ao An$ (which we will write AN and a look-ahead terminal item wi, we define the look-ahead probability as follows: We recursively estimate this with two empirically observed conditional probabilities for every nonterminal A,: 13(A, w,a) and P(A, c).</S><S sid="224" ssid="128">For each word position i, we have a separate priority queue H, of analyses with look-ahead w,.</S><S sid="108" ssid="12">Another approach that uses syntactic structure for language modeling has been to use a shift-reduce parser to &quot;surface&quot; c-commanding phrasal headwords or part-of-speech (POS) tags from arbitrarily far back in the prefix string, for use in a trigram-like model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'231'", "'224'", "'108'"]
'231'
'224'
'108'
['231', '224', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="223" ssid="127">We implement this as a beam search.</S><S sid="109" ssid="13">A shift-reduce parser operates from left to right using a stack and a pointer to the next word in the input string.9 Each stack entry consists minimally of a nonterminal label.</S><S sid="138" ssid="42">Our approach is found to yield very accurate parses efficiently, and, in addition, to lend itself straightforwardly to estimating word probabilities on-line, that is, in a single pass from left to right.</S>
original cit marker offset is 0
new cit marker offset is 0



["'223'", "'109'", "'138'"]
'223'
'109'
'138'
['223', '109', '138']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="274" ssid="30">This structure is evaluated for precision and recall, which is entirely appropriate for these incomplete as well as complete parses.</S><S sid="214" ssid="118">A candidate analysis C = (D, 8, PD, F, wn consists of a derivation D, a stack S. a derivation probability PD, a figure of merit F, and a string w7 remaining to be parsed.</S><S sid="223" ssid="127">We implement this as a beam search.</S>
original cit marker offset is 0
new cit marker offset is 0



["'274'", "'214'", "'223'"]
'274'
'214'
'223'
['274', '214', '223']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="291" ssid="47">Also, the parser returns a set of candidate parses, from which we have been choosing the top ranked; if we use an oracle to choose the parse with the highest accuracy from among the candidates (which averaged 70.0 in number per sentence), we find an average labeled precision/recall of 94.1, for sentences of length < 100.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="9" ssid="3">A lexicalized probabilistic topdown parser is then presented, which performs very well, in terms of both the accuracy of returned parses and the efficiency with which they are found, relative to the best broad-coverage statistical parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'291'", "'388'", "'9'"]
'291'
'388'
'9'
['291', '388', '9']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S><S sid="355" ssid="111">In order to get a sense of whether these perplexity reduction results can translate to improvement in a speech recognition task, we performed a very small preliminary experiment on n-best lists.</S><S sid="214" ssid="118">A candidate analysis C = (D, 8, PD, F, wn consists of a derivation D, a stack S. a derivation probability PD, a figure of merit F, and a string w7 remaining to be parsed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'372'", "'355'", "'214'"]
'372'
'355'
'214'
['372', '355', '214']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S><S sid="102" ssid="6">One approach to syntactic language modeling is to use this distribution directly as a language model.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'102'", "'388'"]
'0'
'102'
'388'
['0', '102', '388']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="313" ssid="69">By utilizing a figure of merit to identify promising analyses, we are simply focusing our attention on those parses that are likely to have a high probability, and thus we are increasing the amount of probability mass that we do capture, of the total possible.</S><S sid="100" ssid="4">The approach that we will subsequently present uses the probabilistic grammar as its language model, but only includes probability mass from those parses that are found, that is, it uses the parser to find a subset of the total set of parses (hopefully most of the high-probability parses) and uses the sum of their probabilities as an estimate of the true probability given the grammar.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S>
original cit marker offset is 0
new cit marker offset is 0



["'313'", "'100'", "'388'"]
'313'
'100'
'388'
['313', '100', '388']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="263" ssid="19">Following standard practice, we will be reporting scores only for non-part-of-speech constituents, which are called labeled recall (LR) and labeled precision (LP).</S><S sid="245" ssid="1">The empirical results will be presented in three stages: (i) trials to examine the accuracy and efficiency of the parser; (ii) trials to examine its effect on test corpus perplexity and recognition performance; and (iii) trials to examine the effect of beam variation on these performance measures.</S><S sid="108" ssid="12">Another approach that uses syntactic structure for language modeling has been to use a shift-reduce parser to &quot;surface&quot; c-commanding phrasal headwords or part-of-speech (POS) tags from arbitrarily far back in the prefix string, for use in a trigram-like model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'263'", "'245'", "'108'"]
'263'
'245'
'108'
['263', '245', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="329" ssid="85">Table 3 shows several things.</S><S sid="19" ssid="7">A new language model, based on probabilistic top-down parsing, will be outlined and compared with the previous literature, and extensive empirical results will be presented which demonstrate its utility.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'329'", "'19'"]
'388'
'329'
'19'
['388', '329', '19']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="397" ssid="10">A top-down parser, in contrast to a standard bottom-up chart parser, has enough information to predict empty categories only where they are likely to occur.</S><S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S><S sid="209" ssid="113">This parser is essentially a stochastic version of the top-down parser described in Aho, Sethi, and Ullman (1986).</S>
original cit marker offset is 0
new cit marker offset is 0



["'397'", "'0'", "'209'"]
'397'
'0'
'209'
['397', '0', '209']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="269" ssid="25">In such a model, it is possible to commit to a set of partial analyses at a particular point that cannot be completed given the rest of the input string (i.e., the parser can &quot;garden path&quot;).</S><S sid="310" ssid="66">This is a subset of the possible leftmost partial derivations with respect to the prefix string W. Since RV is produced by expanding only analyses on priority queue H;', the set of complete trees consistent with the partial derivations on priority queue Ht is a subset of the set of complete trees consistent with the partial derivations on priority queue HT'', that is, the total probability mass represented by the priority queues is monotonically decreasing.</S><S sid="306" ssid="62">Recall the discussion of the grammar models above, and our definition of the set of partial derivations Dw, with respect to a prefix string wil) (see Equations 2 and 7).</S>
original cit marker offset is 0
new cit marker offset is 0



["'269'", "'310'", "'306'"]
'269'
'310'
'306'
['269', '310', '306']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.'])
dict_values(['The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.', 'The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.', 'Probabilistic Top-Down Parsing and Language Modeling'])
['system', 'ROUGE-S*', 'Average_R:', '0.20920', '(95%-conf.int.', '0.20920', '-', '0.20920)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.34601', '(95%-conf.int.', '0.34601', '-', '0.34601)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:91', 'F:91']
dict_values(['The following section will provide some background in probabilistic context-free grammars and language modeling for speech recognition.', 'There will also be a brief review of previous work using syntactic information for language modeling, before we introduce our model in Section 4.', 'Three parse trees: (a) a complete parse tree; (b) a complete parse tree with an explicit stop symbol; and (c) a partial parse tree.'])
dict_values(['The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.', 'In the past few years, however, some improvements have been made over these language models through the use of statistical methods of natural language processing, and the development of innovative, linguistically well-motivated techniques for improving language models for speech recognition is generating more interest among computational linguists.', 'This paper will examine language modeling for speech recognition from a natural language processing point of view.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01758', '(95%-conf.int.', '0.01758', '-', '0.01758)']
['system', 'ROUGE-S*', 'Average_P:', '0.03016', '(95%-conf.int.', '0.03016', '-', '0.03016)']
['system', 'ROUGE-S*', 'Average_F:', '0.02221', '(95%-conf.int.', '0.02221', '-', '0.02221)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:630', 'F:19']
dict_values(['Since we do not know the POS for the word, we must sum the LAP for all POS For a PCFG G, a stack S = Ao An$ (which we will write AN and a look-ahead terminal item wi, we define the look-ahead probability as follows: We recursively estimate this with two empirically observed conditional probabilities for every nonterminal A,: 13(A, w,a) and P(A, c).'])
dict_values(['Since we do not know the POS for the word, we must sum the LAP for all POS For a PCFG G, a stack S = Ao An$ (which we will write AN and a look-ahead terminal item wi, we define the look-ahead probability as follows: We recursively estimate this with two empirically observed conditional probabilities for every nonterminal A,: 13(A, w,a) and P(A, c).', 'For each word position i, we have a separate priority queue H, of analyses with look-ahead w,.', 'Another approach that uses syntactic structure for language modeling has been to use a shift-reduce parser to &quot;surface&quot; c-commanding phrasal headwords or part-of-speech (POS) tags from arbitrarily far back in the prefix string, for use in a trigram-like model.'])
['system', 'ROUGE-S*', 'Average_R:', '0.18586', '(95%-conf.int.', '0.18586', '-', '0.18586)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.31346', '(95%-conf.int.', '0.31346', '-', '0.31346)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1485', 'P:276', 'F:276']
dict_values(['Also, the parser returns a set of candidate parses, from which we have been choosing the top ranked; if we use an oracle to choose the parse with the highest accuracy from among the candidates (which averaged 70.0 in number per sentence), we find an average labeled precision/recall of 94.1, for sentences of length &lt; 100.'])
dict_values(['Also, the parser returns a set of candidate parses, from which we have been choosing the top ranked; if we use an oracle to choose the parse with the highest accuracy from among the candidates (which averaged 70.0 in number per sentence), we find an average labeled precision/recall of 94.1, for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.86897', '(95%-conf.int.', '0.86897', '-', '0.86897)']
['system', 'ROUGE-S*', 'Average_F:', '0.92989', '(95%-conf.int.', '0.92989', '-', '0.92989)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:435', 'F:378']
dict_values(['In order to get a sense of whether these perplexity reduction results can translate to improvement in a speech recognition task, we performed a very small preliminary experiment on n-best lists.'])
dict_values(['The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.', 'In order to get a sense of whether these perplexity reduction results can translate to improvement in a speech recognition task, we performed a very small preliminary experiment on n-best lists.', 'A candidate analysis C = (D, 8, PD, F, wn consists of a derivation D, a stack S. a derivation probability PD, a figure of merit F, and a string w7 remaining to be parsed.'])
['system', 'ROUGE-S*', 'Average_R:', '0.10145', '(95%-conf.int.', '0.10145', '-', '0.10145)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.18421', '(95%-conf.int.', '0.18421', '-', '0.18421)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1035', 'P:105', 'F:105']
dict_values(['A PCFG is a CFG with a probability assigned to each rule; specifically, each righthand side has a probability given the left-hand side of the rule.'])
dict_values(['Probabilistic Top-Down Parsing and Language Modeling', 'One approach to syntactic language modeling is to use this distribution directly as a language model.', 'The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:276', 'P:78', 'F:0']
dict_values(['The approach that we will subsequently present uses the probabilistic grammar as its language model, but only includes probability mass from those parses that are found, that is, it uses the parser to find a subset of the total set of parses (hopefully most of the high-probability parses) and uses the sum of their probabilities as an estimate of the true probability given the grammar.'])
dict_values(['By utilizing a figure of merit to identify promising analyses, we are simply focusing our attention on those parses that are likely to have a high probability, and thus we are increasing the amount of probability mass that we do capture, of the total possible.', 'The approach that we will subsequently present uses the probabilistic grammar as its language model, but only includes probability mass from those parses that are found, that is, it uses the parser to find a subset of the total set of parses (hopefully most of the high-probability parses) and uses the sum of their probabilities as an estimate of the true probability given the grammar.', 'The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.'])
['system', 'ROUGE-S*', 'Average_R:', '0.22792', '(95%-conf.int.', '0.22792', '-', '0.22792)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.37123', '(95%-conf.int.', '0.37123', '-', '0.37123)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1540', 'P:351', 'F:351']
dict_values(['Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).'])
dict_values(['In such a model, it is possible to commit to a set of partial analyses at a particular point that cannot be completed given the rest of the input string (i.e., the parser can &quot;garden path&quot;).', "This is a subset of the possible leftmost partial derivations with respect to the prefix string W. Since RV is produced by expanding only analyses on priority queue H;', the set of complete trees consistent with the partial derivations on priority queue Ht is a subset of the set of complete trees consistent with the partial derivations on priority queue HT'', that is, the total probability mass represented by the priority queues is monotonically decreasing.", 'Recall the discussion of the grammar models above, and our definition of the set of partial derivations Dw, with respect to a prefix string wil) (see Equations 2 and 7).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00161', '(95%-conf.int.', '0.00161', '-', '0.00161)']
['system', 'ROUGE-S*', 'Average_P:', '0.01333', '(95%-conf.int.', '0.01333', '-', '0.01333)']
['system', 'ROUGE-S*', 'Average_F:', '0.00287', '(95%-conf.int.', '0.00287', '-', '0.00287)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2485', 'P:300', 'F:4']
0.6140574923242813 0.2179524972755938 0.2712349966095626





input/ref/Task1/W11-2123_swastika.csv
input/res/Task1/W11-2123.annv3.csv
parsing: input/ref/Task1/W11-2123_swastika.csv
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['1']
1
['1']
parsed_discourse_facet ['aim_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['1']
1
['1']
parsed_discourse_facet ['aim_citation']
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['aim_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['1']
1
['1']
parsed_discourse_facet ['aim_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['1']
1
['1']
parsed_discourse_facet ['aim_citation']
<S sid="52" ssid="30">Our implementation permits jumping to any n-gram of any length with a single lookup; this appears to be unique among language model implementations.</S>
original cit marker offset is 0
new cit marker offset is 0



['52']
52
['52']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['1']
1
['1']
parsed_discourse_facet ['aim_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['1']
1
['1']
parsed_discourse_facet ['aim_citation']
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['aim_citation']
<S sid="177" ssid="49">However, TRIE partitions storage by n-gram length, so walking the trie reads N disjoint pages.</S>
original cit marker offset is 0
new cit marker offset is 0



['177']
177
['177']
parsed_discourse_facet ['method_citation']
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['aim_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['1']
1
['1']
parsed_discourse_facet ['aim_citation']
<S sid="200" ssid="19">The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.</S>
original cit marker offset is 0
new cit marker offset is 0



['200']
200
['200']
parsed_discourse_facet ['method_citation']
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['aim_citation']
<S sid="200" ssid="19">The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.</S>
original cit marker offset is 0
new cit marker offset is 0



['200']
200
['200']
parsed_discourse_facet ['method_citation']
<S sid="200" ssid="19">The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.</S>
original cit marker offset is 0
new cit marker offset is 0



['200']
200
['200']
parsed_discourse_facet ['method_citation']
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['aim_citation']
<S sid="278" ssid="5">We attain these results using several optimizations: hashing, custom lookup tables, bit-level packing, and state for left-to-right query patterns.</S>
original cit marker offset is 0
new cit marker offset is 0



['278']
278
['278']
parsed_discourse_facet ['method_citation']
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['aim_citation']
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['aim_citation']
parsing: input/res/Task1/W11-2123.annv3.csv
<S sid="97" ssid="1">SRILM (Stolcke, 2002) is widely used within academia.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'97'", "'12'", "'199'"]
'97'
'12'
'199'
['97', '12', '199']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="223" ssid="42">The binary language model from Section 5.2 and text phrase table were forced into disk cache before each run.</S><S sid="203" ssid="22">As noted in Section 4.4, disk cache state is controlled by reading the entire binary file before each test begins.</S><S sid="180" ssid="52">In all of our experiments, the binary file (whether mapped or, in the case of most other packages, interpreted) is loaded into the disk cache in advance so that lazy mapping will never fault to disk.</S>
original cit marker offset is 0
new cit marker offset is 0



["'223'", "'203'", "'180'"]
'223'
'203'
'180'
['223', '203', '180']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="159" ssid="31">Saving state allows our code to walk the data structure exactly once per query.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="10" ssid="5">The problem is to store these two values for a large and sparse set of n-grams in a way that makes queries efficient.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'1'", "'10'"]
'159'
'1'
'10'
['159', '1', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'274'", "'199'"]
'1'
'274'
'199'
['1', '274', '199']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'12'", "'1'"]
'199'
'12'
'1'
['199', '12', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="24" ssid="2">The set of n-grams appearing in a model is sparse, and we want to efficiently find their associated probabilities and backoff penalties.</S><S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'24'", "'7'"]
'199'
'24'
'7'
['199', '24', '7']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="206" ssid="25">Tokens were converted to vocabulary identifiers in advance and state was carried from each query to the next.</S><S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'206'", "'103'"]
'1'
'206'
'103'
['1', '206', '103']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'1'", "'205'"]
'199'
'1'
'205'
['199', '1', '205']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="45" ssid="23">The PROBING data structure is a rather straightforward application of these hash tables to store Ngram language models.</S><S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S><S sid="23" ssid="1">We implement two data structures: PROBING, designed for speed, and TRIE, optimized for memory.</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'", "'274'", "'23'"]
'45'
'274'
'23'
['45', '274', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="92" ssid="70">To quantize, we use the binning method (Federico and Bertoldi, 2006) that sorts values, divides into equally sized bins, and averages within each bin.</S><S sid="34" ssid="12">Therefore, a populated probing hash table consists of an array of buckets that contain either one entry or are empty.</S><S sid="35" ssid="13">Non-empty buckets contain an entry belonging to them or to a preceding bucket where a conflict occurred.</S>
original cit marker offset is 0
new cit marker offset is 0



["'92'", "'34'", "'35'"]
'92'
'34'
'35'
['92', '34', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="275" ssid="2">The PROBING model is 2.4 times as fast as the fastest alternative, SRILM, and uses less memory too.</S><S sid="97" ssid="1">SRILM (Stolcke, 2002) is widely used within academia.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S>
original cit marker offset is 0
new cit marker offset is 0



["'275'", "'97'", "'12'"]
'275'
'97'
'12'
['275', '97', '12']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="102" ssid="6">The PROBING model was designed to improve upon SRILM by using linear probing hash tables (though not arranged in a trie), allocating memory all at once (eliminating the need for full pointers), and being easy to compile.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'199'", "'102'"]
'1'
'199'
'102'
['1', '199', '102']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'1'", "'0'"]
'103'
'1'
'0'
['103', '1', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'12'", "'1'"]
'199'
'12'
'1'
['199', '12', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'103'", "'0'"]
'199'
'103'
'0'
['199', '103', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'205'", "'199'", "'1'"]
'205'
'199'
'1'
['205', '199', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="131" ssid="3">Dynamic programming efficiently scores many hypotheses by exploiting the fact that an N-gram language model conditions on at most N − 1 preceding words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'199'", "'131'"]
'103'
'199'
'131'
['103', '199', '131']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'7'", "'0'"]
'1'
'7'
'0'
['1', '7', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'205'", "'1'"]
'199'
'205'
'1'
['199', '205', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="200" ssid="19">The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'205'", "'200'"]
'199'
'205'
'200'
['199', '205', '200']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
dict_values(['SRILM (Stolcke, 2002) is widely used within academia.', 'Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.', 'For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00106', '(95%-conf.int.', '0.00106', '-', '0.00106)']
['system', 'ROUGE-S*', 'Average_P:', '0.01282', '(95%-conf.int.', '0.01282', '-', '0.01282)']
['system', 'ROUGE-S*', 'Average_F:', '0.00195', '(95%-conf.int.', '0.00195', '-', '0.00195)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:946', 'P:78', 'F:1']
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
dict_values(['The binary language model from Section 5.2 and text phrase table were forced into disk cache before each run.', 'As noted in Section 4.4, disk cache state is controlled by reading the entire binary file before each test begins.', 'In all of our experiments, the binary file (whether mapped or, in the case of most other packages, interpreted) is loaded into the disk cache in advance so that lazy mapping will never fault to disk.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00116', '(95%-conf.int.', '0.00116', '-', '0.00116)']
['system', 'ROUGE-S*', 'Average_P:', '0.01282', '(95%-conf.int.', '0.01282', '-', '0.01282)']
['system', 'ROUGE-S*', 'Average_F:', '0.00213', '(95%-conf.int.', '0.00213', '-', '0.00213)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:861', 'P:78', 'F:1']
dict_values(['This paper presents methods to query N-gram language models, minimizing time and space costs.'])
dict_values(['Saving state allows our code to walk the data structure exactly once per query.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'The problem is to store these two values for a large and sparse set of n-grams in a way that makes queries efficient.'])
['system', 'ROUGE-S*', 'Average_R:', '0.03908', '(95%-conf.int.', '0.03908', '-', '0.03908)']
['system', 'ROUGE-S*', 'Average_P:', '0.30909', '(95%-conf.int.', '0.30909', '-', '0.30909)']
['system', 'ROUGE-S*', 'Average_F:', '0.06939', '(95%-conf.int.', '0.06939', '-', '0.06939)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:55', 'F:17']
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.', 'For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.'])
['system', 'ROUGE-S*', 'Average_R:', '0.06633', '(95%-conf.int.', '0.06633', '-', '0.06633)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.12440', '(95%-conf.int.', '0.12440', '-', '0.12440)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1176', 'P:78', 'F:78']
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05882', '(95%-conf.int.', '0.05882', '-', '0.05882)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.11111', '(95%-conf.int.', '0.11111', '-', '0.11111)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1326', 'P:78', 'F:78']
dict_values(['Our implementation permits jumping to any n-gram of any length with a single lookup; this appears to be unique among language model implementations.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'The set of n-grams appearing in a model is sparse, and we want to efficiently find their associated probabilities and backoff penalties.', 'This paper presents methods to query N-gram language models, minimizing time and space costs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00555', '(95%-conf.int.', '0.00555', '-', '0.00555)']
['system', 'ROUGE-S*', 'Average_P:', '0.09091', '(95%-conf.int.', '0.09091', '-', '0.09091)']
['system', 'ROUGE-S*', 'Average_F:', '0.01046', '(95%-conf.int.', '0.01046', '-', '0.01046)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:66', 'F:6']
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'Tokens were converted to vocabulary identifiers in advance and state was carried from each query to the next.', 'IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.'])
['system', 'ROUGE-S*', 'Average_R:', '0.15726', '(95%-conf.int.', '0.15726', '-', '0.15726)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.27178', '(95%-conf.int.', '0.27178', '-', '0.27178)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:78', 'F:78']
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).'])
['system', 'ROUGE-S*', 'Average_R:', '0.05065', '(95%-conf.int.', '0.05065', '-', '0.05065)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.09642', '(95%-conf.int.', '0.09642', '-', '0.09642)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1540', 'P:78', 'F:78']
dict_values(['This paper presents methods to query N-gram language models, minimizing time and space costs.'])
dict_values(['The PROBING model is 2.4 times as fast as the fastest alternative, SRILM, and uses less memory too.', 'SRILM (Stolcke, 2002) is widely used within academia.', 'Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00265', '(95%-conf.int.', '0.00265', '-', '0.00265)']
['system', 'ROUGE-S*', 'Average_P:', '0.01818', '(95%-conf.int.', '0.01818', '-', '0.01818)']
['system', 'ROUGE-S*', 'Average_F:', '0.00462', '(95%-conf.int.', '0.00462', '-', '0.00462)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:55', 'F:1']
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'The PROBING model was designed to improve upon SRILM by using linear probing hash tables (though not arranged in a trie), allocating memory all at once (eliminating the need for full pointers), and being easy to compile.'])
['system', 'ROUGE-S*', 'Average_R:', '0.04887', '(95%-conf.int.', '0.04887', '-', '0.04887)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.09319', '(95%-conf.int.', '0.09319', '-', '0.09319)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1596', 'P:78', 'F:78']
dict_values(['The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.'])
dict_values(['IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'KenLM: Faster and Smaller Language Model Queries'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:120', 'F:0']
dict_values(['This paper presents methods to query N-gram language models, minimizing time and space costs.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01735', '(95%-conf.int.', '0.01735', '-', '0.01735)']
['system', 'ROUGE-S*', 'Average_P:', '0.41818', '(95%-conf.int.', '0.41818', '-', '0.41818)']
['system', 'ROUGE-S*', 'Average_F:', '0.03331', '(95%-conf.int.', '0.03331', '-', '0.03331)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1326', 'P:55', 'F:23']
dict_values(['The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.', 'KenLM: Faster and Smaller Language Model Queries'])
['system', 'ROUGE-S*', 'Average_R:', '0.00221', '(95%-conf.int.', '0.00221', '-', '0.00221)']
['system', 'ROUGE-S*', 'Average_P:', '0.01667', '(95%-conf.int.', '0.01667', '-', '0.01667)']
['system', 'ROUGE-S*', 'Average_F:', '0.00391', '(95%-conf.int.', '0.00391', '-', '0.00391)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:120', 'F:2']
dict_values(['The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.'])
dict_values(['We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).', 'For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00065', '(95%-conf.int.', '0.00065', '-', '0.00065)']
['system', 'ROUGE-S*', 'Average_P:', '0.00833', '(95%-conf.int.', '0.00833', '-', '0.00833)']
['system', 'ROUGE-S*', 'Average_F:', '0.00120', '(95%-conf.int.', '0.00120', '-', '0.00120)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1540', 'P:120', 'F:1']
dict_values(['This paper presents methods to query N-gram language models, minimizing time and space costs.'])
dict_values(['IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.', 'For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'Dynamic programming efficiently scores many hypotheses by exploiting the fact that an N-gram language model conditions on at most N − 1 preceding words.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00471', '(95%-conf.int.', '0.00471', '-', '0.00471)']
['system', 'ROUGE-S*', 'Average_P:', '0.10909', '(95%-conf.int.', '0.10909', '-', '0.10909)']
['system', 'ROUGE-S*', 'Average_F:', '0.00902', '(95%-conf.int.', '0.00902', '-', '0.00902)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1275', 'P:55', 'F:6']
dict_values(['We attain these results using several optimizations: hashing, custom lookup tables, bit-level packing, and state for left-to-right query patterns.'])
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'This paper presents methods to query N-gram language models, minimizing time and space costs.', 'KenLM: Faster and Smaller Language Model Queries'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:91', 'F:0']
dict_values(['This paper presents methods to query N-gram language models, minimizing time and space costs.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01104', '(95%-conf.int.', '0.01104', '-', '0.01104)']
['system', 'ROUGE-S*', 'Average_P:', '0.30909', '(95%-conf.int.', '0.30909', '-', '0.30909)']
['system', 'ROUGE-S*', 'Average_F:', '0.02132', '(95%-conf.int.', '0.02132', '-', '0.02132)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1540', 'P:55', 'F:17']
dict_values(['This paper presents methods to query N-gram language models, minimizing time and space costs.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).', 'The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00351', '(95%-conf.int.', '0.00351', '-', '0.00351)']
['system', 'ROUGE-S*', 'Average_P:', '0.10909', '(95%-conf.int.', '0.10909', '-', '0.10909)']
['system', 'ROUGE-S*', 'Average_F:', '0.00680', '(95%-conf.int.', '0.00680', '-', '0.00680)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1711', 'P:55', 'F:6']
0.35634833135362043 0.0261611109657716 0.047833888623145054





input/ref/Task1/P08-1043_aakansha.csv
input/res/Task1/P08-1043.annv3.csv
parsing: input/ref/Task1/P08-1043_aakansha.csv
<S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'"]
'94'
['94']
parsed_discourse_facet ['method_citation']
<S sid="4" ssid="4">Using a treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling technique our model outperforms previous pipelined, integrated or factorized systems for Hebrew morphological and syntactic processing, yielding an error reduction of 12% over the best published results so far.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'"]
'4'
['4']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'"]
'19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'"]
'19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="4" ssid="4">Using a treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling technique our model outperforms previous pipelined, integrated or factorized systems for Hebrew morphological and syntactic processing, yielding an error reduction of 12% over the best published results so far.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'"]
'4'
['4']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'"]
'19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
    <S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S>
original cit marker offset is 0
new cit marker offset is 0



["'69'", "'70'"]
'69'
'70'
['69', '70']
parsed_discourse_facet ['method_citation']
<S sid="85" ssid="17">The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'"]
'85'
['85']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'"]
'19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'"]
'19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'"]
'19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'"]
'94'
['94']
parsed_discourse_facet ['method_citation']
<S sid="133" ssid="11">Morphological Analyzer Ideally, we would use an of-the-shelf morphological analyzer for mapping each input token to its possible analyses.</S>
    <S sid="134" ssid="12">Such resources exist for Hebrew (Itai et al., 2006), but unfortunately use a tagging scheme which is incompatible with the one of the Hebrew Treebank.s For this reason, we use a data-driven morphological analyzer derived from the training 	similar to (Cohen and Smith, 2007).</S>
original cit marker offset is 0
new cit marker offset is 0



["'133'", "'134'"]
'133'
'134'
['133', '134']
parsed_discourse_facet ['method_citation']
<S sid="85" ssid="17">The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'"]
'85'
['85']
parsed_discourse_facet ['method_citation']
<S sid="155" ssid="33">Evaluation We use 8 different measures to evaluate the performance of our system on the joint disambiguation task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'155'"]
'155'
['155']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P08-1043.annv3.csv
<S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="189" ssid="3">Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'", "'69'", "'189'"]
'94'
'69'
'189'
['94', '69', '189']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="189" ssid="3">Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.</S><S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'189'", "'21'"]
'186'
'189'
'21'
['186', '189', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'70'", "'69'"]
'79'
'70'
'69'
['79', '70', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S><S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'186'", "'187'"]
'0'
'186'
'187'
['0', '186', '187']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'0'", "'187'"]
'186'
'0'
'187'
['186', '0', '187']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'69'", "'21'"]
'79'
'69'
'21'
['79', '69', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'70'", "'69'"]
'79'
'70'
'69'
['79', '70', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="85" ssid="17">The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="191" ssid="5">In the current work morphological analyses and lexical probabilities are derived from a small Treebank, which is by no means the best way to go.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'69'", "'191'"]
'85'
'69'
'191'
['85', '69', '191']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'187'", "'89'"]
'186'
'187'
'89'
['186', '187', '89']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'89'", "'0'"]
'186'
'89'
'0'
['186', '89', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'89'", "'70'", "'0'"]
'89'
'70'
'0'
['89', '70', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation']
<S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S><S sid="146" ssid="24">Given a PCFG grammar G and a lattice L with nodes n1 ... nk, we construct the weighted grammar GL as follows: for every arc (lexeme) l E L from node ni to node nj, we add to GL the rule [l --+ tni, tni+1, ... , tnj_1] with a probability of 1 (this indicates the lexeme l spans from node ni to node nj).</S><S sid="3" ssid="3">Here we propose a single joint model for performing both morphological segmentation and syntactic disambiguation which bypasses the associated circularity.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'146'", "'3'"]
'21'
'146'
'3'
['21', '146', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'94'", "'69'"]
'79'
'94'
'69'
['79', '94', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="188" ssid="2">The overall performance of our joint framework demonstrates that a probability distribution obtained over mere syntactic contexts using a Treebank grammar and a data-driven lexicon outperforms upper bounds proposed by previous joint disambiguation systems and achieves segmentation and parsing results on a par with state-of-the-art standalone applications results.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="191" ssid="5">In the current work morphological analyses and lexical probabilities are derived from a small Treebank, which is by no means the best way to go.</S>
original cit marker offset is 0
new cit marker offset is 0



["'188'", "'89'", "'191'"]
'188'
'89'
'191'
['188', '89', '191']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="85" ssid="17">The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.</S><S sid="75" ssid="7">Every token is independent of the others, and the sentence lattice is in fact a concatenation of smaller lattices, one for each token.</S><S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'75'", "'79'"]
'85'
'75'
'79'
['85', '75', '79']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="82" ssid="14">In sequential tagging models such as (Adler and Elhadad, 2006; Bar-Haim et al., 2007; Smith et al., 2005) weights are assigned according to a language model The input for the joint task is a sequence W = w1, ... , wn of space-delimited tokens.</S><S sid="84" ssid="16">The entries in such a lexicon may be thought of as meaningful surface segments paired up with their PoS tags li = (si, pi), but note that a surface segment s need not be a space-delimited token.</S><S sid="135" ssid="13">We construct a mapping from all the space-delimited tokens seen in the training sentences to their corresponding analyses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'82'", "'84'", "'135'"]
'82'
'84'
'135'
['82', '84', '135']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.'])
dict_values(['Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.', 'We represent all morphological analyses of a given utterance using a lattice structure.', 'Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.'])
['system', 'ROUGE-S*', 'Average_R:', '0.21764', '(95%-conf.int.', '0.21764', '-', '0.21764)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.35748', '(95%-conf.int.', '0.35748', '-', '0.35748)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:703', 'P:153', 'F:153']
dict_values(['Using a treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling technique our model outperforms previous pipelined, integrated or factorized systems for Hebrew morphological and syntactic processing, yielding an error reduction of 12% over the best published results so far.'])
dict_values(['This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.', 'Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.', 'Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2'])
['system', 'ROUGE-S*', 'Average_R:', '0.04569', '(95%-conf.int.', '0.04569', '-', '0.04569)']
['system', 'ROUGE-S*', 'Average_P:', '0.25926', '(95%-conf.int.', '0.25926', '-', '0.25926)']
['system', 'ROUGE-S*', 'Average_F:', '0.07769', '(95%-conf.int.', '0.07769', '-', '0.07769)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2145', 'P:378', 'F:98']
dict_values(['Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.'])
dict_values(['There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.', 'Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.', 'We represent all morphological analyses of a given utterance using a lattice structure.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00923', '(95%-conf.int.', '0.00923', '-', '0.00923)']
['system', 'ROUGE-S*', 'Average_P:', '0.02500', '(95%-conf.int.', '0.02500', '-', '0.02500)']
['system', 'ROUGE-S*', 'Average_F:', '0.01348', '(95%-conf.int.', '0.01348', '-', '0.01348)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:120', 'F:3']
dict_values(['Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.'])
dict_values(['A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing', 'This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.', 'Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05803', '(95%-conf.int.', '0.05803', '-', '0.05803)']
['system', 'ROUGE-S*', 'Average_P:', '0.35833', '(95%-conf.int.', '0.35833', '-', '0.35833)']
['system', 'ROUGE-S*', 'Average_F:', '0.09988', '(95%-conf.int.', '0.09988', '-', '0.09988)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:741', 'P:120', 'F:43']
dict_values(['Using a treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling technique our model outperforms previous pipelined, integrated or factorized systems for Hebrew morphological and syntactic processing, yielding an error reduction of 12% over the best published results so far.'])
dict_values(['This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.', 'A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing', 'Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00810', '(95%-conf.int.', '0.00810', '-', '0.00810)']
['system', 'ROUGE-S*', 'Average_P:', '0.01587', '(95%-conf.int.', '0.01587', '-', '0.01587)']
['system', 'ROUGE-S*', 'Average_F:', '0.01072', '(95%-conf.int.', '0.01072', '-', '0.01072)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:741', 'P:378', 'F:6']
dict_values(['We represent all morphological analyses of a given utterance using a lattice structure.', 'Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.'])
dict_values(['There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.', 'Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.', 'We represent all morphological analyses of a given utterance using a lattice structure.'])
['system', 'ROUGE-S*', 'Average_R:', '0.38462', '(95%-conf.int.', '0.38462', '-', '0.38462)']
['system', 'ROUGE-S*', 'Average_P:', '0.73099', '(95%-conf.int.', '0.73099', '-', '0.73099)']
['system', 'ROUGE-S*', 'Average_F:', '0.50403', '(95%-conf.int.', '0.50403', '-', '0.50403)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:171', 'F:125']
dict_values(['The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.'])
dict_values(['The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.', 'We represent all morphological analyses of a given utterance using a lattice structure.', 'In the current work morphological analyses and lexical probabilities are derived from a small Treebank, which is by no means the best way to go.'])
['system', 'ROUGE-S*', 'Average_R:', '0.19212', '(95%-conf.int.', '0.19212', '-', '0.19212)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.32231', '(95%-conf.int.', '0.32231', '-', '0.32231)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:406', 'P:78', 'F:78']
dict_values(['Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.'])
dict_values(['This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.', 'Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.', 'Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02286', '(95%-conf.int.', '0.02286', '-', '0.02286)']
['system', 'ROUGE-S*', 'Average_P:', '0.23333', '(95%-conf.int.', '0.23333', '-', '0.23333)']
['system', 'ROUGE-S*', 'Average_F:', '0.04164', '(95%-conf.int.', '0.04164', '-', '0.04164)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1225', 'P:120', 'F:28']
dict_values(['Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.'])
dict_values(['This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.', 'Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.', 'A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing'])
['system', 'ROUGE-S*', 'Average_R:', '0.02821', '(95%-conf.int.', '0.02821', '-', '0.02821)']
['system', 'ROUGE-S*', 'Average_P:', '0.18333', '(95%-conf.int.', '0.18333', '-', '0.18333)']
['system', 'ROUGE-S*', 'Average_F:', '0.04889', '(95%-conf.int.', '0.04889', '-', '0.04889)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:780', 'P:120', 'F:22']
dict_values(['Evaluation We use 8 different measures to evaluate the performance of our system on the joint disambiguation task.'])
dict_values(['In sequential tagging models such as (Adler and Elhadad, 2006; Bar-Haim et al., 2007; Smith et al., 2005) weights are assigned according to a language model The input for the joint task is a sequence W = w1, ... , wn of space-delimited tokens.', 'The entries in such a lexicon may be thought of as meaningful surface segments paired up with their PoS tags li = (si, pi), but note that a surface segment s need not be a space-delimited token.', 'We construct a mapping from all the space-delimited tokens seen in the training sentences to their corresponding analyses.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00075', '(95%-conf.int.', '0.00075', '-', '0.00075)']
['system', 'ROUGE-S*', 'Average_P:', '0.02778', '(95%-conf.int.', '0.02778', '-', '0.02778)']
['system', 'ROUGE-S*', 'Average_F:', '0.00147', '(95%-conf.int.', '0.00147', '-', '0.00147)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1326', 'P:36', 'F:1']
0.3833889961661101 0.09672499903275003 0.14775899852241





input/ref/Task1/D10-1044_swastika.csv
input/res/Task1/D10-1044.annv3.csv
parsing: input/ref/Task1/D10-1044_swastika.csv
<S sid="9" ssid="6">In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material&#8212;though adequate for reasonable performance&#8212;is also available.</S>
original cit marker offset is 0
new cit marker offset is 0



['9']
9
['9']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="6">In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material&#8212;though adequate for reasonable performance&#8212;is also available.</S>
original cit marker offset is 0
new cit marker offset is 0



['9']
9
['9']
parsed_discourse_facet ['aim_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



['62']
62
['62']
parsed_discourse_facet ['method_citation']
<S sid="71" ssid="8">Finally, we incorporate the instance-weighting model into a general linear combination, and learn weights and mixing parameters simultaneously. where c&#955;(s, t) is a modified count for pair (s, t) in OUT, u(s|t) is a prior distribution, and y is a prior weight.</S>
original cit marker offset is 0
new cit marker offset is 0



['71']
71
['71']
parsed_discourse_facet ['method_citation']
<S sid="96" ssid="33">We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.</S>
original cit marker offset is 0
new cit marker offset is 0



['96']
96
['96']
parsed_discourse_facet ['aim_citation']
<S sid="71" ssid="8">Finally, we incorporate the instance-weighting model into a general linear combination, and learn weights and mixing parameters simultaneously. where c&#955;(s, t) is a modified count for pair (s, t) in OUT, u(s|t) is a prior distribution, and y is a prior weight.</S>
original cit marker offset is 0
new cit marker offset is 0



['71']
71
['71']
parsed_discourse_facet ['result_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S>
original cit marker offset is 0
new cit marker offset is 0



['144']
144
['144']
parsed_discourse_facet ['result_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



['62']
62
['62']
parsed_discourse_facet ['method_citation']
<S sid="45" ssid="9">An easy way to achieve this is to put the domain-specific LMs and TMs into the top-level log-linear model and learn optimal weights with MERT (Och, 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



['45']
45
['45']
parsed_discourse_facet ['method_citation']
<S sid="75" ssid="12">However, it is robust, efficient, and easy to implement.4 To perform the maximization in (7), we used the popular L-BFGS algorithm (Liu and Nocedal, 1989), which requires gradient information.</S>
original cit marker offset is 0
new cit marker offset is 0



['75']
75
['75']
parsed_discourse_facet ['method_citation']
<S sid="22" ssid="19">Within this framework, we use features intended to capture degree of generality, including the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.</S>
original cit marker offset is 0
new cit marker offset is 0



['22']
22
['22']
parsed_discourse_facet ['method_citation']
<S sid="96" ssid="33">We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.</S>
original cit marker offset is 0
new cit marker offset is 0



['96']
96
['96']
parsed_discourse_facet ['aim_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



['62']
62
['62']
parsed_discourse_facet ['method_citation']
  <S sid="42" ssid="6">The natural baseline approach is to concatenate data from IN and OUT.</S>
original cit marker offset is 0
new cit marker offset is 0



['42']
42
['42']
parsed_discourse_facet ['aim_citation']
<S sid="96" ssid="33">We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.</S>
original cit marker offset is 0
new cit marker offset is 0



['96']
96
['96']
parsed_discourse_facet ['aim_citation']
parsing: input/res/Task1/D10-1044.annv3.csv
<S sid="143" ssid="12">Other work includes transferring latent topic distributions from source to target language for LM adaptation, (Tam et al., 2007) and adapting features at the sentence level to different categories of sentence (Finch and Sumita, 2008).</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="4" ssid="1">Domain adaptation is a common concern when optimizing empirical NLP applications.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'1'", "'4'"]
'143'
'1'
'4'
['143', '1', '4']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="65" ssid="2">Matsoukas et al (2009) generalize it by learning weights on sentence pairs that are used when estimating relative-frequency phrase-pair probabilities.</S><S sid="96" ssid="33">We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'65'", "'96'"]
'68'
'65'
'96'
['68', '65', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="9" ssid="6">In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material—though adequate for reasonable performance—is also available.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'", "'1'", "'9'"]
'144'
'1'
'9'
['144', '1', '9']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'", "'145'", "'1'"]
'62'
'145'
'1'
['62', '145', '1']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S><S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'62'"]
'0'
'23'
'62'
['0', '23', '62']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="65" ssid="2">Matsoukas et al (2009) generalize it by learning weights on sentence pairs that are used when estimating relative-frequency phrase-pair probabilities.</S><S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="67" ssid="4">We extend the Matsoukas et al approach in several ways.</S>
original cit marker offset is 0
new cit marker offset is 0



["'65'", "'68'", "'67'"]
'65'
'68'
'67'
['65', '68', '67']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="18">This highly effective approach is not directly applicable to the multinomial models used for core SMT components, which have no natural method for combining split features, so we rely on an instance-weighting approach (Jiang and Zhai, 2007) to downweight domain-specific examples in OUT.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'145'", "'0'"]
'21'
'145'
'0'
['21', '145', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="148" ssid="5">Mixing, smoothing, and instance-feature weights are learned at the same time using an efficient maximum-likelihood procedure that relies on only a small in-domain development corpus.</S><S sid="97" ssid="1">We carried out translation experiments in two different settings.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'148'", "'97'"]
'145'
'148'
'97'
['145', '148', '97']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S><S sid="117" ssid="21">The natural baseline (baseline) outperforms the pure IN system only for EMEA/EP fren.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'117'", "'62'"]
'0'
'117'
'62'
['0', '117', '62']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="42" ssid="6">The natural baseline approach is to concatenate data from IN and OUT.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="28" ssid="25">We train linear mixture models for conditional phrase pair probabilities over IN and OUT so as to maximize the likelihood of an empirical joint phrase-pair distribution extracted from a development set.</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'145'", "'28'"]
'42'
'145'
'28'
['42', '145', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="84" ssid="21">An alternate approximation to (8) would be to let w,\(s, t) directly approximate pˆI(s, t).</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="32" ssid="29">This is a straightforward technique that is arguably better suited to the adaptation task than the standard method of treating representative IN sentences as queries, then pooling the match results.</S>
original cit marker offset is 0
new cit marker offset is 0



["'84'", "'1'", "'32'"]
'84'
'1'
'32'
['84', '1', '32']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="75" ssid="12">However, it is robust, efficient, and easy to implement.4 To perform the maximization in (7), we used the popular L-BFGS algorithm (Liu and Nocedal, 1989), which requires gradient information.</S><S sid="84" ssid="21">An alternate approximation to (8) would be to let w,\(s, t) directly approximate pˆI(s, t).</S><S sid="63" ssid="27">The number of top-ranked pairs to retain is chosen to optimize dev-set BLEU score.</S>
original cit marker offset is 0
new cit marker offset is 0



["'75'", "'84'", "'63'"]
'75'
'84'
'63'
['75', '84', '63']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S><S sid="31" ssid="28">For comparison to information-retrieval inspired baselines, eg (L¨u et al., 2007), we select sentences from OUT using language model perplexities from IN.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'", "'31'", "'1'"]
'144'
'31'
'1'
['144', '31', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="22" ssid="19">Within this framework, we use features intended to capture degree of generality, including the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S>
original cit marker offset is 0
new cit marker offset is 0



["'22'", "'145'", "'0'"]
'22'
'145'
'0'
['22', '145', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'145'", "'1'"]
'23'
'145'
'1'
['23', '145', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'62'", "'1'"]
'145'
'62'
'1'
['145', '62', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="42" ssid="6">The natural baseline approach is to concatenate data from IN and OUT.</S><S sid="117" ssid="21">The natural baseline (baseline) outperforms the pure IN system only for EMEA/EP fren.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'117'", "'145'"]
'42'
'117'
'145'
['42', '117', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="38" ssid="2">The toplevel weights are trained to maximize a metric such as BLEU on a small development set of approximately 1000 sentence pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'1'", "'38'"]
'68'
'1'
'38'
['68', '1', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="40" ssid="4">We focus here instead on adapting the two most important features: the language model (LM), which estimates the probability p(wIh) of a target word w following an ngram h; and the translation models (TM) p(slt) and p(t1s), which give the probability of source phrase s translating to target phrase t, and vice versa.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'40'", "'145'"]
'68'
'40'
'145'
['68', '40', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material&#8212;though adequate for reasonable performance&#8212;is also available.'])
dict_values(['Other work includes transferring latent topic distributions from source to target language for LM adaptation, (Tam et al., 2007) and adapting features at the sentence level to different categories of sentence (Finch and Sumita, 2008).', 'We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.', 'Domain adaptation is a common concern when optimizing empirical NLP applications.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00278', '(95%-conf.int.', '0.00278', '-', '0.00278)']
['system', 'ROUGE-S*', 'Average_P:', '0.01429', '(95%-conf.int.', '0.01429', '-', '0.01429)']
['system', 'ROUGE-S*', 'Average_F:', '0.00465', '(95%-conf.int.', '0.00465', '-', '0.00465)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:210', 'F:3']
dict_values(['In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material&#8212;though adequate for reasonable performance&#8212;is also available.'])
dict_values(['In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.', 'We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.', 'In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material—though adequate for reasonable performance—is also available.'])
['system', 'ROUGE-S*', 'Average_R:', '0.15160', '(95%-conf.int.', '0.15160', '-', '0.15160)']
['system', 'ROUGE-S*', 'Average_P:', '0.81429', '(95%-conf.int.', '0.81429', '-', '0.81429)']
['system', 'ROUGE-S*', 'Average_F:', '0.25561', '(95%-conf.int.', '0.25561', '-', '0.25561)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1128', 'P:210', 'F:171']
dict_values(['To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.'])
dict_values(['To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.', 'Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.', 'We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.'])
['system', 'ROUGE-S*', 'Average_R:', '0.14634', '(95%-conf.int.', '0.14634', '-', '0.14634)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.25532', '(95%-conf.int.', '0.25532', '-', '0.25532)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:820', 'P:120', 'F:120']
dict_values(['To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.'])
dict_values(['Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation', 'The natural baseline (baseline) outperforms the pure IN system only for EMEA/EP fren.', 'To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.'])
['system', 'ROUGE-S*', 'Average_R:', '0.22727', '(95%-conf.int.', '0.22727', '-', '0.22727)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.37037', '(95%-conf.int.', '0.37037', '-', '0.37037)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:120', 'F:120']
dict_values(['Within this framework, we use features intended to capture degree of generality, including the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.'])
dict_values(['Within this framework, we use features intended to capture degree of generality, including the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.', 'Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.', 'Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation'])
['system', 'ROUGE-S*', 'Average_R:', '0.17931', '(95%-conf.int.', '0.17931', '-', '0.17931)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.30409', '(95%-conf.int.', '0.30409', '-', '0.30409)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:78', 'F:78']
dict_values(['We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.'])
dict_values(['Our second contribution is to apply instance weighting at the level of phrase pairs.', 'Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.', 'We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01411', '(95%-conf.int.', '0.01411', '-', '0.01411)']
['system', 'ROUGE-S*', 'Average_P:', '0.15556', '(95%-conf.int.', '0.15556', '-', '0.15556)']
['system', 'ROUGE-S*', 'Average_F:', '0.02588', '(95%-conf.int.', '0.02588', '-', '0.02588)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:45', 'F:7']
dict_values(['We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.'])
dict_values(['First, we learn weights on individual phrase pairs rather than sentences.', 'We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.', 'The toplevel weights are trained to maximize a metric such as BLEU on a small development set of approximately 1000 sentence pairs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00476', '(95%-conf.int.', '0.00476', '-', '0.00476)']
['system', 'ROUGE-S*', 'Average_P:', '0.06667', '(95%-conf.int.', '0.06667', '-', '0.06667)']
['system', 'ROUGE-S*', 'Average_F:', '0.00889', '(95%-conf.int.', '0.00889', '-', '0.00889)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:45', 'F:3']
0.5786871345901838 0.10373856994659184 0.1749728546432449





input/ref/Task1/W99-0613_swastika.csv
input/res/Task1/W99-0613.annv3.csv
parsing: input/ref/Task1/W99-0613_swastika.csv
<S sid="9" ssid="3">This paper discusses the use of unlabeled examples for the problem of named entity classification.</S>
original cit marker offset is 0
new cit marker offset is 0



['9']
9
['9']
parsed_discourse_facet ['aim_citation']
<S sid="159" ssid="26">To prevent this we &amp;quot;smooth&amp;quot; the confidence by adding a small value, e, to both W+ and W_, giving at = Plugging the value of at from Equ.</S>
original cit marker offset is 0
new cit marker offset is 0



['159']
159
['159']
parsed_discourse_facet ['method_citation']
<S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S>
original cit marker offset is 0
new cit marker offset is 0



['137']
137
['137']
parsed_discourse_facet ['method_citation']
<S sid="91" ssid="24">There are two differences between this method and the DL-CoTrain algorithm: spelling and contextual features, alternating between labeling and learning with the two types of features.</S>
original cit marker offset is 0
new cit marker offset is 0



['91']
91
['91']
parsed_discourse_facet ['method_citation']
<S sid="213" ssid="80">Thus at each iteration the algorithm is forced to pick features for the location, person and organization in turn for the classifier being trained.</S>
original cit marker offset is 0
new cit marker offset is 0



['213']
213
['213']
parsed_discourse_facet ['method_citation']
 <S sid="250" ssid="1">Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.</S>
original cit marker offset is 0
new cit marker offset is 0



['250']
250
['250']
parsed_discourse_facet ['result_citation']
<S sid="213" ssid="80">Thus at each iteration the algorithm is forced to pick features for the location, person and organization in turn for the classifier being trained.</S>
original cit marker offset is 0
new cit marker offset is 0



['213']
213
['213']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="3">This paper discusses the use of unlabeled examples for the problem of named entity classification.</S>
original cit marker offset is 0
new cit marker offset is 0



['9']
9
['9']
parsed_discourse_facet ['aim_citation']
    <S sid="36" ssid="30">Roughly speaking, the new algorithm presented in this paper performs a similar search, but instead minimizes a bound on the number of (unlabeled) examples on which two classifiers disagree.</S>
original cit marker offset is 0
new cit marker offset is 0



['36']
36
['36']
parsed_discourse_facet ['result_citation']
<S sid="29" ssid="23">Unfortunately, Yarowsky's method is not well understood from a theoretical viewpoint: we would like to formalize the notion of redundancy in unlabeled data, and set up the learning task as optimization of some appropriate objective function.</S>
original cit marker offset is 0
new cit marker offset is 0



['29']
29
['29']
parsed_discourse_facet ['method_citation']
<S sid="7" ssid="1">Many statistical or machine-learning approaches for natural language problems require a relatively large amount of supervision, in the form of labeled training examples.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['aim_citation']
    <S sid="85" ssid="18">(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.</S>
original cit marker offset is 0
new cit marker offset is 0



['85']
85
['85']
parsed_discourse_facet ['method_citation']
    <S sid="95" ssid="28">(Specifically, the limit n starts at 5 and increases by 5 at each iteration.)</S>
original cit marker offset is 0
new cit marker offset is 0



['95']
95
['95']
parsed_discourse_facet ['method_citation']
<S sid="213" ssid="80">Thus at each iteration the algorithm is forced to pick features for the location, person and organization in turn for the classifier being trained.</S>
original cit marker offset is 0
new cit marker offset is 0



['213']
213
['213']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W99-0613.annv3.csv
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'133'", "'137'"]
'0'
'133'
'137'
['0', '133', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="174" ssid="41">The two new terms force the two classifiers to agree, as much as possible, on the unlabeled examples.</S><S sid="248" ssid="15">With each iteration more examples are assigned labels by both classifiers, while a high level of agreement (> 94%) is maintained between them.</S><S sid="33" ssid="27">The second algorithm builds on a boosting algorithm called AdaBoost (Freund and Schapire 97; Schapire and Singer 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'248'", "'33'"]
'174'
'248'
'33'
['174', '248', '33']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S><S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="220" ssid="87">(7), such as the likelihood function used in maximum-entropy problems and other generalized additive models (Lafferty 99).</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'133'", "'220'"]
'79'
'133'
'220'
['79', '133', '220']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="40" ssid="34">(Berland and Charniak 99) describe a method for extracting parts of objects from wholes (e.g., &quot;speedometer&quot; from &quot;car&quot;) from a large corpus using hand-crafted patterns.</S><S sid="41" ssid="35">(Hearst 92) describes a method for extracting hyponyms from a corpus (pairs of words in &quot;isa&quot; relations).</S><S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'", "'41'", "'79'"]
'40'
'41'
'79'
['40', '41', '79']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="19" ssid="13">Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.</S><S sid="11" ssid="5">For example, a good classifier would identify Mrs. Frank as a person, Steptoe & Johnson as a company, and Honduras as a location.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'19'", "'11'"]
'0'
'19'
'11'
['0', '19', '11']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S><S sid="250" ssid="1">Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.</S><S sid="179" ssid="46">The algorithm builds two classifiers in parallel from labeled and unlabeled data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'", "'250'", "'179'"]
'137'
'250'
'179'
['137', '250', '179']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="19" ssid="13">Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.</S><S sid="236" ssid="3">We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'19'", "'236'"]
'0'
'19'
'236'
['0', '19', '236']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="16" ssid="10">Supervised methods have been applied quite successfully to the full MUC named-entity task (Bikel et al. 97).</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="133" ssid="66">Fort= 1,...,T:</S>
original cit marker offset is 0
new cit marker offset is 0



["'16'", "'0'", "'133'"]
'16'
'0'
'133'
['16', '0', '133']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="253" ssid="4">We are currently exploring other methods that employ similar ideas and their formal properties.</S><S sid="133" ssid="66">Fort= 1,...,T:</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'253'", "'133'"]
'0'
'253'
'133'
['0', '253', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="251" ssid="2">In addition to a heuristic based on decision list learning, we also presented a boosting-like framework that builds on ideas from (Blum and Mitchell 98).</S><S sid="68" ssid="1">The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).</S><S sid="31" ssid="25">Our first algorithm is similar to Yarowsky's, but with some important modifications motivated by (Blum and Mitchell 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'251'", "'68'", "'31'"]
'251'
'68'
'31'
['251', '68', '31']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="28" ssid="22">(Yarowsky 95) describes an algorithm for word-sense disambiguation that exploits redundancy in contextual features, and gives impressive performance.</S><S sid="39" ssid="33">(Brin 98) ,describes a system for extracting (author, book-title) pairs from the World Wide Web using an approach that bootstraps from an initial seed set of examples.</S><S sid="254" ssid="5">Future work should also extend the approach to build a complete named entity extractor - a method that pulls proper names from text and then classifies them.</S>
original cit marker offset is 0
new cit marker offset is 0



["'28'", "'39'", "'254'"]
'28'
'39'
'254'
['28', '39', '254']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="85" ssid="18">(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="77" ssid="10">In this paper k = 3 (the three labels are person, organization, location), and we set a = 0.1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'0'", "'77'"]
'85'
'0'
'77'
['85', '0', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation']
<S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="68" ssid="1">The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).</S>
original cit marker offset is 0
new cit marker offset is 0



["'133'", "'0'", "'68'"]
'133'
'0'
'68'
['133', '0', '68']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['To prevent this we &quot;smooth&quot; the confidence by adding a small value, e, to both W+ and W_, giving at = Plugging the value of at from Equ.'])
dict_values(['The two new terms force the two classifiers to agree, as much as possible, on the unlabeled examples.', 'With each iteration more examples are assigned labels by both classifiers, while a high level of agreement (> 94%) is maintained between them.', 'The second algorithm builds on a boosting algorithm called AdaBoost (Freund and Schapire 97; Schapire and Singer 98).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:45', 'F:0']
dict_values(['The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.'])
dict_values(['2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).', 'Fort= 1,...,T:', '(7), such as the likelihood function used in maximum-entropy problems and other generalized additive models (Lafferty 99).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00460', '(95%-conf.int.', '0.00460', '-', '0.00460)']
['system', 'ROUGE-S*', 'Average_P:', '0.05556', '(95%-conf.int.', '0.05556', '-', '0.05556)']
['system', 'ROUGE-S*', 'Average_F:', '0.00849', '(95%-conf.int.', '0.00849', '-', '0.00849)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:36', 'F:2']
dict_values(['Thus at each iteration the algorithm is forced to pick features for the location, person and organization in turn for the classifier being trained.'])
dict_values(['Unsupervised Models for Named Entity Classification Collins', 'Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.', 'For example, a good classifier would identify Mrs. Frank as a person, Steptoe & Johnson as a company, and Honduras as a location.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:55', 'F:0']
dict_values(['Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.'])
dict_values(['The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.', 'Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.', 'The algorithm builds two classifiers in parallel from labeled and unlabeled data.'])
['system', 'ROUGE-S*', 'Average_R:', '0.15670', '(95%-conf.int.', '0.15670', '-', '0.15670)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.27094', '(95%-conf.int.', '0.27094', '-', '0.27094)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:55', 'F:55']
dict_values(['Thus at each iteration the algorithm is forced to pick features for the location, person and organization in turn for the classifier being trained.'])
dict_values(['Unsupervised Models for Named Entity Classification Collins', 'Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.', 'We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00923', '(95%-conf.int.', '0.00923', '-', '0.00923)']
['system', 'ROUGE-S*', 'Average_P:', '0.05455', '(95%-conf.int.', '0.05455', '-', '0.05455)']
['system', 'ROUGE-S*', 'Average_F:', '0.01579', '(95%-conf.int.', '0.01579', '-', '0.01579)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:55', 'F:3']
dict_values(['This paper discusses the use of unlabeled examples for the problem of named entity classification.'])
dict_values(['Supervised methods have been applied quite successfully to the full MUC named-entity task (Bikel et al. 97).', 'Unsupervised Models for Named Entity Classification Collins', 'Fort= 1,...,T:'])
['system', 'ROUGE-S*', 'Average_R:', '0.01579', '(95%-conf.int.', '0.01579', '-', '0.01579)']
['system', 'ROUGE-S*', 'Average_P:', '0.10714', '(95%-conf.int.', '0.10714', '-', '0.10714)']
['system', 'ROUGE-S*', 'Average_F:', '0.02752', '(95%-conf.int.', '0.02752', '-', '0.02752)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:190', 'P:28', 'F:3']
dict_values(["Unfortunately, Yarowsky's method is not well understood from a theoretical viewpoint: we would like to formalize the notion of redundancy in unlabeled data, and set up the learning task as optimization of some appropriate objective function."])
dict_values(['In addition to a heuristic based on decision list learning, we also presented a boosting-like framework that builds on ideas from (Blum and Mitchell 98).', 'The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).', "Our first algorithm is similar to Yarowsky's, but with some important modifications motivated by (Blum and Mitchell 98)."])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:120', 'F:0']
dict_values(['(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.'])
dict_values(['(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.', 'Unsupervised Models for Named Entity Classification Collins', 'In this paper k = 3 (the three labels are person, organization, location), and we set a = 0.1.'])
['system', 'ROUGE-S*', 'Average_R:', '0.49412', '(95%-conf.int.', '0.49412', '-', '0.49412)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.66142', '(95%-conf.int.', '0.66142', '-', '0.66142)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1275', 'P:630', 'F:630']
dict_values(['Thus at each iteration the algorithm is forced to pick features for the location, person and organization in turn for the classifier being trained.'])
dict_values(['Fort= 1,...,T:', 'Unsupervised Models for Named Entity Classification Collins', 'The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:153', 'P:55', 'F:0']
0.24636110837376549 0.07560444360439507 0.1093511098960988





input/ref/Task1/W06-2932_swastika.csv
input/res/Task1/W06-2932.annv3.csv
parsing: input/ref/Task1/W06-2932_swastika.csv
<S sid="86" ssid="8">Unlabeled accuracy for all verbs increases from 71% to 73% and for all conjunctions from 71% to 74%.</S>
original cit marker offset is 
new cit marker offset is 0



['86']
86
['86']
parsed_discourse_facet ['result_citation']
<S sid="79" ssid="1">Although overall unlabeled accuracy is 86%, most verbs and some conjunctions attach to their head words with much lower accuracy: 69% for main verbs, 75% for the verb ser, and 65% for coordinating conjunctions.</S>
original cit marker offset is 0
new cit marker offset is 0



['79']
79
['79']
parsed_discourse_facet ['result_citation']
<S sid="79" ssid="1">Although overall unlabeled accuracy is 86%, most verbs and some conjunctions attach to their head words with much lower accuracy: 69% for main verbs, 75% for the verb ser, and 65% for coordinating conjunctions.</S>
original cit marker offset is 0
new cit marker offset is 0



['79']
79
['79']
parsed_discourse_facet ['result_citation']
<S sid="79" ssid="1">Although overall unlabeled accuracy is 86%, most verbs and some conjunctions attach to their head words with much lower accuracy: 69% for main verbs, 75% for the verb ser, and 65% for coordinating conjunctions.</S>
original cit marker offset is 0
new cit marker offset is 0



['79']
79
['79']
parsed_discourse_facet ['result_citation']
<S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S>
original cit marker offset is 0
new cit marker offset is 0



['22']
22
['22']
parsed_discourse_facet ['method_citation']
<S sid="54" ssid="2">Based on performance from a held-out section of the training data, we used non-projective parsing algorithms for Czech, Danish, Dutch, German, Japanese, Portuguese and Slovene, and projective parsing algorithms for Arabic, Bulgarian, Chinese, Spanish, Swedish and Turkish.</S>
original cit marker offset is 0
new cit marker offset is 0



['54']
54
['54']
parsed_discourse_facet ['method_citation']
<S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S>
original cit marker offset is 0
new cit marker offset is 0



['12']
12
['12']
parsed_discourse_facet ['method_citation']
    <S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S>
original cit marker offset is 0
new cit marker offset is 0



['22']
22
['22']
parsed_discourse_facet ['method_citation']
<S sid="41" ssid="10">To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm&#65533;1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm&#8722;1) in the tree y.</S>
original cit marker offset is 0
new cit marker offset is 0



['41']
41
['41']
parsed_discourse_facet ['method_citation']
<S sid="24" ssid="6">Its power lies in the ability to define a rich set of features over parsing decisions, as well as surface level features relative to these decisions.</S>
original cit marker offset is 0
new cit marker offset is 0



['24']
24
['24']
parsed_discourse_facet ['method_citation']
<S sid="79" ssid="1">Although overall unlabeled accuracy is 86%, most verbs and some conjunctions attach to their head words with much lower accuracy: 69% for main verbs, 75% for the verb ser, and 65% for coordinating conjunctions.</S>
original cit marker offset is 0
new cit marker offset is 0



['79']
79
['79']
parsed_discourse_facet ['result_citation']
<S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S>
original cit marker offset is 0
new cit marker offset is 0



['12']
12
['12']
parsed_discourse_facet ['method_citation']
<S sid="43" ssid="12">For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi&#8217;s algorithm.</S>
original cit marker offset is 0
new cit marker offset is 0



['43']
43
['43']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W06-2932.annv3.csv
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S>
original cit marker offset is 
new cit marker offset is 0



["'21'", "'12'", "'20'"]
'21'
'12'
'20'
['21', '12', '20']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="1" ssid="1">present a two-stage multilingual pendency parser and evaluate it on 13 diverse languages.</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'1'", "'104'"]
'21'
'1'
'104'
['21', '1', '104']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="93" ssid="15">A quick look at unlabeled attachment accuracies indicate that errors in Arabic parsing are the most common across all languages: prepositions (62%), conjunctions (69%) and to a lesser extent verbs (73%).</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S><S sid="44" ssid="13">We use the MIRA online learner to set the weights (Crammer and Singer, 2003; McDonald et al., 2005a) since we found it trained quickly and provide good performance.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'93'", "'104'", "'44'"]
'93'
'104'
'44'
['93', '104', '44']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="4" ssid="4">We report results on the CoNLL-X shared task (Buchholz et al., 2006) data sets and present an error analysis.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S><S sid="13" ssid="9">We evaluate this parser on a diverse set of 13 languages using data provided by the CoNLL-X shared-task organizers (Buchholz et al., 2006; Hajiˇc et al., 2004; Simov et al., 2005; Simov and Osenova, 2003; Chen et al., 2003; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and MartiAntonin, 2002; Nilsson et al., 2005; Oflazer et al., 2003; Atalay et al., 2003).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'4'", "'20'", "'13'"]
'4'
'20'
'13'
['4', '20', '13']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'22'", "'104'"]
'21'
'22'
'104'
['21', '22', '104']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="11" ssid="7">This has been shown through their successful use in many standard natural language processing tasks, including machine translation (Ding and Palmer, 2005), sentence compression (McDonald, 2006), and textual inference (Haghighi et al., 2005).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'0'", "'11'"]
'21'
'0'
'11'
['21', '0', '11']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'0'", "'12'"]
'21'
'0'
'12'
['21', '0', '12']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="18" ssid="14">We Proceedings of the 10th Conference on Computational Natural Language Learning (CoNLL-X), pages 216–220, New York City, June 2006. c�2006 Association for Computational Linguistics assume that all dependency graphs are trees but may be non-projective, both of which are true in the data sets we use.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'18'", "'21'", "'22'"]
'18'
'21'
'22'
['18', '21', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="41" ssid="10">To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm�1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm−1) in the tree y.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="15" ssid="11">For the remainder of this paper, we denote by x = x1,... xn a sentence with n words and by y a corresponding dependency graph.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'41'", "'21'", "'15'"]
'41'
'21'
'15'
['41', '21', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="64" ssid="2">N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.</S><S sid="46" ssid="15">Of course, we have to define a set of suitable features.</S><S sid="24" ssid="6">Its power lies in the ability to define a rich set of features over parsing decisions, as well as surface level features relative to these decisions.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'64'", "'46'", "'24'"]
'64'
'46'
'24'
['64', '46', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="13" ssid="9">We evaluate this parser on a diverse set of 13 languages using data provided by the CoNLL-X shared-task organizers (Buchholz et al., 2006; Hajiˇc et al., 2004; Simov et al., 2005; Simov and Osenova, 2003; Chen et al., 2003; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and MartiAntonin, 2002; Nilsson et al., 2005; Oflazer et al., 2003; Atalay et al., 2003).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'0'", "'21'", "'13'"]
'0'
'21'
'13'
['0', '21', '13']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S><S sid="17" ssid="13">Each edge can be assigned a label l(ij) from a finite set L of predefined labels.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'20'", "'17'"]
'21'
'20'
'17'
['21', '20', '17']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="16" ssid="12">A dependency graph is represented by a set of ordered pairs (i, j) E y in which xj is a dependent and xi is the corresponding head.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="43" ssid="12">For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi’s algorithm.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'16'", "'21'", "'43'"]
'16'
'21'
'43'
['16', '21', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['Although overall unlabeled accuracy is 86%, most verbs and some conjunctions attach to their head words with much lower accuracy: 69% for main verbs, 75% for the verb ser, and 65% for coordinating conjunctions.'])
dict_values(['A quick look at unlabeled attachment accuracies indicate that errors in Arabic parsing are the most common across all languages: prepositions (62%), conjunctions (69%) and to a lesser extent verbs (73%).', 'We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.', 'We use the MIRA online learner to set the weights (Crammer and Singer, 2003; McDonald et al., 2005a) since we found it trained quickly and provide good performance.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01089', '(95%-conf.int.', '0.01089', '-', '0.01089)']
['system', 'ROUGE-S*', 'Average_P:', '0.08772', '(95%-conf.int.', '0.08772', '-', '0.08772)']
['system', 'ROUGE-S*', 'Average_F:', '0.01937', '(95%-conf.int.', '0.01937', '-', '0.01937)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1378', 'P:171', 'F:15']
dict_values(['Although overall unlabeled accuracy is 86%, most verbs and some conjunctions attach to their head words with much lower accuracy: 69% for main verbs, 75% for the verb ser, and 65% for coordinating conjunctions.'])
dict_values(['We report results on the CoNLL-X shared task (Buchholz et al., 2006) data sets and present an error analysis.', 'This system is primarily based on the parsing models described by McDonald and Pereira (2006).', 'We evaluate this parser on a diverse set of 13 languages using data provided by the CoNLL-X shared-task organizers (Buchholz et al., 2006; Hajiˇc et al., 2004; Simov et al., 2005; Simov and Osenova, 2003; Chen et al., 2003; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and MartiAntonin, 2002; Nilsson et al., 2005; Oflazer et al., 2003; Atalay et al., 2003).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:3403', 'P:171', 'F:0']
dict_values(['An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.'])
dict_values(['That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.', 'We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.'])
['system', 'ROUGE-S*', 'Average_R:', '0.08831', '(95%-conf.int.', '0.08831', '-', '0.08831)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.16229', '(95%-conf.int.', '0.16229', '-', '0.16229)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1540', 'P:136', 'F:136']
dict_values(['Based on performance from a held-out section of the training data, we used non-projective parsing algorithms for Czech, Danish, Dutch, German, Japanese, Portuguese and Slovene, and projective parsing algorithms for Arabic, Bulgarian, Chinese, Spanish, Swedish and Turkish.'])
dict_values(['That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'Multilingual Dependency Analysis with a Two-Stage Discriminative Parser', 'This has been shown through their successful use in many standard natural language processing tasks, including machine translation (Ding and Palmer, 2005), sentence compression (McDonald, 2006), and textual inference (Haghighi et al., 2005).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1128', 'P:300', 'F:0']
dict_values(['In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.'])
dict_values(['That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'Multilingual Dependency Analysis with a Two-Stage Discriminative Parser', 'In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.'])
['system', 'ROUGE-S*', 'Average_R:', '0.09388', '(95%-conf.int.', '0.09388', '-', '0.09388)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.17165', '(95%-conf.int.', '0.17165', '-', '0.17165)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:703', 'P:66', 'F:66']
dict_values(['An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.'])
dict_values(['We Proceedings of the 10th Conference on Computational Natural Language Learning (CoNLL-X), pages 216–220, New York City, June 2006. c�2006 Association for Computational Linguistics assume that all dependency graphs are trees but may be non-projective, both of which are true in the data sets we use.', 'That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.'])
['system', 'ROUGE-S*', 'Average_R:', '0.06746', '(95%-conf.int.', '0.06746', '-', '0.06746)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.12639', '(95%-conf.int.', '0.12639', '-', '0.12639)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2016', 'P:136', 'F:136']
dict_values(['To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm&#65533;1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm&#8722;1) in the tree y.'])
dict_values(['To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm�1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm−1) in the tree y.', 'That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'For the remainder of this paper, we denote by x = x1,... xn a sentence with n words and by y a corresponding dependency graph.'])
['system', 'ROUGE-S*', 'Average_R:', '0.21886', '(95%-conf.int.', '0.21886', '-', '0.21886)']
['system', 'ROUGE-S*', 'Average_P:', '0.85979', '(95%-conf.int.', '0.85979', '-', '0.85979)']
['system', 'ROUGE-S*', 'Average_F:', '0.34890', '(95%-conf.int.', '0.34890', '-', '0.34890)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1485', 'P:378', 'F:325']
dict_values(['Its power lies in the ability to define a rich set of features over parsing decisions, as well as surface level features relative to these decisions.'])
dict_values(['N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.', 'Of course, we have to define a set of suitable features.', 'Its power lies in the ability to define a rich set of features over parsing decisions, as well as surface level features relative to these decisions.'])
['system', 'ROUGE-S*', 'Average_R:', '0.11098', '(95%-conf.int.', '0.11098', '-', '0.11098)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.19978', '(95%-conf.int.', '0.19978', '-', '0.19978)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:820', 'P:91', 'F:91']
dict_values(['Although overall unlabeled accuracy is 86%, most verbs and some conjunctions attach to their head words with much lower accuracy: 69% for main verbs, 75% for the verb ser, and 65% for coordinating conjunctions.'])
dict_values(['Multilingual Dependency Analysis with a Two-Stage Discriminative Parser', 'That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'We evaluate this parser on a diverse set of 13 languages using data provided by the CoNLL-X shared-task organizers (Buchholz et al., 2006; Hajiˇc et al., 2004; Simov et al., 2005; Simov and Osenova, 2003; Chen et al., 2003; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and MartiAntonin, 2002; Nilsson et al., 2005; Oflazer et al., 2003; Atalay et al., 2003).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:3828', 'P:171', 'F:0']
dict_values(['For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi&#8217;s algorithm.'])
dict_values(['A dependency graph is represented by a set of ordered pairs (i, j) E y in which xj is a dependent and xi is the corresponding head.', 'That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi’s algorithm.'])
['system', 'ROUGE-S*', 'Average_R:', '0.16471', '(95%-conf.int.', '0.16471', '-', '0.16471)']
['system', 'ROUGE-S*', 'Average_P:', '0.90909', '(95%-conf.int.', '0.90909', '-', '0.90909)']
['system', 'ROUGE-S*', 'Average_F:', '0.27888', '(95%-conf.int.', '0.27888', '-', '0.27888)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1275', 'P:231', 'F:210']
0.5856599941434001 0.07550899924491002 0.13072599869274004





input/ref/Task1/P08-1102_swastika.csv
input/res/Task1/P08-1102.annv3.csv
parsing: input/ref/Task1/P08-1102_swastika.csv
    <S sid="32" ssid="4">We trained a character-based perceptron for Chinese Joint S&amp;T, and found that the perceptron itself could achieve considerably high accuracy on segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



['32']
32
['32']
parsed_discourse_facet ['method_citation']
    <S sid="32" ssid="4">We trained a character-based perceptron for Chinese Joint S&amp;T, and found that the perceptron itself could achieve considerably high accuracy on segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



['32']
32
['32']
parsed_discourse_facet ['method_citation']
<S sid="38" ssid="10">Templates immediately borrowed from Ng and Low (2004) are listed in the upper column named non-lexical-target.</S>
original cit marker offset is 0
new cit marker offset is 0



['38']
38
['38']
parsed_discourse_facet ['method_citation']
    <S sid="92" ssid="3">The second was conducted on the Penn Chinese Treebank 5.0 (CTB5.0) to test the performance of the cascaded model on segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



['92']
92
['92']
parsed_discourse_facet ['method_citation']
    <S sid="36" ssid="8">All feature templates and their instances are shown in Table 1.</S>
original cit marker offset is 0
new cit marker offset is 0



['36']
36
['36']
parsed_discourse_facet ['method_citation']
    <S sid="32" ssid="4">We trained a character-based perceptron for Chinese Joint S&amp;T, and found that the perceptron itself could achieve considerably high accuracy on segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



['32']
32
['32']
parsed_discourse_facet ['method_citation']
    <S sid="92" ssid="3">The second was conducted on the Penn Chinese Treebank 5.0 (CTB5.0) to test the performance of the cascaded model on segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



['92']
92
['92']
parsed_discourse_facet ['method_citation']
    <S sid="92" ssid="3">The second was conducted on the Penn Chinese Treebank 5.0 (CTB5.0) to test the performance of the cascaded model on segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



['92']
92
['92']
parsed_discourse_facet ['method_citation']
<S sid="97" ssid="8">Figure 3 shows their learning curves depicting the F-measure on the development set after 1 to 10 training iterations.</S>
original cit marker offset is 0
new cit marker offset is 0



['97']
97
['97']
parsed_discourse_facet ['result_citation']
<S sid="91" ssid="2">The first was conducted to test the performance of the perceptron on segmentation on the corpus from SIGHAN Bakeoff 2, including the Academia Sinica Corpus (AS), the Hong Kong City University Corpus (CityU), the Peking University Corpus (PKU) and the Microsoft Research Corpus (MSR).</S>
original cit marker offset is 0
new cit marker offset is 0



['91']
91
['91']
parsed_discourse_facet ['aim_citation']
<S sid="16" ssid="12">Shown in Figure 1, the cascaded model has a two-layer architecture, with a characterbased perceptron as the core combined with other real-valued features such as language models.</S>
original cit marker offset is 0
new cit marker offset is 0



['16']
16
['16']
parsed_discourse_facet ['method_citation']
    <S sid="34" ssid="6">The feature templates we adopted are selected from those of Ng and Low (2004).</S>
original cit marker offset is 0
new cit marker offset is 0



['34']
34
['34']
parsed_discourse_facet ['method_citation']
    <S sid="92" ssid="3">The second was conducted on the Penn Chinese Treebank 5.0 (CTB5.0) to test the performance of the cascaded model on segmentation and Joint S&amp;T.</S>
original cit marker offset is 0
new cit marker offset is 0



['92']
92
['92']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P08-1102.annv3.csv
<S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="22" ssid="18">2 Segmentation and POS Tagging Given a Chinese character sequence: while the segmentation and POS tagging result can be depicted as: Here, Ci (i = L.n) denotes Chinese character, ti (i = L.m) denotes POS tag, and Cl:r (l < r) denotes character sequence ranges from Cl to Cr.</S><S sid="79" ssid="4">By maintaining a stack of size N at each position i of the sequence, we can preserve the top N best candidate labelled results of subsequence C1:i during decoding.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'22'", "'79'"]
'9'
'22'
'79'
['9', '22', '79']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="25" ssid="21">According to Ng and Low (2004), the segmentation task can be transformed to a tagging problem by assigning each character a boundary tag of the following four types: We can extract segmentation result by splitting the labelled result into subsequences of pattern s or bm*e which denote single-character word and multicharacter word respectively.</S><S sid="28" ssid="24">A subsequence of boundary-POS labelling result indicates a word with POS t only if the boundary tag sequence composed of its boundary part conforms to s or bm*e style, and all POS tags in its POS part equal to t. For example, a tag sequence b NN m NN e NN represents a threecharacter word with POS tag NN.</S><S sid="10" ssid="6">Since the typical approach of discriminative models treats segmentation as a labelling problem by assigning each character a boundary tag (Xue and Shen, 2003), Joint S&T can be conducted in a labelling fashion by expanding boundary tags to include POS information (Ng and Low, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'25'", "'28'", "'10'"]
'25'
'28'
'10'
['25', '28', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S><S sid="42" ssid="14">As predications generated from such templates depend on the current character, we name these templates lexical-target.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'1'", "'42'"]
'0'
'1'
'42'
['0', '1', '42']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="25" ssid="21">According to Ng and Low (2004), the segmentation task can be transformed to a tagging problem by assigning each character a boundary tag of the following four types: We can extract segmentation result by splitting the labelled result into subsequences of pattern s or bm*e which denote single-character word and multicharacter word respectively.</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'25'", "'1'"]
'0'
'25'
'1'
['0', '25', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'2'", "'24'"]
'9'
'2'
'24'
['9', '2', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="130" ssid="1">We proposed a cascaded linear model for Chinese Joint S&T.</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'130'", "'1'"]
'0'
'130'
'1'
['0', '130', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="1" ssid="1">We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.</S><S sid="67" ssid="18">Language model (LM) provides linguistic probabilities of a word sequence.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'1'", "'67'"]
'0'
'1'
'67'
['0', '1', '67']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="56" ssid="7">To alleviate the drawbacks, we propose a cascaded linear model.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="85" ssid="10">Lines 3 — 11 generate a N-best list for each character position i.</S>
original cit marker offset is 0
new cit marker offset is 0



["'56'", "'0'", "'85'"]
'56'
'0'
'85'
['56', '0', '85']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="5" ssid="1">Word segmentation and part-of-speech (POS) tagging are important tasks in computer processing of Chinese and other Asian languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'9'", "'5'"]
'24'
'9'
'5'
['24', '9', '5']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="23" ssid="19">We can see that segmentation and POS tagging task is to divide a character sequence into several subsequences and label each of them a POS tag.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'9'", "'23'"]
'0'
'9'
'23'
['0', '9', '23']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="19" ssid="15">In addition, as these knowledge sources are regarded as separate features, we can train their corresponding models independently with each other.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="8" ssid="4">Another widely used discriminative method is the perceptron algorithm (Collins, 2002), which achieves comparable performance to CRFs with much faster training, so we base this work on the perceptron.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'", "'0'", "'8'"]
'19'
'0'
'8'
['19', '0', '8']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="42" ssid="14">As predications generated from such templates depend on the current character, we name these templates lexical-target.</S><S sid="41" ssid="13">We add a field C0 to each template in the upper column, so that it can carry out predication according to not only the context but also the current character itself.</S><S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'41'", "'0'"]
'42'
'41'
'0'
['42', '41', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="62" ssid="13">Suppose we have n features gj (j = 1..n) coupled with n corresponding weights wj (j = 1..n), each feature gj gives a score gj(r) to a candidate r, then the total score of r is given by: The decoding procedure aims to find the candidate r* with the highest score: While the mission of the training procedure is to tune the weights wj(j = 1..n) to guarantee that the candidate r with the highest score happens to be the best result with a high probability.</S><S sid="16" ssid="12">Shown in Figure 1, the cascaded model has a two-layer architecture, with a characterbased perceptron as the core combined with other real-valued features such as language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'62'", "'16'"]
'2'
'62'
'16'
['2', '62', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S><S sid="58" ssid="9">Instead of incorporating all features into the perceptron directly, we first trained the perceptron using character-based features, and several other sub-models using additional ones such as word or POS n-grams, then trained the outside-layer linear model using the outputs of these sub-models, including the perceptron.</S><S sid="16" ssid="12">Shown in Figure 1, the cascaded model has a two-layer architecture, with a characterbased perceptron as the core combined with other real-valued features such as language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'58'", "'16'"]
'2'
'58'
'16'
['2', '58', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging</S><S sid="31" ssid="3">The perceptron has been used in many NLP tasks, such as POS tagging (Collins, 2002), Chinese word segmentation (Ng and Low, 2004; Zhang and Clark, 2007) and so on.</S><S sid="10" ssid="6">Since the typical approach of discriminative models treats segmentation as a labelling problem by assigning each character a boundary tag (Xue and Shen, 2003), Joint S&T can be conducted in a labelling fashion by expanding boundary tags to include POS information (Ng and Low, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'31'", "'10'"]
'0'
'31'
'10'
['0', '31', '10']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="24" ssid="20">It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.</S><S sid="9" ssid="5">To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).</S><S sid="2" ssid="2">With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'9'", "'2'"]
'24'
'9'
'2'
['24', '9', '2']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['Templates immediately borrowed from Ng and Low (2004) are listed in the upper column named non-lexical-target.'])
dict_values(['A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging', 'We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.', 'As predications generated from such templates depend on the current character, we name these templates lexical-target.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01290', '(95%-conf.int.', '0.01290', '-', '0.01290)']
['system', 'ROUGE-S*', 'Average_P:', '0.09091', '(95%-conf.int.', '0.09091', '-', '0.09091)']
['system', 'ROUGE-S*', 'Average_F:', '0.02260', '(95%-conf.int.', '0.02260', '-', '0.02260)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:465', 'P:66', 'F:6']
dict_values(['The second was conducted on the Penn Chinese Treebank 5.0 (CTB5.0) to test the performance of the cascaded model on segmentation and Joint S&T.'])
dict_values(['To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).', 'With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.', 'It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00929', '(95%-conf.int.', '0.00929', '-', '0.00929)']
['system', 'ROUGE-S*', 'Average_P:', '0.08791', '(95%-conf.int.', '0.08791', '-', '0.08791)']
['system', 'ROUGE-S*', 'Average_F:', '0.01681', '(95%-conf.int.', '0.01681', '-', '0.01681)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:861', 'P:91', 'F:8']
dict_values(['All feature templates and their instances are shown in Table 1.'])
dict_values(['A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging', 'We proposed a cascaded linear model for Chinese Joint S&T.', 'We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:15', 'F:0']
dict_values(['We trained a character-based perceptron for Chinese Joint S&T, and found that the perceptron itself could achieve considerably high accuracy on segmentation and Joint S&T.'])
dict_values(['A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging', 'We propose a cascaded linear model for joint Chinese word segmentation and partof-speech tagging.', 'Language model (LM) provides linguistic probabilities of a word sequence.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01323', '(95%-conf.int.', '0.01323', '-', '0.01323)']
['system', 'ROUGE-S*', 'Average_P:', '0.05495', '(95%-conf.int.', '0.05495', '-', '0.05495)']
['system', 'ROUGE-S*', 'Average_F:', '0.02132', '(95%-conf.int.', '0.02132', '-', '0.02132)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:91', 'F:5']
dict_values(['The second was conducted on the Penn Chinese Treebank 5.0 (CTB5.0) to test the performance of the cascaded model on segmentation and Joint S&T.'])
dict_values(['A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging', 'To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).', 'We can see that segmentation and POS tagging task is to divide a character sequence into several subsequences and label each of them a POS tag.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01746', '(95%-conf.int.', '0.01746', '-', '0.01746)']
['system', 'ROUGE-S*', 'Average_P:', '0.12088', '(95%-conf.int.', '0.12088', '-', '0.12088)']
['system', 'ROUGE-S*', 'Average_F:', '0.03051', '(95%-conf.int.', '0.03051', '-', '0.03051)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:91', 'F:11']
dict_values(['The feature templates we adopted are selected from those of Ng and Low (2004).'])
dict_values(['A Cascaded Linear Model for Joint Chinese Word Segmentation and Part-of-Speech Tagging', 'The perceptron has been used in many NLP tasks, such as POS tagging (Collins, 2002), Chinese word segmentation (Ng and Low, 2004; Zhang and Clark, 2007) and so on.', 'Since the typical approach of discriminative models treats segmentation as a labelling problem by assigning each character a boundary tag (Xue and Shen, 2003), Joint S&T can be conducted in a labelling fashion by expanding boundary tags to include POS information (Ng and Low, 2004).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00210', '(95%-conf.int.', '0.00210', '-', '0.00210)']
['system', 'ROUGE-S*', 'Average_P:', '0.14286', '(95%-conf.int.', '0.14286', '-', '0.14286)']
['system', 'ROUGE-S*', 'Average_F:', '0.00413', '(95%-conf.int.', '0.00413', '-', '0.00413)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1431', 'P:21', 'F:3']
dict_values(['The second was conducted on the Penn Chinese Treebank 5.0 (CTB5.0) to test the performance of the cascaded model on segmentation and Joint S&T.'])
dict_values(['It is a better idea to perform segmentation and POS tagging jointly in a uniform framework.', 'To segment and tag a character sequence, there are two strategies to choose: performing POS tagging following segmentation; or joint segmentation and POS tagging (Joint S&T).', 'With a character-based perceptron as the core, combined with realvalued features such as language models, the cascaded model is able to efficiently utilize knowledge sources that are inconvenient to incorporate into the perceptron directly.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00697', '(95%-conf.int.', '0.00697', '-', '0.00697)']
['system', 'ROUGE-S*', 'Average_P:', '0.06593', '(95%-conf.int.', '0.06593', '-', '0.06593)']
['system', 'ROUGE-S*', 'Average_F:', '0.01261', '(95%-conf.int.', '0.01261', '-', '0.01261)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:861', 'P:91', 'F:6']
0.08049142742155103 0.00884999987357143 0.01542571406534694





input/ref/Task1/J01-2004_swastika.csv
input/res/Task1/J01-2004.annv3.csv
parsing: input/ref/Task1/J01-2004_swastika.csv
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S>
original cit marker offset is 0
new cit marker offset is 0



['372']
372
['372']
parsed_discourse_facet ['method_citation']
<S sid="15" ssid="3">In the past few years, however, some improvements have been made over these language models through the use of statistical methods of natural language processing, and the development of innovative, linguistically well-motivated techniques for improving language models for speech recognition is generating more interest among computational linguists.</S>
original cit marker offset is 0
new cit marker offset is 0



['15']
15
['15']
parsed_discourse_facet ['result_citation']
    <S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



['31']
31
['31']
parsed_discourse_facet ['result_citation']
    <S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



['31']
31
['31']
parsed_discourse_facet ['result_citation']
    <S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



['31']
31
['31']
parsed_discourse_facet ['result_citation']
    <S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



['31']
31
['31']
parsed_discourse_facet ['result_citation']
<S sid="215" ssid="119">The first word in the string remaining to be parsed, w1, we will call the look-ahead word.</S>
original cit marker offset is 0
new cit marker offset is 0



['215']
215
['215']
parsed_discourse_facet ['method_citation']
    <S sid="302" ssid="58">In the beam search approach outlined above, we can estimate the string's probability in the same manner, by summing the probabilities of the parses that the algorithm finds.</S>
original cit marker offset is 0
new cit marker offset is 0



['302']
302
['302']
parsed_discourse_facet ['method_citation']
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S>
original cit marker offset is 0
new cit marker offset is 0



['372']
372
['372']
parsed_discourse_facet ['result_citation']
    <S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



['31']
31
['31']
parsed_discourse_facet ['result_citation']
    <S sid="100" ssid="4">The approach that we will subsequently present uses the probabilistic grammar as its language model, but only includes probability mass from those parses that are found, that is, it uses the parser to find a subset of the total set of parses (hopefully most of the high-probability parses) and uses the sum of their probabilities as an estimate of the true probability given the grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



['100']
100
['100']
parsed_discourse_facet ['method_citation']
    <S sid="31" ssid="19">Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).</S>
original cit marker offset is 0
new cit marker offset is 0



['31']
31
['31']
parsed_discourse_facet ['result_citation']
<S sid="21" ssid="9">First, the top-down parsing algorithm builds a set of rooted candidate parse trees from left to right over the string, which allows it to calculate a generative probability for each prefix string from the probabilistic grammar, and hence a conditional probability for each word given the previous words and the probabilistic grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



['21']
21
['21']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/J01-2004.annv3.csv
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S><S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'372'", "'0'"]
'388'
'372'
'0'
['388', '372', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="15" ssid="3">In the past few years, however, some improvements have been made over these language models through the use of statistical methods of natural language processing, and the development of innovative, linguistically well-motivated techniques for improving language models for speech recognition is generating more interest among computational linguists.</S><S sid="17" ssid="5">This paper will examine language modeling for speech recognition from a natural language processing point of view.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'15'", "'17'"]
'388'
'15'
'17'
['388', '15', '17']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="19" ssid="7">A new language model, based on probabilistic top-down parsing, will be outlined and compared with the previous literature, and extensive empirical results will be presented which demonstrate its utility.</S><S sid="10" ssid="4">A new language model that utilizes probabilistic top-down parsing is then outlined, and empirical results show that it improves upon previous work in test corpus perplexity.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'19'", "'10'"]
'388'
'19'
'10'
['388', '19', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="207" ssid="111">The model allows us to assign probabilities to derivations, which can be used by the parsing algorithm to decide heuristically which candidates are promising and should be expanded, and which are less promising and should be pruned.</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'207'", "'137'"]
'388'
'207'
'137'
['388', '207', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="134" ssid="38">The parsers with the highest published broad-coverage parsing accuracy, which include Charniak (1997, 2000), Collins (1997, 1999), and Ratnaparkhi (1997), all utilize simple and straightforward statistically based search heuristics, pruning the search-space quite dramatically!'</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'134'", "'137'"]
'388'
'134'
'137'
['388', '134', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="268" ssid="24">This is an incremental parser with a pruning strategy and no backtracking.</S><S sid="137" ssid="41">Here we will present a parser that uses simple search heuristics of this sort without DP.</S><S sid="223" ssid="127">We implement this as a beam search.</S>
original cit marker offset is 0
new cit marker offset is 0



["'268'", "'137'", "'223'"]
'268'
'137'
'223'
['268', '137', '223']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="231" ssid="135">Since we do not know the POS for the word, we must sum the LAP for all POS For a PCFG G, a stack S = Ao An$ (which we will write AN and a look-ahead terminal item wi, we define the look-ahead probability as follows: We recursively estimate this with two empirically observed conditional probabilities for every nonterminal A,: 13(A, w,a) and P(A, c).</S><S sid="224" ssid="128">For each word position i, we have a separate priority queue H, of analyses with look-ahead w,.</S><S sid="108" ssid="12">Another approach that uses syntactic structure for language modeling has been to use a shift-reduce parser to &quot;surface&quot; c-commanding phrasal headwords or part-of-speech (POS) tags from arbitrarily far back in the prefix string, for use in a trigram-like model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'231'", "'224'", "'108'"]
'231'
'224'
'108'
['231', '224', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="223" ssid="127">We implement this as a beam search.</S><S sid="109" ssid="13">A shift-reduce parser operates from left to right using a stack and a pointer to the next word in the input string.9 Each stack entry consists minimally of a nonterminal label.</S><S sid="138" ssid="42">Our approach is found to yield very accurate parses efficiently, and, in addition, to lend itself straightforwardly to estimating word probabilities on-line, that is, in a single pass from left to right.</S>
original cit marker offset is 0
new cit marker offset is 0



["'223'", "'109'", "'138'"]
'223'
'109'
'138'
['223', '109', '138']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="274" ssid="30">This structure is evaluated for precision and recall, which is entirely appropriate for these incomplete as well as complete parses.</S><S sid="214" ssid="118">A candidate analysis C = (D, 8, PD, F, wn consists of a derivation D, a stack S. a derivation probability PD, a figure of merit F, and a string w7 remaining to be parsed.</S><S sid="223" ssid="127">We implement this as a beam search.</S>
original cit marker offset is 0
new cit marker offset is 0



["'274'", "'214'", "'223'"]
'274'
'214'
'223'
['274', '214', '223']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="291" ssid="47">Also, the parser returns a set of candidate parses, from which we have been choosing the top ranked; if we use an oracle to choose the parse with the highest accuracy from among the candidates (which averaged 70.0 in number per sentence), we find an average labeled precision/recall of 94.1, for sentences of length < 100.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="9" ssid="3">A lexicalized probabilistic topdown parser is then presented, which performs very well, in terms of both the accuracy of returned parses and the efficiency with which they are found, relative to the best broad-coverage statistical parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'291'", "'388'", "'9'"]
'291'
'388'
'9'
['291', '388', '9']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="372" ssid="128">The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.</S><S sid="355" ssid="111">In order to get a sense of whether these perplexity reduction results can translate to improvement in a speech recognition task, we performed a very small preliminary experiment on n-best lists.</S><S sid="214" ssid="118">A candidate analysis C = (D, 8, PD, F, wn consists of a derivation D, a stack S. a derivation probability PD, a figure of merit F, and a string w7 remaining to be parsed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'372'", "'355'", "'214'"]
'372'
'355'
'214'
['372', '355', '214']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S><S sid="102" ssid="6">One approach to syntactic language modeling is to use this distribution directly as a language model.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'102'", "'388'"]
'0'
'102'
'388'
['0', '102', '388']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="313" ssid="69">By utilizing a figure of merit to identify promising analyses, we are simply focusing our attention on those parses that are likely to have a high probability, and thus we are increasing the amount of probability mass that we do capture, of the total possible.</S><S sid="100" ssid="4">The approach that we will subsequently present uses the probabilistic grammar as its language model, but only includes probability mass from those parses that are found, that is, it uses the parser to find a subset of the total set of parses (hopefully most of the high-probability parses) and uses the sum of their probabilities as an estimate of the true probability given the grammar.</S><S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S>
original cit marker offset is 0
new cit marker offset is 0



["'313'", "'100'", "'388'"]
'313'
'100'
'388'
['313', '100', '388']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="263" ssid="19">Following standard practice, we will be reporting scores only for non-part-of-speech constituents, which are called labeled recall (LR) and labeled precision (LP).</S><S sid="245" ssid="1">The empirical results will be presented in three stages: (i) trials to examine the accuracy and efficiency of the parser; (ii) trials to examine its effect on test corpus perplexity and recognition performance; and (iii) trials to examine the effect of beam variation on these performance measures.</S><S sid="108" ssid="12">Another approach that uses syntactic structure for language modeling has been to use a shift-reduce parser to &quot;surface&quot; c-commanding phrasal headwords or part-of-speech (POS) tags from arbitrarily far back in the prefix string, for use in a trigram-like model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'263'", "'245'", "'108'"]
'263'
'245'
'108'
['263', '245', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="388" ssid="1">The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.</S><S sid="329" ssid="85">Table 3 shows several things.</S><S sid="19" ssid="7">A new language model, based on probabilistic top-down parsing, will be outlined and compared with the previous literature, and extensive empirical results will be presented which demonstrate its utility.</S>
original cit marker offset is 0
new cit marker offset is 0



["'388'", "'329'", "'19'"]
'388'
'329'
'19'
['388', '329', '19']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="397" ssid="10">A top-down parser, in contrast to a standard bottom-up chart parser, has enough information to predict empty categories only where they are likely to occur.</S><S sid="0" ssid="0">Probabilistic Top-Down Parsing and Language Modeling</S><S sid="209" ssid="113">This parser is essentially a stochastic version of the top-down parser described in Aho, Sethi, and Ullman (1986).</S>
original cit marker offset is 0
new cit marker offset is 0



["'397'", "'0'", "'209'"]
'397'
'0'
'209'
['397', '0', '209']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="269" ssid="25">In such a model, it is possible to commit to a set of partial analyses at a particular point that cannot be completed given the rest of the input string (i.e., the parser can &quot;garden path&quot;).</S><S sid="310" ssid="66">This is a subset of the possible leftmost partial derivations with respect to the prefix string W. Since RV is produced by expanding only analyses on priority queue H;', the set of complete trees consistent with the partial derivations on priority queue Ht is a subset of the set of complete trees consistent with the partial derivations on priority queue HT'', that is, the total probability mass represented by the priority queues is monotonically decreasing.</S><S sid="306" ssid="62">Recall the discussion of the grammar models above, and our definition of the set of partial derivations Dw, with respect to a prefix string wil) (see Equations 2 and 7).</S>
original cit marker offset is 0
new cit marker offset is 0



["'269'", "'310'", "'306'"]
'269'
'310'
'306'
['269', '310', '306']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.'])
dict_values(['The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.', 'The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.', 'Probabilistic Top-Down Parsing and Language Modeling'])
['system', 'ROUGE-S*', 'Average_R:', '0.20920', '(95%-conf.int.', '0.20920', '-', '0.20920)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.34601', '(95%-conf.int.', '0.34601', '-', '0.34601)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:91', 'F:91']
dict_values(['In the past few years, however, some improvements have been made over these language models through the use of statistical methods of natural language processing, and the development of innovative, linguistically well-motivated techniques for improving language models for speech recognition is generating more interest among computational linguists.'])
dict_values(['The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.', 'In the past few years, however, some improvements have been made over these language models through the use of statistical methods of natural language processing, and the development of innovative, linguistically well-motivated techniques for improving language models for speech recognition is generating more interest among computational linguists.', 'This paper will examine language modeling for speech recognition from a natural language processing point of view.'])
['system', 'ROUGE-S*', 'Average_R:', '0.27752', '(95%-conf.int.', '0.27752', '-', '0.27752)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.43447', '(95%-conf.int.', '0.43447', '-', '0.43447)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:300', 'F:300']
dict_values(['The first word in the string remaining to be parsed, w1, we will call the look-ahead word.'])
dict_values(['Since we do not know the POS for the word, we must sum the LAP for all POS For a PCFG G, a stack S = Ao An$ (which we will write AN and a look-ahead terminal item wi, we define the look-ahead probability as follows: We recursively estimate this with two empirically observed conditional probabilities for every nonterminal A,: 13(A, w,a) and P(A, c).', 'For each word position i, we have a separate priority queue H, of analyses with look-ahead w,.', 'Another approach that uses syntactic structure for language modeling has been to use a shift-reduce parser to &quot;surface&quot; c-commanding phrasal headwords or part-of-speech (POS) tags from arbitrarily far back in the prefix string, for use in a trigram-like model.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00269', '(95%-conf.int.', '0.00269', '-', '0.00269)']
['system', 'ROUGE-S*', 'Average_P:', '0.11111', '(95%-conf.int.', '0.11111', '-', '0.11111)']
['system', 'ROUGE-S*', 'Average_F:', '0.00526', '(95%-conf.int.', '0.00526', '-', '0.00526)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1485', 'P:36', 'F:4']
dict_values(["In the beam search approach outlined above, we can estimate the string's probability in the same manner, by summing the probabilities of the parses that the algorithm finds."])
dict_values(['Also, the parser returns a set of candidate parses, from which we have been choosing the top ranked; if we use an oracle to choose the parse with the highest accuracy from among the candidates (which averaged 70.0 in number per sentence), we find an average labeled precision/recall of 94.1, for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00265', '(95%-conf.int.', '0.00265', '-', '0.00265)']
['system', 'ROUGE-S*', 'Average_P:', '0.01282', '(95%-conf.int.', '0.01282', '-', '0.01282)']
['system', 'ROUGE-S*', 'Average_F:', '0.00439', '(95%-conf.int.', '0.00439', '-', '0.00439)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:78', 'F:1']
dict_values(['The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.'])
dict_values(['The small size of our training data, as well as the fact that we are rescoring n-best lists, rather than working directly on lattices, makes comparison with the other models not particularly informative.', 'In order to get a sense of whether these perplexity reduction results can translate to improvement in a speech recognition task, we performed a very small preliminary experiment on n-best lists.', 'A candidate analysis C = (D, 8, PD, F, wn consists of a derivation D, a stack S. a derivation probability PD, a figure of merit F, and a string w7 remaining to be parsed.'])
['system', 'ROUGE-S*', 'Average_R:', '0.08792', '(95%-conf.int.', '0.08792', '-', '0.08792)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.16163', '(95%-conf.int.', '0.16163', '-', '0.16163)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1035', 'P:91', 'F:91']
dict_values(['Thus, our top-down parser allows for the incremental calculation of generative conditional word probabilities, a property it shares with other left-to-right parsers with rooted derivations such as Earley parsers (Earley 1970) or left-corner parsers (Rosenkrantz and Lewis 11 1970).'])
dict_values(['Probabilistic Top-Down Parsing and Language Modeling', 'One approach to syntactic language modeling is to use this distribution directly as a language model.', 'The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:276', 'P:300', 'F:0']
dict_values(['The approach that we will subsequently present uses the probabilistic grammar as its language model, but only includes probability mass from those parses that are found, that is, it uses the parser to find a subset of the total set of parses (hopefully most of the high-probability parses) and uses the sum of their probabilities as an estimate of the true probability given the grammar.'])
dict_values(['By utilizing a figure of merit to identify promising analyses, we are simply focusing our attention on those parses that are likely to have a high probability, and thus we are increasing the amount of probability mass that we do capture, of the total possible.', 'The approach that we will subsequently present uses the probabilistic grammar as its language model, but only includes probability mass from those parses that are found, that is, it uses the parser to find a subset of the total set of parses (hopefully most of the high-probability parses) and uses the sum of their probabilities as an estimate of the true probability given the grammar.', 'The empirical results presented above are quite encouraging, and the potential of this kind of approach both for parsing and language modeling seems very promising.'])
['system', 'ROUGE-S*', 'Average_R:', '0.22792', '(95%-conf.int.', '0.22792', '-', '0.22792)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.37123', '(95%-conf.int.', '0.37123', '-', '0.37123)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1540', 'P:351', 'F:351']
dict_values(['First, the top-down parsing algorithm builds a set of rooted candidate parse trees from left to right over the string, which allows it to calculate a generative probability for each prefix string from the probabilistic grammar, and hence a conditional probability for each word given the previous words and the probabilistic grammar.'])
dict_values(['In such a model, it is possible to commit to a set of partial analyses at a particular point that cannot be completed given the rest of the input string (i.e., the parser can &quot;garden path&quot;).', "This is a subset of the possible leftmost partial derivations with respect to the prefix string W. Since RV is produced by expanding only analyses on priority queue H;', the set of complete trees consistent with the partial derivations on priority queue Ht is a subset of the set of complete trees consistent with the partial derivations on priority queue HT'', that is, the total probability mass represented by the priority queues is monotonically decreasing.", 'Recall the discussion of the grammar models above, and our definition of the set of partial derivations Dw, with respect to a prefix string wil) (see Equations 2 and 7).'])
['system', 'ROUGE-S*', 'Average_R:', '0.01087', '(95%-conf.int.', '0.01087', '-', '0.01087)']
['system', 'ROUGE-S*', 'Average_P:', '0.08308', '(95%-conf.int.', '0.08308', '-', '0.08308)']
['system', 'ROUGE-S*', 'Average_F:', '0.01922', '(95%-conf.int.', '0.01922', '-', '0.01922)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2485', 'P:325', 'F:27']
0.5258762434265469 0.1023462487206719 0.16777624790279694





input/ref/Task1/D09-1092_vardha.csv
input/res/Task1/D09-1092.annv3.csv
parsing: input/ref/Task1/D09-1092_vardha.csv
<S sid="17" ssid="13">We argue that topic modeling is both a useful and appropriate tool for leveraging correspondences between semantically comparable documents in multiple different languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'17'"]
'17'
['17']
parsed_discourse_facet ['method_citation']
 <S sid="20" ssid="16">We also explore how the characteristics of different languages affect topic model performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'"]
'20'
['20']
parsed_discourse_facet ['method_citation']
    <S sid="138" ssid="87">We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.</S>
original cit marker offset is 0
new cit marker offset is 0



["'138'"]
'138'
['138']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="6">We demonstrate its utility and explore its characteristics using two polylingual corpora: proceedings of the European parliament (in eleven languages) and a collection of Wikipedia articles (in twelve languages).</S>
original cit marker offset is 0
new cit marker offset is 0



["'10'"]
'10'
['10']
parsed_discourse_facet ['method_citation']
   <S sid="55" ssid="4">The EuroParl corpus consists of parallel texts in eleven western European languages: Danish, German, Greek, English, Spanish, Finnish, French, Italian, Dutch, Portuguese and Swedish.</S>
original cit marker offset is 0
new cit marker offset is 0



["'55'"]
'55'
['55']
parsed_discourse_facet ['method_citation']
 sid="9" ssid="5">In this paper, we present the polylingual topic model (PLTM).</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
Error in Reference Offset
<S sid="118" ssid="67">We calculate the Jensen-Shannon divergence between the topic distributions for each pair of individual documents in S that were originally part of the same tuple prior to separation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'"]
'118'
['118']
parsed_discourse_facet ['method_citation']
<S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'35'"]
'35'
['35']
parsed_discourse_facet ['method_citation']
<S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'35'"]
'35'
['35']
parsed_discourse_facet ['method_citation']
 <S sid="55" ssid="4">The EuroParl corpus consists of parallel texts in eleven western European languages: Danish, German, Greek, English, Spanish, Finnish, French, Italian, Dutch, Portuguese and Swedish.</S>
original cit marker offset is 0
new cit marker offset is 0



["'55'"]
'55'
['55']
parsed_discourse_facet ['method_citation']
<S sid="102" ssid="51">In contrast, PLTM assigns a significant number of tokens to almost all 800 topics, in very similar proportions in both languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'102'"]
'102'
['102']
parsed_discourse_facet ['method_citation']
 <S sid="38" ssid="4">This is unlike LDA, in which each document is assumed to have its own document-specific distribution over topics.</S>
original cit marker offset is 0
new cit marker offset is 0



["'38'"]
'38'
['38']
parsed_discourse_facet ['method_citation']
 <S sid="156" ssid="105">We use both Jensen-Shannon divergence and cosine distance.</S>
original cit marker offset is 0
new cit marker offset is 0



["'156'"]
'156'
['156']
parsed_discourse_facet ['method_citation']
    <S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
  <S sid="170" ssid="4">First, we explore whether comparable document tuples support the alignment of fine-grained topics, as demonstrated earlier using parallel documents.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'"]
'170'
['170']
parsed_discourse_facet ['method_citation']
    <S sid="29" ssid="5">A recent extended abstract, developed concurrently by Ni et al. (Ni et al., 2009), discusses a multilingual topic model similar to the one presented here.</S>
original cit marker offset is 0
new cit marker offset is 0



["'29'"]
'29'
['29']
parsed_discourse_facet ['method_citation']
  <S sid="170" ssid="4">First, we explore whether comparable document tuples support the alignment of fine-grained topics, as demonstrated earlier using parallel documents.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'"]
'170'
['170']
parsed_discourse_facet ['method_citation']
<S sid="168" ssid="2">However, the growth of the web, and in particular Wikipedia, has made comparable text corpora &#8211; documents that are topically similar but are not direct translations of one another &#8211; considerably more abundant than true parallel corpora.</S>
original cit marker offset is 0
new cit marker offset is 0



["'168'"]
'168'
['168']
parsed_discourse_facet ['method_citation']
    <S sid="29" ssid="5">A recent extended abstract, developed concurrently by Ni et al. (Ni et al., 2009), discusses a multilingual topic model similar to the one presented here.</S>
original cit marker offset is 0
new cit marker offset is 0



["'29'"]
'29'
['29']
parsed_discourse_facet ['method_citation']
 <S sid="110" ssid="59">Continuing with the example above, one might extract a set of connected Wikipedia articles related to the focus of the journal and then train PLTM on a joint corpus consisting of journal papers and Wikipedia articles.</S>
original cit marker offset is 0
new cit marker offset is 0



["'110'"]
'110'
['110']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/D09-1092.annv3.csv
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="3" ssid="3">We introduce a polylingual topic model that discovers topics aligned across multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'36'", "'3'"]
'192'
'36'
'3'
['192', '36', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'36'"]
'192'
'35'
'36'
['192', '35', '36']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="137" ssid="86">For every topic t we select a small number K of the most probable words in English (e) and in each “translation” language (E): Wte and Wtt, respectively.</S><S sid="134" ssid="83">Each lexicon is a set of pairs consisting of an English word and a translated word, 1we, wt}.</S><S sid="138" ssid="87">We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'", "'134'", "'138'"]
'137'
'134'
'138'
['137', '134', '138']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="0" ssid="0">Polylingual Topic Models</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'0'", "'36'"]
'192'
'0'
'36'
['192', '0', '36']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'148'", "'192'", "'36'"]
'148'
'192'
'36'
['148', '192', '36']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="19" ssid="15">We employ a set of direct translations, the EuroParl corpus, to evaluate whether PLTM can accurately infer topics when documents genuinely contain the same content.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'19'"]
'192'
'35'
'19'
['192', '35', '19']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="182" ssid="16">As with EuroParl, we can calculate the JensenShannon divergence between pairs of documents within a comparable document tuple.</S><S sid="156" ssid="105">We use both Jensen-Shannon divergence and cosine distance.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'182'", "'156'", "'148'"]
'182'
'156'
'148'
['182', '156', '148']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'192'", "'35'"]
'36'
'192'
'35'
['36', '192', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="9" ssid="5">In this paper, we present the polylingual topic model (PLTM).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'9'"]
'192'
'35'
'9'
['192', '35', '9']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="28" ssid="4">We take a simpler approach that is more suitable for topically similar document tuples (where documents are not direct translations of one another) in more than two languages.</S><S sid="30" ssid="6">However, they evaluate their model on only two languages (English and Chinese), and do not use the model to detect differences between languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'28'", "'30'"]
'192'
'28'
'30'
['192', '28', '30']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="28" ssid="4">We take a simpler approach that is more suitable for topically similar document tuples (where documents are not direct translations of one another) in more than two languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'28'", "'148'"]
'192'
'28'
'148'
['192', '28', '148']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="54" ssid="3">Although direct translations in multiple languages are relatively rare (in contrast with comparable documents), we use direct translations to explore the characteristics of the model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'54'"]
'192'
'35'
'54'
['192', '35', '54']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="156" ssid="105">We use both Jensen-Shannon divergence and cosine distance.</S><S sid="182" ssid="16">As with EuroParl, we can calculate the JensenShannon divergence between pairs of documents within a comparable document tuple.</S><S sid="118" ssid="67">We calculate the Jensen-Shannon divergence between the topic distributions for each pair of individual documents in S that were originally part of the same tuple prior to separation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'156'", "'182'", "'118'"]
'156'
'182'
'118'
['156', '182', '118']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="110" ssid="59">Continuing with the example above, one might extract a set of connected Wikipedia articles related to the focus of the journal and then train PLTM on a joint corpus consisting of journal papers and Wikipedia articles.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'110'"]
'192'
'148'
'110'
['192', '148', '110']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="6" ssid="2">Topic models have been used for analyzing topic trends in research literature (Mann et al., 2006; Hall et al., 2008), inferring captions for images (Blei and Jordan, 2003), social network analysis in email (McCallum et al., 2005), and expanding queries with topically related words in information retrieval (Wei and Croft, 2006).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'35'", "'6'"]
'192'
'35'
'6'
['192', '35', '6']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S>
original cit marker offset is 0
new cit marker offset is 0



["'35'", "'192'", "'36'"]
'35'
'192'
'36'
['35', '192', '36']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="10" ssid="6">We demonstrate its utility and explore its characteristics using two polylingual corpora: proceedings of the European parliament (in eleven languages) and a collection of Wikipedia articles (in twelve languages).</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'10'"]
'192'
'148'
'10'
['192', '148', '10']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="36" ssid="2">Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.</S><S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="105" ssid="54">An important application for polylingual topic modeling is to use small numbers of comparable document tuples to link topics in larger collections of distinct, non-comparable documents in multiple languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'192'", "'105'"]
'36'
'192'
'105'
['36', '192', '105']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="192" ssid="1">We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.</S><S sid="148" ssid="97">To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.</S><S sid="35" ssid="1">The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'192'", "'148'", "'35'"]
'192'
'148'
'35'
['192', '148', '35']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
dict_values(['We argue that topic modeling is both a useful and appropriate tool for leveraging correspondences between semantically comparable documents in multiple different languages.'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.', 'We introduce a polylingual topic model that discovers topics aligned across multiple languages.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02151', '(95%-conf.int.', '0.02151', '-', '0.02151)']
['system', 'ROUGE-S*', 'Average_P:', '0.18182', '(95%-conf.int.', '0.18182', '-', '0.18182)']
['system', 'ROUGE-S*', 'Average_F:', '0.03846', '(95%-conf.int.', '0.03846', '-', '0.03846)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:465', 'P:55', 'F:10']
dict_values(['We also explore how the characteristics of different languages affect topic model performance.'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.', 'Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00427', '(95%-conf.int.', '0.00427', '-', '0.00427)']
['system', 'ROUGE-S*', 'Average_P:', '0.14286', '(95%-conf.int.', '0.14286', '-', '0.14286)']
['system', 'ROUGE-S*', 'Average_F:', '0.00829', '(95%-conf.int.', '0.00829', '-', '0.00829)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:703', 'P:21', 'F:3']
dict_values(['We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.'])
dict_values(['For every topic t we select a small number K of the most probable words in English (e) and in each “translation” language (E): Wte and Wtt, respectively.', 'Each lexicon is a set of pairs consisting of an English word and a translated word, 1we, wt}.', 'We then add the Cartesian product of these sets for every topic to a set of candidate translations C. We report the number of elements of C that appear in the reference lexica.'])
['system', 'ROUGE-S*', 'Average_R:', '0.13904', '(95%-conf.int.', '0.13904', '-', '0.13904)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.24413', '(95%-conf.int.', '0.24413', '-', '0.24413)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:78', 'F:78']
dict_values(['We demonstrate its utility and explore its characteristics using two polylingual corpora: proceedings of the European parliament (in eleven languages) and a collection of Wikipedia articles (in twelve languages).'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'Polylingual Topic Models', 'Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02667', '(95%-conf.int.', '0.02667', '-', '0.02667)']
['system', 'ROUGE-S*', 'Average_P:', '0.06667', '(95%-conf.int.', '0.06667', '-', '0.06667)']
['system', 'ROUGE-S*', 'Average_F:', '0.03810', '(95%-conf.int.', '0.03810', '-', '0.03810)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:120', 'F:8']
dict_values(['The EuroParl corpus consists of parallel texts in eleven western European languages: Danish, German, Greek, English, Spanish, Finnish, French, Italian, Dutch, Portuguese and Swedish.'])
dict_values(['To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.', 'We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'Each tuple is a set of documents that are loosely equivalent to each other, but written in different languages, e.g., corresponding Wikipedia articles in French, English and German.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00775', '(95%-conf.int.', '0.00775', '-', '0.00775)']
['system', 'ROUGE-S*', 'Average_P:', '0.03684', '(95%-conf.int.', '0.03684', '-', '0.03684)']
['system', 'ROUGE-S*', 'Average_F:', '0.01281', '(95%-conf.int.', '0.01281', '-', '0.01281)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:190', 'F:7']
dict_values(['We calculate the Jensen-Shannon divergence between the topic distributions for each pair of individual documents in S that were originally part of the same tuple prior to separation.'])
dict_values(['As with EuroParl, we can calculate the JensenShannon divergence between pairs of documents within a comparable document tuple.', 'We use both Jensen-Shannon divergence and cosine distance.', 'To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05042', '(95%-conf.int.', '0.05042', '-', '0.05042)']
['system', 'ROUGE-S*', 'Average_P:', '0.32967', '(95%-conf.int.', '0.32967', '-', '0.32967)']
['system', 'ROUGE-S*', 'Average_F:', '0.08746', '(95%-conf.int.', '0.08746', '-', '0.08746)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:595', 'P:91', 'F:30']
dict_values(['First, we explore whether comparable document tuples support the alignment of fine-grained topics, as demonstrated earlier using parallel documents.'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.', 'Continuing with the example above, one might extract a set of connected Wikipedia articles related to the focus of the journal and then train PLTM on a joint corpus consisting of journal papers and Wikipedia articles.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00850', '(95%-conf.int.', '0.00850', '-', '0.00850)']
['system', 'ROUGE-S*', 'Average_P:', '0.10989', '(95%-conf.int.', '0.10989', '-', '0.10989)']
['system', 'ROUGE-S*', 'Average_F:', '0.01579', '(95%-conf.int.', '0.01579', '-', '0.01579)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1176', 'P:91', 'F:10']
dict_values(['A recent extended abstract, developed concurrently by Ni et al. (Ni et al., 2009), discusses a multilingual topic model similar to the one presented here.'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.', 'Topic models have been used for analyzing topic trends in research literature (Mann et al., 2006; Hall et al., 2008), inferring captions for images (Blei and Jordan, 2003), social network analysis in email (McCallum et al., 2005), and expanding queries with topically related words in information retrieval (Wei and Croft, 2006).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00317', '(95%-conf.int.', '0.00317', '-', '0.00317)']
['system', 'ROUGE-S*', 'Average_P:', '0.05000', '(95%-conf.int.', '0.05000', '-', '0.05000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00597', '(95%-conf.int.', '0.00597', '-', '0.00597)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1891', 'P:120', 'F:6']
dict_values(['However, the growth of the web, and in particular Wikipedia, has made comparable text corpora &#8211; documents that are topically similar but are not direct translations of one another &#8211; considerably more abundant than true parallel corpora.'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.', 'We demonstrate its utility and explore its characteristics using two polylingual corpora: proceedings of the European parliament (in eleven languages) and a collection of Wikipedia articles (in twelve languages).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00555', '(95%-conf.int.', '0.00555', '-', '0.00555)']
['system', 'ROUGE-S*', 'Average_P:', '0.03509', '(95%-conf.int.', '0.03509', '-', '0.03509)']
['system', 'ROUGE-S*', 'Average_F:', '0.00958', '(95%-conf.int.', '0.00958', '-', '0.00958)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:171', 'F:6']
dict_values(['Continuing with the example above, one might extract a set of connected Wikipedia articles related to the focus of the journal and then train PLTM on a joint corpus consisting of journal papers and Wikipedia articles.'])
dict_values(['We introduced a polylingual topic model (PLTM) that discovers topics aligned across multiple languages.', 'To evaluate this scenario, we train PLTM on a set of document tuples from EuroParl, infer topic distributions for a set of held-out documents, and then measure our ability to align documents in one language with their translations in another language.', 'The polylingual topic model (PLTM) is an extension of latent Dirichlet allocation (LDA) (Blei et al., 2003) for modeling polylingual document tuples.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00185', '(95%-conf.int.', '0.00185', '-', '0.00185)']
['system', 'ROUGE-S*', 'Average_P:', '0.01307', '(95%-conf.int.', '0.01307', '-', '0.01307)']
['system', 'ROUGE-S*', 'Average_F:', '0.00324', '(95%-conf.int.', '0.00324', '-', '0.00324)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:153', 'F:2']
0.19659099803409003 0.026872999731270008 0.046382999536170005





input/ref/Task1/W11-2123_aakansha.csv
input/res/Task1/W11-2123.annv3.csv
parsing: input/ref/Task1/W11-2123_aakansha.csv
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'7'"]
'7'
['7']
parsed_discourse_facet ['method_citation']
<S sid="45" ssid="23">The PROBING data structure is a rather straightforward application of these hash tables to store Ngram language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'"]
'45'
['45']
parsed_discourse_facet ['method_citation']
<S sid="136" ssid="8">We offer a state function s(wn1) = wn&#65533; where substring wn&#65533; is guaranteed to extend (to the right) in the same way that wn1 does for purposes of language modeling.</S>
original cit marker offset is 0
new cit marker offset is 0



["'136'"]
'136'
['136']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'7'"]
'7'
['7']
parsed_discourse_facet ['method_citation']
<S sid="8" ssid="3">Queries take the form p(wn|wn&#8722;1 1 ) where wn1 is an n-gram.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S>
original cit marker offset is 0
new cit marker offset is 0



["'205'"]
'205'
['205']
parsed_discourse_facet ['method_citation']
<S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S>
original cit marker offset is 0
new cit marker offset is 0



["'274'"]
'274'
['274']
parsed_discourse_facet ['method_citation']
<S sid="204" ssid="23">For RandLM, we used the settings in the documentation: 8 bits per value and false positive probability 1 256.</S>
original cit marker offset is 0
new cit marker offset is 0



["'204'"]
'204'
['204']
parsed_discourse_facet ['method_citation']
<S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S>
original cit marker offset is 0
new cit marker offset is 0



["'274'"]
'274'
['274']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="229" ssid="48">Then we ran binary search to determine the least amount of memory with which it would run.</S>
original cit marker offset is 0
new cit marker offset is 0



["'229'"]
'229'
['229']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="93" ssid="71">The cost of storing these averages, in bits, is Because there are comparatively few unigrams, we elected to store them byte-aligned and unquantized, making every query faster.</S>
original cit marker offset is 0
new cit marker offset is 0



["'93'"]
'93'
['93']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'"]
'199'
['199']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W11-2123.annv3.csv
<S sid="97" ssid="1">SRILM (Stolcke, 2002) is widely used within academia.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'97'", "'12'", "'199'"]
'97'
'12'
'199'
['97', '12', '199']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="223" ssid="42">The binary language model from Section 5.2 and text phrase table were forced into disk cache before each run.</S><S sid="203" ssid="22">As noted in Section 4.4, disk cache state is controlled by reading the entire binary file before each test begins.</S><S sid="180" ssid="52">In all of our experiments, the binary file (whether mapped or, in the case of most other packages, interpreted) is loaded into the disk cache in advance so that lazy mapping will never fault to disk.</S>
original cit marker offset is 0
new cit marker offset is 0



["'223'", "'203'", "'180'"]
'223'
'203'
'180'
['223', '203', '180']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="159" ssid="31">Saving state allows our code to walk the data structure exactly once per query.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="10" ssid="5">The problem is to store these two values for a large and sparse set of n-grams in a way that makes queries efficient.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'1'", "'10'"]
'159'
'1'
'10'
['159', '1', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'274'", "'199'"]
'1'
'274'
'199'
['1', '274', '199']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'12'", "'1'"]
'199'
'12'
'1'
['199', '12', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="24" ssid="2">The set of n-grams appearing in a model is sparse, and we want to efficiently find their associated probabilities and backoff penalties.</S><S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'24'", "'7'"]
'199'
'24'
'7'
['199', '24', '7']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="206" ssid="25">Tokens were converted to vocabulary identifiers in advance and state was carried from each query to the next.</S><S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'206'", "'103'"]
'1'
'206'
'103'
['1', '206', '103']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'1'", "'205'"]
'199'
'1'
'205'
['199', '1', '205']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="45" ssid="23">The PROBING data structure is a rather straightforward application of these hash tables to store Ngram language models.</S><S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S><S sid="23" ssid="1">We implement two data structures: PROBING, designed for speed, and TRIE, optimized for memory.</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'", "'274'", "'23'"]
'45'
'274'
'23'
['45', '274', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="92" ssid="70">To quantize, we use the binning method (Federico and Bertoldi, 2006) that sorts values, divides into equally sized bins, and averages within each bin.</S><S sid="34" ssid="12">Therefore, a populated probing hash table consists of an array of buckets that contain either one entry or are empty.</S><S sid="35" ssid="13">Non-empty buckets contain an entry belonging to them or to a preceding bucket where a conflict occurred.</S>
original cit marker offset is 0
new cit marker offset is 0



["'92'", "'34'", "'35'"]
'92'
'34'
'35'
['92', '34', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="275" ssid="2">The PROBING model is 2.4 times as fast as the fastest alternative, SRILM, and uses less memory too.</S><S sid="97" ssid="1">SRILM (Stolcke, 2002) is widely used within academia.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S>
original cit marker offset is 0
new cit marker offset is 0



["'275'", "'97'", "'12'"]
'275'
'97'
'12'
['275', '97', '12']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="102" ssid="6">The PROBING model was designed to improve upon SRILM by using linear probing hash tables (though not arranged in a trie), allocating memory all at once (eliminating the need for full pointers), and being easy to compile.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'199'", "'102'"]
'1'
'199'
'102'
['1', '199', '102']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'1'", "'0'"]
'103'
'1'
'0'
['103', '1', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'12'", "'1'"]
'199'
'12'
'1'
['199', '12', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'103'", "'0'"]
'199'
'103'
'0'
['199', '103', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'205'", "'199'", "'1'"]
'205'
'199'
'1'
['205', '199', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="131" ssid="3">Dynamic programming efficiently scores many hypotheses by exploiting the fact that an N-gram language model conditions on at most N − 1 preceding words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'199'", "'131'"]
'103'
'199'
'131'
['103', '199', '131']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'7'", "'0'"]
'1'
'7'
'0'
['1', '7', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'205'", "'1'"]
'199'
'205'
'1'
['199', '205', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="200" ssid="19">The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'205'", "'200'"]
'199'
'205'
'200'
['199', '205', '200']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['This paper presents methods to query N-gram language models, minimizing time and space costs.'])
dict_values(['SRILM (Stolcke, 2002) is widely used within academia.', 'Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.', 'For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00634', '(95%-conf.int.', '0.00634', '-', '0.00634)']
['system', 'ROUGE-S*', 'Average_P:', '0.10909', '(95%-conf.int.', '0.10909', '-', '0.10909)']
['system', 'ROUGE-S*', 'Average_F:', '0.01199', '(95%-conf.int.', '0.01199', '-', '0.01199)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:946', 'P:55', 'F:6']
dict_values(['The PROBING data structure is a rather straightforward application of these hash tables to store Ngram language models.'])
dict_values(['The binary language model from Section 5.2 and text phrase table were forced into disk cache before each run.', 'As noted in Section 4.4, disk cache state is controlled by reading the entire binary file before each test begins.', 'In all of our experiments, the binary file (whether mapped or, in the case of most other packages, interpreted) is loaded into the disk cache in advance so that lazy mapping will never fault to disk.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00116', '(95%-conf.int.', '0.00116', '-', '0.00116)']
['system', 'ROUGE-S*', 'Average_P:', '0.01818', '(95%-conf.int.', '0.01818', '-', '0.01818)']
['system', 'ROUGE-S*', 'Average_F:', '0.00218', '(95%-conf.int.', '0.00218', '-', '0.00218)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:861', 'P:55', 'F:1']
dict_values(['We offer a state function s(wn1) = wn&#65533; where substring wn&#65533; is guaranteed to extend (to the right) in the same way that wn1 does for purposes of language modeling.'])
dict_values(['Saving state allows our code to walk the data structure exactly once per query.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'The problem is to store these two values for a large and sparse set of n-grams in a way that makes queries efficient.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00690', '(95%-conf.int.', '0.00690', '-', '0.00690)']
['system', 'ROUGE-S*', 'Average_P:', '0.02857', '(95%-conf.int.', '0.02857', '-', '0.02857)']
['system', 'ROUGE-S*', 'Average_F:', '0.01111', '(95%-conf.int.', '0.01111', '-', '0.01111)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:105', 'F:3']
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.', 'For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.'])
['system', 'ROUGE-S*', 'Average_R:', '0.06633', '(95%-conf.int.', '0.06633', '-', '0.06633)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.12440', '(95%-conf.int.', '0.12440', '-', '0.12440)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1176', 'P:78', 'F:78']
dict_values(['This paper presents methods to query N-gram language models, minimizing time and space costs.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01735', '(95%-conf.int.', '0.01735', '-', '0.01735)']
['system', 'ROUGE-S*', 'Average_P:', '0.41818', '(95%-conf.int.', '0.41818', '-', '0.41818)']
['system', 'ROUGE-S*', 'Average_F:', '0.03331', '(95%-conf.int.', '0.03331', '-', '0.03331)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1326', 'P:55', 'F:23']
dict_values(['Queries take the form p(wn|wn&#8722;1 1 ) where wn1 is an n-gram.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'The set of n-grams appearing in a model is sparse, and we want to efficiently find their associated probabilities and backoff penalties.', 'This paper presents methods to query N-gram language models, minimizing time and space costs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00093', '(95%-conf.int.', '0.00093', '-', '0.00093)']
['system', 'ROUGE-S*', 'Average_P:', '0.02778', '(95%-conf.int.', '0.02778', '-', '0.02778)']
['system', 'ROUGE-S*', 'Average_F:', '0.00179', '(95%-conf.int.', '0.00179', '-', '0.00179)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:36', 'F:1']
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'Tokens were converted to vocabulary identifiers in advance and state was carried from each query to the next.', 'IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.'])
['system', 'ROUGE-S*', 'Average_R:', '0.15726', '(95%-conf.int.', '0.15726', '-', '0.15726)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.27178', '(95%-conf.int.', '0.27178', '-', '0.27178)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:78', 'F:78']
dict_values(['We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).'])
['system', 'ROUGE-S*', 'Average_R:', '0.08831', '(95%-conf.int.', '0.08831', '-', '0.08831)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.16229', '(95%-conf.int.', '0.16229', '-', '0.16229)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1540', 'P:136', 'F:136']
dict_values(['We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.'])
dict_values(['The PROBING model is 2.4 times as fast as the fastest alternative, SRILM, and uses less memory too.', 'SRILM (Stolcke, 2002) is widely used within academia.', 'Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00794', '(95%-conf.int.', '0.00794', '-', '0.00794)']
['system', 'ROUGE-S*', 'Average_P:', '0.06667', '(95%-conf.int.', '0.06667', '-', '0.06667)']
['system', 'ROUGE-S*', 'Average_F:', '0.01418', '(95%-conf.int.', '0.01418', '-', '0.01418)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:45', 'F:3']
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'The PROBING model was designed to improve upon SRILM by using linear probing hash tables (though not arranged in a trie), allocating memory all at once (eliminating the need for full pointers), and being easy to compile.'])
['system', 'ROUGE-S*', 'Average_R:', '0.04887', '(95%-conf.int.', '0.04887', '-', '0.04887)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.09319', '(95%-conf.int.', '0.09319', '-', '0.09319)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1596', 'P:78', 'F:78']
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
dict_values(['IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'KenLM: Faster and Smaller Language Model Queries'])
['system', 'ROUGE-S*', 'Average_R:', '0.17931', '(95%-conf.int.', '0.17931', '-', '0.17931)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.30409', '(95%-conf.int.', '0.30409', '-', '0.30409)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:78', 'F:78']
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05882', '(95%-conf.int.', '0.05882', '-', '0.05882)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.11111', '(95%-conf.int.', '0.11111', '-', '0.11111)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1326', 'P:78', 'F:78']
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.', 'KenLM: Faster and Smaller Language Model Queries'])
['system', 'ROUGE-S*', 'Average_R:', '0.00664', '(95%-conf.int.', '0.00664', '-', '0.00664)']
['system', 'ROUGE-S*', 'Average_P:', '0.07692', '(95%-conf.int.', '0.07692', '-', '0.07692)']
['system', 'ROUGE-S*', 'Average_F:', '0.01223', '(95%-conf.int.', '0.01223', '-', '0.01223)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:78', 'F:6']
dict_values(['Then we ran binary search to determine the least amount of memory with which it would run.'])
dict_values(['We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).', 'For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1540', 'P:21', 'F:0']
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
dict_values(['IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.', 'For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'Dynamic programming efficiently scores many hypotheses by exploiting the fact that an N-gram language model conditions on at most N − 1 preceding words.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00235', '(95%-conf.int.', '0.00235', '-', '0.00235)']
['system', 'ROUGE-S*', 'Average_P:', '0.03846', '(95%-conf.int.', '0.03846', '-', '0.03846)']
['system', 'ROUGE-S*', 'Average_F:', '0.00443', '(95%-conf.int.', '0.00443', '-', '0.00443)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1275', 'P:78', 'F:3']
dict_values(['The cost of storing these averages, in bits, is Because there are comparatively few unigrams, we elected to store them byte-aligned and unquantized, making every query faster.'])
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'This paper presents methods to query N-gram language models, minimizing time and space costs.', 'KenLM: Faster and Smaller Language Model Queries'])
['system', 'ROUGE-S*', 'Average_R:', '0.00690', '(95%-conf.int.', '0.00690', '-', '0.00690)']
['system', 'ROUGE-S*', 'Average_P:', '0.03297', '(95%-conf.int.', '0.03297', '-', '0.03297)']
['system', 'ROUGE-S*', 'Average_F:', '0.01141', '(95%-conf.int.', '0.01141', '-', '0.01141)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:91', 'F:3']
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05065', '(95%-conf.int.', '0.05065', '-', '0.05065)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.09642', '(95%-conf.int.', '0.09642', '-', '0.09642)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1540', 'P:78', 'F:78']
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).', 'The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.'])
['system', 'ROUGE-S*', 'Average_R:', '0.18995', '(95%-conf.int.', '0.18995', '-', '0.18995)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.31925', '(95%-conf.int.', '0.31925', '-', '0.31925)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1711', 'P:325', 'F:325']
0.48982333061209254 0.049778333056787034 0.08806444395519752





input/ref/Task1/P87-1015_swastika.csv
input/res/Task1/P87-1015.annv3.csv
parsing: input/ref/Task1/P87-1015_swastika.csv
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



['118']
118
['118']
parsed_discourse_facet ['aim_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



['118']
118
['118']
parsed_discourse_facet ['aim_citation']
<S sid="149" ssid="34">We can obtain a letter equivalent CFL defined by a CFG in which the for each rule as above, we have the production A &#8212;* A1 Anup where tk (up) = cp.</S>
original cit marker offset is 0
new cit marker offset is 0



['149']
149
['149']
parsed_discourse_facet ['method_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



['118']
118
['118']
parsed_discourse_facet ['aim_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



['118']
118
['118']
parsed_discourse_facet ['aim_citation']
    <S sid="2" ssid="2">In considering the relationship between formalisms, we show that it is useful to abstract away from the details of the formalism, and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation, we describe a class of formalisms which we call Linear Context- Free Rewriting Systems, and show they are recognizable in polynomial time and generate only semilinear languages.</S>
original cit marker offset is 0
new cit marker offset is 0



['2']
2
['2']
parsed_discourse_facet ['aim_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



['118']
118
['118']
parsed_discourse_facet ['aim_citation']
<S sid="222" ssid="28">However, in order to capture the properties of various grammatical systems under consideration, our notation is more restrictive that ILFP, which was designed as a general logical notation to characterize the complete class of languages that are recognizable in polynomial time.</S>
original cit marker offset is 0
new cit marker offset is 0



['222']
222
['222']
parsed_discourse_facet ['method_citation']
<S sid="119" ssid="4">In defining LCFRS's, we hope to generalize the definition of CFG's to formalisms manipulating any structure, e.g. strings, trees, or graphs.</S>
original cit marker offset is 0
new cit marker offset is 0



['119']
119
['119']
parsed_discourse_facet ['aim_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



['???']
???
['???']
parsed_discourse_facet ['aim_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S>
original cit marker offset is 0
new cit marker offset is 0



['207']
207
['207']
parsed_discourse_facet ['result_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S>
original cit marker offset is 0
new cit marker offset is 0



['207']
207
['207']
parsed_discourse_facet ['result_citation']
<S sid="19" ssid="4">It can be easily shown from Thatcher's result that the path set of every local set is a regular set.</S>
original cit marker offset is 0
new cit marker offset is 0



['19']
19
['19']
parsed_discourse_facet ['method_citation']
<S sid="119" ssid="4">In defining LCFRS's, we hope to generalize the definition of CFG's to formalisms manipulating any structure, e.g. strings, trees, or graphs.</S>
original cit marker offset is 0
new cit marker offset is 0



['119']
119
['119']
parsed_discourse_facet ['aim_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



['118']
118
['118']
parsed_discourse_facet ['aim_citation']
parsing: input/res/Task1/P87-1015.annv3.csv
<S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S><S sid="117" ssid="2">Our goal is to define a class of formal systems, and show that any member of this class will possess certain attractive properties.</S><S sid="110" ssid="16">The independence of paths in the tree sets of the k tI grammatical formalism in this hierarchy can be shown by means of tree pumping lemma of the form t1ti3t .</S>
original cit marker offset is 0
new cit marker offset is 0



["'165'", "'117'", "'110'"]
'165'
'117'
'110'
['165', '117', '110']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="111" ssid="17">.</S><S sid="230" ssid="36">LCFRS's have only been loosely defined in this paper; we have yet to provide a complete set of formal properties associated with members of this class.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'111'", "'230'", "'118'"]
'111'
'230'
'118'
['111', '230', '118']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="214" ssid="20">LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'125'", "'214'"]
'207'
'125'
'214'
['207', '125', '214']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'118'", "'92'"]
'207'
'118'
'92'
['207', '118', '92']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'92'", "'118'"]
'207'
'92'
'118'
['207', '92', '118']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'", "'207'", "'133'"]
'118'
'207'
'133'
['118', '207', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="214" ssid="20">LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S>
original cit marker offset is 0
new cit marker offset is 0



["'165'", "'125'", "'214'"]
'165'
'125'
'214'
['165', '125', '214']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="151" ssid="36">We now turn our attention to the recognition of string languages generated by these formalisms (LCFRL's).</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'151'", "'207'", "'92'"]
'151'
'207'
'92'
['151', '207', '92']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'", "'207'", "'133'"]
'118'
'207'
'133'
['118', '207', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="54" ssid="39">An IG can be viewed as a CFG in which each nonterminal is associated with a stack.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S>
original cit marker offset is 0
new cit marker offset is 0



["'54'", "'118'", "'165'"]
'54'
'118'
'165'
['54', '118', '165']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="75" ssid="60">A multicomponent Tree Adjoining Grammar (MCTAG) consists of a finite set of finite elementary tree sets.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S><S sid="28" ssid="13">A TAG consists of a finite set of elementary trees that are either initial trees or auxiliary trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'75'", "'133'", "'28'"]
'75'
'133'
'28'
['75', '133', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'207'", "'92'"]
'125'
'207'
'92'
['125', '207', '92']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="204" ssid="10">The similarities become apparent when they are studied at the level of derivation structures: derivation nee sets of CFG's, HG's, TAG's, and MCTAG's are all local sets.</S><S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'204'", "'165'"]
'125'
'204'
'165'
['125', '204', '165']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="78" ssid="63">Each member of a set of trees can be adjoined into distinct nodes of trees in a single elementary tree set, i.e, derivations always involve the adjunction of a derived auxiliary tree set into an elementary tree set.</S><S sid="80" ssid="65">The derivation trees of a MCTAG are similar to those of a TAG.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'78'", "'80'"]
'125'
'78'
'80'
['125', '78', '80']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="102" ssid="8">For example, let us consider a tree set containing trees of the form shown in Figure 4a.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'207'", "'102'"]
'125'
'207'
'102'
['125', '207', '102']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="134" ssid="19">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'125'", "'134'"]
'207'
'125'
'134'
['207', '125', '134']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
dict_values(["In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows."])
dict_values(['This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.', 'Our goal is to define a class of formal systems, and show that any member of this class will possess certain attractive properties.', 'The independence of paths in the tree sets of the k tI grammatical formalism in this hierarchy can be shown by means of tree pumping lemma of the form t1ti3t .'])
['system', 'ROUGE-S*', 'Average_R:', '0.00465', '(95%-conf.int.', '0.00465', '-', '0.00465)']
['system', 'ROUGE-S*', 'Average_P:', '0.03333', '(95%-conf.int.', '0.03333', '-', '0.03333)']
['system', 'ROUGE-S*', 'Average_F:', '0.00815', '(95%-conf.int.', '0.00815', '-', '0.00815)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:861', 'P:120', 'F:4']
dict_values(["In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows."])
dict_values(['.', "LCFRS's have only been loosely defined in this paper; we have yet to provide a complete set of formal properties associated with members of this class.", "In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows."])
['system', 'ROUGE-S*', 'Average_R:', '0.34188', '(95%-conf.int.', '0.34188', '-', '0.34188)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.50955', '(95%-conf.int.', '0.50955', '-', '0.50955)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:120', 'F:120']
dict_values(['We can obtain a letter equivalent CFL defined by a CFG in which the for each rule as above, we have the production A &#8212;* A1 Anup where tk (up) = cp.'])
dict_values(['We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.', 'Each derivation of a grammar can be represented by a generalized context-free derivation tree.', "LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85)."])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:78', 'F:0']
dict_values(["In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows."])
dict_values(["In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.", 'We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.', 'To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.'])
['system', 'ROUGE-S*', 'Average_R:', '0.12121', '(95%-conf.int.', '0.12121', '-', '0.12121)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.21622', '(95%-conf.int.', '0.21622', '-', '0.21622)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:990', 'P:120', 'F:120']
dict_values(['In considering the relationship between formalisms, we show that it is useful to abstract away from the details of the formalism, and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation, we describe a class of formalisms which we call Linear Context- Free Rewriting Systems, and show they are recognizable in polynomial time and generate only semilinear languages.'])
dict_values(['This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.', 'Each derivation of a grammar can be represented by a generalized context-free derivation tree.', "LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85)."])
['system', 'ROUGE-S*', 'Average_R:', '0.12613', '(95%-conf.int.', '0.12613', '-', '0.12613)']
['system', 'ROUGE-S*', 'Average_P:', '0.08879', '(95%-conf.int.', '0.08879', '-', '0.08879)']
['system', 'ROUGE-S*', 'Average_F:', '0.10422', '(95%-conf.int.', '0.10422', '-', '0.10422)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:946', 'F:84']
dict_values(['However, in order to capture the properties of various grammatical systems under consideration, our notation is more restrictive that ILFP, which was designed as a general logical notation to characterize the complete class of languages that are recognizable in polynomial time.'])
dict_values(["In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.", 'We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.', 'To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00303', '(95%-conf.int.', '0.00303', '-', '0.00303)']
['system', 'ROUGE-S*', 'Average_P:', '0.01579', '(95%-conf.int.', '0.01579', '-', '0.01579)']
['system', 'ROUGE-S*', 'Average_F:', '0.00508', '(95%-conf.int.', '0.00508', '-', '0.00508)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:990', 'P:190', 'F:3']
dict_values(["In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows."])
dict_values(['A multicomponent Tree Adjoining Grammar (MCTAG) consists of a finite set of finite elementary tree sets.', 'To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.', 'A TAG consists of a finite set of elementary trees that are either initial trees or auxiliary trees.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:741', 'P:120', 'F:0']
dict_values(["It can be easily shown from Thatcher's result that the path set of every local set is a regular set."])
dict_values(['Each derivation of a grammar can be represented by a generalized context-free derivation tree.', 'Each member of a set of trees can be adjoined into distinct nodes of trees in a single elementary tree set, i.e, derivations always involve the adjunction of a derived auxiliary tree set into an elementary tree set.', 'The derivation trees of a MCTAG are similar to those of a TAG.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00535', '(95%-conf.int.', '0.00535', '-', '0.00535)']
['system', 'ROUGE-S*', 'Average_P:', '0.06667', '(95%-conf.int.', '0.06667', '-', '0.06667)']
['system', 'ROUGE-S*', 'Average_F:', '0.00990', '(95%-conf.int.', '0.00990', '-', '0.00990)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:45', 'F:3']
dict_values(["In defining LCFRS's, we hope to generalize the definition of CFG's to formalisms manipulating any structure, e.g. strings, trees, or graphs."])
dict_values(['Each derivation of a grammar can be represented by a generalized context-free derivation tree.', 'We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.', 'For example, let us consider a tree set containing trees of the form shown in Figure 4a.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01709', '(95%-conf.int.', '0.01709', '-', '0.01709)']
['system', 'ROUGE-S*', 'Average_P:', '0.09091', '(95%-conf.int.', '0.09091', '-', '0.09091)']
['system', 'ROUGE-S*', 'Average_F:', '0.02878', '(95%-conf.int.', '0.02878', '-', '0.02878)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:66', 'F:6']
dict_values(["In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows."])
dict_values(['We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.', 'Each derivation of a grammar can be represented by a generalized context-free derivation tree.', "These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's)."])
['system', 'ROUGE-S*', 'Average_R:', '0.05172', '(95%-conf.int.', '0.05172', '-', '0.05172)']
['system', 'ROUGE-S*', 'Average_P:', '0.17500', '(95%-conf.int.', '0.17500', '-', '0.17500)']
['system', 'ROUGE-S*', 'Average_F:', '0.07985', '(95%-conf.int.', '0.07985', '-', '0.07985)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:406', 'P:120', 'F:21']
0.24704899752951 0.06710599932894001 0.09617499903825





input/ref/Task1/P08-1043_swastika.csv
input/res/Task1/P08-1043.annv3.csv
parsing: input/ref/Task1/P08-1043_swastika.csv
    <S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S>
original cit marker offset is 0
new cit marker offset is 0



['94']
94
['94']
parsed_discourse_facet ['aim_citation']
<S sid="4" ssid="4">Using a treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling technique our model outperforms previous pipelined, integrated or factorized systems for Hebrew morphological and syntactic processing, yielding an error reduction of 12% over the best published results so far.</S>
original cit marker offset is 0
new cit marker offset is 0



['4']
4
['4']
parsed_discourse_facet ['result_citation']
    <S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S>
original cit marker offset is 0
new cit marker offset is 0



['94']
94
['94']
parsed_discourse_facet ['method_citation']
    <S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



['19']
19
['19']
parsed_discourse_facet ['method_citation']
    <S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



['19']
19
['19']
parsed_discourse_facet ['method_citation']
<S sid="4" ssid="4">Using a treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling technique our model outperforms previous pipelined, integrated or factorized systems for Hebrew morphological and syntactic processing, yielding an error reduction of 12% over the best published results so far.</S>
original cit marker offset is 0
new cit marker offset is 0



['4']
4
['4']
parsed_discourse_facet ['result_citation']
<S sid="105" ssid="37">3An English sentence with ambiguous PoS assignment can be trivially represented as a lattice similar to our own, where every pair of consecutive nodes correspond to a word, and every possible PoS assignment for this word is a connecting arc.</S>
original cit marker offset is 0
new cit marker offset is 0



['105']
105
['105']
parsed_discourse_facet ['method_citation']
    <S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



['19']
19
['19']
parsed_discourse_facet ['method_citation']
    <S sid="19" ssid="15">Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.</S>
original cit marker offset is 0
new cit marker offset is 0



['19']
19
['19']
parsed_discourse_facet ['method_citation']
<S sid="163" ssid="1">The accuracy results for segmentation, tagging and parsing using our different models and our standard data split are summarized in Table 1.</S>
original cit marker offset is 0
new cit marker offset is 0



['163']
163
['163']
parsed_discourse_facet ['result_citation']
    <S sid="100" ssid="32">This means that the rules in our grammar are of two kinds: (a) syntactic rules relating nonterminals to a sequence of non-terminals and/or PoS tags, and (b) lexical rules relating PoS tags to lattice arcs (lexemes).</S>
original cit marker offset is 0
new cit marker offset is 0



['100']
100
['100']
parsed_discourse_facet ['method_citation']
    <S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S>
original cit marker offset is 0
new cit marker offset is 0



['94']
94
['94']
parsed_discourse_facet ['result_citation']
<S sid="188" ssid="2">The overall performance of our joint framework demonstrates that a probability distribution obtained over mere syntactic contexts using a Treebank grammar and a data-driven lexicon outperforms upper bounds proposed by previous joint disambiguation systems and achieves segmentation and parsing results on a par with state-of-the-art standalone applications results.</S>
original cit marker offset is 0
new cit marker offset is 0



['188']
188
['188']
parsed_discourse_facet ['result_citation']
<S sid="86" ssid="18">A morphological analyzer M : W&#8212;* L is a function mapping sentences in Hebrew (W E W) to their corresponding lattices (M(W) = L E L).</S>
original cit marker offset is 0
new cit marker offset is 0



['86']
86
['86']
parsed_discourse_facet ['result_citation']
<S sid="97" ssid="29">Thus our proposed model is a proper model assigning probability mass to all (7r, L) pairs, where 7r is a parse tree and L is the one and only lattice that a sequence of characters (and spaces) W over our alpha-beth gives rise to.</S>
original cit marker offset is 0
new cit marker offset is 0



['97']
97
['97']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P08-1043.annv3.csv
<S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="189" ssid="3">Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'", "'69'", "'189'"]
'94'
'69'
'189'
['94', '69', '189']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="189" ssid="3">Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.</S><S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'189'", "'21'"]
'186'
'189'
'21'
['186', '189', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'70'", "'69'"]
'79'
'70'
'69'
['79', '70', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S><S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'186'", "'187'"]
'0'
'186'
'187'
['0', '186', '187']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'0'", "'187'"]
'186'
'0'
'187'
['186', '0', '187']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'69'", "'21'"]
'79'
'69'
'21'
['79', '69', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'70'", "'69'"]
'79'
'70'
'69'
['79', '70', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="85" ssid="17">The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="191" ssid="5">In the current work morphological analyses and lexical probabilities are derived from a small Treebank, which is by no means the best way to go.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'69'", "'191'"]
'85'
'69'
'191'
['85', '69', '191']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'187'", "'89'"]
'186'
'187'
'89'
['186', '187', '89']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'89'", "'0'"]
'186'
'89'
'0'
['186', '89', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'89'", "'70'", "'0'"]
'89'
'70'
'0'
['89', '70', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation']
<S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S><S sid="146" ssid="24">Given a PCFG grammar G and a lattice L with nodes n1 ... nk, we construct the weighted grammar GL as follows: for every arc (lexeme) l E L from node ni to node nj, we add to GL the rule [l --+ tni, tni+1, ... , tnj_1] with a probability of 1 (this indicates the lexeme l spans from node ni to node nj).</S><S sid="3" ssid="3">Here we propose a single joint model for performing both morphological segmentation and syntactic disambiguation which bypasses the associated circularity.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'146'", "'3'"]
'21'
'146'
'3'
['21', '146', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'94'", "'69'"]
'79'
'94'
'69'
['79', '94', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="188" ssid="2">The overall performance of our joint framework demonstrates that a probability distribution obtained over mere syntactic contexts using a Treebank grammar and a data-driven lexicon outperforms upper bounds proposed by previous joint disambiguation systems and achieves segmentation and parsing results on a par with state-of-the-art standalone applications results.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="191" ssid="5">In the current work morphological analyses and lexical probabilities are derived from a small Treebank, which is by no means the best way to go.</S>
original cit marker offset is 0
new cit marker offset is 0



["'188'", "'89'", "'191'"]
'188'
'89'
'191'
['188', '89', '191']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="85" ssid="17">The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.</S><S sid="75" ssid="7">Every token is independent of the others, and the sentence lattice is in fact a concatenation of smaller lattices, one for each token.</S><S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'75'", "'79'"]
'85'
'75'
'79'
['85', '75', '79']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="82" ssid="14">In sequential tagging models such as (Adler and Elhadad, 2006; Bar-Haim et al., 2007; Smith et al., 2005) weights are assigned according to a language model The input for the joint task is a sequence W = w1, ... , wn of space-delimited tokens.</S><S sid="84" ssid="16">The entries in such a lexicon may be thought of as meaningful surface segments paired up with their PoS tags li = (si, pi), but note that a surface segment s need not be a space-delimited token.</S><S sid="135" ssid="13">We construct a mapping from all the space-delimited tokens seen in the training sentences to their corresponding analyses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'82'", "'84'", "'135'"]
'82'
'84'
'135'
['82', '84', '135']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.'])
dict_values(['Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.', 'We represent all morphological analyses of a given utterance using a lattice structure.', 'Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.'])
['system', 'ROUGE-S*', 'Average_R:', '0.21764', '(95%-conf.int.', '0.21764', '-', '0.21764)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.35748', '(95%-conf.int.', '0.35748', '-', '0.35748)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:703', 'P:153', 'F:153']
dict_values(['Using a treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling technique our model outperforms previous pipelined, integrated or factorized systems for Hebrew morphological and syntactic processing, yielding an error reduction of 12% over the best published results so far.'])
dict_values(['This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.', 'Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.', 'Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2'])
['system', 'ROUGE-S*', 'Average_R:', '0.04569', '(95%-conf.int.', '0.04569', '-', '0.04569)']
['system', 'ROUGE-S*', 'Average_P:', '0.25926', '(95%-conf.int.', '0.25926', '-', '0.25926)']
['system', 'ROUGE-S*', 'Average_F:', '0.07769', '(95%-conf.int.', '0.07769', '-', '0.07769)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2145', 'P:378', 'F:98']
dict_values(['Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.'])
dict_values(['There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.', 'Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.', 'We represent all morphological analyses of a given utterance using a lattice structure.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02154', '(95%-conf.int.', '0.02154', '-', '0.02154)']
['system', 'ROUGE-S*', 'Average_P:', '0.04575', '(95%-conf.int.', '0.04575', '-', '0.04575)']
['system', 'ROUGE-S*', 'Average_F:', '0.02929', '(95%-conf.int.', '0.02929', '-', '0.02929)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:153', 'F:7']
dict_values(['Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.'])
dict_values(['A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing', 'This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.', 'Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05803', '(95%-conf.int.', '0.05803', '-', '0.05803)']
['system', 'ROUGE-S*', 'Average_P:', '0.35833', '(95%-conf.int.', '0.35833', '-', '0.35833)']
['system', 'ROUGE-S*', 'Average_F:', '0.09988', '(95%-conf.int.', '0.09988', '-', '0.09988)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:741', 'P:120', 'F:43']
dict_values(['Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.'])
dict_values(['This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.', 'A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing', 'Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05263', '(95%-conf.int.', '0.05263', '-', '0.05263)']
['system', 'ROUGE-S*', 'Average_P:', '0.32500', '(95%-conf.int.', '0.32500', '-', '0.32500)']
['system', 'ROUGE-S*', 'Average_F:', '0.09059', '(95%-conf.int.', '0.09059', '-', '0.09059)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:741', 'P:120', 'F:39']
dict_values(['3An English sentence with ambiguous PoS assignment can be trivially represented as a lattice similar to our own, where every pair of consecutive nodes correspond to a word, and every possible PoS assignment for this word is a connecting arc.'])
dict_values(['There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.', 'Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.', 'We represent all morphological analyses of a given utterance using a lattice structure.'])
['system', 'ROUGE-S*', 'Average_R:', '0.04923', '(95%-conf.int.', '0.04923', '-', '0.04923)']
['system', 'ROUGE-S*', 'Average_P:', '0.08421', '(95%-conf.int.', '0.08421', '-', '0.08421)']
['system', 'ROUGE-S*', 'Average_F:', '0.06214', '(95%-conf.int.', '0.06214', '-', '0.06214)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:190', 'F:16']
dict_values(['Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.'])
dict_values(['This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.', 'Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.', 'Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02286', '(95%-conf.int.', '0.02286', '-', '0.02286)']
['system', 'ROUGE-S*', 'Average_P:', '0.23333', '(95%-conf.int.', '0.23333', '-', '0.23333)']
['system', 'ROUGE-S*', 'Average_F:', '0.04164', '(95%-conf.int.', '0.04164', '-', '0.04164)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1225', 'P:120', 'F:28']
dict_values(['Here we push the single-framework conjecture across the board and present a single model that performs morphological segmentation and syntactic disambiguation in a fully generative framework.'])
dict_values(['This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.', 'Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.', 'A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing'])
['system', 'ROUGE-S*', 'Average_R:', '0.02821', '(95%-conf.int.', '0.02821', '-', '0.02821)']
['system', 'ROUGE-S*', 'Average_P:', '0.18333', '(95%-conf.int.', '0.18333', '-', '0.18333)']
['system', 'ROUGE-S*', 'Average_F:', '0.04889', '(95%-conf.int.', '0.04889', '-', '0.04889)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:780', 'P:120', 'F:22']
dict_values(['Thus our proposed model is a proper model assigning probability mass to all (7r, L) pairs, where 7r is a parse tree and L is the one and only lattice that a sequence of characters (and spaces) W over our alpha-beth gives rise to.'])
dict_values(['In sequential tagging models such as (Adler and Elhadad, 2006; Bar-Haim et al., 2007; Smith et al., 2005) weights are assigned according to a language model The input for the joint task is a sequence W = w1, ... , wn of space-delimited tokens.', 'The entries in such a lexicon may be thought of as meaningful surface segments paired up with their PoS tags li = (si, pi), but note that a surface segment s need not be a space-delimited token.', 'We construct a mapping from all the space-delimited tokens seen in the training sentences to their corresponding analyses.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00980', '(95%-conf.int.', '0.00980', '-', '0.00980)']
['system', 'ROUGE-S*', 'Average_P:', '0.07602', '(95%-conf.int.', '0.07602', '-', '0.07602)']
['system', 'ROUGE-S*', 'Average_F:', '0.01737', '(95%-conf.int.', '0.01737', '-', '0.01737)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1326', 'P:171', 'F:13']
0.285025552388605 0.05618111048687656 0.09166333231485187





input/ref/Task1/A00-2030_sweta.csv
input/res/Task1/A00-2030.annv3.csv
parsing: input/ref/Task1/A00-2030_sweta.csv
<S sid="18" ssid="1">Almost all approaches to information extraction &#8212; even at the sentence level &#8212; are based on the divide-and-conquer strategy of reducing a complex problem to a set of simpler ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["18'"]
18'
['18']
parsed_discourse_facet ['method_citation']
<S sid="100" ssid="5">Given multiple constituents that cover identical spans in the chart, only those constituents with probabilities within a While our focus throughout the project was on TE and TR, we became curious about how well the model did at part-of-speech tagging, syntactic parsing, and at name finding.</S>
original cit marker offset is 0
new cit marker offset is 0



["100'"]
100'
['100']
parsed_discourse_facet ['method_citation']
<S sid="52" ssid="1">In this section, we describe the algorithm that was used to automatically produce augmented trees, starting with a) human-generated semantic annotations and b) machinegenerated syntactic parse trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["52'"]
52'
['52']
parsed_discourse_facet ['method_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["34'"]
34'
['34']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">Since 1995, a few statistical parsing algorithms have demonstrated a breakthrough in parsing accuracy, as measured against the UPenn TREEBANK as a gold standard.</S>
original cit marker offset is 0
new cit marker offset is 0



["1'"]
1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="61" ssid="2">The detailed probability structure differs, however, in that it was designed to jointly perform part-of-speech tagging, name finding, syntactic parsing, and relation finding in a single process.</S>
original cit marker offset is 0
new cit marker offset is 0



["61'"]
61'
['61']
parsed_discourse_facet ['method_citation']
<S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["104'"]
104'
['104']
parsed_discourse_facet ['method_citation']
<S sid="32" ssid="15">Because generative statistical models had already proven successful for each of the first three stages, we were optimistic that some of their properties &#8212; especially their ability to learn from large amounts of data, and their robustness when presented with unexpected inputs &#8212; would also benefit semantic analysis.</S>
original cit marker offset is 0
new cit marker offset is 0



["32'"]
32'
['32']
parsed_discourse_facet ['method_citation']
<S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["2'"]
2'
['2']
parsed_discourse_facet ['method_citation']
 <S sid="61" ssid="2">The detailed probability structure differs, however, in that it was designed to jointly perform part-of-speech tagging, name finding, syntactic parsing, and relation finding in a single process.</S>
original cit marker offset is 0
new cit marker offset is 0



["61'"]
61'
['61']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["33'"]
33'
['33']
parsed_discourse_facet ['method_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["34'"]
34'
['34']
parsed_discourse_facet ['method_citation']
<S sid="3" ssid="1">Since 1995, a few statistical parsing algorithms (Magerman, 1995; Collins, 1996 and 1997; Charniak, 1997; Rathnaparki, 1997) demonstrated a breakthrough in parsing accuracy, as measured against the University of Pennsylvania TREEBANK as a gold standard.</S>
original cit marker offset is 0
new cit marker offset is 0



["3'"]
3'
['3']
parsed_discourse_facet ['method_citation']
<S sid="52" ssid="1">In this section, we describe the algorithm that was used to automatically produce augmented trees, starting with a) human-generated semantic annotations and b) machinegenerated syntactic parse trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["52'"]
52'
['52']
parsed_discourse_facet ['method_citation']
<S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["104'"]
104'
['104']
parsed_discourse_facet ['method_citation']
<S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["104'"]
104'
['104']
parsed_discourse_facet ['method_citation']
<S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.<
original cit marker offset is 0
new cit marker offset is 0



["2'"]
2'
['2']
parsed_discourse_facet ['method_citation']
<S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction
original cit marker offset is 0
new cit marker offset is 0



["104'"]
104'
['104']
parsed_discourse_facet ['method_citation']
<S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["2'"]
2'
['2']
parsed_discourse_facet ['method_citation']
<S sid="61" ssid="2">The detailed probability structure differs, however, in that it was designed to jointly perform part-of-speech tagging, name finding, syntactic parsing, and relation finding in a single process.</S>
original cit marker offset is 0
new cit marker offset is 0



["61'"]
61'
['61']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/A00-2030.annv3.csv
<S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'6'", "'0'"]
'2'
'6'
'0'
['2', '6', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'0'"]
'33'
'34'
'0'
['33', '34', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="95" ssid="14">The semantics — that is, the entities and relations — can then be directly extracted from these sentential trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'95'"]
'33'
'34'
'95'
['33', '34', '95']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'58'"]
'33'
'34'
'58'
['33', '34', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="51" ssid="11">To produce a corpus of augmented parse trees, we used the following multi-step training procedure which exploited the Penn TREEBANK Applying this procedure yielded a new version of the semantically annotated corpus, now annotated with complete augmented trees like that in Figure 3.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'51'", "'0'"]
'33'
'51'
'0'
['33', '51', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S><S sid="56" ssid="2">For example, in the phrase &quot;Lt. Cmdr.</S><S sid="38" ssid="6">Other labels indicate relations among entities.</S>
original cit marker offset is 0
new cit marker offset is 0



["'6'", "'56'", "'38'"]
'6'
'56'
'38'
['6', '56', '38']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'34'", "'33'"]
'0'
'34'
'33'
['0', '34', '33']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'0'"]
'33'
'34'
'0'
['33', '34', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="76" ssid="17">Finally, word features, fm, for modifiers are predicted based on the modifier, cm, the partof-speech tag of the modifier word , t„„ the part-of-speech tag of the head word th, the head word itself, wh, and whether or not the modifier head word, w„„ is known or unknown.</S><S sid="63" ssid="4">Head words, along with their part-of-speech tags and features, are generated for each modifier as soon as the modifier is created.</S><S sid="22" ssid="5">There is no opportunity for a later stage, such as parsing, to influence or correct an earlier stage such as part-of-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'76'", "'63'", "'22'"]
'76'
'63'
'22'
['76', '63', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="23" ssid="6">An integrated model can limit the propagation of errors by making all decisions jointly.</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'104'"]
'0'
'23'
'104'
['0', '23', '104']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'33'", "'58'"]
'34'
'33'
'58'
['34', '33', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'6'"]
'0'
'2'
'6'
['0', '2', '6']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'0'", "'6'"]
'33'
'0'
'6'
['33', '0', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'0'", "'34'"]
'33'
'0'
'34'
['33', '0', '34']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'0'", "'58'"]
'34'
'0'
'58'
['34', '0', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'33'", "'0'"]
'34'
'33'
'0'
['34', '33', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="76" ssid="17">Finally, word features, fm, for modifiers are predicted based on the modifier, cm, the partof-speech tag of the modifier word , t„„ the part-of-speech tag of the head word th, the head word itself, wh, and whether or not the modifier head word, w„„ is known or unknown.</S><S sid="63" ssid="4">Head words, along with their part-of-speech tags and features, are generated for each modifier as soon as the modifier is created.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'76'", "'63'", "'0'"]
'76'
'63'
'0'
['76', '63', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S><S sid="11" ssid="1">We evaluated the new approach to information extraction on two of the tasks of the Seventh Message Understanding Conference (MUC-7) and reported in (Marsh, 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'104'", "'11'"]
'0'
'104'
'11'
['0', '104', '11']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'104'", "'58'"]
'0'
'104'
'58'
['0', '104', '58']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
dict_values(['Since 1995, a few statistical parsing algorithms have demonstrated a breakthrough in parsing accuracy, as measured against the UPenn TREEBANK as a gold standard.'])
dict_values(['Our integrated model represents syntax and semantics jointly using augmented parse trees.', 'To produce a corpus of augmented parse trees, we used the following multi-step training procedure which exploited the Penn TREEBANK Applying this procedure yielded a new version of the semantically annotated corpus, now annotated with complete augmented trees like that in Figure 3.', 'A Novel Use of Statistical Parsing to Extract Information from Text'])
['system', 'ROUGE-S*', 'Average_R:', '0.00540', '(95%-conf.int.', '0.00540', '-', '0.00540)']
['system', 'ROUGE-S*', 'Average_P:', '0.05128', '(95%-conf.int.', '0.05128', '-', '0.05128)']
['system', 'ROUGE-S*', 'Average_F:', '0.00977', '(95%-conf.int.', '0.00977', '-', '0.00977)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:741', 'P:78', 'F:4']
dict_values(['The detailed probability structure differs, however, in that it was designed to jointly perform part-of-speech tagging, name finding, syntactic parsing, and relation finding in a single process.'])
dict_values(['In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.', 'For example, in the phrase &quot;Lt. Cmdr.', 'Other labels indicate relations among entities.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:210', 'P:153', 'F:0']
dict_values(['We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.'])
dict_values(['A Novel Use of Statistical Parsing to Extract Information from Text', 'In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.', 'Our integrated model represents syntax and semantics jointly using augmented parse trees.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:276', 'P:78', 'F:0']
dict_values(['In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.'])
dict_values(['Finally, word features, fm, for modifiers are predicted based on the modifier, cm, the partof-speech tag of the modifier word , t„„ the part-of-speech tag of the head word th, the head word itself, wh, and whether or not the modifier head word, w„„ is known or unknown.', 'Head words, along with their part-of-speech tags and features, are generated for each modifier as soon as the modifier is created.', 'There is no opportunity for a later stage, such as parsing, to influence or correct an earlier stage such as part-of-speech tagging.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1035', 'P:190', 'F:0']
dict_values(['The detailed probability structure differs, however, in that it was designed to jointly perform part-of-speech tagging, name finding, syntactic parsing, and relation finding in a single process.'])
dict_values(['A Novel Use of Statistical Parsing to Extract Information from Text', 'An integrated model can limit the propagation of errors by making all decisions jointly.', 'We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:153', 'F:0']
dict_values(['In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.'])
dict_values(['A Novel Use of Statistical Parsing to Extract Information from Text', 'In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.', 'In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00135', '(95%-conf.int.', '0.00135', '-', '0.00135)']
['system', 'ROUGE-S*', 'Average_P:', '0.02222', '(95%-conf.int.', '0.02222', '-', '0.02222)']
['system', 'ROUGE-S*', 'Average_F:', '0.00254', '(95%-conf.int.', '0.00254', '-', '0.00254)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:741', 'P:45', 'F:1']
dict_values(['Since 1995, a few statistical parsing algorithms (Magerman, 1995; Collins, 1996 and 1997; Charniak, 1997; Rathnaparki, 1997) demonstrated a breakthrough in parsing accuracy, as measured against the University of Pennsylvania TREEBANK as a gold standard.'])
dict_values(['Our integrated model represents syntax and semantics jointly using augmented parse trees.', 'A Novel Use of Statistical Parsing to Extract Information from Text', 'In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00529', '(95%-conf.int.', '0.00529', '-', '0.00529)']
['system', 'ROUGE-S*', 'Average_P:', '0.00791', '(95%-conf.int.', '0.00791', '-', '0.00791)']
['system', 'ROUGE-S*', 'Average_F:', '0.00634', '(95%-conf.int.', '0.00634', '-', '0.00634)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:253', 'F:2']
dict_values(['In this section, we describe the algorithm that was used to automatically produce augmented trees, starting with a) human-generated semantic annotations and b) machinegenerated syntactic parse trees.'])
dict_values(['Our integrated model represents syntax and semantics jointly using augmented parse trees.', 'A Novel Use of Statistical Parsing to Extract Information from Text', 'In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.'])
['system', 'ROUGE-S*', 'Average_R:', '0.03623', '(95%-conf.int.', '0.03623', '-', '0.03623)']
['system', 'ROUGE-S*', 'Average_P:', '0.08333', '(95%-conf.int.', '0.08333', '-', '0.08333)']
['system', 'ROUGE-S*', 'Average_F:', '0.05051', '(95%-conf.int.', '0.05051', '-', '0.05051)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:276', 'P:120', 'F:10']
dict_values(['We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.'])
dict_values(['In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.', 'A Novel Use of Statistical Parsing to Extract Information from Text', 'Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00246', '(95%-conf.int.', '0.00246', '-', '0.00246)']
['system', 'ROUGE-S*', 'Average_P:', '0.01282', '(95%-conf.int.', '0.01282', '-', '0.01282)']
['system', 'ROUGE-S*', 'Average_F:', '0.00413', '(95%-conf.int.', '0.00413', '-', '0.00413)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:406', 'P:78', 'F:1']
dict_values(['We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.'])
dict_values(['In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.', 'Our integrated model represents syntax and semantics jointly using augmented parse trees.', 'A Novel Use of Statistical Parsing to Extract Information from Text'])
['system', 'ROUGE-S*', 'Average_R:', '0.00362', '(95%-conf.int.', '0.00362', '-', '0.00362)']
['system', 'ROUGE-S*', 'Average_P:', '0.01282', '(95%-conf.int.', '0.01282', '-', '0.01282)']
['system', 'ROUGE-S*', 'Average_F:', '0.00565', '(95%-conf.int.', '0.00565', '-', '0.00565)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:276', 'P:78', 'F:1']
dict_values(['In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.'])
dict_values(['Finally, word features, fm, for modifiers are predicted based on the modifier, cm, the partof-speech tag of the modifier word , t„„ the part-of-speech tag of the head word th, the head word itself, wh, and whether or not the modifier head word, w„„ is known or unknown.', 'Head words, along with their part-of-speech tags and features, are generated for each modifier as soon as the modifier is created.', 'A Novel Use of Statistical Parsing to Extract Information from Text'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:820', 'P:190', 'F:0']
dict_values(['We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction'])
dict_values(['A Novel Use of Statistical Parsing to Extract Information from Text', 'We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.', 'We evaluated the new approach to information extraction on two of the tasks of the Seventh Message Understanding Conference (MUC-7) and reported in (Marsh, 1998).'])
['system', 'ROUGE-S*', 'Average_R:', '0.15726', '(95%-conf.int.', '0.15726', '-', '0.15726)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.27178', '(95%-conf.int.', '0.27178', '-', '0.27178)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:78', 'F:78']
dict_values(['In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.'])
dict_values(['A Novel Use of Statistical Parsing to Extract Information from Text', 'We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.', 'Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05645', '(95%-conf.int.', '0.05645', '-', '0.05645)']
['system', 'ROUGE-S*', 'Average_P:', '0.14737', '(95%-conf.int.', '0.14737', '-', '0.14737)']
['system', 'ROUGE-S*', 'Average_F:', '0.08163', '(95%-conf.int.', '0.08163', '-', '0.08163)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:190', 'F:28']
0.10290384536227812 0.020619999841384618 0.03325769205186391





input/ref/Task1/P11-1060_swastika.csv
input/res/Task1/P11-1060.annv3.csv
parsing: input/ref/Task1/P11-1060_swastika.csv
<S sid="112" ssid="88">Our learning algorithm alternates between (i) using the current parameters &#952; to generate the K-best set &#732;ZL,&#952;(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.</S>
original cit marker offset is 0
new cit marker offset is 0



['112']
112
['112']
parsed_discourse_facet ['method_citation']
<S sid="112" ssid="88">Our learning algorithm alternates between (i) using the current parameters &#952; to generate the K-best set &#732;ZL,&#952;(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.</S>
original cit marker offset is 0
new cit marker offset is 0



['112']
112
['112']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="1">We first present a basic version (Section 2.1) of dependency-based compositional semantics (DCS), which captures the core idea of using trees to represent formal semantics.</S>
original cit marker offset is 0
new cit marker offset is 0



['25']
25
['25']
parsed_discourse_facet ['aim_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



['21']
21
['21']
parsed_discourse_facet ['aim_citation']
<S sid="25" ssid="1">We first present a basic version (Section 2.1) of dependency-based compositional semantics (DCS), which captures the core idea of using trees to represent formal semantics.</S>
original cit marker offset is 0
new cit marker offset is 0



['25']
25
['25']
parsed_discourse_facet ['aim_citation']
    <S sid="148" ssid="33">This bootstrapping behavior occurs naturally: The &#8220;easy&#8221; examples are processed first, where easy is defined by the ability of the current model to generate the correct answer using any tree. with scope variation.</S>
original cit marker offset is 0
new cit marker offset is 0



['148']
148
['148']
parsed_discourse_facet ['method_citation']
    <S sid="13" ssid="9">We want to induce latent logical forms z (and parameters 0) given only question-answer pairs (x, y), which is much cheaper to obtain than (x, z) pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



['13']
13
['13']
parsed_discourse_facet ['result_citation']
<S sid="112" ssid="88">Our learning algorithm alternates between (i) using the current parameters &#952; to generate the K-best set &#732;ZL,&#952;(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.</S>
original cit marker offset is 0
new cit marker offset is 0



['112']
112
['112']
parsed_discourse_facet ['result_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



['21']
21
['21']
parsed_discourse_facet ['aim_citation']
<S sid="47" ssid="23">This algorithm is linear in the number of nodes times the size of the denotations.1 Now the dual importance of trees in DCS is clear: We have seen that trees parallel syntactic dependency structure, which will facilitate parsing.</S>
original cit marker offset is 0
new cit marker offset is 0



['47']
47
['47']
parsed_discourse_facet ['method_citation']
<S sid="112" ssid="88">Our learning algorithm alternates between (i) using the current parameters &#952; to generate the K-best set &#732;ZL,&#952;(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.</S>
original cit marker offset is 0
new cit marker offset is 0



['112']
112
['112']
parsed_discourse_facet ['method_citation']
S sid="44" ssid="20">The recurrence is as follows: At each node, we compute the set of tuples v consistent with the predicate at that node (v &#8712; w(p)), and S(x)}, where a set of pairs S is treated as a set-valued function S(x) = {y : (x, y) &#8712; S} with domain S1 = {x : (x, y) &#8712; S}.</S>
original cit marker offset is 0
new cit marker offset is 0



['44']
44
['44']
Error in Reference Offset
<S sid="106" ssid="82">Learning Given a training dataset D containing (x, y) pairs, we define the regularized marginal log-likelihood objective O(&#952;) = E(x,y)ED log p&#952;(JzKw = y  |x, z &#8712; ZL(x)) &#8722; &#955;k&#952;k22, which sums over all DCS trees z that evaluate to the target answer y.</S>
original cit marker offset is 0
new cit marker offset is 0



['106']
106
['106']
parsed_discourse_facet ['aim_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



['21']
21
['21']
parsed_discourse_facet ['aim_citation']
    <S sid="172" ssid="57">Free from the burden It also allows us to easily add new lexical triggers of annotating logical forms, we hope to use our without becoming mired in the semantic formalism. techniques in developing even more accurate and Quantifiers and superlatives significantly compli- broader-coverage language understanding systems. cate scoping in lambda calculus, and often type rais- Acknowledgments We thank Luke Zettlemoyer ing needs to be employed.</S>
original cit marker offset is 0
new cit marker offset is 0



['172']
172
['172']
parsed_discourse_facet ['result_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



['21']
21
['21']
parsed_discourse_facet ['aim_citation']
<S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



['171']
171
['171']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P11-1060.annv3.csv
<S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'3'", "'2'"]
'0'
'3'
'2'
['0', '3', '2']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="156" ssid="41">There has been a fair amount of past work on no predicates), confusion of Washington state with this topic: Liang et al. (2010) induces combinatory Washington D.C., learning the wrong lexical asso- logic programs in a non-linguistic setting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'3'", "'156'"]
'2'
'3'
'156'
['2', '3', '156']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="169" ssid="54">The combination rules are encoded in the tems, despite using no annotated logical forms.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'22'", "'6'"]
'169'
'22'
'6'
['169', '22', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="45" ssid="21">The logical forms in DCS are called DCS trees, where nodes are labeled with predicates, and edges are labeled with relations.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'", "'54'", "'21'"]
'45'
'54'
'21'
['45', '54', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'167'", "'54'", "'21'"]
'167'
'54'
'21'
['167', '54', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'0'", "'3'"]
'149'
'0'
'3'
['149', '0', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="163" ssid="48">Feedback from the context; for example, the lexical entry for borders world has been used to guide both syntactic parsing is S\NP/NP : Ay.Ax.border(x, y), which means (Schuler, 2003) and semantic parsing (Popescu et borders looks right for the first argument and left al., 2003; Clarke et al., 2010).</S><S sid="52" ssid="28">The denotation of the middle node is {s}, where s is all major cities.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'163'", "'52'"]
'3'
'163'
'52'
['3', '163', '52']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="169" ssid="54">The combination rules are encoded in the tems, despite using no annotated logical forms.</S><S sid="117" ssid="2">In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'117'", "'6'"]
'169'
'117'
'6'
['169', '117', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="117" ssid="2">In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="35" ssid="11">Although a DCS tree is a logical form, note that it looks like a syntactic dependency tree with predicates in place of words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'117'", "'22'", "'35'"]
'117'
'22'
'35'
['117', '22', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S><S sid="132" ssid="17">Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'6'", "'132'"]
'2'
'6'
'132'
['2', '6', '132']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'0'", "'171'"]
'21'
'0'
'171'
['21', '0', '171']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S><S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'21'", "'149'"]
'0'
'21'
'149'
['0', '21', '149']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'54'", "'167'"]
'149'
'54'
'167'
['149', '54', '167']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="85" ssid="61">Extraction allows us to return the set of consistent values of a marked non-root node.</S><S sid="42" ssid="18">The denotation JzKw (z evaluated on w) is the set of consistent values of the root node (see Figure 2 for an example).</S><S sid="38" ssid="14">Let us start by considering a DCS tree z with only join relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'42'", "'38'"]
'85'
'42'
'38'
['85', '42', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S><S sid="1" ssid="1">Compositional question answering begins by mapping questions to logical forms, but training a semantic parser to perform this mapping typically requires the costly annotation of the target logical forms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'171'", "'1'"]
'3'
'171'
'1'
['3', '171', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'167'", "'54'"]
'149'
'167'
'54'
['149', '167', '54']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="172" ssid="57">Free from the burden It also allows us to easily add new lexical triggers of annotating logical forms, we hope to use our without becoming mired in the semantic formalism. techniques in developing even more accurate and Quantifiers and superlatives significantly compli- broader-coverage language understanding systems. cate scoping in lambda calculus, and often type rais- Acknowledgments We thank Luke Zettlemoyer ing needs to be employed.</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="161" ssid="46">CCG (Steedman, 2000), in which semantic pars- The integration of natural language with denotaing is driven from the lexicon.</S>
original cit marker offset is 0
new cit marker offset is 0



["'172'", "'0'", "'161'"]
'172'
'0'
'161'
['172', '0', '161']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S>
original cit marker offset is 0
new cit marker offset is 0



["'22'", "'6'", "'0'"]
'22'
'6'
'0'
['22', '6', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="48" ssid="24">In addition, trees enable efficient computation, thereby establishing a new connection between dependency syntax and efficient semantic evaluation.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'22'", "'171'"]
'48'
'22'
'171'
['48', '22', '171']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['Our learning algorithm alternates between (i) using the current parameters &#952; to generate the K-best set &#732;ZL,&#952;(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.'])
dict_values(['Learning Dependency-Based Compositional Semantics', 'In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.', 'In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00189', '(95%-conf.int.', '0.00189', '-', '0.00189)']
['system', 'ROUGE-S*', 'Average_P:', '0.00333', '(95%-conf.int.', '0.00333', '-', '0.00333)']
['system', 'ROUGE-S*', 'Average_F:', '0.00242', '(95%-conf.int.', '0.00242', '-', '0.00242)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:300', 'F:1']
dict_values(['The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).'])
dict_values(['In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.', 'A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.', 'The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).'])
['system', 'ROUGE-S*', 'Average_R:', '0.15766', '(95%-conf.int.', '0.15766', '-', '0.15766)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.27237', '(95%-conf.int.', '0.27237', '-', '0.27237)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:105', 'F:105']
dict_values(['We first present a basic version (Section 2.1) of dependency-based compositional semantics (DCS), which captures the core idea of using trees to represent formal semantics.'])
dict_values(['Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.', 'Learning Dependency-Based Compositional Semantics', 'In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02852', '(95%-conf.int.', '0.02852', '-', '0.02852)']
['system', 'ROUGE-S*', 'Average_P:', '0.09357', '(95%-conf.int.', '0.09357', '-', '0.09357)']
['system', 'ROUGE-S*', 'Average_F:', '0.04372', '(95%-conf.int.', '0.04372', '-', '0.04372)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:171', 'F:16']
dict_values(['This bootstrapping behavior occurs naturally: The &#8220;easy&#8221; examples are processed first, where easy is defined by the ability of the current model to generate the correct answer using any tree. with scope variation.'])
dict_values(['The combination rules are encoded in the tems, despite using no annotated logical forms.', 'In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.', 'Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:210', 'F:0']
dict_values(['We want to induce latent logical forms z (and parameters 0) given only question-answer pairs (x, y), which is much cheaper to obtain than (x, z) pairs.'])
dict_values(['In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.', 'The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.', 'Although a DCS tree is a logical form, note that it looks like a syntactic dependency tree with predicates in place of words.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00853', '(95%-conf.int.', '0.00853', '-', '0.00853)']
['system', 'ROUGE-S*', 'Average_P:', '0.09091', '(95%-conf.int.', '0.09091', '-', '0.09091)']
['system', 'ROUGE-S*', 'Average_F:', '0.01560', '(95%-conf.int.', '0.01560', '-', '0.01560)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:703', 'P:66', 'F:6']
dict_values(['Our learning algorithm alternates between (i) using the current parameters &#952; to generate the K-best set &#732;ZL,&#952;(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.'])
dict_values(['In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.', 'Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).', 'Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00122', '(95%-conf.int.', '0.00122', '-', '0.00122)']
['system', 'ROUGE-S*', 'Average_P:', '0.00333', '(95%-conf.int.', '0.00333', '-', '0.00333)']
['system', 'ROUGE-S*', 'Average_F:', '0.00179', '(95%-conf.int.', '0.00179', '-', '0.00179)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:820', 'P:300', 'F:1']
dict_values(['Our learning algorithm alternates between (i) using the current parameters &#952; to generate the K-best set &#732;ZL,&#952;(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.'])
dict_values(['Extraction allows us to return the set of consistent values of a marked non-root node.', 'The denotation JzKw (z evaluated on w) is the set of consistent values of the root node (see Figure 2 for an example).', 'Let us start by considering a DCS tree z with only join relations.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00791', '(95%-conf.int.', '0.00791', '-', '0.00791)']
['system', 'ROUGE-S*', 'Average_P:', '0.00667', '(95%-conf.int.', '0.00667', '-', '0.00667)']
['system', 'ROUGE-S*', 'Average_F:', '0.00723', '(95%-conf.int.', '0.00723', '-', '0.00723)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:253', 'P:300', 'F:2']
dict_values(['The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).'])
dict_values(['Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.', 'In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.', 'A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:105', 'F:0']
dict_values(['Free from the burden It also allows us to easily add new lexical triggers of annotating logical forms, we hope to use our without becoming mired in the semantic formalism. techniques in developing even more accurate and Quantifiers and superlatives significantly compli- broader-coverage language understanding systems. cate scoping in lambda calculus, and often type rais- Acknowledgments We thank Luke Zettlemoyer ing needs to be employed.'])
dict_values(['Free from the burden It also allows us to easily add new lexical triggers of annotating logical forms, we hope to use our without becoming mired in the semantic formalism. techniques in developing even more accurate and Quantifiers and superlatives significantly compli- broader-coverage language understanding systems. cate scoping in lambda calculus, and often type rais- Acknowledgments We thank Luke Zettlemoyer ing needs to be employed.', 'Learning Dependency-Based Compositional Semantics', 'CCG (Steedman, 2000), in which semantic pars- The integration of natural language with denotaing is driven from the lexicon.'])
['system', 'ROUGE-S*', 'Average_R:', '0.47511', '(95%-conf.int.', '0.47511', '-', '0.47511)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.64417', '(95%-conf.int.', '0.64417', '-', '0.64417)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1326', 'P:630', 'F:630']
dict_values(['The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).'])
dict_values(['The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.', 'Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).', 'Learning Dependency-Based Compositional Semantics'])
['system', 'ROUGE-S*', 'Average_R:', '0.01502', '(95%-conf.int.', '0.01502', '-', '0.01502)']
['system', 'ROUGE-S*', 'Average_P:', '0.09524', '(95%-conf.int.', '0.09524', '-', '0.09524)']
['system', 'ROUGE-S*', 'Average_F:', '0.02594', '(95%-conf.int.', '0.02594', '-', '0.02594)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:105', 'F:10']
dict_values(['This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.'])
dict_values(['In addition, trees enable efficient computation, thereby establishing a new connection between dependency syntax and efficient semantic evaluation.', 'The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.', 'This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.'])
['system', 'ROUGE-S*', 'Average_R:', '0.14902', '(95%-conf.int.', '0.14902', '-', '0.14902)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.25939', '(95%-conf.int.', '0.25939', '-', '0.25939)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1275', 'P:190', 'F:190']
0.2993681790966529 0.0768072720290248 0.11569363531187606





input/ref/Task1/P08-1043_sweta.csv
input/res/Task1/P08-1043.annv3.csv
parsing: input/ref/Task1/P08-1043_sweta.csv
<S sid="156" ssid="34">To evaluate the performance on the segmentation task, we report SEG, the standard harmonic means for segmentation Precision and Recall F1 (as defined in Bar-Haim et al. (2005); Tsarfaty (2006)) as well as the segmentation accuracy SEGTok measure indicating the percentage of input tokens assigned the correct exact segmentation (as reported by Cohen and Smith (2007)).</S>
original cit marker offset is 0
new cit marker offset is 0



["156'"]
156'
['156']
parsed_discourse_facet ['method_citation']
<S sid="4" ssid="4">Using a treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling technique our model outperforms previous pipelined, integrated or factorized systems for Hebrew morphological and syntactic processing, yielding an error reduction of 12% over the best published results so far.</S>
original cit marker offset is 0
new cit marker offset is 0



["4'"]
4'
['4']
parsed_discourse_facet ['method_citation']
<S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S>
original cit marker offset is 0
new cit marker offset is 0



["70'"]
70'
['70']
parsed_discourse_facet ['method_citation']
<S sid="3" ssid="3">Here we propose a single joint model for performing both morphological segmentation and syntactic disambiguation which bypasses the associated circularity.</S>
original cit marker offset is 0
new cit marker offset is 0



["3'"]
3'
['3']
parsed_discourse_facet ['method_citation']
<S sid="51" ssid="9">Tsarfaty (2006) used a morphological analyzer (Segal, 2000), a PoS tagger (Bar-Haim et al., 2005), and a general purpose parser (Schmid, 2000) in an integrated framework in which morphological and syntactic components interact to share information, leading to improved performance on the joint task.</S>
original cit marker offset is 0
new cit marker offset is 0



["51'"]
51'
['51']
parsed_discourse_facet ['method_citation']
<S sid="107" ssid="39">Firstly, Hebrew unknown tokens are doubly unknown: each unknown token may correspond to several segmentation possibilities, and each segment in such sequences may be able to admit multiple PoS tags.</S>
original cit marker offset is 0
new cit marker offset is 0



["107'"]
107'
['107']
parsed_discourse_facet ['method_citation']
<S sid="14" ssid="10">The input for the segmentation task is however highly ambiguous for Semitic languages, and surface forms (tokens) may admit multiple possible analyses as in (BarHaim et al., 2007; Adler and Elhadad, 2006).</S>
original cit marker offset is 0
new cit marker offset is 0



["14'"]
14'
['14']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="12">The current work treats both segmental and super-segmental phenomena, yet we note that there may be more adequate ways to treat supersegmental phenomena assuming Word-Based morphology as we explore in (Tsarfaty and Goldberg, 2008).</S>
original cit marker offset is 0
new cit marker offset is 0



["33'"]
33'
['33']
parsed_discourse_facet ['method_citation']
<S sid="53" ssid="11">Both (Tsarfaty, 2006; Cohen and Smith, 2007) have shown that a single integrated framework outperforms a completely streamlined implementation, yet neither has shown a single generative model which handles both tasks.</S>
original cit marker offset is 0
new cit marker offset is 0



["53'"]
53'
['53']
parsed_discourse_facet ['method_citation']
 <S sid="48" ssid="6">Tsarfaty (2006) was the first to demonstrate that fully automatic Hebrew parsing is feasible using the newly available 5000 sentences treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["48'"]
48'
['48']
parsed_discourse_facet ['method_citation']
<S sid="141" ssid="19">This analyzer setting is similar to that of (Cohen and Smith, 2007), and models using it are denoted nohsp, Parser and Grammar We used BitPar (Schmid, 2004), an efficient general purpose parser,10 together with various treebank grammars to parse the input sentences and propose compatible morphological segmentation and syntactic analysis.</S>
original cit marker offset is 0
new cit marker offset is 0



["141'"]
141'
['141']
parsed_discourse_facet ['method_citation']
<S sid="188" ssid="2">The overall performance of our joint framework demonstrates that a probability distribution obtained over mere syntactic contexts using a Treebank grammar and a data-driven lexicon outperforms upper bounds proposed by previous joint disambiguation systems and achieves segmentation and parsing results on a par with state-of-the-art standalone applications results.</S>
original cit marker offset is 0
new cit marker offset is 0



["188'"]
188'
['188']
parsed_discourse_facet ['method_citation']
<S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S>
original cit marker offset is 0
new cit marker offset is 0



["94'"]
94'
['94']
parsed_discourse_facet ['method_citation']
<S sid="134" ssid="12">Such resources exist for Hebrew (Itai et al., 2006), but unfortunately use a tagging scheme which is incompatible with the one of the Hebrew Treebank.s For this reason, we use a data-driven morphological analyzer derived from the training data similar to (Cohen and Smith, 2007).</S>
original cit marker offset is 0
new cit marker offset is 0



["134'"]
134'
['134']
parsed_discourse_facet ['method_citation']
    <S sid="156" ssid="34">To evaluate the performance on the segmentation task, we report SEG, the standard harmonic means for segmentation Precision and Recall F1 (as defined in Bar-Haim et al. (2005); Tsarfaty (2006)) as well as the segmentation accuracy SEGTok measure indicating the percentage of input tokens assigned the correct exact segmentation (as reported by Cohen and Smith (2007)).</S>
original cit marker offset is 0
new cit marker offset is 0



["156'"]
156'
['156']
parsed_discourse_facet ['method_citation']
<S sid="5" ssid="1">Current state-of-the-art broad-coverage parsers assume a direct correspondence between the lexical items ingrained in the proposed syntactic analyses (the yields of syntactic parse-trees) and the spacedelimited tokens (henceforth, &#8216;tokens&#8217;) that constitute the unanalyzed surface forms (utterances).</S>
original cit marker offset is 0
new cit marker offset is 0



["5'"]
5'
['5']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P08-1043.annv3.csv
<S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="189" ssid="3">Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'", "'69'", "'189'"]
'94'
'69'
'189'
['94', '69', '189']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="189" ssid="3">Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.</S><S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'189'", "'21'"]
'186'
'189'
'21'
['186', '189', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'70'", "'69'"]
'79'
'70'
'69'
['79', '70', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S><S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'186'", "'187'"]
'0'
'186'
'187'
['0', '186', '187']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'0'", "'187'"]
'186'
'0'
'187'
['186', '0', '187']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'69'", "'21'"]
'79'
'69'
'21'
['79', '69', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'70'", "'69'"]
'79'
'70'
'69'
['79', '70', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="85" ssid="17">The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S><S sid="191" ssid="5">In the current work morphological analyses and lexical probabilities are derived from a small Treebank, which is by no means the best way to go.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'69'", "'191'"]
'85'
'69'
'191'
['85', '69', '191']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="187" ssid="1">Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'187'", "'89'"]
'186'
'187'
'89'
['186', '187', '89']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="186" ssid="24">This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'186'", "'89'", "'0'"]
'186'
'89'
'0'
['186', '89', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="70" ssid="2">Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.</S><S sid="0" ssid="0">A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'89'", "'70'", "'0'"]
'89'
'70'
'0'
['89', '70', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation']
<S sid="21" ssid="17">Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2</S><S sid="146" ssid="24">Given a PCFG grammar G and a lattice L with nodes n1 ... nk, we construct the weighted grammar GL as follows: for every arc (lexeme) l E L from node ni to node nj, we add to GL the rule [l --+ tni, tni+1, ... , tnj_1] with a probability of 1 (this indicates the lexeme l spans from node ni to node nj).</S><S sid="3" ssid="3">Here we propose a single joint model for performing both morphological segmentation and syntactic disambiguation which bypasses the associated circularity.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'146'", "'3'"]
'21'
'146'
'3'
['21', '146', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S><S sid="94" ssid="26">Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.</S><S sid="69" ssid="1">We represent all morphological analyses of a given utterance using a lattice structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'94'", "'69'"]
'79'
'94'
'69'
['79', '94', '69']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="188" ssid="2">The overall performance of our joint framework demonstrates that a probability distribution obtained over mere syntactic contexts using a Treebank grammar and a data-driven lexicon outperforms upper bounds proposed by previous joint disambiguation systems and achieves segmentation and parsing results on a par with state-of-the-art standalone applications results.</S><S sid="89" ssid="21">Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.</S><S sid="191" ssid="5">In the current work morphological analyses and lexical probabilities are derived from a small Treebank, which is by no means the best way to go.</S>
original cit marker offset is 0
new cit marker offset is 0



["'188'", "'89'", "'191'"]
'188'
'89'
'191'
['188', '89', '191']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="85" ssid="17">The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.</S><S sid="75" ssid="7">Every token is independent of the others, and the sentence lattice is in fact a concatenation of smaller lattices, one for each token.</S><S sid="79" ssid="11">There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'75'", "'79'"]
'85'
'75'
'79'
['85', '75', '79']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="82" ssid="14">In sequential tagging models such as (Adler and Elhadad, 2006; Bar-Haim et al., 2007; Smith et al., 2005) weights are assigned according to a language model The input for the joint task is a sequence W = w1, ... , wn of space-delimited tokens.</S><S sid="84" ssid="16">The entries in such a lexicon may be thought of as meaningful surface segments paired up with their PoS tags li = (si, pi), but note that a surface segment s need not be a space-delimited token.</S><S sid="135" ssid="13">We construct a mapping from all the space-delimited tokens seen in the training sentences to their corresponding analyses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'82'", "'84'", "'135'"]
'82'
'84'
'135'
['82', '84', '135']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['To evaluate the performance on the segmentation task, we report SEG, the standard harmonic means for segmentation Precision and Recall F1 (as defined in Bar-Haim et al. (2005); Tsarfaty (2006)) as well as the segmentation accuracy SEGTok measure indicating the percentage of input tokens assigned the correct exact segmentation (as reported by Cohen and Smith (2007)).'])
dict_values(['Our use of an unweighted lattice reflects our belief that all the segmentations of the given input sentence are a-priori equally likely; the only reason to prefer one segmentation over the another is due to the overall syntactic context which is modeled via the PCFG derivations.', 'We represent all morphological analyses of a given utterance using a lattice structure.', 'Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00711', '(95%-conf.int.', '0.00711', '-', '0.00711)']
['system', 'ROUGE-S*', 'Average_P:', '0.00794', '(95%-conf.int.', '0.00794', '-', '0.00794)']
['system', 'ROUGE-S*', 'Average_F:', '0.00750', '(95%-conf.int.', '0.00750', '-', '0.00750)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:703', 'P:630', 'F:5']
dict_values(['Using a treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling technique our model outperforms previous pipelined, integrated or factorized systems for Hebrew morphological and syntactic processing, yielding an error reduction of 12% over the best published results so far.'])
dict_values(['This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.', 'Better grammars are shown here to improve performance on both morphological and syntactic tasks, providing support for the advantage of a joint framework over pipelined or factorized ones.', 'Morphological segmentation decisions in our model are delegated to a lexeme-based PCFG and we show that using a simple treebank grammar, a data-driven lexicon, and a linguistically motivated unknown-tokens handling our model outperforms (Tsarfaty, 2006) and (Cohen and Smith, 2007) on the joint task and achieves state-of-the-art results on a par with current respective standalone models.2'])
['system', 'ROUGE-S*', 'Average_R:', '0.04569', '(95%-conf.int.', '0.04569', '-', '0.04569)']
['system', 'ROUGE-S*', 'Average_P:', '0.25926', '(95%-conf.int.', '0.25926', '-', '0.25926)']
['system', 'ROUGE-S*', 'Average_F:', '0.07769', '(95%-conf.int.', '0.07769', '-', '0.07769)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2145', 'P:378', 'F:98']
dict_values(['Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.'])
dict_values(['There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.', 'Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.', 'We represent all morphological analyses of a given utterance using a lattice structure.'])
['system', 'ROUGE-S*', 'Average_R:', '0.24000', '(95%-conf.int.', '0.24000', '-', '0.24000)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.38710', '(95%-conf.int.', '0.38710', '-', '0.38710)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:78', 'F:78']
dict_values(['Here we propose a single joint model for performing both morphological segmentation and syntactic disambiguation which bypasses the associated circularity.'])
dict_values(['A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing', 'This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.', 'Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02834', '(95%-conf.int.', '0.02834', '-', '0.02834)']
['system', 'ROUGE-S*', 'Average_P:', '0.38182', '(95%-conf.int.', '0.38182', '-', '0.38182)']
['system', 'ROUGE-S*', 'Average_F:', '0.05276', '(95%-conf.int.', '0.05276', '-', '0.05276)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:741', 'P:55', 'F:21']
dict_values(['Tsarfaty (2006) used a morphological analyzer (Segal, 2000), a PoS tagger (Bar-Haim et al., 2005), and a general purpose parser (Schmid, 2000) in an integrated framework in which morphological and syntactic components interact to share information, leading to improved performance on the joint task.'])
dict_values(['This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.', 'A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing', 'Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02024', '(95%-conf.int.', '0.02024', '-', '0.02024)']
['system', 'ROUGE-S*', 'Average_P:', '0.03448', '(95%-conf.int.', '0.03448', '-', '0.03448)']
['system', 'ROUGE-S*', 'Average_F:', '0.02551', '(95%-conf.int.', '0.02551', '-', '0.02551)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:741', 'P:435', 'F:15']
dict_values(['The input for the segmentation task is however highly ambiguous for Semitic languages, and surface forms (tokens) may admit multiple possible analyses as in (BarHaim et al., 2007; Adler and Elhadad, 2006).'])
dict_values(['There, a lattice is used to represent the possible sentences resulting from an interpretation of an acoustic model.', 'Each lattice arc corresponds to a segment and its corresponding PoS tag, and a path through the lattice corresponds to a specific morphological segmentation of the utterance.', 'We represent all morphological analyses of a given utterance using a lattice structure.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00308', '(95%-conf.int.', '0.00308', '-', '0.00308)']
['system', 'ROUGE-S*', 'Average_P:', '0.00585', '(95%-conf.int.', '0.00585', '-', '0.00585)']
['system', 'ROUGE-S*', 'Average_F:', '0.00403', '(95%-conf.int.', '0.00403', '-', '0.00403)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:171', 'F:1']
dict_values(['The current work treats both segmental and super-segmental phenomena, yet we note that there may be more adequate ways to treat supersegmental phenomena assuming Word-Based morphology as we explore in (Tsarfaty and Goldberg, 2008).'])
dict_values(['The Input The set of analyses for a token is thus represented as a lattice in which every arc corresponds to a specific lexeme l, as shown in Figure 1.', 'We represent all morphological analyses of a given utterance using a lattice structure.', 'In the current work morphological analyses and lexical probabilities are derived from a small Treebank, which is by no means the best way to go.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00739', '(95%-conf.int.', '0.00739', '-', '0.00739)']
['system', 'ROUGE-S*', 'Average_P:', '0.01429', '(95%-conf.int.', '0.01429', '-', '0.01429)']
['system', 'ROUGE-S*', 'Average_F:', '0.00974', '(95%-conf.int.', '0.00974', '-', '0.00974)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:406', 'P:210', 'F:3']
dict_values(['Both (Tsarfaty, 2006; Cohen and Smith, 2007) have shown that a single integrated framework outperforms a completely streamlined implementation, yet neither has shown a single generative model which handles both tasks.'])
dict_values(['This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.', 'Employing a PCFG-based generative framework to make both syntactic and morphological disambiguation decisions is not only theoretically clean and linguistically justified and but also probabilistically apropriate and empirically sound.', 'Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00245', '(95%-conf.int.', '0.00245', '-', '0.00245)']
['system', 'ROUGE-S*', 'Average_P:', '0.01754', '(95%-conf.int.', '0.01754', '-', '0.01754)']
['system', 'ROUGE-S*', 'Average_F:', '0.00430', '(95%-conf.int.', '0.00430', '-', '0.00430)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1225', 'P:171', 'F:3']
dict_values(['Tsarfaty (2006) was the first to demonstrate that fully automatic Hebrew parsing is feasible using the newly available 5000 sentences treebank.'])
dict_values(['This fully generative model caters for real interaction between the syntactic and morphological levels as a part of a single coherent process.', 'Each connected path (l1 ... lk) E L corresponds to one morphological segmentation possibility of W. The Parser Given a sequence of input tokens W = w1 ... wn and a morphological analyzer, we look for the most probable parse tree π s.t.', 'A Single Generative Model for Joint Morphological Segmentation and Syntactic Parsing'])
['system', 'ROUGE-S*', 'Average_R:', '0.00128', '(95%-conf.int.', '0.00128', '-', '0.00128)']
['system', 'ROUGE-S*', 'Average_P:', '0.01282', '(95%-conf.int.', '0.01282', '-', '0.01282)']
['system', 'ROUGE-S*', 'Average_F:', '0.00233', '(95%-conf.int.', '0.00233', '-', '0.00233)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:780', 'P:78', 'F:1']
dict_values(['Current state-of-the-art broad-coverage parsers assume a direct correspondence between the lexical items ingrained in the proposed syntactic analyses (the yields of syntactic parse-trees) and the spacedelimited tokens (henceforth, &#8216;tokens&#8217;) that constitute the unanalyzed surface forms (utterances).'])
dict_values(['In sequential tagging models such as (Adler and Elhadad, 2006; Bar-Haim et al., 2007; Smith et al., 2005) weights are assigned according to a language model The input for the joint task is a sequence W = w1, ... , wn of space-delimited tokens.', 'The entries in such a lexicon may be thought of as meaningful surface segments paired up with their PoS tags li = (si, pi), but note that a surface segment s need not be a space-delimited token.', 'We construct a mapping from all the space-delimited tokens seen in the training sentences to their corresponding analyses.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00226', '(95%-conf.int.', '0.00226', '-', '0.00226)']
['system', 'ROUGE-S*', 'Average_P:', '0.00690', '(95%-conf.int.', '0.00690', '-', '0.00690)']
['system', 'ROUGE-S*', 'Average_F:', '0.00341', '(95%-conf.int.', '0.00341', '-', '0.00341)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1326', 'P:435', 'F:3']
0.17408999825910002 0.03578399964216 0.05743699942563001





input/ref/Task1/D10-1044_sweta.csv
input/res/Task1/D10-1044.annv3.csv
parsing: input/ref/Task1/D10-1044_sweta.csv
<S sid="4" ssid="1">Domain adaptation is a common concern when optimizing empirical NLP applications.</S>
original cit marker offset is 0
new cit marker offset is 0



["4'"]
4'
['4']
parsed_discourse_facet ['method_citation']
<S sid="132" ssid="1">We have already mentioned the closely related work by Matsoukas et al (2009) on discriminative corpus weighting, and Jiang and Zhai (2007) on (nondiscriminative) instance weighting.</S>
original cit marker offset is 0
new cit marker offset is 0



["132'"]
132'
['132']
parsed_discourse_facet ['method_citation']
<S sid="7" ssid="4">For developers of Statistical Machine Translation (SMT) systems, an additional complication is the heterogeneous nature of SMT components (word-alignment model, language model, translation model, etc.</S>
original cit marker offset is 0
new cit marker offset is 0



["7'"]
7'
['7']
parsed_discourse_facet ['method_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["62'"]
62'
['62']
parsed_discourse_facet ['method_citation']
<S sid="50" ssid="14">Linear weights are difficult to incorporate into the standard MERT procedure because they are &#8220;hidden&#8221; within a top-level probability that represents the linear combination.1 Following previous work (Foster and Kuhn, 2007), we circumvent this problem by choosing weights to optimize corpus loglikelihood, which is roughly speaking the training criterion used by the LM and TM themselves.</S>
original cit marker offset is 0
new cit marker offset is 0



["50'"]
50'
['50']
parsed_discourse_facet ['method_citation']
<S sid="152" ssid="9">We will also directly compare with a baseline similar to the Matsoukas et al approach in order to measure the benefit from weighting phrase pairs (or ngrams) rather than full sentences.</S>
original cit marker offset is 0
new cit marker offset is 0



["152'"]
152'
['152']
parsed_discourse_facet ['method_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["144'"]
144'
['144']
parsed_discourse_facet ['method_citation']
 <S sid="9" ssid="6">In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material&#8212;though adequate for reasonable performance&#8212;is also available.</S>
original cit marker offset is 0
new cit marker offset is 0



["9'"]
9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="75" ssid="12">However, it is robust, efficient, and easy to implement.4 To perform the maximization in (7), we used the popular L-BFGS algorithm (Liu and Nocedal, 1989), which requires gradient information.</S>
original cit marker offset is 0
new cit marker offset is 0



["75'"]
75'
['75']
parsed_discourse_facet ['method_citation']
<S sid="28" ssid="25">We train linear mixture models for conditional phrase pair probabilities over IN and OUT so as to maximize the likelihood of an empirical joint phrase-pair distribution extracted from a development set.</S>
original cit marker offset is 0
new cit marker offset is 0



["28'"]
28'
['28']
parsed_discourse_facet ['method_citation']
<S sid="97" ssid="1">We carried out translation experiments in two different settings.</S>
original cit marker offset is 0
new cit marker offset is 0



["97'"]
97'
['97']
parsed_discourse_facet ['method_citation']
<S sid="75" ssid="12">However, it is robust, efficient, and easy to implement.4 To perform the maximization in (7), we used the popular L-BFGS algorithm (Liu and Nocedal, 1989), which requires gradient information.</S>
original cit marker offset is 0
new cit marker offset is 0



["75'"]
75'
['75']
parsed_discourse_facet ['method_citation']
<S sid="143" ssid="12">Other work includes transferring latent topic distributions from source to target language for LM adaptation, (Tam et al., 2007) and adapting features at the sentence level to different categories of sentence (Finch and Sumita, 2008).</S>
original cit marker offset is 0
new cit marker offset is 0



["143'"]
143'
['143']
parsed_discourse_facet ['method_citation']
<S sid="153" ssid="10">Finally, we intend to explore more sophisticated instanceweighting features for capturing the degree of generality of phrase pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["153'"]
153'
['153']
parsed_discourse_facet ['method_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["144'"]
144'
['144']
parsed_discourse_facet ['method_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["62'"]
62'
['62']
parsed_discourse_facet ['method_citation']
<S sid="141" ssid="10">Moving beyond directly related work, major themes in SMT adaptation include the IR (Hildebrand et al., 2005; L&#168;u et al., 2007; Zhao et al., 2004) and mixture (Finch and Sumita, 2008; Foster and Kuhn, 2007; Koehn and Schroeder, 2007; L&#168;u et al., 2007) approaches for LMs and TMs described above, as well as methods for exploiting monolingual in-domain text, typically by translating it automatically and then performing self training (Bertoldi and Federico, 2009; Ueffing et al., 2007; Schwenk and Senellart, 2009).</S>
original cit marker offset is 0
new cit marker offset is 0



["141'"]
141'
['141']
parsed_discourse_facet ['method_citation']
 <S sid="28" ssid="25">We train linear mixture models for conditional phrase pair probabilities over IN and OUT so as to maximize the likelihood of an empirical joint phrase-pair distribution extracted from a development set.</S>
original cit marker offset is 0
new cit marker offset is 0



["28'"]
28'
['28']
parsed_discourse_facet ['method_citation']
<S sid="37" ssid="1">Standard SMT systems have a hierarchical parameter structure: top-level log-linear weights are used to combine a small set of complex features, interpreted as log probabilities, many of which have their own internal parameters and objectives.</S>
original cit marker offset is 0
new cit marker offset is 0



["37'"]
37'
['37']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/D10-1044.annv3.csv
<S sid="143" ssid="12">Other work includes transferring latent topic distributions from source to target language for LM adaptation, (Tam et al., 2007) and adapting features at the sentence level to different categories of sentence (Finch and Sumita, 2008).</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="4" ssid="1">Domain adaptation is a common concern when optimizing empirical NLP applications.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'1'", "'4'"]
'143'
'1'
'4'
['143', '1', '4']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="65" ssid="2">Matsoukas et al (2009) generalize it by learning weights on sentence pairs that are used when estimating relative-frequency phrase-pair probabilities.</S><S sid="96" ssid="33">We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'65'", "'96'"]
'68'
'65'
'96'
['68', '65', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="9" ssid="6">In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material—though adequate for reasonable performance—is also available.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'", "'1'", "'9'"]
'144'
'1'
'9'
['144', '1', '9']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'", "'145'", "'1'"]
'62'
'145'
'1'
['62', '145', '1']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S><S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'62'"]
'0'
'23'
'62'
['0', '23', '62']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="65" ssid="2">Matsoukas et al (2009) generalize it by learning weights on sentence pairs that are used when estimating relative-frequency phrase-pair probabilities.</S><S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="67" ssid="4">We extend the Matsoukas et al approach in several ways.</S>
original cit marker offset is 0
new cit marker offset is 0



["'65'", "'68'", "'67'"]
'65'
'68'
'67'
['65', '68', '67']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="18">This highly effective approach is not directly applicable to the multinomial models used for core SMT components, which have no natural method for combining split features, so we rely on an instance-weighting approach (Jiang and Zhai, 2007) to downweight domain-specific examples in OUT.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'145'", "'0'"]
'21'
'145'
'0'
['21', '145', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="148" ssid="5">Mixing, smoothing, and instance-feature weights are learned at the same time using an efficient maximum-likelihood procedure that relies on only a small in-domain development corpus.</S><S sid="97" ssid="1">We carried out translation experiments in two different settings.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'148'", "'97'"]
'145'
'148'
'97'
['145', '148', '97']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S><S sid="117" ssid="21">The natural baseline (baseline) outperforms the pure IN system only for EMEA/EP fren.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'117'", "'62'"]
'0'
'117'
'62'
['0', '117', '62']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="42" ssid="6">The natural baseline approach is to concatenate data from IN and OUT.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="28" ssid="25">We train linear mixture models for conditional phrase pair probabilities over IN and OUT so as to maximize the likelihood of an empirical joint phrase-pair distribution extracted from a development set.</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'145'", "'28'"]
'42'
'145'
'28'
['42', '145', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="84" ssid="21">An alternate approximation to (8) would be to let w,\(s, t) directly approximate pˆI(s, t).</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="32" ssid="29">This is a straightforward technique that is arguably better suited to the adaptation task than the standard method of treating representative IN sentences as queries, then pooling the match results.</S>
original cit marker offset is 0
new cit marker offset is 0



["'84'", "'1'", "'32'"]
'84'
'1'
'32'
['84', '1', '32']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="75" ssid="12">However, it is robust, efficient, and easy to implement.4 To perform the maximization in (7), we used the popular L-BFGS algorithm (Liu and Nocedal, 1989), which requires gradient information.</S><S sid="84" ssid="21">An alternate approximation to (8) would be to let w,\(s, t) directly approximate pˆI(s, t).</S><S sid="63" ssid="27">The number of top-ranked pairs to retain is chosen to optimize dev-set BLEU score.</S>
original cit marker offset is 0
new cit marker offset is 0



["'75'", "'84'", "'63'"]
'75'
'84'
'63'
['75', '84', '63']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="144" ssid="1">In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.</S><S sid="31" ssid="28">For comparison to information-retrieval inspired baselines, eg (L¨u et al., 2007), we select sentences from OUT using language model perplexities from IN.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'", "'31'", "'1'"]
'144'
'31'
'1'
['144', '31', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="22" ssid="19">Within this framework, we use features intended to capture degree of generality, including the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="0" ssid="0">Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation</S>
original cit marker offset is 0
new cit marker offset is 0



["'22'", "'145'", "'0'"]
'22'
'145'
'0'
['22', '145', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="20">Our second contribution is to apply instance weighting at the level of phrase pairs.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'145'", "'1'"]
'23'
'145'
'1'
['23', '145', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S><S sid="62" ssid="26">To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'62'", "'1'"]
'145'
'62'
'1'
['145', '62', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="42" ssid="6">The natural baseline approach is to concatenate data from IN and OUT.</S><S sid="117" ssid="21">The natural baseline (baseline) outperforms the pure IN system only for EMEA/EP fren.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'", "'117'", "'145'"]
'42'
'117'
'145'
['42', '117', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="1" ssid="1">We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.</S><S sid="38" ssid="2">The toplevel weights are trained to maximize a metric such as BLEU on a small development set of approximately 1000 sentence pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'1'", "'38'"]
'68'
'1'
'38'
['68', '1', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="68" ssid="5">First, we learn weights on individual phrase pairs rather than sentences.</S><S sid="40" ssid="4">We focus here instead on adapting the two most important features: the language model (LM), which estimates the probability p(wIh) of a target word w following an ngram h; and the translation models (TM) p(slt) and p(t1s), which give the probability of source phrase s translating to target phrase t, and vice versa.</S><S sid="145" ssid="2">Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'40'", "'145'"]
'68'
'40'
'145'
['68', '40', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['Domain adaptation is a common concern when optimizing empirical NLP applications.'])
dict_values(['Other work includes transferring latent topic distributions from source to target language for LM adaptation, (Tam et al., 2007) and adapting features at the sentence level to different categories of sentence (Finch and Sumita, 2008).', 'We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.', 'Domain adaptation is a common concern when optimizing empirical NLP applications.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02590', '(95%-conf.int.', '0.02590', '-', '0.02590)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.05050', '(95%-conf.int.', '0.05050', '-', '0.05050)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:28', 'F:28']
dict_values(['We have already mentioned the closely related work by Matsoukas et al (2009) on discriminative corpus weighting, and Jiang and Zhai (2007) on (nondiscriminative) instance weighting.'])
dict_values(['First, we learn weights on individual phrase pairs rather than sentences.', 'Matsoukas et al (2009) generalize it by learning weights on sentence pairs that are used when estimating relative-frequency phrase-pair probabilities.', 'We used it to score all phrase pairs in the OUT table, in order to provide a feature for the instance-weighting model.'])
['system', 'ROUGE-S*', 'Average_R:', '0.03226', '(95%-conf.int.', '0.03226', '-', '0.03226)']
['system', 'ROUGE-S*', 'Average_P:', '0.12500', '(95%-conf.int.', '0.12500', '-', '0.12500)']
['system', 'ROUGE-S*', 'Average_F:', '0.05128', '(95%-conf.int.', '0.05128', '-', '0.05128)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:465', 'P:120', 'F:15']
dict_values(['For developers of Statistical Machine Translation (SMT) systems, an additional complication is the heterogeneous nature of SMT components (word-alignment model, language model, translation model, etc.'])
dict_values(['In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.', 'We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.', 'In this paper we study the problem of using a parallel corpus from a background domain (OUT) to improve performance on a target domain (IN) for which a smaller amount of parallel training material—though adequate for reasonable performance—is also available.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00089', '(95%-conf.int.', '0.00089', '-', '0.00089)']
['system', 'ROUGE-S*', 'Average_P:', '0.00585', '(95%-conf.int.', '0.00585', '-', '0.00585)']
['system', 'ROUGE-S*', 'Average_F:', '0.00154', '(95%-conf.int.', '0.00154', '-', '0.00154)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1128', 'P:171', 'F:1']
dict_values(['To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.'])
dict_values(['To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.', 'Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.', 'We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.'])
['system', 'ROUGE-S*', 'Average_R:', '0.14634', '(95%-conf.int.', '0.14634', '-', '0.14634)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.25532', '(95%-conf.int.', '0.25532', '-', '0.25532)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:820', 'P:120', 'F:120']
dict_values(['However, it is robust, efficient, and easy to implement.4 To perform the maximization in (7), we used the popular L-BFGS algorithm (Liu and Nocedal, 1989), which requires gradient information.'])
dict_values(['Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation', 'The natural baseline (baseline) outperforms the pure IN system only for EMEA/EP fren.', 'To approximate these baselines, we implemented a very simple sentence selection algorithm in which parallel sentence pairs from OUT are ranked by the perplexity of their target half according to the IN language model.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00189', '(95%-conf.int.', '0.00189', '-', '0.00189)']
['system', 'ROUGE-S*', 'Average_P:', '0.00735', '(95%-conf.int.', '0.00735', '-', '0.00735)']
['system', 'ROUGE-S*', 'Average_F:', '0.00301', '(95%-conf.int.', '0.00301', '-', '0.00301)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:136', 'F:1']
dict_values(['Finally, we intend to explore more sophisticated instanceweighting features for capturing the degree of generality of phrase pairs.'])
dict_values(['Within this framework, we use features intended to capture degree of generality, including the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.', 'Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.', 'Discriminative Instance Weighting for Domain Adaptation in Statistical Machine Translation'])
['system', 'ROUGE-S*', 'Average_R:', '0.04828', '(95%-conf.int.', '0.04828', '-', '0.04828)']
['system', 'ROUGE-S*', 'Average_P:', '0.38182', '(95%-conf.int.', '0.38182', '-', '0.38182)']
['system', 'ROUGE-S*', 'Average_F:', '0.08571', '(95%-conf.int.', '0.08571', '-', '0.08571)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:55', 'F:21']
dict_values(['In this paper we have proposed an approach for instance-weighting phrase pairs in an out-of-domain corpus in order to improve in-domain performance.'])
dict_values(['Our second contribution is to apply instance weighting at the level of phrase pairs.', 'Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.', 'We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.'])
['system', 'ROUGE-S*', 'Average_R:', '0.04032', '(95%-conf.int.', '0.04032', '-', '0.04032)']
['system', 'ROUGE-S*', 'Average_P:', '0.25641', '(95%-conf.int.', '0.25641', '-', '0.25641)']
['system', 'ROUGE-S*', 'Average_F:', '0.06969', '(95%-conf.int.', '0.06969', '-', '0.06969)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:78', 'F:20']
dict_values(['We train linear mixture models for conditional phrase pair probabilities over IN and OUT so as to maximize the likelihood of an empirical joint phrase-pair distribution extracted from a development set.'])
dict_values(['First, we learn weights on individual phrase pairs rather than sentences.', 'We describe a new approach to SMT adaptation that weights out-of-domain phrase pairs according to their relevance to the target domain, determined by both how similar to it they appear to be, and whether they belong to general language or not.', 'The toplevel weights are trained to maximize a metric such as BLEU on a small development set of approximately 1000 sentence pairs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.03810', '(95%-conf.int.', '0.03810', '-', '0.03810)']
['system', 'ROUGE-S*', 'Average_P:', '0.15686', '(95%-conf.int.', '0.15686', '-', '0.15686)']
['system', 'ROUGE-S*', 'Average_F:', '0.06130', '(95%-conf.int.', '0.06130', '-', '0.06130)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:153', 'F:24']
dict_values(['Standard SMT systems have a hierarchical parameter structure: top-level log-linear weights are used to combine a small set of complex features, interpreted as log probabilities, many of which have their own internal parameters and objectives.'])
dict_values(['First, we learn weights on individual phrase pairs rather than sentences.', 'We focus here instead on adapting the two most important features: the language model (LM), which estimates the probability p(wIh) of a target word w following an ngram h; and the translation models (TM) p(slt) and p(t1s), which give the probability of source phrase s translating to target phrase t, and vice versa.', 'Each out-of-domain phrase pair is characterized by a set of simple features intended to reflect how useful it will be.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00554', '(95%-conf.int.', '0.00554', '-', '0.00554)']
['system', 'ROUGE-S*', 'Average_P:', '0.02165', '(95%-conf.int.', '0.02165', '-', '0.02165)']
['system', 'ROUGE-S*', 'Average_F:', '0.00882', '(95%-conf.int.', '0.00882', '-', '0.00882)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:231', 'F:5']
0.32832666301859265 0.037724444025283965 0.0652411103862099





input/ref/Task1/W06-2932_vardha.csv
input/res/Task1/W06-2932.annv3.csv
parsing: input/ref/Task1/W06-2932_vardha.csv
    <S sid="19" ssid="1">The first stage of our system creates an unlabeled parse y for an input sentence x.</S>
original cit marker offset is 0
new cit marker offset is 0



["'19'"]
'19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="36" ssid="5">However, in a two stage system we can incorporate features over the entire output of the unlabeled parser since that structure is fixed as input.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
    <S sid="57" ssid="5">Performance is measured through unlabeled accuracy, which is the percentage of words that modify the correct head in the dependency graph, and labeled accuracy, which is the percentage of words that modify the correct head and label the dependency edge correctly in the graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'"]
'57'
['57']
parsed_discourse_facet ['method_citation']
    <S sid="76" ssid="14">For instance, sequential labeling improves the labeling of 2This difference was much larger for experiments in which gold standard unlabeled dependencies are used. objects from 81.7%/75.6% to 84.2%/81.3% (labeled precision/recall) and the labeling of subjects from 86.8%/88.2% to 90.5%/90.4% for Swedish.</S>
original cit marker offset is 0
new cit marker offset is 0



["'76'"]
'76'
['76']
parsed_discourse_facet ['method_citation']
 <S sid="54" ssid="2">Based on performance from a held-out section of the training data, we used non-projective parsing algorithms for Czech, Danish, Dutch, German, Japanese, Portuguese and Slovene, and projective parsing algorithms for Arabic, Bulgarian, Chinese, Spanish, Swedish and Turkish.</S>
original cit marker offset is 0
new cit marker offset is 0



["'54'"]
'54'
['54']
parsed_discourse_facet ['method_citation']
    <S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'"]
'104'
['104']
parsed_discourse_facet ['method_citation']
    <S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S>
original cit marker offset is 0
new cit marker offset is 0



["'12'"]
'12'
['12']
parsed_discourse_facet ['method_citation']
    <S sid="57" ssid="5">Performance is measured through unlabeled accuracy, which is the percentage of words that modify the correct head in the dependency graph, and labeled accuracy, which is the percentage of words that modify the correct head and label the dependency edge correctly in the graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'"]
'57'
['57']
parsed_discourse_facet ['method_citation']
    <S sid="58" ssid="6">These results show that the discriminative spanning tree parsing framework (McDonald et al., 2005b; McDonald and Pereira, 2006) is easily adapted across all these languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'58'"]
'58'
['58']
parsed_discourse_facet ['method_citation']
    <S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S>
original cit marker offset is 0
new cit marker offset is 0



["'22'"]
'22'
['22']
parsed_discourse_facet ['method_citation']
    <S sid="41" ssid="10">To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm&#65533;1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm&#8722;1) in the tree y.</S>
original cit marker offset is 0
new cit marker offset is 0



["'41'"]
'41'
['41']
parsed_discourse_facet ['method_citation']
    <S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
    <S sid="64" ssid="2">N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.</S>
original cit marker offset is 0
new cit marker offset is 0



["'64'"]
'64'
['64']
parsed_discourse_facet ['method_citation']
    <S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
    <S sid="57" ssid="5">Performance is measured through unlabeled accuracy, which is the percentage of words that modify the correct head in the dependency graph, and labeled accuracy, which is the percentage of words that modify the correct head and label the edge correctly in the graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'"]
'57'
['57']
parsed_discourse_facet ['method_citation']
    <S sid="43" ssid="12">For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi&#8217;s algorithm.</S>
original cit marker offset is 0
new cit marker offset is 0



["'43'"]
'43'
['43']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W06-2932.annv3.csv
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S>
original cit marker offset is 
new cit marker offset is 0



["'21'", "'12'", "'20'"]
'21'
'12'
'20'
['21', '12', '20']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="1" ssid="1">present a two-stage multilingual pendency parser and evaluate it on 13 diverse languages.</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'1'", "'104'"]
'21'
'1'
'104'
['21', '1', '104']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="93" ssid="15">A quick look at unlabeled attachment accuracies indicate that errors in Arabic parsing are the most common across all languages: prepositions (62%), conjunctions (69%) and to a lesser extent verbs (73%).</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S><S sid="44" ssid="13">We use the MIRA online learner to set the weights (Crammer and Singer, 2003; McDonald et al., 2005a) since we found it trained quickly and provide good performance.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'93'", "'104'", "'44'"]
'93'
'104'
'44'
['93', '104', '44']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="4" ssid="4">We report results on the CoNLL-X shared task (Buchholz et al., 2006) data sets and present an error analysis.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S><S sid="13" ssid="9">We evaluate this parser on a diverse set of 13 languages using data provided by the CoNLL-X shared-task organizers (Buchholz et al., 2006; Hajiˇc et al., 2004; Simov et al., 2005; Simov and Osenova, 2003; Chen et al., 2003; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and MartiAntonin, 2002; Nilsson et al., 2005; Oflazer et al., 2003; Atalay et al., 2003).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'4'", "'20'", "'13'"]
'4'
'20'
'13'
['4', '20', '13']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'22'", "'104'"]
'21'
'22'
'104'
['21', '22', '104']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="11" ssid="7">This has been shown through their successful use in many standard natural language processing tasks, including machine translation (Ding and Palmer, 2005), sentence compression (McDonald, 2006), and textual inference (Haghighi et al., 2005).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'0'", "'11'"]
'21'
'0'
'11'
['21', '0', '11']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'0'", "'12'"]
'21'
'0'
'12'
['21', '0', '12']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="18" ssid="14">We Proceedings of the 10th Conference on Computational Natural Language Learning (CoNLL-X), pages 216–220, New York City, June 2006. c�2006 Association for Computational Linguistics assume that all dependency graphs are trees but may be non-projective, both of which are true in the data sets we use.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'18'", "'21'", "'22'"]
'18'
'21'
'22'
['18', '21', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="41" ssid="10">To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm�1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm−1) in the tree y.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="15" ssid="11">For the remainder of this paper, we denote by x = x1,... xn a sentence with n words and by y a corresponding dependency graph.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'41'", "'21'", "'15'"]
'41'
'21'
'15'
['41', '21', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="64" ssid="2">N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.</S><S sid="46" ssid="15">Of course, we have to define a set of suitable features.</S><S sid="24" ssid="6">Its power lies in the ability to define a rich set of features over parsing decisions, as well as surface level features relative to these decisions.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'64'", "'46'", "'24'"]
'64'
'46'
'24'
['64', '46', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="13" ssid="9">We evaluate this parser on a diverse set of 13 languages using data provided by the CoNLL-X shared-task organizers (Buchholz et al., 2006; Hajiˇc et al., 2004; Simov et al., 2005; Simov and Osenova, 2003; Chen et al., 2003; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and MartiAntonin, 2002; Nilsson et al., 2005; Oflazer et al., 2003; Atalay et al., 2003).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'0'", "'21'", "'13'"]
'0'
'21'
'13'
['0', '21', '13']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S><S sid="17" ssid="13">Each edge can be assigned a label l(ij) from a finite set L of predefined labels.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'20'", "'17'"]
'21'
'20'
'17'
['21', '20', '17']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="16" ssid="12">A dependency graph is represented by a set of ordered pairs (i, j) E y in which xj is a dependent and xi is the corresponding head.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="43" ssid="12">For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi’s algorithm.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'16'", "'21'", "'43'"]
'16'
'21'
'43'
['16', '21', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['Performance is measured through unlabeled accuracy, which is the percentage of words that modify the correct head in the dependency graph, and labeled accuracy, which is the percentage of words that modify the correct head and label the dependency edge correctly in the graph.'])
dict_values(['A quick look at unlabeled attachment accuracies indicate that errors in Arabic parsing are the most common across all languages: prepositions (62%), conjunctions (69%) and to a lesser extent verbs (73%).', 'We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.', 'We use the MIRA online learner to set the weights (Crammer and Singer, 2003; McDonald et al., 2005a) since we found it trained quickly and provide good performance.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00218', '(95%-conf.int.', '0.00218', '-', '0.00218)']
['system', 'ROUGE-S*', 'Average_P:', '0.01186', '(95%-conf.int.', '0.01186', '-', '0.01186)']
['system', 'ROUGE-S*', 'Average_F:', '0.00368', '(95%-conf.int.', '0.00368', '-', '0.00368)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1378', 'P:253', 'F:3']
dict_values(['For instance, sequential labeling improves the labeling of 2This difference was much larger for experiments in which gold standard unlabeled dependencies are used. objects from 81.7%/75.6% to 84.2%/81.3% (labeled precision/recall) and the labeling of subjects from 86.8%/88.2% to 90.5%/90.4% for Swedish.'])
dict_values(['We report results on the CoNLL-X shared task (Buchholz et al., 2006) data sets and present an error analysis.', 'This system is primarily based on the parsing models described by McDonald and Pereira (2006).', 'We evaluate this parser on a diverse set of 13 languages using data provided by the CoNLL-X shared-task organizers (Buchholz et al., 2006; Hajiˇc et al., 2004; Simov et al., 2005; Simov and Osenova, 2003; Chen et al., 2003; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and MartiAntonin, 2002; Nilsson et al., 2005; Oflazer et al., 2003; Atalay et al., 2003).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:3403', 'P:630', 'F:0']
dict_values(['Based on performance from a held-out section of the training data, we used non-projective parsing algorithms for Czech, Danish, Dutch, German, Japanese, Portuguese and Slovene, and projective parsing algorithms for Arabic, Bulgarian, Chinese, Spanish, Swedish and Turkish.'])
dict_values(['That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.', 'We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00714', '(95%-conf.int.', '0.00714', '-', '0.00714)']
['system', 'ROUGE-S*', 'Average_P:', '0.03667', '(95%-conf.int.', '0.03667', '-', '0.03667)']
['system', 'ROUGE-S*', 'Average_F:', '0.01196', '(95%-conf.int.', '0.01196', '-', '0.01196)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1540', 'P:300', 'F:11']
dict_values(['We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.'])
dict_values(['That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'Multilingual Dependency Analysis with a Two-Stage Discriminative Parser', 'This has been shown through their successful use in many standard natural language processing tasks, including machine translation (Ding and Palmer, 2005), sentence compression (McDonald, 2006), and textual inference (Haghighi et al., 2005).'])
['system', 'ROUGE-S*', 'Average_R:', '0.06738', '(95%-conf.int.', '0.06738', '-', '0.06738)']
['system', 'ROUGE-S*', 'Average_P:', '0.44444', '(95%-conf.int.', '0.44444', '-', '0.44444)']
['system', 'ROUGE-S*', 'Average_F:', '0.11701', '(95%-conf.int.', '0.11701', '-', '0.11701)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1128', 'P:171', 'F:76']
dict_values(['In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.'])
dict_values(['That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'Multilingual Dependency Analysis with a Two-Stage Discriminative Parser', 'In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.'])
['system', 'ROUGE-S*', 'Average_R:', '0.09388', '(95%-conf.int.', '0.09388', '-', '0.09388)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.17165', '(95%-conf.int.', '0.17165', '-', '0.17165)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:703', 'P:66', 'F:66']
dict_values(['An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.'])
dict_values(['We Proceedings of the 10th Conference on Computational Natural Language Learning (CoNLL-X), pages 216–220, New York City, June 2006. c�2006 Association for Computational Linguistics assume that all dependency graphs are trees but may be non-projective, both of which are true in the data sets we use.', 'That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.'])
['system', 'ROUGE-S*', 'Average_R:', '0.06746', '(95%-conf.int.', '0.06746', '-', '0.06746)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.12639', '(95%-conf.int.', '0.12639', '-', '0.12639)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2016', 'P:136', 'F:136']
dict_values(['To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm&#65533;1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm&#8722;1) in the tree y.'])
dict_values(['To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm�1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm−1) in the tree y.', 'That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'For the remainder of this paper, we denote by x = x1,... xn a sentence with n words and by y a corresponding dependency graph.'])
['system', 'ROUGE-S*', 'Average_R:', '0.21886', '(95%-conf.int.', '0.21886', '-', '0.21886)']
['system', 'ROUGE-S*', 'Average_P:', '0.85979', '(95%-conf.int.', '0.85979', '-', '0.85979)']
['system', 'ROUGE-S*', 'Average_F:', '0.34890', '(95%-conf.int.', '0.34890', '-', '0.34890)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1485', 'P:378', 'F:325']
dict_values(['N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.'])
dict_values(['N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.', 'Of course, we have to define a set of suitable features.', 'Its power lies in the ability to define a rich set of features over parsing decisions, as well as surface level features relative to these decisions.'])
['system', 'ROUGE-S*', 'Average_R:', '0.30854', '(95%-conf.int.', '0.30854', '-', '0.30854)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.47158', '(95%-conf.int.', '0.47158', '-', '0.47158)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:820', 'P:253', 'F:253']
dict_values(['For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi&#8217;s algorithm.'])
dict_values(['A dependency graph is represented by a set of ordered pairs (i, j) E y in which xj is a dependent and xi is the corresponding head.', 'That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi’s algorithm.'])
['system', 'ROUGE-S*', 'Average_R:', '0.16471', '(95%-conf.int.', '0.16471', '-', '0.16471)']
['system', 'ROUGE-S*', 'Average_P:', '0.90909', '(95%-conf.int.', '0.90909', '-', '0.90909)']
['system', 'ROUGE-S*', 'Average_F:', '0.27888', '(95%-conf.int.', '0.27888', '-', '0.27888)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1275', 'P:231', 'F:210']
0.584649993503889 0.1033499988516667 0.170005553666605





input/ref/Task1/P04-1036_swastika.csv
input/res/Task1/P04-1036.annv3.csv
parsing: input/ref/Task1/P04-1036_swastika.csv
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



['8']
8
['8']
parsed_discourse_facet ['result_citation']
<S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



['15']
15
['15']
parsed_discourse_facet ['method_citation']
<S sid="68" ssid="24">We are of course able to apply the method to other versions of WordNet. synset, is incremented with the frequency counts from the corpus of all words belonging to that synset, directly or via the hyponymy relation.</S>
original cit marker offset is 0
new cit marker offset is 0



['68']
68
['68']
parsed_discourse_facet ['result_citation']
<S sid="83" ssid="12">The results in table 1 show the accuracy of the ranking with respect to SemCor over the entire set of 2595 polysemous nouns in SemCor with the jcn and lesk WordNet similarity measures.</S>
original cit marker offset is 0
new cit marker offset is 0



['83']
83
['83']
parsed_discourse_facet ['result_citation']
<S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



['15']
15
['15']
parsed_discourse_facet ['result_citation']
<S sid="101" ssid="30">Thus, if we used the sense ranking as a heuristic for an &#8220;all nouns&#8221; task we would expect to get precision in the region of 60%.</S>
original cit marker offset is 0
new cit marker offset is 0



['101']
101
['101']
parsed_discourse_facet ['method_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



['126']
126
['126']
parsed_discourse_facet ['result_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



['8']
8
['8']
parsed_discourse_facet ['result_citation']
<S sid="83" ssid="12">The results in table 1 show the accuracy of the ranking with respect to SemCor over the entire set of 2595 polysemous nouns in SemCor with the jcn and lesk WordNet similarity measures.</S>
original cit marker offset is 0
new cit marker offset is 0



['83']
83
['83']
parsed_discourse_facet ['result_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



['126']
126
['126']
parsed_discourse_facet ['result_citation']
<S sid="46" ssid="2">This provides the nearest neighbours to each target word, along with the distributional similarity score between the target word and its neighbour.</S>
original cit marker offset is 0
new cit marker offset is 0



['46']
46
['46']
parsed_discourse_facet ['result_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



['126']
126
['126']
parsed_discourse_facet ['result_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



['8']
8
['8']
parsed_discourse_facet ['result_citation']
<S sid="105" ssid="3">We use an allwords task because the predominant senses will reflect the sense distributions of all nouns within the documents, rather than a lexical sample task, where the target words are manually determined and the results will depend on the skew of the words in the sample.</S>
original cit marker offset is 0
new cit marker offset is 0



['105']
105
['105']
parsed_discourse_facet ['result_citation']
<S sid="13" ssid="6">The high performance of the first sense baseline is due to the skewed frequency distribution of word senses.</S>
original cit marker offset is 0
new cit marker offset is 0



['13']
13
['13']
parsed_discourse_facet ['method_citation']
<S sid="13" ssid="6">The high performance of the first sense baseline is due to the skewed frequency distribution of word senses.</S>
original cit marker offset is 0
new cit marker offset is 0



['13']
13
['13']
parsed_discourse_facet ['method_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



['8']
8
['8']
parsed_discourse_facet ['result_citation']
parsing: input/res/Task1/P04-1036.annv3.csv
<S sid="107" ssid="5">To disambiguate senses a system should take context into account.</S><S sid="154" ssid="2">In contrast, our work is aimed at discovering the predominant senses from raw text because the first sense heuristic is such a useful one, and because handtagged data is not always available.</S><S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'107'", "'154'", "'8'"]
'107'
'154'
'8'
['107', '154', '8']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="154" ssid="2">In contrast, our work is aimed at discovering the predominant senses from raw text because the first sense heuristic is such a useful one, and because handtagged data is not always available.</S><S sid="162" ssid="10">It only requires raw text from the given domain and because of this it can easily be applied to a new domain, or sense inventory, given sufficient text.</S><S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'154'", "'162'", "'180'"]
'154'
'162'
'180'
['154', '162', '180']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="167" ssid="15">In this work the lists of neighbours are themselves clustered to bring out the various senses of the word.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'167'", "'169'"]
'179'
'167'
'169'
['179', '167', '169']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="171" ssid="19">In contrast, we use the neighbours lists and WordNet similarity measures to impose a prevalence ranking on the WordNet senses.</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'171'", "'0'"]
'179'
'171'
'0'
['179', '171', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'126'", "'15'"]
'0'
'126'
'15'
['0', '126', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'169'", "'180'"]
'179'
'169'
'180'
['179', '169', '180']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="186" ssid="9">In particular, we will use balanced and domain specific corpora to isolate words having very different neighbours, and therefore rankings, in the different corpora and to detect and target words for which there is a highly skewed sense distribution in these corpora.</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'", "'186'", "'0'"]
'126'
'186'
'0'
['126', '186', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="81" ssid="10">4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'81'", "'0'"]
'48'
'81'
'0'
['48', '81', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="66" ssid="22">It uses the glosses of semantically related (according to WordNet) senses too. jcn (Jiang and Conrath, 1997) This score uses corpus data to populate classes (synsets) in the WordNet hierarchy with frequency counts.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'66'", "'4'"]
'179'
'66'
'4'
['179', '66', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'27'", "'45'"]
'169'
'27'
'45'
['169', '27', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'179'", "'45'"]
'48'
'179'
'45'
['48', '179', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S><S sid="58" ssid="14">A noun, , is thus described by a set of co-occurrence triples and associated frequencies, where is a grammatical relation and is a possible cooccurrence with in that relation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'45'", "'58'"]
'179'
'45'
'58'
['179', '45', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'179'", "'27'"]
'8'
'179'
'27'
['8', '179', '27']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="153" ssid="1">Most research in WSD concentrates on using contextual features, typically neighbouring words, to help determine the correct sense of a target word.</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'153'", "'126'", "'4'"]
'153'
'126'
'4'
['153', '126', '4']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="81" ssid="10">4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'81'", "'126'"]
'48'
'81'
'126'
['48', '81', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'169'", "'4'"]
'8'
'169'
'4'
['8', '169', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'27'", "'4'"]
'8'
'27'
'4'
['8', '27', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['We are of course able to apply the method to other versions of WordNet. synset, is incremented with the frequency counts from the corpus of all words belonging to that synset, directly or via the hyponymy relation.'])
dict_values(['We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'In this work the lists of neighbours are themselves clustered to bring out the various senses of the word.', 'This method obtains precision of 61% and recall 51%.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00585', '(95%-conf.int.', '0.00585', '-', '0.00585)']
['system', 'ROUGE-S*', 'Average_P:', '0.00952', '(95%-conf.int.', '0.00952', '-', '0.00952)']
['system', 'ROUGE-S*', 'Average_F:', '0.00725', '(95%-conf.int.', '0.00725', '-', '0.00725)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:171', 'P:105', 'F:1']
dict_values(['Thus, if we used the sense ranking as a heuristic for an &#8220;all nouns&#8221; task we would expect to get precision in the region of 60%.'])
dict_values(['We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'This method obtains precision of 61% and recall 51%.', 'The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01008', '(95%-conf.int.', '0.01008', '-', '0.01008)']
['system', 'ROUGE-S*', 'Average_P:', '0.09091', '(95%-conf.int.', '0.09091', '-', '0.09091)']
['system', 'ROUGE-S*', 'Average_F:', '0.01815', '(95%-conf.int.', '0.01815', '-', '0.01815)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:55', 'F:5']
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.'])
dict_values(['To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.', '4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).', 'Finding Predominant Word Senses in Untagged Text'])
['system', 'ROUGE-S*', 'Average_R:', '0.00265', '(95%-conf.int.', '0.00265', '-', '0.00265)']
['system', 'ROUGE-S*', 'Average_P:', '0.01515', '(95%-conf.int.', '0.01515', '-', '0.01515)']
['system', 'ROUGE-S*', 'Average_F:', '0.00450', '(95%-conf.int.', '0.00450', '-', '0.00450)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:66', 'F:1']
dict_values(['The results in table 1 show the accuracy of the ranking with respect to SemCor over the entire set of 2595 polysemous nouns in SemCor with the jcn and lesk WordNet similarity measures.'])
dict_values(['We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'It uses the glosses of semantically related (according to WordNet) senses too. jcn (Jiang and Conrath, 1997) This score uses corpus data to populate classes (synsets) in the WordNet hierarchy with frequency counts.', 'We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00641', '(95%-conf.int.', '0.00641', '-', '0.00641)']
['system', 'ROUGE-S*', 'Average_P:', '0.02924', '(95%-conf.int.', '0.02924', '-', '0.02924)']
['system', 'ROUGE-S*', 'Average_F:', '0.01052', '(95%-conf.int.', '0.01052', '-', '0.01052)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:780', 'P:171', 'F:5']
dict_values(['We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.'])
dict_values(['We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).', 'A noun, , is thus described by a set of co-occurrence triples and associated frequencies, where is a grammatical relation and is a possible cooccurrence with in that relation.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:28', 'F:0']
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.'])
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.', 'We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'We use WordNet as our sense inventory for this work.'])
['system', 'ROUGE-S*', 'Average_R:', '0.28571', '(95%-conf.int.', '0.28571', '-', '0.28571)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.44444', '(95%-conf.int.', '0.44444', '-', '0.44444)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:231', 'P:66', 'F:66']
dict_values(['We use an allwords task because the predominant senses will reflect the sense distributions of all nouns within the documents, rather than a lexical sample task, where the target words are manually determined and the results will depend on the skew of the words in the sample.'])
dict_values(['Most research in WSD concentrates on using contextual features, typically neighbouring words, to help determine the correct sense of a target word.', 'We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.', 'We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01746', '(95%-conf.int.', '0.01746', '-', '0.01746)']
['system', 'ROUGE-S*', 'Average_P:', '0.05238', '(95%-conf.int.', '0.05238', '-', '0.05238)']
['system', 'ROUGE-S*', 'Average_F:', '0.02619', '(95%-conf.int.', '0.02619', '-', '0.02619)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:210', 'F:11']
dict_values(['The high performance of the first sense baseline is due to the skewed frequency distribution of word senses.'])
dict_values(['To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.', '4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).', 'We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02299', '(95%-conf.int.', '0.02299', '-', '0.02299)']
['system', 'ROUGE-S*', 'Average_P:', '0.18182', '(95%-conf.int.', '0.18182', '-', '0.18182)']
['system', 'ROUGE-S*', 'Average_F:', '0.04082', '(95%-conf.int.', '0.04082', '-', '0.04082)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:55', 'F:10']
dict_values(['The high performance of the first sense baseline is due to the skewed frequency distribution of word senses.'])
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.', 'This method obtains precision of 61% and recall 51%.', 'We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01136', '(95%-conf.int.', '0.01136', '-', '0.01136)']
['system', 'ROUGE-S*', 'Average_P:', '0.10909', '(95%-conf.int.', '0.10909', '-', '0.10909)']
['system', 'ROUGE-S*', 'Average_F:', '0.02058', '(95%-conf.int.', '0.02058', '-', '0.02058)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:55', 'F:6']
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.'])
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.', 'We use WordNet as our sense inventory for this work.', 'We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.14194', '(95%-conf.int.', '0.14194', '-', '0.14194)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.24859', '(95%-conf.int.', '0.24859', '-', '0.24859)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:465', 'P:66', 'F:66']
0.24881099751189 0.050444999495550015 0.08210399917896001





input/ref/Task1/W99-0623_sweta.csv
input/res/Task1/W99-0623.annv3.csv
parsing: input/ref/Task1/W99-0623_sweta.csv
 <S sid="144" ssid="6">Combining multiple highly-accurate independent parsers yields promising results.</S>
original cit marker offset is 0
new cit marker offset is 0



["144'"]
144'
['144']
parsed_discourse_facet ['method_citation']
 <S sid="125" ssid="54">The constituent voting and na&#239;ve Bayes techniques are equivalent because the parameters learned in the training set did not sufficiently discriminate between the three parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["125'"]
125'
['125']
parsed_discourse_facet ['method_citation']
<S sid="125" ssid="54">The constituent voting and na&#239;ve Bayes techniques are equivalent because the parameters learned in the training set did not sufficiently discriminate between the three parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["125'"]
125'
['125']
parsed_discourse_facet ['method_citation']
    <S sid="48" ssid="34">&#8226; Similarly, when the na&#239;ve Bayes classifier is configured such that the constituents require estimated probabilities strictly larger than 0.5 to be accepted, there is not enough probability mass remaining on crossing brackets for them to be included in the hypothesis.</S>
original cit marker offset is 0
new cit marker offset is 0



["48'"]
48'
['48']
parsed_discourse_facet ['method_citation']
 <S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["139'"]
139'
['139']
parsed_discourse_facet ['method_citation']
<S sid="134" ssid="63">As seen by the drop in average individual parser performance baseline, the introduced parser does not perform very well.</S>
original cit marker offset is 0
new cit marker offset is 0



["134'"]
134'
['134']
parsed_discourse_facet ['method_citation']
 <S sid="38" ssid="24">Under certain conditions the constituent voting and na&#239;ve Bayes constituent combination techniques are guaranteed to produce sets of constituents with no crossing brackets.</S>
original cit marker offset is 0
new cit marker offset is 0



["38'"]
38'
['38']
parsed_discourse_facet ['method_citation']
    <S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



["120'"]
120'
['120']
parsed_discourse_facet ['method_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["139'"]
139'
['139']
parsed_discourse_facet ['method_citation']
<S sid="13" ssid="9">These three parsers have given the best reported parsing results on the Penn Treebank Wall Street Journal corpus (Marcus et al., 1993).</S>
original cit marker offset is 0
new cit marker offset is 0



["13'"]
13'
['13']
parsed_discourse_facet ['method_citation']
<S sid="108" ssid="37">From this we see that a finer-grained model for parser combination, at least for the features we have examined, will not give us any additional power.</S>
original cit marker offset is 0
new cit marker offset is 0



["108'"]
108'
['108']
parsed_discourse_facet ['method_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["139'"]
139'
['139']
parsed_discourse_facet ['method_citation']
<S sid="98" ssid="27">Adding the isolated constituents to our hypothesis parse could increase our expected recall, but in the cases we investigated it would invariably hurt our precision more than we would gain on recall.</S>
original cit marker offset is 0
new cit marker offset is 0



["98'"]
98'
['98']
parsed_discourse_facet ['method_citation']
<S sid="27" ssid="13">Another technique for parse hybridization is to use a na&#239;ve Bayes classifier to determine which constituents to include in the parse.</S>
original cit marker offset is 0
new cit marker offset is 0



["27'"]
27'
['27']
parsed_discourse_facet ['method_citation']
<S sid="80" ssid="9">For our experiments we also report the mean of precision and recall, which we denote by (P + R)I2 and F-measure.</S>
    <S sid="81" ssid="10">F-measure is the harmonic mean of precision and recall, 2PR/(P + R).</S>
    <S sid="82" ssid="11">It is closer to the smaller value of precision and recall when there is a large skew in their values.</S>
original cit marker offset is 0
new cit marker offset is 0



["80'", "'81'", "'82'"]
80'
'81'
'82'
['80', '81', '82']
parsed_discourse_facet ['method_citation']
<S sid="49" ssid="35">In general, the lemma of the previous section does not ensure that all the productions in the combined parse are found in the grammars of the member parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["49'"]
49'
['49']
parsed_discourse_facet ['method_citation']
<S sid="11" ssid="7">Similar advances have been made in machine translation (Frederking and Nirenburg, 1994), speech recognition (Fiscus, 1997) and named entity recognition (Borthwick et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["11'"]
11'
['11']
parsed_discourse_facet ['method_citation']
<S sid="98" ssid="27">Adding the isolated constituents to our hypothesis parse could increase our expected recall, but in the cases we investigated it would invariably hurt our precision more than we would gain on recall.</S>
original cit marker offset is 0
new cit marker offset is 0



["98'"]
98'
['98']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W99-0623.annv3.csv
<S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'120'", "'139'"]
'85'
'120'
'139'
['85', '120', '139']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="96" ssid="25">We call such a constituent an isolated constituent.</S>
original cit marker offset is 0
new cit marker offset is 0



["'120'", "'23'", "'96'"]
'120'
'23'
'96'
['120', '23', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="14" ssid="10">We used these three parsers to explore parser combination techniques.</S><S sid="25" ssid="11">In our particular case the majority requires the agreement of only two parsers because we have only three.</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'14'", "'25'"]
'139'
'14'
'25'
['139', '14', '25']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'77'", "'120'"]
'23'
'77'
'120'
['23', '77', '120']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="13">Another technique for parse hybridization is to use a naïve Bayes classifier to determine which constituents to include in the parse.</S><S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="16" ssid="2">We call this approach parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'15'", "'16'"]
'27'
'15'
'16'
['27', '15', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="96" ssid="25">We call such a constituent an isolated constituent.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'120'", "'96'"]
'23'
'120'
'96'
['23', '120', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="5">Through parser combination we have reduced the precision error rate by 30% and the recall error rate by 6% compared to the best previously published result.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'120'", "'23'"]
'143'
'120'
'23'
['143', '120', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'139'", "'120'"]
'23'
'139'
'120'
['23', '139', '120']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'67'", "'139'", "'77'"]
'67'
'139'
'77'
['67', '139', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S><S sid="143" ssid="5">Through parser combination we have reduced the precision error rate by 30% and the recall error rate by 6% compared to the best previously published result.</S>
original cit marker offset is 0
new cit marker offset is 0



["'120'", "'85'", "'143'"]
'120'
'85'
'143'
['120', '85', '143']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="60" ssid="46">First we present the non-parametric version of parser switching, similarity switching: The intuition for this technique is that we can measure a similarity between parses by counting the constituents they have in common.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'60'", "'120'", "'23'"]
'60'
'120'
'23'
['60', '120', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'67'", "'77'"]
'139'
'67'
'77'
['139', '67', '77']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="78" ssid="7">The set is then compared with the set generated from the Penn Treebank parse to determine the precision and recall.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'67'", "'78'"]
'15'
'67'
'78'
['15', '67', '78']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="96" ssid="25">We call such a constituent an isolated constituent.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S><S sid="16" ssid="2">We call this approach parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'96'", "'77'", "'16'"]
'96'
'77'
'16'
['96', '77', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="118" ssid="47">The maximum precision oracle is an upper bound on the possible gain we can achieve by parse hybridization.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'118'", "'77'"]
'15'
'118'
'77'
['15', '118', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="0" ssid="0">Exploiting Diversity in Natural Language Processing: Combining Parsers</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'0'", "'77'"]
'139'
'0'
'77'
['139', '0', '77']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="78" ssid="7">The set is then compared with the set generated from the Penn Treebank parse to determine the precision and recall.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'67'", "'78'"]
'15'
'67'
'78'
['15', '67', '78']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['The constituent voting and na&#239;ve Bayes techniques are equivalent because the parameters learned in the training set did not sufficiently discriminate between the three parsers.'])
dict_values(['The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.', 'We call this technique constituent voting.', 'We call such a constituent an isolated constituent.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00947', '(95%-conf.int.', '0.00947', '-', '0.00947)']
['system', 'ROUGE-S*', 'Average_P:', '0.04762', '(95%-conf.int.', '0.04762', '-', '0.04762)']
['system', 'ROUGE-S*', 'Average_F:', '0.01580', '(95%-conf.int.', '0.01580', '-', '0.01580)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:105', 'F:5']
dict_values(['The constituent voting and na&#239;ve Bayes techniques are equivalent because the parameters learned in the training set did not sufficiently discriminate between the three parsers.'])
dict_values(['We have presented two general approaches to studying parser combination: parser switching and parse hybridization.', 'We used these three parsers to explore parser combination techniques.', 'In our particular case the majority requires the agreement of only two parsers because we have only three.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00526', '(95%-conf.int.', '0.00526', '-', '0.00526)']
['system', 'ROUGE-S*', 'Average_P:', '0.00952', '(95%-conf.int.', '0.00952', '-', '0.00952)']
['system', 'ROUGE-S*', 'Average_F:', '0.00678', '(95%-conf.int.', '0.00678', '-', '0.00678)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:190', 'P:105', 'F:1']
dict_values(['Under certain conditions the constituent voting and na&#239;ve Bayes constituent combination techniques are guaranteed to produce sets of constituents with no crossing brackets.'])
dict_values(['Through parser combination we have reduced the precision error rate by 30% and the recall error rate by 6% compared to the best previously published result.', 'The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.', 'We call this technique constituent voting.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01268', '(95%-conf.int.', '0.01268', '-', '0.01268)']
['system', 'ROUGE-S*', 'Average_P:', '0.10000', '(95%-conf.int.', '0.10000', '-', '0.10000)']
['system', 'ROUGE-S*', 'Average_F:', '0.02251', '(95%-conf.int.', '0.02251', '-', '0.02251)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:946', 'P:120', 'F:12']
dict_values(['The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.'])
dict_values(['We call this technique constituent voting.', 'We have presented two general approaches to studying parser combination: parser switching and parse hybridization.', 'The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.'])
['system', 'ROUGE-S*', 'Average_R:', '0.40486', '(95%-conf.int.', '0.40486', '-', '0.40486)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.57637', '(95%-conf.int.', '0.57637', '-', '0.57637)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:741', 'P:300', 'F:300']
dict_values(['From this we see that a finer-grained model for parser combination, at least for the features we have examined, will not give us any additional power.'])
dict_values(['First we present the non-parametric version of parser switching, similarity switching: The intuition for this technique is that we can measure a similarity between parses by counting the constituents they have in common.', 'The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.', 'We call this technique constituent voting.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:990', 'P:45', 'F:0']
dict_values(['We have presented two general approaches to studying parser combination: parser switching and parse hybridization.'])
dict_values(['We have presented two general approaches to studying parser combination: parser switching and parse hybridization.', 'The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.', 'Each parse is converted into a set of constituents represented as a tuples: (label, start, end).'])
['system', 'ROUGE-S*', 'Average_R:', '0.12821', '(95%-conf.int.', '0.12821', '-', '0.12821)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.22727', '(95%-conf.int.', '0.22727', '-', '0.22727)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:45', 'F:45']
dict_values(['For our experiments we also report the mean of precision and recall, which we denote by (P + R)I2 and F-measure.', 'F-measure is the harmonic mean of precision and recall, 2PR/(P + R).', 'It is closer to the smaller value of precision and recall when there is a large skew in their values.'])
dict_values(['We are interested in combining the substructures of the input parses to produce a better parse.', 'The maximum precision oracle is an upper bound on the possible gain we can achieve by parse hybridization.', 'Each parse is converted into a set of constituents represented as a tuples: (label, start, end).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:171', 'F:0']
dict_values(['In general, the lemma of the previous section does not ensure that all the productions in the combined parse are found in the grammars of the member parsers.'])
dict_values(['We have presented two general approaches to studying parser combination: parser switching and parse hybridization.', 'Exploiting Diversity in Natural Language Processing: Combining Parsers', 'Each parse is converted into a set of constituents represented as a tuples: (label, start, end).'])
['system', 'ROUGE-S*', 'Average_R:', '0.01846', '(95%-conf.int.', '0.01846', '-', '0.01846)']
['system', 'ROUGE-S*', 'Average_P:', '0.09091', '(95%-conf.int.', '0.09091', '-', '0.09091)']
['system', 'ROUGE-S*', 'Average_F:', '0.03069', '(95%-conf.int.', '0.03069', '-', '0.03069)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:66', 'F:6']
dict_values(['Adding the isolated constituents to our hypothesis parse could increase our expected recall, but in the cases we investigated it would invariably hurt our precision more than we would gain on recall.'])
dict_values(['We are interested in combining the substructures of the input parses to produce a better parse.', 'The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.', 'The set is then compared with the set generated from the Penn Treebank parse to determine the precision and recall.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02667', '(95%-conf.int.', '0.02667', '-', '0.02667)']
['system', 'ROUGE-S*', 'Average_P:', '0.07619', '(95%-conf.int.', '0.07619', '-', '0.07619)']
['system', 'ROUGE-S*', 'Average_F:', '0.03951', '(95%-conf.int.', '0.03951', '-', '0.03951)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:105', 'F:8']
0.25824888601945684 0.06728999925233334 0.10210333219885187





input/ref/Task1/W06-2932_sweta.csv
input/res/Task1/W06-2932.annv3.csv
parsing: input/ref/Task1/W06-2932_sweta.csv
 <S sid="5" ssid="1">Often in language processing we require a deep syntactic representation of a sentence in order to assist further processing.</S>
original cit marker offset is 0
new cit marker offset is 0



["5'"]
5'
['5']
parsed_discourse_facet ['method_citation']
<S sid="36" ssid="5">However, in a two stage system we can incorporate features over the entire output of the unlabeled parser since that structure is fixed as input.</S>
original cit marker offset is 0
new cit marker offset is 0



["36'"]
36'
['36']
parsed_discourse_facet ['method_citation']
<S sid="61" ssid="9">In fact, for every language our models perform significantly higher than the average performance for all the systems reported in Buchholz et al. (2006).</S>
original cit marker offset is 0
new cit marker offset is 0



["61'"]
61'
['61']
parsed_discourse_facet ['method_citation']
<S sid="76" ssid="14">For instance, sequential labeling improves the labeling of 2This difference was much larger for experiments in which gold standard unlabeled dependencies are used. objects from 81.7%/75.6% to 84.2%/81.3% (labeled precision/recall) and the labeling of subjects from 86.8%/88.2% to 90.5%/90.4% for Swedish.</S>
original cit marker offset is 0
new cit marker offset is 0



["76'"]
76'
['76']
parsed_discourse_facet ['method_citation']
 <S sid="45" ssid="14">Furthermore, it made the system homogeneous in terms of learning algorithms since that is what is used to train our unlabeled parser (McDonald and Pereira, 2006).</S>
original cit marker offset is 0
new cit marker offset is 0



["45'"]
45'
['45']
parsed_discourse_facet ['method_citation']
<S sid="106" ssid="3">First, we plan on examining the performance difference between two-staged dependency parsing (as presented here) and joint parsing plus labeling.</S>
original cit marker offset is 0
new cit marker offset is 0



["106'"]
106'
['106']
parsed_discourse_facet ['method_citation']
<S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S>
original cit marker offset is 0
new cit marker offset is 0



["12'"]
12'
['12']
parsed_discourse_facet ['method_citation']
<S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0
new cit marker offset is 0



["104'"]
104'
['104']
parsed_discourse_facet ['method_citation']
<S sid="58" ssid="6">These results show that the discriminative spanning tree parsing framework (McDonald et al., 2005b; McDonald and Pereira, 2006) is easily adapted across all these languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["58'"]
58'
['58']
parsed_discourse_facet ['method_citation']
<S sid="64" ssid="2">N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.</S>
original cit marker offset is 0
new cit marker offset is 0



["64'"]
64'
['64']
parsed_discourse_facet ['method_citation']
<S sid="41" ssid="10">To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm&#65533;1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm&#8722;1) in the tree y.</S>
original cit marker offset is 0
new cit marker offset is 0



["41'"]
41'
['41']
parsed_discourse_facet ['method_citation']
 <S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["21'"]
21'
['21']
parsed_discourse_facet ['method_citation']
 <S sid="64" ssid="2">N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.</S>
original cit marker offset is 0
new cit marker offset is 0



["64'"]
64'
['64']
parsed_discourse_facet ['method_citation']
 <S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0
new cit marker offset is 0



["104'"]
104'
['104']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="2">Ideally one would like to make all parsing and labeling decisions jointly so that the shared knowledge of both decisions will help resolve any ambiguities.</S>
original cit marker offset is 0
new cit marker offset is 0



["33'"]
33'
['33']
parsed_discourse_facet ['method_citation']
<S sid="41" ssid="10">To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm&#65533;1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm&#8722;1) in the tree y.</S>
original cit marker offset is 0
new cit marker offset is 0



["41'"]
41'
['41']
parsed_discourse_facet ['method_citation']
 <S sid="43" ssid="12">For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi&#8217;s algorithm.</S>
original cit marker offset is 0
new cit marker offset is 0



["43'"]
43'
['43']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W06-2932.annv3.csv
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S>
original cit marker offset is 
new cit marker offset is 0



["'21'", "'12'", "'20'"]
'21'
'12'
'20'
['21', '12', '20']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="1" ssid="1">present a two-stage multilingual pendency parser and evaluate it on 13 diverse languages.</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'1'", "'104'"]
'21'
'1'
'104'
['21', '1', '104']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="93" ssid="15">A quick look at unlabeled attachment accuracies indicate that errors in Arabic parsing are the most common across all languages: prepositions (62%), conjunctions (69%) and to a lesser extent verbs (73%).</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S><S sid="44" ssid="13">We use the MIRA online learner to set the weights (Crammer and Singer, 2003; McDonald et al., 2005a) since we found it trained quickly and provide good performance.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'93'", "'104'", "'44'"]
'93'
'104'
'44'
['93', '104', '44']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="4" ssid="4">We report results on the CoNLL-X shared task (Buchholz et al., 2006) data sets and present an error analysis.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S><S sid="13" ssid="9">We evaluate this parser on a diverse set of 13 languages using data provided by the CoNLL-X shared-task organizers (Buchholz et al., 2006; Hajiˇc et al., 2004; Simov et al., 2005; Simov and Osenova, 2003; Chen et al., 2003; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and MartiAntonin, 2002; Nilsson et al., 2005; Oflazer et al., 2003; Atalay et al., 2003).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'4'", "'20'", "'13'"]
'4'
'20'
'13'
['4', '20', '13']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S><S sid="104" ssid="1">We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'22'", "'104'"]
'21'
'22'
'104'
['21', '22', '104']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="11" ssid="7">This has been shown through their successful use in many standard natural language processing tasks, including machine translation (Ding and Palmer, 2005), sentence compression (McDonald, 2006), and textual inference (Haghighi et al., 2005).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'0'", "'11'"]
'21'
'0'
'11'
['21', '0', '11']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="12" ssid="8">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'0'", "'12'"]
'21'
'0'
'12'
['21', '0', '12']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="18" ssid="14">We Proceedings of the 10th Conference on Computational Natural Language Learning (CoNLL-X), pages 216–220, New York City, June 2006. c�2006 Association for Computational Linguistics assume that all dependency graphs are trees but may be non-projective, both of which are true in the data sets we use.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="22" ssid="4">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'18'", "'21'", "'22'"]
'18'
'21'
'22'
['18', '21', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="41" ssid="10">To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm�1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm−1) in the tree y.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="15" ssid="11">For the remainder of this paper, we denote by x = x1,... xn a sentence with n words and by y a corresponding dependency graph.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'41'", "'21'", "'15'"]
'41'
'21'
'15'
['41', '21', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="64" ssid="2">N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.</S><S sid="46" ssid="15">Of course, we have to define a set of suitable features.</S><S sid="24" ssid="6">Its power lies in the ability to define a rich set of features over parsing decisions, as well as surface level features relative to these decisions.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'64'", "'46'", "'24'"]
'64'
'46'
'24'
['64', '46', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="13" ssid="9">We evaluate this parser on a diverse set of 13 languages using data provided by the CoNLL-X shared-task organizers (Buchholz et al., 2006; Hajiˇc et al., 2004; Simov et al., 2005; Simov and Osenova, 2003; Chen et al., 2003; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and MartiAntonin, 2002; Nilsson et al., 2005; Oflazer et al., 2003; Atalay et al., 2003).</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'0'", "'21'", "'13'"]
'0'
'21'
'13'
['0', '21', '13']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="20" ssid="2">This system is primarily based on the parsing models described by McDonald and Pereira (2006).</S><S sid="17" ssid="13">Each edge can be assigned a label l(ij) from a finite set L of predefined labels.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'21'", "'20'", "'17'"]
'21'
'20'
'17'
['21', '20', '17']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="16" ssid="12">A dependency graph is represented by a set of ordered pairs (i, j) E y in which xj is a dependent and xi is the corresponding head.</S><S sid="21" ssid="3">That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.</S><S sid="43" ssid="12">For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi’s algorithm.</S>
original cit marker offset is 0.0
new cit marker offset is 0



["'16'", "'21'", "'43'"]
'16'
'21'
'43'
['16', '21', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['In fact, for every language our models perform significantly higher than the average performance for all the systems reported in Buchholz et al. (2006).'])
dict_values(['A quick look at unlabeled attachment accuracies indicate that errors in Arabic parsing are the most common across all languages: prepositions (62%), conjunctions (69%) and to a lesser extent verbs (73%).', 'We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.', 'We use the MIRA online learner to set the weights (Crammer and Singer, 2003; McDonald et al., 2005a) since we found it trained quickly and provide good performance.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00363', '(95%-conf.int.', '0.00363', '-', '0.00363)']
['system', 'ROUGE-S*', 'Average_P:', '0.06410', '(95%-conf.int.', '0.06410', '-', '0.06410)']
['system', 'ROUGE-S*', 'Average_F:', '0.00687', '(95%-conf.int.', '0.00687', '-', '0.00687)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1378', 'P:78', 'F:5']
dict_values(['For instance, sequential labeling improves the labeling of 2This difference was much larger for experiments in which gold standard unlabeled dependencies are used. objects from 81.7%/75.6% to 84.2%/81.3% (labeled precision/recall) and the labeling of subjects from 86.8%/88.2% to 90.5%/90.4% for Swedish.'])
dict_values(['We report results on the CoNLL-X shared task (Buchholz et al., 2006) data sets and present an error analysis.', 'This system is primarily based on the parsing models described by McDonald and Pereira (2006).', 'We evaluate this parser on a diverse set of 13 languages using data provided by the CoNLL-X shared-task organizers (Buchholz et al., 2006; Hajiˇc et al., 2004; Simov et al., 2005; Simov and Osenova, 2003; Chen et al., 2003; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and MartiAntonin, 2002; Nilsson et al., 2005; Oflazer et al., 2003; Atalay et al., 2003).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:3403', 'P:630', 'F:0']
dict_values(['Furthermore, it made the system homogeneous in terms of learning algorithms since that is what is used to train our unlabeled parser (McDonald and Pereira, 2006).'])
dict_values(['That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.', 'We have presented results showing that the spanning tree dependency parsing framework of McDonald et al. (McDonald et al., 2005b; McDonald and Pereira, 2006) generalizes well to languages other than English.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00390', '(95%-conf.int.', '0.00390', '-', '0.00390)']
['system', 'ROUGE-S*', 'Average_P:', '0.09091', '(95%-conf.int.', '0.09091', '-', '0.09091)']
['system', 'ROUGE-S*', 'Average_F:', '0.00747', '(95%-conf.int.', '0.00747', '-', '0.00747)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1540', 'P:66', 'F:6']
dict_values(['First, we plan on examining the performance difference between two-staged dependency parsing (as presented here) and joint parsing plus labeling.'])
dict_values(['That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'Multilingual Dependency Analysis with a Two-Stage Discriminative Parser', 'This has been shown through their successful use in many standard natural language processing tasks, including machine translation (Ding and Palmer, 2005), sentence compression (McDonald, 2006), and textual inference (Haghighi et al., 2005).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00089', '(95%-conf.int.', '0.00089', '-', '0.00089)']
['system', 'ROUGE-S*', 'Average_P:', '0.01515', '(95%-conf.int.', '0.01515', '-', '0.01515)']
['system', 'ROUGE-S*', 'Average_F:', '0.00168', '(95%-conf.int.', '0.00168', '-', '0.00168)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1128', 'P:66', 'F:1']
dict_values(['In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.'])
dict_values(['That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'Multilingual Dependency Analysis with a Two-Stage Discriminative Parser', 'In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.'])
['system', 'ROUGE-S*', 'Average_R:', '0.09388', '(95%-conf.int.', '0.09388', '-', '0.09388)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.17165', '(95%-conf.int.', '0.17165', '-', '0.17165)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:703', 'P:66', 'F:66']
dict_values(['N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.'])
dict_values(['We Proceedings of the 10th Conference on Computational Natural Language Learning (CoNLL-X), pages 216–220, New York City, June 2006. c�2006 Association for Computational Linguistics assume that all dependency graphs are trees but may be non-projective, both of which are true in the data sets we use.', 'That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00694', '(95%-conf.int.', '0.00694', '-', '0.00694)']
['system', 'ROUGE-S*', 'Average_P:', '0.05534', '(95%-conf.int.', '0.05534', '-', '0.05534)']
['system', 'ROUGE-S*', 'Average_F:', '0.01234', '(95%-conf.int.', '0.01234', '-', '0.01234)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2016', 'P:253', 'F:14']
dict_values(['To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm&#65533;1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm&#8722;1) in the tree y.'])
dict_values(['To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm�1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm−1) in the tree y.', 'That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'For the remainder of this paper, we denote by x = x1,... xn a sentence with n words and by y a corresponding dependency graph.'])
['system', 'ROUGE-S*', 'Average_R:', '0.21886', '(95%-conf.int.', '0.21886', '-', '0.21886)']
['system', 'ROUGE-S*', 'Average_P:', '0.85979', '(95%-conf.int.', '0.85979', '-', '0.85979)']
['system', 'ROUGE-S*', 'Average_F:', '0.34890', '(95%-conf.int.', '0.34890', '-', '0.34890)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1485', 'P:378', 'F:325']
dict_values(['N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.'])
dict_values(['N/P: Allow non-projective/Force projective, S/A: Sequential labeling/Atomic labeling, M/B: Include morphology features/No morphology features. assignment of edge labels instead of individual assignment, and a rich feature set that incorporates morphological properties when available.', 'Of course, we have to define a set of suitable features.', 'Its power lies in the ability to define a rich set of features over parsing decisions, as well as surface level features relative to these decisions.'])
['system', 'ROUGE-S*', 'Average_R:', '0.30854', '(95%-conf.int.', '0.30854', '-', '0.30854)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.47158', '(95%-conf.int.', '0.47158', '-', '0.47158)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:820', 'P:253', 'F:253']
dict_values(['Ideally one would like to make all parsing and labeling decisions jointly so that the shared knowledge of both decisions will help resolve any ambiguities.'])
dict_values(['Multilingual Dependency Analysis with a Two-Stage Discriminative Parser', 'That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'We evaluate this parser on a diverse set of 13 languages using data provided by the CoNLL-X shared-task organizers (Buchholz et al., 2006; Hajiˇc et al., 2004; Simov et al., 2005; Simov and Osenova, 2003; Chen et al., 2003; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and MartiAntonin, 2002; Nilsson et al., 2005; Oflazer et al., 2003; Atalay et al., 2003).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00026', '(95%-conf.int.', '0.00026', '-', '0.00026)']
['system', 'ROUGE-S*', 'Average_P:', '0.01818', '(95%-conf.int.', '0.01818', '-', '0.01818)']
['system', 'ROUGE-S*', 'Average_F:', '0.00052', '(95%-conf.int.', '0.00052', '-', '0.00052)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:3828', 'P:55', 'F:1']
dict_values(['For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi&#8217;s algorithm.'])
dict_values(['A dependency graph is represented by a set of ordered pairs (i, j) E y in which xj is a dependent and xi is the corresponding head.', 'That work extends the maximum spanning tree dependency parsing framework (McDonald et al., 2005a; McDonald et al., 2005b) to incorporate features over multiple edges in the dependency graph.', 'For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi’s algorithm.'])
['system', 'ROUGE-S*', 'Average_R:', '0.16471', '(95%-conf.int.', '0.16471', '-', '0.16471)']
['system', 'ROUGE-S*', 'Average_P:', '0.90909', '(95%-conf.int.', '0.90909', '-', '0.90909)']
['system', 'ROUGE-S*', 'Average_F:', '0.27888', '(95%-conf.int.', '0.27888', '-', '0.27888)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1275', 'P:231', 'F:210']
0.4012559959874401 0.08016099919839002 0.12998899870011005





input/ref/Task1/P11-1061_swastika.csv
input/res/Task1/P11-1061.annv3.csv
parsing: input/ref/Task1/P11-1061_swastika.csv
    <S sid="144" ssid="7">For comparison, the completely unsupervised feature-HMM baseline accuracy on the universal POS tags for English is 79.4%, and goes up to 88.7% with a treebank dictionary.</S>
original cit marker offset is 0
new cit marker offset is 0



['144']
144
['144']
parsed_discourse_facet ['result_citation']
    <S sid="44" ssid="10">Because all English vertices are going to be labeled, we do not need to disambiguate them by embedding them in trigrams.</S
original cit marker offset is 0
new cit marker offset is 0



['44']
44
['44']
parsed_discourse_facet ['method_citation']
    <S sid="16" ssid="12">To this end, we construct a bilingual graph over word types to establish a connection between the two languages (&#167;3), and then use graph label propagation to project syntactic information from English to the foreign language (&#167;4).</S>
original cit marker offset is 0
new cit marker offset is 0



['16']
16
['16']
parsed_discourse_facet ['method_citation']
    <S sid="44" ssid="10">Because all English vertices are going to be labeled, we do not need to disambiguate them by embedding them in trigrams.</S
original cit marker offset is 0
new cit marker offset is 0



['44']
44
['44']
parsed_discourse_facet ['method_citation']
<S sid="110" ssid="10">We hope that this will allow practitioners to apply our approach directly to languages for which no resources are available.</S>
original cit marker offset is 0
new cit marker offset is 0



['110']
110
['110']
parsed_discourse_facet ['aim_citation']
    <S sid="115" ssid="15">The taggers were trained on datasets labeled with the universal tags.</S>
original cit marker offset is 0
new cit marker offset is 0



['115']
115
['115']
parsed_discourse_facet ['method_citation']
    <S sid="115" ssid="15">The taggers were trained on datasets labeled with the universal tags.</S>
original cit marker offset is 0
new cit marker offset is 0



['115']
115
['115']
parsed_discourse_facet ['method_citation']
<S sid="158" ssid="1">We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.</S>
original cit marker offset is 0
new cit marker offset is 0



['158']
158
['158']
parsed_discourse_facet ['result_citation']
<S sid="23" ssid="19">Our final average POS tagging accuracy of 83.4% compares very favorably to the average accuracy of Berg-Kirkpatrick et al.&#8217;s monolingual unsupervised state-of-the-art model (73.0%), and considerably bridges the gap to fully supervised POS tagging performance (96.6%).</S>
original cit marker offset is 0
new cit marker offset is 0



['23']
23
['23']
parsed_discourse_facet ['result_citation']
<S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S>
original cit marker offset is 0
new cit marker offset is 0



['24']
24
['24']
parsed_discourse_facet ['aim_citation']
<S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



['10']
10
['10']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



['???']
???
['???']
parsed_discourse_facet ['method_citation']
    <S sid="16" ssid="12">To this end, we construct a bilingual graph over word types to establish a connection between the two languages (&#167;3), and then use graph label propagation to project syntactic information from English to the foreign language (&#167;4).</S>
original cit marker offset is 0
new cit marker offset is 0



['16']
16
['16']
parsed_discourse_facet ['method_citation']
    <S sid="23" ssid="19">Our final average POS tagging accuracy of 83.4% compares very favorably to the average accuracy of Berg-Kirkpatrick et al.&#8217;s monolingual unsupervised state-of-the-art model (73.0%), and considerably bridges the gap to fully supervised POS tagging performance (96.6%).</S>
original cit marker offset is 0
new cit marker offset is 0



['23']
23
['23']
parsed_discourse_facet ['result_citation']
<S sid="158" ssid="1">We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.</S>
original cit marker offset is 0
new cit marker offset is 0



['158']
158
['158']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



['10']
10
['10']
parsed_discourse_facet ['method_citation']
<S sid="56" ssid="22">To define a similarity function between the English and the foreign vertices, we rely on high-confidence word alignments.</S>
original cit marker offset is 0
new cit marker offset is 0



['56']
56
['56']
parsed_discourse_facet ['method_citation']
<S sid="161" ssid="4">Our results outperform strong unsupervised baselines as well as approaches that rely on direct projections, and bridge the gap between purely supervised and unsupervised POS tagging models.</S>
original cit marker offset is 0
new cit marker offset is 0



['161']
161
['161']
parsed_discourse_facet ['result_citation']
parsing: input/res/Task1/P11-1061.annv3.csv
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="6" ssid="2">Supervised part-of-speech (POS) taggers, for example, approach the level of inter-annotator agreement (Shen et al., 2007, 97.3% accuracy for English).</S><S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'6'", "'18'"]
'0'
'6'
'18'
['0', '6', '18']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'7'", "'27'"]
'0'
'7'
'27'
['0', '7', '27']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="3" ssid="3">We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).</S><S sid="35" ssid="1">In graph-based learning approaches one constructs a graph whose vertices are labeled and unlabeled examples, and whose weighted edges encode the degree to which the examples they link have the same label (Zhu et al., 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'3'", "'35'"]
'0'
'3'
'35'
['0', '3', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="52" ssid="18">This is similar to stacking the different feature instantiations into long (sparse) vectors and computing the cosine similarity between them.</S><S sid="51" ssid="17">For each trigram type x2 x3 x4 in a sequence x1 x2 x3 x4 x5, we count how many times that trigram type co-occurs with the different instantiations of each concept, and compute the point-wise mutual information (PMI) between the two.5 The similarity between two trigram types is given by summing over the PMI values over feature instantiations that they have in common.</S><S sid="42" ssid="8">The foreign language vertices (denoted by Vf) correspond to foreign trigram types, exactly as in Subramanya et al. (2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'", "'51'", "'42'"]
'52'
'51'
'42'
['52', '51', '42']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="31" ssid="8">By aggregating the POS labels of the English tokens to types, we can generate label distributions for the English vertices.</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'7'", "'31'"]
'27'
'7'
'31'
['27', '7', '31']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S><S sid="6" ssid="2">Supervised part-of-speech (POS) taggers, for example, approach the level of inter-annotator agreement (Shen et al., 2007, 97.3% accuracy for English).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'6'"]
'0'
'24'
'6'
['0', '24', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="85" ssid="16">We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).</S><S sid="3" ssid="3">We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'85'", "'3'"]
'0'
'85'
'3'
['0', '85', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S><S sid="158" ssid="1">We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'18'", "'158'"]
'0'
'18'
'158'
['0', '18', '158']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="2" ssid="2">Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.</S><S sid="16" ssid="12">To this end, we construct a bilingual graph over word types to establish a connection between the two languages (§3), and then use graph label propagation to project syntactic information from English to the foreign language (§4).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'16'"]
'0'
'2'
'16'
['0', '2', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="71" ssid="2">We use label propagation in two stages to generate soft labels on all the vertices in the graph.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="35" ssid="1">In graph-based learning approaches one constructs a graph whose vertices are labeled and unlabeled examples, and whose weighted edges encode the degree to which the examples they link have the same label (Zhu et al., 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'71'", "'0'", "'35'"]
'71'
'0'
'35'
['71', '0', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S><S sid="160" ssid="3">Our results suggest that it is possible to learn accurate POS taggers for languages which do not have any annotated data, but have translations into a resource-rich language.</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'", "'160'", "'24'"]
'106'
'160'
'24'
['106', '160', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S><S sid="160" ssid="3">Our results suggest that it is possible to learn accurate POS taggers for languages which do not have any annotated data, but have translations into a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'160'"]
'0'
'24'
'160'
['0', '24', '160']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="46" ssid="12">We use two different similarity functions to define the edge weights among the foreign vertices and between vertices from different languages.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S>
original cit marker offset is 0
new cit marker offset is 0



["'46'", "'0'", "'106'"]
'46'
'0'
'106'
['46', '0', '106']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="144" ssid="7">For comparison, the completely unsupervised feature-HMM baseline accuracy on the universal POS tags for English is 79.4%, and goes up to 88.7% with a treebank dictionary.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'7'", "'144'"]
'0'
'7'
'144'
['0', '7', '144']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="2" ssid="2">Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'24'"]
'0'
'2'
'24'
['0', '2', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'", "'0'", "'10'"]
'106'
'0'
'10'
['106', '0', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="56" ssid="22">To define a similarity function between the English and the foreign vertices, we rely on high-confidence word alignments.</S><S sid="57" ssid="23">Since our graph is built from a parallel corpus, we can use standard word alignment techniques to align the English sentences De 5Note that many combinations are impossible giving a PMI value of 0; e.g., when the trigram type and the feature instantiation don’t have words in common. and their foreign language translations Df.6 Label propagation in the graph will provide coverage and high recall, and we therefore extract only intersected high-confidence (> 0.9) alignments De�f.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S>
original cit marker offset is 0
new cit marker offset is 0



["'56'", "'57'", "'0'"]
'56'
'57'
'0'
['56', '57', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="85" ssid="16">We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'0'", "'85'"]
'27'
'0'
'85'
['27', '0', '85']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['For comparison, the completely unsupervised feature-HMM baseline accuracy on the universal POS tags for English is 79.4%, and goes up to 88.7% with a treebank dictionary.'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'Supervised part-of-speech (POS) taggers, for example, approach the level of inter-annotator agreement (Shen et al., 2007, 97.3% accuracy for English).', 'To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).'])
['system', 'ROUGE-S*', 'Average_R:', '0.01802', '(95%-conf.int.', '0.01802', '-', '0.01802)']
['system', 'ROUGE-S*', 'Average_P:', '0.08824', '(95%-conf.int.', '0.08824', '-', '0.08824)']
['system', 'ROUGE-S*', 'Average_F:', '0.02993', '(95%-conf.int.', '0.02993', '-', '0.02993)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:136', 'F:12']
dict_values(['Because all English vertices are going to be labeled, we do not need to disambiguate them by embedding them in trigrams.'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.', 'Graph construction does not require any labeled data, but makes use of two similarity functions.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:15', 'F:0']
dict_values(['We hope that this will allow practitioners to apply our approach directly to languages for which no resources are available.'])
dict_values(['Graph construction does not require any labeled data, but makes use of two similarity functions.', 'However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.', 'By aggregating the POS labels of the English tokens to types, we can generate label distributions for the English vertices.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:406', 'P:21', 'F:0']
dict_values(['The taggers were trained on datasets labeled with the universal tags.'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).', 'We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:15', 'F:0']
dict_values(['We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).', 'We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.'])
['system', 'ROUGE-S*', 'Average_R:', '0.11828', '(95%-conf.int.', '0.11828', '-', '0.11828)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.21154', '(95%-conf.int.', '0.21154', '-', '0.21154)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:465', 'P:55', 'F:55']
dict_values(['Our final average POS tagging accuracy of 83.4% compares very favorably to the average accuracy of Berg-Kirkpatrick et al.&#8217;s monolingual unsupervised state-of-the-art model (73.0%), and considerably bridges the gap to fully supervised POS tagging performance (96.6%).'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.', 'To this end, we construct a bilingual graph over word types to establish a connection between the two languages (§3), and then use graph label propagation to project syntactic information from English to the foreign language (§4).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00332', '(95%-conf.int.', '0.00332', '-', '0.00332)']
['system', 'ROUGE-S*', 'Average_P:', '0.00605', '(95%-conf.int.', '0.00605', '-', '0.00605)']
['system', 'ROUGE-S*', 'Average_F:', '0.00429', '(95%-conf.int.', '0.00429', '-', '0.00429)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:496', 'F:3']
dict_values(['The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.'])
dict_values(['We use label propagation in two stages to generate soft labels on all the vertices in the graph.', 'Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'In graph-based learning approaches one constructs a graph whose vertices are labeled and unlabeled examples, and whose weighted edges encode the degree to which the examples they link have the same label (Zhu et al., 2003).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:91', 'F:0']
dict_values(['To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.', 'Our results suggest that it is possible to learn accurate POS taggers for languages which do not have any annotated data, but have translations into a resource-rich language.'])
['system', 'ROUGE-S*', 'Average_R:', '0.09916', '(95%-conf.int.', '0.09916', '-', '0.09916)']
['system', 'ROUGE-S*', 'Average_P:', '0.11174', '(95%-conf.int.', '0.11174', '-', '0.11174)']
['system', 'ROUGE-S*', 'Average_F:', '0.10508', '(95%-conf.int.', '0.10508', '-', '0.10508)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:595', 'P:528', 'F:59']
dict_values(['To this end, we construct a bilingual graph over word types to establish a connection between the two languages (&#167;3), and then use graph label propagation to project syntactic information from English to the foreign language (&#167;4).'])
dict_values(['We use two different similarity functions to define the edge weights among the foreign vertices and between vertices from different languages.', 'Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01667', '(95%-conf.int.', '0.01667', '-', '0.01667)']
['system', 'ROUGE-S*', 'Average_P:', '0.05628', '(95%-conf.int.', '0.05628', '-', '0.05628)']
['system', 'ROUGE-S*', 'Average_F:', '0.02572', '(95%-conf.int.', '0.02572', '-', '0.02572)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:780', 'P:231', 'F:13']
dict_values(['We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.', 'The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01351', '(95%-conf.int.', '0.01351', '-', '0.01351)']
['system', 'ROUGE-S*', 'Average_P:', '0.16364', '(95%-conf.int.', '0.16364', '-', '0.16364)']
['system', 'ROUGE-S*', 'Average_F:', '0.02497', '(95%-conf.int.', '0.02497', '-', '0.02497)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:55', 'F:9']
dict_values(['Our results outperform strong unsupervised baselines as well as approaches that rely on direct projections, and bridge the gap between purely supervised and unsupervised POS tagging models.'])
dict_values(['Graph construction does not require any labeled data, but makes use of two similarity functions.', 'Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).'])
['system', 'ROUGE-S*', 'Average_R:', '0.02116', '(95%-conf.int.', '0.02116', '-', '0.02116)']
['system', 'ROUGE-S*', 'Average_P:', '0.05882', '(95%-conf.int.', '0.05882', '-', '0.05882)']
['system', 'ROUGE-S*', 'Average_F:', '0.03113', '(95%-conf.int.', '0.03113', '-', '0.03113)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:136', 'F:8']
0.13497908968200828 0.026374545214776866 0.03933272691515703





input/ref/Task1/P05-1013_vardha.csv
input/res/Task1/P05-1013.annv3.csv
parsing: input/ref/Task1/P05-1013_vardha.csv
 <S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'"]
'20'
['20']
parsed_discourse_facet ['method_citation']
  <S sid="9" ssid="5">This is true of the widely used link grammar parser for English (Sleator and Temperley, 1993), which uses a dependency grammar of sorts, the probabilistic dependency parser of Eisner (1996), and more recently proposed deterministic dependency parsers (Yamada and Matsumoto, 2003; Nivre et al., 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
    <S sid="104" ssid="15">The overall parsing accuracy obtained with the pseudo-projective approach is still lower than for the best projective parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'"]
'104'
['104']
parsed_discourse_facet ['method_citation']
  <S sid="104" ssid="15">The overall parsing accuracy obtained with the pseudo-projective approach is still lower than for the best projective parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'"]
'104'
['104']
parsed_discourse_facet ['method_citation']
    <S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'109'"]
'109'
['109']
parsed_discourse_facet ['method_citation']
 <S sid="95" ssid="6">The second main result is that the pseudo-projective approach to parsing (using special arc labels to guide an inverse transformation) gives a further improvement of about one percentage point on attachment score.</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'"]
'95'
['95']
parsed_discourse_facet ['method_citation']
    <S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'20'"]
'20'
['20']
parsed_discourse_facet ['method_citation']
    <S sid="36" ssid="7">As observed by Kahane et al. (1998), any (nonprojective) dependency graph can be transformed into a projective one by a lifting operation, which replaces each non-projective arc wj wk by a projective arc wi &#8212;* wk such that wi &#8212;*&#8727; wj holds in the original graph.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
 <S sid="62" ssid="1">In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'"]
'62'
['62']
parsed_discourse_facet ['method_citation']
 <S sid="104" ssid="15">The overall parsing accuracy obtained with the pseudo-projective approach is still lower than for the best projective parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'"]
'104'
['104']
parsed_discourse_facet ['method_citation']
    <S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'"]
'23'
['23']
parsed_discourse_facet ['method_citation']
 <S sid="104" ssid="15">The overall parsing accuracy obtained with the pseudo-projective approach is still lower than for the best projective parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'"]
'104'
['104']
parsed_discourse_facet ['method_citation']
 <S sid="95" ssid="6">The second main result is that the pseudo-projective approach to parsing (using special arc labels to guide an inverse transformation) gives a further improvement of about one percentage point on attachment score.</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'"]
'95'
['95']
parsed_discourse_facet ['method_citation']
    <S sid="96" ssid="7">With respect to exact match, the improvement is even more noticeable, which shows quite clearly that even if non-projective dependencies are rare on the token level, they are nevertheless important for getting the global syntactic structure correct.</S>
original cit marker offset is 0
new cit marker offset is 0



["'96'"]
'96'
['96']
parsed_discourse_facet ['method_citation']
 <S sid="95" ssid="6">The second main result is that the pseudo-projective approach to parsing (using special arc labels to guide an inverse transformation) gives a further improvement of about one percentage point on attachment score.</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'"]
'95'
['95']
parsed_discourse_facet ['method_citation']
  <S sid="40" ssid="11">Even this may be nondeterministic, in case the graph contains several non-projective arcs whose lifts interact, but we use the following algorithm to construct a minimal projective transformation D0 = (W, A0) of a (nonprojective) dependency graph D = (W, A): The function SMALLEST-NONP-ARC returns the non-projective arc with the shortest distance from head to dependent (breaking ties from left to right).</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'"]
'40'
['40']
parsed_discourse_facet ['method_citation']
  <S sid="7" ssid="3">From the point of view of computational implementation this can be problematic, since the inclusion of non-projective structures makes the parsing problem more complex and therefore compromises efficiency and in practice also accuracy and robustness.</S>
original cit marker offset is 0
new cit marker offset is 0



["'7'"]
'7'
['7']
parsed_discourse_facet ['method_citation']
    <S sid="14" ssid="10">While the proportion of sentences containing non-projective dependencies is often 15&#8211;25%, the total proportion of non-projective arcs is normally only 1&#8211;2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'14'"]
'14'
['14']
parsed_discourse_facet ['method_citation']
 <S sid="49" ssid="20">The baseline simply retains the original labels for all arcs, regardless of whether they have been lifted or not, and the number of distinct labels is therefore simply the number n of distinct dependency types.2 In the first encoding scheme, called Head, we use a new label d&#8593;h for each lifted arc, where d is the dependency relation between the syntactic head and the dependent in the non-projective representation, and h is the dependency relation that the syntactic head has to its own head in the underlying structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'49'"]
'49'
['49']
parsed_discourse_facet ['method_citation']
 <S sid="104" ssid="15">The overall parsing accuracy obtained with the pseudo-projective approach is still lower than for the best projective parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'"]
'104'
['104']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P05-1013.annv3.csv
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'20'", "'0'"]
'30'
'20'
'0'
['30', '20', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'20'"]
'0'
'24'
'20'
['0', '24', '20']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="15" ssid="11">As long as the main evaluation metric is dependency accuracy per word, with state-of-the-art accuracy mostly below 90%, the penalty for not handling non-projective constructions is almost negligible.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'110'", "'15'"]
'30'
'110'
'15'
['30', '110', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="62" ssid="1">In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'0'", "'62'"]
'23'
'0'
'62'
['23', '0', '62']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'110'", "'23'"]
'24'
'110'
'23'
['24', '110', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="22" ssid="18">When the parser is trained on the transformed data, it will ideally learn not only to construct projective dependency structures but also to assign arc labels that encode information about lifts.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'22'"]
'30'
'0'
'22'
['30', '0', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="40" ssid="11">Even this may be nondeterministic, in case the graph contains several non-projective arcs whose lifts interact, but we use the following algorithm to construct a minimal projective transformation D0 = (W, A0) of a (nonprojective) dependency graph D = (W, A): The function SMALLEST-NONP-ARC returns the non-projective arc with the shortest distance from head to dependent (breaking ties from left to right).</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'0'", "'40'"]
'23'
'0'
'40'
['23', '0', '40']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="108" ssid="19">However, while Dienes and Dubey recognize empty categories in a pre-processing step and only let the parser find their antecedents, we use the parser both to detect dislocated dependents and to predict either the type or the location of their syntactic head (or both) and use post-processing only to transform the graph in accordance with the parser’s analysis.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'108'"]
'30'
'0'
'108'
['30', '0', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'24'"]
'0'
'23'
'24'
['0', '23', '24']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S><S sid="14" ssid="10">While the proportion of sentences containing non-projective dependencies is often 15–25%, the total proportion of non-projective arcs is normally only 1–2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'20'", "'14'"]
'0'
'20'
'14'
['0', '20', '14']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="62" ssid="1">In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'62'"]
'0'
'24'
'62'
['0', '24', '62']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'30'"]
'0'
'24'
'30'
['0', '24', '30']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'24'"]
'30'
'0'
'24'
['30', '0', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'24'"]
'0'
'23'
'24'
['0', '23', '24']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="21" ssid="17">First, the training data for the parser is projectivized by applying a minimal number of lifting operations (Kahane et al., 1998) and encoding information about these lifts in arc labels.</S><S sid="45" ssid="16">In order to facilitate this task, we extend the set of arc labels to encode information about lifting operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'21'", "'45'"]
'30'
'21'
'45'
['30', '21', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'110'"]
'30'
'0'
'110'
['30', '0', '110']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="81" ssid="8">However, the overall percentage of non-projective arcs is less than 2% in PDT and less than 1% in DDT.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'110'", "'81'"]
'0'
'110'
'81'
['0', '110', '81']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
dict_values(['In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.', 'Pseudo-Projective Dependency Parsing'])
['system', 'ROUGE-S*', 'Average_R:', '0.20920', '(95%-conf.int.', '0.20920', '-', '0.20920)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.34601', '(95%-conf.int.', '0.34601', '-', '0.34601)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:91', 'F:91']
dict_values(['This is true of the widely used link grammar parser for English (Sleator and Temperley, 1993), which uses a dependency grammar of sorts, the probabilistic dependency parser of Eisner (1996), and more recently proposed deterministic dependency parsers (Yamada and Matsumoto, 2003; Nivre et al., 2004).'])
dict_values(['Pseudo-Projective Dependency Parsing', 'We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).', 'In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01970', '(95%-conf.int.', '0.01970', '-', '0.01970)']
['system', 'ROUGE-S*', 'Average_P:', '0.02116', '(95%-conf.int.', '0.02116', '-', '0.02116)']
['system', 'ROUGE-S*', 'Average_F:', '0.02041', '(95%-conf.int.', '0.02041', '-', '0.02041)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:406', 'P:378', 'F:8']
dict_values(['The overall parsing accuracy obtained with the pseudo-projective approach is still lower than for the best projective parsers.'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.', 'As long as the main evaluation metric is dependency accuracy per word, with state-of-the-art accuracy mostly below 90%, the penalty for not handling non-projective constructions is almost negligible.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00435', '(95%-conf.int.', '0.00435', '-', '0.00435)']
['system', 'ROUGE-S*', 'Average_P:', '0.16667', '(95%-conf.int.', '0.16667', '-', '0.16667)']
['system', 'ROUGE-S*', 'Average_F:', '0.00849', '(95%-conf.int.', '0.00849', '-', '0.00849)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1378', 'P:36', 'F:6']
dict_values(['The overall parsing accuracy obtained with the pseudo-projective approach is still lower than for the best projective parsers.'])
dict_values(['Pseudo-Projective Dependency Parsing', 'We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).', 'By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01295', '(95%-conf.int.', '0.01295', '-', '0.01295)']
['system', 'ROUGE-S*', 'Average_P:', '0.38889', '(95%-conf.int.', '0.38889', '-', '0.38889)']
['system', 'ROUGE-S*', 'Average_F:', '0.02507', '(95%-conf.int.', '0.02507', '-', '0.02507)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:36', 'F:14']
dict_values(['We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.'])
dict_values(['By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.', 'Pseudo-Projective Dependency Parsing', 'In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).'])
['system', 'ROUGE-S*', 'Average_R:', '0.01812', '(95%-conf.int.', '0.01812', '-', '0.01812)']
['system', 'ROUGE-S*', 'Average_P:', '0.29524', '(95%-conf.int.', '0.29524', '-', '0.29524)']
['system', 'ROUGE-S*', 'Average_F:', '0.03414', '(95%-conf.int.', '0.03414', '-', '0.03414)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1711', 'P:105', 'F:31']
dict_values(['The second main result is that the pseudo-projective approach to parsing (using special arc labels to guide an inverse transformation) gives a further improvement of about one percentage point on attachment score.'])
dict_values(['We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).', 'The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.', 'By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01756', '(95%-conf.int.', '0.01756', '-', '0.01756)']
['system', 'ROUGE-S*', 'Average_P:', '0.29412', '(95%-conf.int.', '0.29412', '-', '0.29412)']
['system', 'ROUGE-S*', 'Average_F:', '0.03314', '(95%-conf.int.', '0.03314', '-', '0.03314)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2278', 'P:136', 'F:40']
dict_values(['In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'Pseudo-Projective Dependency Parsing', 'When the parser is trained on the transformed data, it will ideally learn not only to construct projective dependency structures but also to assign arc labels that encode information about lifts.'])
['system', 'ROUGE-S*', 'Average_R:', '0.03226', '(95%-conf.int.', '0.03226', '-', '0.03226)']
['system', 'ROUGE-S*', 'Average_P:', '0.17582', '(95%-conf.int.', '0.17582', '-', '0.17582)']
['system', 'ROUGE-S*', 'Average_F:', '0.05451', '(95%-conf.int.', '0.05451', '-', '0.05451)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:91', 'F:16']
dict_values(['As observed by Kahane et al. (1998), any (nonprojective) dependency graph can be transformed into a projective one by a lifting operation, which replaces each non-projective arc wj wk by a projective arc wi &#8212;* wk such that wi &#8212;*&#8727; wj holds in the original graph.'])
dict_values(['By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.', 'Pseudo-Projective Dependency Parsing', 'Even this may be nondeterministic, in case the graph contains several non-projective arcs whose lifts interact, but we use the following algorithm to construct a minimal projective transformation D0 = (W, A0) of a (nonprojective) dependency graph D = (W, A): The function SMALLEST-NONP-ARC returns the non-projective arc with the shortest distance from head to dependent (breaking ties from left to right).'])
['system', 'ROUGE-S*', 'Average_R:', '0.02261', '(95%-conf.int.', '0.02261', '-', '0.02261)']
['system', 'ROUGE-S*', 'Average_P:', '0.13228', '(95%-conf.int.', '0.13228', '-', '0.13228)']
['system', 'ROUGE-S*', 'Average_F:', '0.03862', '(95%-conf.int.', '0.03862', '-', '0.03862)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2211', 'P:378', 'F:50']
dict_values(['In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'Pseudo-Projective Dependency Parsing', 'However, while Dienes and Dubey recognize empty categories in a pre-processing step and only let the parser find their antecedents, we use the parser both to detect dislocated dependents and to predict either the type or the location of their syntactic head (or both) and use post-processing only to transform the graph in accordance with the parser’s analysis.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01440', '(95%-conf.int.', '0.01440', '-', '0.01440)']
['system', 'ROUGE-S*', 'Average_P:', '0.05138', '(95%-conf.int.', '0.05138', '-', '0.05138)']
['system', 'ROUGE-S*', 'Average_F:', '0.02249', '(95%-conf.int.', '0.02249', '-', '0.02249)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:253', 'F:13']
dict_values(['The overall parsing accuracy obtained with the pseudo-projective approach is still lower than for the best projective parsers.'])
dict_values(['Pseudo-Projective Dependency Parsing', 'By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.', 'We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).'])
['system', 'ROUGE-S*', 'Average_R:', '0.01203', '(95%-conf.int.', '0.01203', '-', '0.01203)']
['system', 'ROUGE-S*', 'Average_P:', '0.36111', '(95%-conf.int.', '0.36111', '-', '0.36111)']
['system', 'ROUGE-S*', 'Average_F:', '0.02328', '(95%-conf.int.', '0.02328', '-', '0.02328)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:36', 'F:13']
dict_values(['By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.'])
dict_values(['Pseudo-Projective Dependency Parsing', 'In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.', 'While the proportion of sentences containing non-projective dependencies is often 15–25%, the total proportion of non-projective arcs is normally only 1–2%.'])
['system', 'ROUGE-S*', 'Average_R:', '0.06897', '(95%-conf.int.', '0.06897', '-', '0.06897)']
['system', 'ROUGE-S*', 'Average_P:', '0.06048', '(95%-conf.int.', '0.06048', '-', '0.06048)']
['system', 'ROUGE-S*', 'Average_F:', '0.06445', '(95%-conf.int.', '0.06445', '-', '0.06445)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:496', 'F:30']
dict_values(['The overall parsing accuracy obtained with the pseudo-projective approach is still lower than for the best projective parsers.'])
dict_values(['Pseudo-Projective Dependency Parsing', 'We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).', 'In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).'])
['system', 'ROUGE-S*', 'Average_R:', '0.01422', '(95%-conf.int.', '0.01422', '-', '0.01422)']
['system', 'ROUGE-S*', 'Average_P:', '0.27778', '(95%-conf.int.', '0.27778', '-', '0.27778)']
['system', 'ROUGE-S*', 'Average_F:', '0.02706', '(95%-conf.int.', '0.02706', '-', '0.02706)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:703', 'P:36', 'F:10']
dict_values(['Even this may be nondeterministic, in case the graph contains several non-projective arcs whose lifts interact, but we use the following algorithm to construct a minimal projective transformation D0 = (W, A0) of a (nonprojective) dependency graph D = (W, A): The function SMALLEST-NONP-ARC returns the non-projective arc with the shortest distance from head to dependent (breaking ties from left to right).'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'First, the training data for the parser is projectivized by applying a minimal number of lifting operations (Kahane et al., 1998) and encoding information about these lifts in arc labels.', 'In order to facilitate this task, we extend the set of arc labels to encode information about lifting operations.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02317', '(95%-conf.int.', '0.02317', '-', '0.02317)']
['system', 'ROUGE-S*', 'Average_P:', '0.04086', '(95%-conf.int.', '0.04086', '-', '0.04086)']
['system', 'ROUGE-S*', 'Average_F:', '0.02957', '(95%-conf.int.', '0.02957', '-', '0.02957)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:820', 'P:465', 'F:19']
dict_values(['From the point of view of computational implementation this can be problematic, since the inclusion of non-projective structures makes the parsing problem more complex and therefore compromises efficiency and in practice also accuracy and robustness.'])
dict_values(['Pseudo-Projective Dependency Parsing', 'We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).', 'By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00278', '(95%-conf.int.', '0.00278', '-', '0.00278)']
['system', 'ROUGE-S*', 'Average_P:', '0.02206', '(95%-conf.int.', '0.02206', '-', '0.02206)']
['system', 'ROUGE-S*', 'Average_F:', '0.00493', '(95%-conf.int.', '0.00493', '-', '0.00493)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:136', 'F:3']
dict_values(['While the proportion of sentences containing non-projective dependencies is often 15&#8211;25%, the total proportion of non-projective arcs is normally only 1&#8211;2%.'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'Pseudo-Projective Dependency Parsing', 'The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00488', '(95%-conf.int.', '0.00488', '-', '0.00488)']
['system', 'ROUGE-S*', 'Average_P:', '0.04396', '(95%-conf.int.', '0.04396', '-', '0.04396)']
['system', 'ROUGE-S*', 'Average_F:', '0.00878', '(95%-conf.int.', '0.00878', '-', '0.00878)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:820', 'P:91', 'F:4']
dict_values(['The baseline simply retains the original labels for all arcs, regardless of whether they have been lifted or not, and the number of distinct labels is therefore simply the number n of distinct dependency types.2 In the first encoding scheme, called Head, we use a new label d&#8593;h for each lifted arc, where d is the dependency relation between the syntactic head and the dependent in the non-projective representation, and h is the dependency relation that the syntactic head has to its own head in the underlying structure.'])
dict_values(['Pseudo-Projective Dependency Parsing', 'The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.', 'However, the overall percentage of non-projective arcs is less than 2% in PDT and less than 1% in DDT.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01270', '(95%-conf.int.', '0.01270', '-', '0.01270)']
['system', 'ROUGE-S*', 'Average_P:', '0.01080', '(95%-conf.int.', '0.01080', '-', '0.01080)']
['system', 'ROUGE-S*', 'Average_F:', '0.01167', '(95%-conf.int.', '0.01167', '-', '0.01167)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:741', 'F:8']
dict_values(['The overall parsing accuracy obtained with the pseudo-projective approach is still lower than for the best projective parsers.'])
dict_values(['Pseudo-Projective Dependency Parsing', 'We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).', 'By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01295', '(95%-conf.int.', '0.01295', '-', '0.01295)']
['system', 'ROUGE-S*', 'Average_P:', '0.38889', '(95%-conf.int.', '0.38889', '-', '0.38889)']
['system', 'ROUGE-S*', 'Average_F:', '0.02507', '(95%-conf.int.', '0.02507', '-', '0.02507)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:36', 'F:14']
0.21949999870882353 0.029579411590709342 0.0457464703191384





input/ref/Task1/P05-1013_swastika.csv
input/res/Task1/P05-1013.annv3.csv
parsing: input/ref/Task1/P05-1013_swastika.csv
<S sid="49" ssid="20">The baseline simply retains the original labels for all arcs, regardless of whether they have been lifted or not, and the number of distinct labels is therefore simply the number n of distinct dependency types.2 In the first encoding scheme, called Head, we use a new label d&#8593;h for each lifted arc, where d is the dependency relation between the syntactic head and the dependent in the non-projective representation, and h is the dependency relation that the syntactic head has to its own head in the underlying structure.</S>
original cit marker offset is 0
new cit marker offset is 0



['49']
49
['49']
parsed_discourse_facet ['method_citation']
<S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



['109']
109
['109']
parsed_discourse_facet ['method_citation']
<S sid="95" ssid="6">The second main result is that the pseudo-projective approach to parsing (using special arc labels to guide an inverse transformation) gives a further improvement of about one percentage point on attachment score.</S>
original cit marker offset is 0
new cit marker offset is 0



['95']
95
['95']
parsed_discourse_facet ['result_citation']
<S sid="79" ssid="6">In the first part of the experiment, dependency graphs from the treebanks were projectivized using the algorithm described in section 2.</S>
original cit marker offset is 0
new cit marker offset is 0



['79']
79
['79']
parsed_discourse_facet ['method_citation']
<S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



['109']
109
['109']
parsed_discourse_facet ['result_citation']
<S sid="38" ssid="9">Projectivizing a dependency graph by lifting nonprojective arcs is a nondeterministic operation in the general case.</S>
original cit marker offset is 0
new cit marker offset is 0



['38']
38
['38']
parsed_discourse_facet ['method_citation']
<S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



['109']
109
['109']
parsed_discourse_facet ['result_citation']
<S sid="79" ssid="6">In the first part of the experiment, dependency graphs from the treebanks were projectivized using the algorithm described in section 2.</S>
original cit marker offset is 0
new cit marker offset is 0



['79']
79
['79']
parsed_discourse_facet ['method_citation']
<S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



['109']
109
['109']
parsed_discourse_facet ['result_citation']
S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



['109']
109
['109']
Error in Reference Offset
S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



['109']
109
['109']
Error in Reference Offset
    <S sid="86" ssid="13">As expected, the most informative encoding, Head+Path, gives the highest accuracy with over 99% of all non-projective arcs being recovered correctly in both data sets.</S>
original cit marker offset is 0
new cit marker offset is 0



['86']
86
['86']
parsed_discourse_facet ['method_citation']
<S sid="95" ssid="6">The second main result is that the pseudo-projective approach to parsing (using special arc labels to guide an inverse transformation) gives a further improvement of about one percentage point on attachment score.</S>
original cit marker offset is 0
new cit marker offset is 0



['95']
95
['95']
parsed_discourse_facet ['method_citation']
<S sid="109" ssid="1">We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



['109']
109
['109']
parsed_discourse_facet ['result_citation']
 <S sid="51" ssid="22">In the second scheme, Head+Path, we in addition modify the label of every arc along the lifting path from the syntactic to the linear head so that if the original label is p the new label is p&#8595;.</S>
original cit marker offset is 0
new cit marker offset is 0



['51']
51
['51']
parsed_discourse_facet ['method_citation']
<S sid="99" ssid="10">This may seem surprising, given the experiments reported in section 4, but the explanation is probably that the non-projective dependencies that can be recovered at all are of the simple kind that only requires a single lift, where the encoding of path information is often redundant.</S>
original cit marker offset is 0
new cit marker offset is 0



['99']
99
['99']
parsed_discourse_facet ['result_citation']
<S sid="7" ssid="3">From the point of view of computational implementation this can be problematic, since the inclusion of non-projective structures makes the parsing problem more complex and therefore compromises efficiency and in practice also accuracy and robustness.</S>
original cit marker offset is 0
new cit marker offset is 0



['7']
7
['7']
parsed_discourse_facet ['method_citation']
<S sid="2" ssid="2">We show how a datadriven deterministic dependency parser, in itself restricted to projective structures, can be combined with graph transformation techniques to produce non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



['2']
2
['2']
parsed_discourse_facet ['aim_citation']
parsing: input/res/Task1/P05-1013.annv3.csv
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'20'", "'0'"]
'30'
'20'
'0'
['30', '20', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'20'"]
'0'
'24'
'20'
['0', '24', '20']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="15" ssid="11">As long as the main evaluation metric is dependency accuracy per word, with state-of-the-art accuracy mostly below 90%, the penalty for not handling non-projective constructions is almost negligible.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'110'", "'15'"]
'30'
'110'
'15'
['30', '110', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="62" ssid="1">In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'0'", "'62'"]
'23'
'0'
'62'
['23', '0', '62']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'110'", "'23'"]
'24'
'110'
'23'
['24', '110', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="22" ssid="18">When the parser is trained on the transformed data, it will ideally learn not only to construct projective dependency structures but also to assign arc labels that encode information about lifts.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'22'"]
'30'
'0'
'22'
['30', '0', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="40" ssid="11">Even this may be nondeterministic, in case the graph contains several non-projective arcs whose lifts interact, but we use the following algorithm to construct a minimal projective transformation D0 = (W, A0) of a (nonprojective) dependency graph D = (W, A): The function SMALLEST-NONP-ARC returns the non-projective arc with the shortest distance from head to dependent (breaking ties from left to right).</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'0'", "'40'"]
'23'
'0'
'40'
['23', '0', '40']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="108" ssid="19">However, while Dienes and Dubey recognize empty categories in a pre-processing step and only let the parser find their antecedents, we use the parser both to detect dislocated dependents and to predict either the type or the location of their syntactic head (or both) and use post-processing only to transform the graph in accordance with the parser’s analysis.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'108'"]
'30'
'0'
'108'
['30', '0', '108']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'24'"]
'0'
'23'
'24'
['0', '23', '24']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="20" ssid="16">In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.</S><S sid="14" ssid="10">While the proportion of sentences containing non-projective dependencies is often 15–25%, the total proportion of non-projective arcs is normally only 1–2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'20'", "'14'"]
'0'
'20'
'14'
['0', '20', '14']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="62" ssid="1">In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'62'"]
'0'
'24'
'62'
['0', '24', '62']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'30'"]
'0'
'24'
'30'
['0', '24', '30']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'24'"]
'30'
'0'
'24'
['30', '0', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'24'"]
'0'
'23'
'24'
['0', '23', '24']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="21" ssid="17">First, the training data for the parser is projectivized by applying a minimal number of lifting operations (Kahane et al., 1998) and encoding information about these lifts in arc labels.</S><S sid="45" ssid="16">In order to facilitate this task, we extend the set of arc labels to encode information about lifting operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'21'", "'45'"]
'30'
'21'
'45'
['30', '21', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="30" ssid="1">We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.</S><S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'", "'0'", "'110'"]
'30'
'0'
'110'
['30', '0', '110']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="110" ssid="2">The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.</S><S sid="81" ssid="8">However, the overall percentage of non-projective arcs is less than 2% in PDT and less than 1% in DDT.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'110'", "'81'"]
'0'
'110'
'81'
['0', '110', '81']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Pseudo-Projective Dependency Parsing</S><S sid="24" ssid="20">We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).</S><S sid="23" ssid="19">By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'23'"]
'0'
'24'
'23'
['0', '24', '23']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
dict_values(['The baseline simply retains the original labels for all arcs, regardless of whether they have been lifted or not, and the number of distinct labels is therefore simply the number n of distinct dependency types.2 In the first encoding scheme, called Head, we use a new label d&#8593;h for each lifted arc, where d is the dependency relation between the syntactic head and the dependent in the non-projective representation, and h is the dependency relation that the syntactic head has to its own head in the underlying structure.'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.', 'Pseudo-Projective Dependency Parsing'])
['system', 'ROUGE-S*', 'Average_R:', '0.03908', '(95%-conf.int.', '0.03908', '-', '0.03908)']
['system', 'ROUGE-S*', 'Average_P:', '0.02294', '(95%-conf.int.', '0.02294', '-', '0.02294)']
['system', 'ROUGE-S*', 'Average_F:', '0.02891', '(95%-conf.int.', '0.02891', '-', '0.02891)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:741', 'F:17']
dict_values(['We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.'])
dict_values(['Pseudo-Projective Dependency Parsing', 'We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).', 'In this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.'])
['system', 'ROUGE-S*', 'Average_R:', '0.13054', '(95%-conf.int.', '0.13054', '-', '0.13054)']
['system', 'ROUGE-S*', 'Average_P:', '0.50476', '(95%-conf.int.', '0.50476', '-', '0.50476)']
['system', 'ROUGE-S*', 'Average_F:', '0.20744', '(95%-conf.int.', '0.20744', '-', '0.20744)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:406', 'P:105', 'F:53']
dict_values(['The second main result is that the pseudo-projective approach to parsing (using special arc labels to guide an inverse transformation) gives a further improvement of about one percentage point on attachment score.'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.', 'As long as the main evaluation metric is dependency accuracy per word, with state-of-the-art accuracy mostly below 90%, the penalty for not handling non-projective constructions is almost negligible.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00871', '(95%-conf.int.', '0.00871', '-', '0.00871)']
['system', 'ROUGE-S*', 'Average_P:', '0.08824', '(95%-conf.int.', '0.08824', '-', '0.08824)']
['system', 'ROUGE-S*', 'Average_F:', '0.01585', '(95%-conf.int.', '0.01585', '-', '0.01585)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1378', 'P:136', 'F:12']
dict_values(['In the first part of the experiment, dependency graphs from the treebanks were projectivized using the algorithm described in section 2.'])
dict_values(['Pseudo-Projective Dependency Parsing', 'We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).', 'By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00093', '(95%-conf.int.', '0.00093', '-', '0.00093)']
['system', 'ROUGE-S*', 'Average_P:', '0.02222', '(95%-conf.int.', '0.02222', '-', '0.02222)']
['system', 'ROUGE-S*', 'Average_F:', '0.00178', '(95%-conf.int.', '0.00178', '-', '0.00178)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:45', 'F:1']
dict_values(['We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.'])
dict_values(['By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.', 'Pseudo-Projective Dependency Parsing', 'In the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish (Nivre et al., 2004) and English (Nivre and Scholz, 2004).'])
['system', 'ROUGE-S*', 'Average_R:', '0.01812', '(95%-conf.int.', '0.01812', '-', '0.01812)']
['system', 'ROUGE-S*', 'Average_P:', '0.29524', '(95%-conf.int.', '0.29524', '-', '0.29524)']
['system', 'ROUGE-S*', 'Average_F:', '0.03414', '(95%-conf.int.', '0.03414', '-', '0.03414)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1711', 'P:105', 'F:31']
dict_values(['Projectivizing a dependency graph by lifting nonprojective arcs is a nondeterministic operation in the general case.'])
dict_values(['We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).', 'The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.', 'By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00088', '(95%-conf.int.', '0.00088', '-', '0.00088)']
['system', 'ROUGE-S*', 'Average_P:', '0.04444', '(95%-conf.int.', '0.04444', '-', '0.04444)']
['system', 'ROUGE-S*', 'Average_F:', '0.00172', '(95%-conf.int.', '0.00172', '-', '0.00172)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2278', 'P:45', 'F:2']
dict_values(['We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'Pseudo-Projective Dependency Parsing', 'When the parser is trained on the transformed data, it will ideally learn not only to construct projective dependency structures but also to assign arc labels that encode information about lifts.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05444', '(95%-conf.int.', '0.05444', '-', '0.05444)']
['system', 'ROUGE-S*', 'Average_P:', '0.25714', '(95%-conf.int.', '0.25714', '-', '0.25714)']
['system', 'ROUGE-S*', 'Average_F:', '0.08985', '(95%-conf.int.', '0.08985', '-', '0.08985)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:105', 'F:27']
dict_values(['In the first part of the experiment, dependency graphs from the treebanks were projectivized using the algorithm described in section 2.'])
dict_values(['By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.', 'Pseudo-Projective Dependency Parsing', 'Even this may be nondeterministic, in case the graph contains several non-projective arcs whose lifts interact, but we use the following algorithm to construct a minimal projective transformation D0 = (W, A0) of a (nonprojective) dependency graph D = (W, A): The function SMALLEST-NONP-ARC returns the non-projective arc with the shortest distance from head to dependent (breaking ties from left to right).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00136', '(95%-conf.int.', '0.00136', '-', '0.00136)']
['system', 'ROUGE-S*', 'Average_P:', '0.06667', '(95%-conf.int.', '0.06667', '-', '0.06667)']
['system', 'ROUGE-S*', 'Average_F:', '0.00266', '(95%-conf.int.', '0.00266', '-', '0.00266)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2211', 'P:45', 'F:3']
dict_values(['We have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'Pseudo-Projective Dependency Parsing', 'However, while Dienes and Dubey recognize empty categories in a pre-processing step and only let the parser find their antecedents, we use the parser both to detect dislocated dependents and to predict either the type or the location of their syntactic head (or both) and use post-processing only to transform the graph in accordance with the parser’s analysis.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02436', '(95%-conf.int.', '0.02436', '-', '0.02436)']
['system', 'ROUGE-S*', 'Average_P:', '0.20952', '(95%-conf.int.', '0.20952', '-', '0.20952)']
['system', 'ROUGE-S*', 'Average_F:', '0.04365', '(95%-conf.int.', '0.04365', '-', '0.04365)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:105', 'F:22']
no Reference Text in gold P05-1013
no Reference Text in gold P05-1013
dict_values(['In the second scheme, Head+Path, we in addition modify the label of every arc along the lifting path from the syntactic to the linear head so that if the original label is p the new label is p&#8595;.'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'First, the training data for the parser is projectivized by applying a minimal number of lifting operations (Kahane et al., 1998) and encoding information about these lifts in arc labels.', 'In order to facilitate this task, we extend the set of arc labels to encode information about lifting operations.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01220', '(95%-conf.int.', '0.01220', '-', '0.01220)']
['system', 'ROUGE-S*', 'Average_P:', '0.08333', '(95%-conf.int.', '0.08333', '-', '0.08333)']
['system', 'ROUGE-S*', 'Average_F:', '0.02128', '(95%-conf.int.', '0.02128', '-', '0.02128)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:820', 'P:120', 'F:10']
dict_values(['This may seem surprising, given the experiments reported in section 4, but the explanation is probably that the non-projective dependencies that can be recovered at all are of the simple kind that only requires a single lift, where the encoding of path information is often redundant.'])
dict_values(['Pseudo-Projective Dependency Parsing', 'We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).', 'By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00093', '(95%-conf.int.', '0.00093', '-', '0.00093)']
['system', 'ROUGE-S*', 'Average_P:', '0.00654', '(95%-conf.int.', '0.00654', '-', '0.00654)']
['system', 'ROUGE-S*', 'Average_F:', '0.00162', '(95%-conf.int.', '0.00162', '-', '0.00162)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:153', 'F:1']
dict_values(['From the point of view of computational implementation this can be problematic, since the inclusion of non-projective structures makes the parsing problem more complex and therefore compromises efficiency and in practice also accuracy and robustness.'])
dict_values(['We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.', 'Pseudo-Projective Dependency Parsing', 'The main result is that the combined system can recover non-projective dependencies with a precision sufficient to give a significant improvement in overall parsing accuracy, especially with respect to the exact match criterion, leading to the best reported performance for robust non-projective parsing of Czech.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00732', '(95%-conf.int.', '0.00732', '-', '0.00732)']
['system', 'ROUGE-S*', 'Average_P:', '0.04412', '(95%-conf.int.', '0.04412', '-', '0.04412)']
['system', 'ROUGE-S*', 'Average_F:', '0.01255', '(95%-conf.int.', '0.01255', '-', '0.01255)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:820', 'P:136', 'F:6']
dict_values(['We show how a datadriven deterministic dependency parser, in itself restricted to projective structures, can be combined with graph transformation techniques to produce non-projective structures.'])
dict_values(['Pseudo-Projective Dependency Parsing', 'We call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (Kahane et al., 1998).', 'By applying an inverse transformation to the output of the parser, arcs with non-standard labels can be lowered to their proper place in the dependency graph, giving rise 1The dependency graph has been modified to make the final period a dependent of the main verb instead of being a dependent of a special root node for the sentence. to non-projective structures.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01850', '(95%-conf.int.', '0.01850', '-', '0.01850)']
['system', 'ROUGE-S*', 'Average_P:', '0.19048', '(95%-conf.int.', '0.19048', '-', '0.19048)']
['system', 'ROUGE-S*', 'Average_F:', '0.03373', '(95%-conf.int.', '0.03373', '-', '0.03373)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:105', 'F:20']
0.1412030758368994 0.02441307673528402 0.038090768937763315





input/ref/Task1/W99-0623_swastika.csv
input/res/Task1/W99-0623.annv3.csv
parsing: input/ref/Task1/W99-0623_swastika.csv
<S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



['85']
85
['85']
parsed_discourse_facet ['aim_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



['120']
120
['120']
parsed_discourse_facet ['result_citation']
<S sid="25" ssid="11">In our particular case the majority requires the agreement of only two parsers because we have only three.</S>
original cit marker offset is 0
new cit marker offset is 0



['25']
25
['25']
parsed_discourse_facet ['method_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



['120']
120
['120']
parsed_discourse_facet ['result_citation']
<S sid="38" ssid="24">Under certain conditions the constituent voting and na&#239;ve Bayes constituent combination techniques are guaranteed to produce sets of constituents with no crossing brackets.</S>
original cit marker offset is 0
new cit marker offset is 0



['38']
38
['38']
parsed_discourse_facet ['result_citation']
<S sid="91" ssid="20">Features and context were initially introduced into the models, but they refused to offer any gains in performance.</S>
original cit marker offset is 0
new cit marker offset is 0



['91']
91
['91']
parsed_discourse_facet ['method_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



['120']
120
['120']
parsed_discourse_facet ['result_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



['120']
120
['120']
parsed_discourse_facet ['result_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



['139']
139
['139']
parsed_discourse_facet ['result_citation']
<S sid="25" ssid="11">In our particular case the majority requires the agreement of only two parsers because we have only three.</S>
original cit marker offset is 0
new cit marker offset is 0



['25']
25
['25']
parsed_discourse_facet ['method_citation']
<S sid="103" ssid="32">The counts represent portions of the approximately 44000 constituents hypothesized by the parsers in the development set.</S>
original cit marker offset is 0
new cit marker offset is 0



['103']
103
['103']
parsed_discourse_facet ['method_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



['139']
139
['139']
parsed_discourse_facet ['result_citation']
<S sid="70" ssid="56">In this case we are interested in finding' the maximum probability parse, ri, and Mi is the set of relevant (binary) parsing decisions made by parser i. ri is a parse selected from among the outputs of the individual parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



['70']
70
['70']
parsed_discourse_facet ['aim_citation']
<S sid="140" ssid="2">For each experiment we gave an nonparametric and a parametric technique for combining parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



['140']
140
['140']
parsed_discourse_facet ['method_citation']
<S sid="70" ssid="56">In this case we are interested in finding' the maximum probability parse, ri, and Mi is the set of relevant (binary) parsing decisions made by parser i. ri is a parse selected from among the outputs of the individual parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



['70']
70
['70']
parsed_discourse_facet ['aim_citation']
<S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



['85']
85
['85']
parsed_discourse_facet ['result_citation']
<S sid="70" ssid="56">In this case we are interested in finding' the maximum probability parse, ri, and Mi is the set of relevant (binary) parsing decisions made by parser i. ri is a parse selected from among the outputs of the individual parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



['70']
70
['70']
parsed_discourse_facet ['aim_citation']
parsing: input/res/Task1/W99-0623.annv3.csv
<S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'120'", "'139'"]
'85'
'120'
'139'
['85', '120', '139']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="96" ssid="25">We call such a constituent an isolated constituent.</S>
original cit marker offset is 0
new cit marker offset is 0



["'120'", "'23'", "'96'"]
'120'
'23'
'96'
['120', '23', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="14" ssid="10">We used these three parsers to explore parser combination techniques.</S><S sid="25" ssid="11">In our particular case the majority requires the agreement of only two parsers because we have only three.</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'14'", "'25'"]
'139'
'14'
'25'
['139', '14', '25']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'77'", "'120'"]
'23'
'77'
'120'
['23', '77', '120']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="13">Another technique for parse hybridization is to use a naïve Bayes classifier to determine which constituents to include in the parse.</S><S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="16" ssid="2">We call this approach parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'15'", "'16'"]
'27'
'15'
'16'
['27', '15', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="96" ssid="25">We call such a constituent an isolated constituent.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'120'", "'96'"]
'23'
'120'
'96'
['23', '120', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="5">Through parser combination we have reduced the precision error rate by 30% and the recall error rate by 6% compared to the best previously published result.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'120'", "'23'"]
'143'
'120'
'23'
['143', '120', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'139'", "'120'"]
'23'
'139'
'120'
['23', '139', '120']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'67'", "'139'", "'77'"]
'67'
'139'
'77'
['67', '139', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S><S sid="143" ssid="5">Through parser combination we have reduced the precision error rate by 30% and the recall error rate by 6% compared to the best previously published result.</S>
original cit marker offset is 0
new cit marker offset is 0



["'120'", "'85'", "'143'"]
'120'
'85'
'143'
['120', '85', '143']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="60" ssid="46">First we present the non-parametric version of parser switching, similarity switching: The intuition for this technique is that we can measure a similarity between parses by counting the constituents they have in common.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'60'", "'120'", "'23'"]
'60'
'120'
'23'
['60', '120', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'67'", "'77'"]
'139'
'67'
'77'
['139', '67', '77']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="78" ssid="7">The set is then compared with the set generated from the Penn Treebank parse to determine the precision and recall.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'67'", "'78'"]
'15'
'67'
'78'
['15', '67', '78']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="96" ssid="25">We call such a constituent an isolated constituent.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S><S sid="16" ssid="2">We call this approach parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'96'", "'77'", "'16'"]
'96'
'77'
'16'
['96', '77', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="118" ssid="47">The maximum precision oracle is an upper bound on the possible gain we can achieve by parse hybridization.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'118'", "'77'"]
'15'
'118'
'77'
['15', '118', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="0" ssid="0">Exploiting Diversity in Natural Language Processing: Combining Parsers</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'0'", "'77'"]
'139'
'0'
'77'
['139', '0', '77']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="78" ssid="7">The set is then compared with the set generated from the Penn Treebank parse to determine the precision and recall.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'67'", "'78'"]
'15'
'67'
'78'
['15', '67', '78']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.'])
dict_values(['The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.', 'We call this technique constituent voting.', 'We call such a constituent an isolated constituent.'])
['system', 'ROUGE-S*', 'Average_R:', '0.56818', '(95%-conf.int.', '0.56818', '-', '0.56818)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.72464', '(95%-conf.int.', '0.72464', '-', '0.72464)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:300', 'F:300']
dict_values(['In our particular case the majority requires the agreement of only two parsers because we have only three.'])
dict_values(['We have presented two general approaches to studying parser combination: parser switching and parse hybridization.', 'We used these three parsers to explore parser combination techniques.', 'In our particular case the majority requires the agreement of only two parsers because we have only three.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05263', '(95%-conf.int.', '0.05263', '-', '0.05263)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.10000', '(95%-conf.int.', '0.10000', '-', '0.10000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:190', 'P:10', 'F:10']
dict_values(['The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.'])
dict_values(['Through parser combination we have reduced the precision error rate by 30% and the recall error rate by 6% compared to the best previously published result.', 'The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.', 'We call this technique constituent voting.'])
['system', 'ROUGE-S*', 'Average_R:', '0.31712', '(95%-conf.int.', '0.31712', '-', '0.31712)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.48154', '(95%-conf.int.', '0.48154', '-', '0.48154)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:946', 'P:300', 'F:300']
dict_values(['The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.'])
dict_values(['We call this technique constituent voting.', 'We have presented two general approaches to studying parser combination: parser switching and parse hybridization.', 'The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.'])
['system', 'ROUGE-S*', 'Average_R:', '0.40486', '(95%-conf.int.', '0.40486', '-', '0.40486)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.57637', '(95%-conf.int.', '0.57637', '-', '0.57637)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:741', 'P:300', 'F:300']
dict_values(['The counts represent portions of the approximately 44000 constituents hypothesized by the parsers in the development set.'])
dict_values(['First we present the non-parametric version of parser switching, similarity switching: The intuition for this technique is that we can measure a similarity between parses by counting the constituents they have in common.', 'The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.', 'We call this technique constituent voting.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00303', '(95%-conf.int.', '0.00303', '-', '0.00303)']
['system', 'ROUGE-S*', 'Average_P:', '0.06667', '(95%-conf.int.', '0.06667', '-', '0.06667)']
['system', 'ROUGE-S*', 'Average_F:', '0.00580', '(95%-conf.int.', '0.00580', '-', '0.00580)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:990', 'P:45', 'F:3']
dict_values(['We have presented two general approaches to studying parser combination: parser switching and parse hybridization.'])
dict_values(['We have presented two general approaches to studying parser combination: parser switching and parse hybridization.', 'The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.', 'Each parse is converted into a set of constituents represented as a tuples: (label, start, end).'])
['system', 'ROUGE-S*', 'Average_R:', '0.12821', '(95%-conf.int.', '0.12821', '-', '0.12821)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.22727', '(95%-conf.int.', '0.22727', '-', '0.22727)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:45', 'F:45']
dict_values(["In this case we are interested in finding' the maximum probability parse, ri, and Mi is the set of relevant (binary) parsing decisions made by parser i. ri is a parse selected from among the outputs of the individual parsers."])
dict_values(['We are interested in combining the substructures of the input parses to produce a better parse.', 'The maximum precision oracle is an upper bound on the possible gain we can achieve by parse hybridization.', 'Each parse is converted into a set of constituents represented as a tuples: (label, start, end).'])
['system', 'ROUGE-S*', 'Average_R:', '0.04000', '(95%-conf.int.', '0.04000', '-', '0.04000)']
['system', 'ROUGE-S*', 'Average_P:', '0.05714', '(95%-conf.int.', '0.05714', '-', '0.05714)']
['system', 'ROUGE-S*', 'Average_F:', '0.04706', '(95%-conf.int.', '0.04706', '-', '0.04706)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:210', 'F:12']
dict_values(['We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.'])
dict_values(['We have presented two general approaches to studying parser combination: parser switching and parse hybridization.', 'Exploiting Diversity in Natural Language Processing: Combining Parsers', 'Each parse is converted into a set of constituents represented as a tuples: (label, start, end).'])
['system', 'ROUGE-S*', 'Average_R:', '0.01538', '(95%-conf.int.', '0.01538', '-', '0.01538)']
['system', 'ROUGE-S*', 'Average_P:', '0.13889', '(95%-conf.int.', '0.13889', '-', '0.13889)']
['system', 'ROUGE-S*', 'Average_F:', '0.02770', '(95%-conf.int.', '0.02770', '-', '0.02770)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:36', 'F:5']
dict_values(["In this case we are interested in finding' the maximum probability parse, ri, and Mi is the set of relevant (binary) parsing decisions made by parser i. ri is a parse selected from among the outputs of the individual parsers."])
dict_values(['We are interested in combining the substructures of the input parses to produce a better parse.', 'The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.', 'The set is then compared with the set generated from the Penn Treebank parse to determine the precision and recall.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05000', '(95%-conf.int.', '0.05000', '-', '0.05000)']
['system', 'ROUGE-S*', 'Average_P:', '0.07143', '(95%-conf.int.', '0.07143', '-', '0.07143)']
['system', 'ROUGE-S*', 'Average_F:', '0.05882', '(95%-conf.int.', '0.05882', '-', '0.05882)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:210', 'F:15']
0.5926811045257656 0.17548999805011115 0.249911108334321





input/ref/Task1/P87-1015_sweta.csv
input/res/Task1/P87-1015.annv3.csv
parsing: input/ref/Task1/P87-1015_sweta.csv
<S sid="205" ssid="11">Independence of paths at this level reflects context freeness of rewriting and suggests why they can be recognized efficiently.</S>
original cit marker offset is 0
new cit marker offset is 0



["205'"]
205'
['205']
parsed_discourse_facet ['method_citation']
<S sid="229" ssid="35">In addition, the restricted version of CG's (discussed in Section 6) generates tree sets with independent paths and we hope that it can be included in a more general definition of LCFRS's containing formalisms whose tree sets have path sets that are themselves LCFRL's (as in the case of the restricted indexed grammars, and the hierarchy defined by Weir).</S>
original cit marker offset is 0
new cit marker offset is 0



["229'"]
229'
['229']
parsed_discourse_facet ['method_citation']
<S sid="146" ssid="31">Since every CFL is known to be semilinear (Parikh, 1966), in order to show semilinearity of some language, we need only show the existence of a letter equivalent CFL Our definition of LCFRS's insists that the composition operations are linear and nonerasing.</S>
original cit marker offset is 0
new cit marker offset is 0



["146'"]
146'
['146']
parsed_discourse_facet ['method_citation']
<S sid="201" ssid="7">It is interesting to note, however, that the ability to produce a bounded number of dependent paths (where two dependent paths can share an unbounded amount of information) does not require machinery as powerful as that used in LFG, FUG and IG's.</S>
original cit marker offset is 0
new cit marker offset is 0



["201'"]
201'
['201']
parsed_discourse_facet ['method_citation']
 <S sid="151" ssid="36">We now turn our attention to the recognition of string languages generated by these formalisms (LCFRL's).</S>
original cit marker offset is 0
new cit marker offset is 0



["151'"]
151'
['151']
parsed_discourse_facet ['method_citation']
 <S sid="222" ssid="28">However, in order to capture the properties of various grammatical systems under consideration, our notation is more restrictive that ILFP, which was designed as a general logical notation to characterize the complete class of languages that are recognizable in polynomial time.</S>
original cit marker offset is 0
new cit marker offset is 0



["222'"]
222'
['222']
parsed_discourse_facet ['method_citation']
<S sid="22" ssid="7">Gazdar (1985) argues this is the appropriate analysis of unbounded dependencies in the hypothetical Scandinavian language Norwedish.</S>
    <S sid="23" ssid="8">He also argues that paired English complementizers may also require structural descriptions whose path sets have nested dependencies.</S>
original cit marker offset is 0
new cit marker offset is 0



["22'", "'23'"]
22'
'23'
['22', '23']
parsed_discourse_facet ['method_citation']
 <S sid="156" ssid="41">Giving a recognition algorithm for LCFRL's involves describing the substrings of the input that are spanned by the structures derived by the LCFRS's and how the composition operation combines these substrings.</S>
original cit marker offset is 0
new cit marker offset is 0



["156'"]
156'
['156']
parsed_discourse_facet ['method_citation']
<S sid="221" ssid="27">Members of LCFRS whose operations have this property can be translated into the ILFP notation (Rounds, 1985).</S>
original cit marker offset is 0
new cit marker offset is 0



["221'"]
221'
['221']
parsed_discourse_facet ['method_citation']
<S sid="54" ssid="39">An IG can be viewed as a CFG in which each nonterminal is associated with a stack.</S>
original cit marker offset is 0
new cit marker offset is 0



["54'"]
54'
['54']
parsed_discourse_facet ['method_citation']
<S sid="128" ssid="13">As in the case of the derivation trees of CFG's, nodes are labeled by a member of some finite set of symbols (perhaps only implicit in the grammar as in TAG's) used to denote derived structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["128'"]
128'
['128']
parsed_discourse_facet ['method_citation']
<S sid="217" ssid="23">In considering the recognition of these languages, we were forced to be more specific regarding the relationship between the structures derived by these formalisms and the substrings they span.</S>
original cit marker offset is 0
new cit marker offset is 0



[";217'"]
;217'
[';217']
parsed_discourse_facet ['method_citation']
<S sid="16" ssid="1">From Thatcher's (1973) work, it is obvious that the complexity of the set of paths from root to frontier of trees in a local set (the tree set of a CFG) is regular'.</S>
original cit marker offset is 0
new cit marker offset is 0



["16'"]
16'
['16']
parsed_discourse_facet ['method_citation']
<S sid="16" ssid="1">From Thatcher's (1973) work, it is obvious that the complexity of the set of paths from root to frontier of trees in a local set (the tree set of a CFG) is regular'.</S>
original cit marker offset is 0
new cit marker offset is 0



["16'"]
16'
['16']
parsed_discourse_facet ['method_citation']
<S sid="214" ssid="20">LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S>
original cit marker offset is 0
new cit marker offset is 0



["214'"]
214'
['214']
parsed_discourse_facet ['method_citation']
<S sid="35" ssid="20">TAG's can be used to give the structural descriptions discussed by Gazdar (1985) for the unbounded nested dependencies in Norwedish, for cross serial dependencies in Dutch subordinate clauses, and for the nestings of paired English complementizers.</S>
original cit marker offset is 0
new cit marker offset is 0



["35'"]
35'
['35']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P87-1015.annv3.csv
<S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S><S sid="117" ssid="2">Our goal is to define a class of formal systems, and show that any member of this class will possess certain attractive properties.</S><S sid="110" ssid="16">The independence of paths in the tree sets of the k tI grammatical formalism in this hierarchy can be shown by means of tree pumping lemma of the form t1ti3t .</S>
original cit marker offset is 0
new cit marker offset is 0



["'165'", "'117'", "'110'"]
'165'
'117'
'110'
['165', '117', '110']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="111" ssid="17">.</S><S sid="230" ssid="36">LCFRS's have only been loosely defined in this paper; we have yet to provide a complete set of formal properties associated with members of this class.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'111'", "'230'", "'118'"]
'111'
'230'
'118'
['111', '230', '118']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="214" ssid="20">LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'125'", "'214'"]
'207'
'125'
'214'
['207', '125', '214']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'118'", "'92'"]
'207'
'118'
'92'
['207', '118', '92']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'92'", "'118'"]
'207'
'92'
'118'
['207', '92', '118']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'", "'207'", "'133'"]
'118'
'207'
'133'
['118', '207', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="214" ssid="20">LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S>
original cit marker offset is 0
new cit marker offset is 0



["'165'", "'125'", "'214'"]
'165'
'125'
'214'
['165', '125', '214']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="151" ssid="36">We now turn our attention to the recognition of string languages generated by these formalisms (LCFRL's).</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'151'", "'207'", "'92'"]
'151'
'207'
'92'
['151', '207', '92']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'", "'207'", "'133'"]
'118'
'207'
'133'
['118', '207', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="54" ssid="39">An IG can be viewed as a CFG in which each nonterminal is associated with a stack.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S>
original cit marker offset is 0
new cit marker offset is 0



["'54'", "'118'", "'165'"]
'54'
'118'
'165'
['54', '118', '165']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="75" ssid="60">A multicomponent Tree Adjoining Grammar (MCTAG) consists of a finite set of finite elementary tree sets.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S><S sid="28" ssid="13">A TAG consists of a finite set of elementary trees that are either initial trees or auxiliary trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'75'", "'133'", "'28'"]
'75'
'133'
'28'
['75', '133', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'207'", "'92'"]
'125'
'207'
'92'
['125', '207', '92']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="204" ssid="10">The similarities become apparent when they are studied at the level of derivation structures: derivation nee sets of CFG's, HG's, TAG's, and MCTAG's are all local sets.</S><S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'204'", "'165'"]
'125'
'204'
'165'
['125', '204', '165']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="78" ssid="63">Each member of a set of trees can be adjoined into distinct nodes of trees in a single elementary tree set, i.e, derivations always involve the adjunction of a derived auxiliary tree set into an elementary tree set.</S><S sid="80" ssid="65">The derivation trees of a MCTAG are similar to those of a TAG.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'78'", "'80'"]
'125'
'78'
'80'
['125', '78', '80']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="102" ssid="8">For example, let us consider a tree set containing trees of the form shown in Figure 4a.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'207'", "'102'"]
'125'
'207'
'102'
['125', '207', '102']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="134" ssid="19">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'125'", "'134'"]
'207'
'125'
'134'
['207', '125', '134']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
dict_values(['Independence of paths at this level reflects context freeness of rewriting and suggests why they can be recognized efficiently.'])
dict_values(['This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.', 'Our goal is to define a class of formal systems, and show that any member of this class will possess certain attractive properties.', 'The independence of paths in the tree sets of the k tI grammatical formalism in this hierarchy can be shown by means of tree pumping lemma of the form t1ti3t .'])
['system', 'ROUGE-S*', 'Average_R:', '0.00116', '(95%-conf.int.', '0.00116', '-', '0.00116)']
['system', 'ROUGE-S*', 'Average_P:', '0.02222', '(95%-conf.int.', '0.02222', '-', '0.02222)']
['system', 'ROUGE-S*', 'Average_F:', '0.00221', '(95%-conf.int.', '0.00221', '-', '0.00221)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:861', 'P:45', 'F:1']
dict_values(["In addition, the restricted version of CG's (discussed in Section 6) generates tree sets with independent paths and we hope that it can be included in a more general definition of LCFRS's containing formalisms whose tree sets have path sets that are themselves LCFRL's (as in the case of the restricted indexed grammars, and the hierarchy defined by Weir)."])
dict_values(['.', "LCFRS's have only been loosely defined in this paper; we have yet to provide a complete set of formal properties associated with members of this class.", "In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows."])
['system', 'ROUGE-S*', 'Average_R:', '0.01994', '(95%-conf.int.', '0.01994', '-', '0.01994)']
['system', 'ROUGE-S*', 'Average_P:', '0.01609', '(95%-conf.int.', '0.01609', '-', '0.01609)']
['system', 'ROUGE-S*', 'Average_F:', '0.01781', '(95%-conf.int.', '0.01781', '-', '0.01781)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:435', 'F:7']
dict_values(["Since every CFL is known to be semilinear (Parikh, 1966), in order to show semilinearity of some language, we need only show the existence of a letter equivalent CFL Our definition of LCFRS's insists that the composition operations are linear and nonerasing."])
dict_values(['We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.', 'Each derivation of a grammar can be represented by a generalized context-free derivation tree.', "LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85)."])
['system', 'ROUGE-S*', 'Average_R:', '0.00379', '(95%-conf.int.', '0.00379', '-', '0.00379)']
['system', 'ROUGE-S*', 'Average_P:', '0.01053', '(95%-conf.int.', '0.01053', '-', '0.01053)']
['system', 'ROUGE-S*', 'Average_F:', '0.00557', '(95%-conf.int.', '0.00557', '-', '0.00557)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:190', 'F:2']
dict_values(["It is interesting to note, however, that the ability to produce a bounded number of dependent paths (where two dependent paths can share an unbounded amount of information) does not require machinery as powerful as that used in LFG, FUG and IG's."])
dict_values(['We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.', "In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.", 'We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:190', 'F:0']
dict_values(['However, in order to capture the properties of various grammatical systems under consideration, our notation is more restrictive that ILFP, which was designed as a general logical notation to characterize the complete class of languages that are recognizable in polynomial time.'])
dict_values(["In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.", 'We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.', 'To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00303', '(95%-conf.int.', '0.00303', '-', '0.00303)']
['system', 'ROUGE-S*', 'Average_P:', '0.01579', '(95%-conf.int.', '0.01579', '-', '0.01579)']
['system', 'ROUGE-S*', 'Average_F:', '0.00508', '(95%-conf.int.', '0.00508', '-', '0.00508)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:990', 'P:190', 'F:3']
dict_values(['Gazdar (1985) argues this is the appropriate analysis of unbounded dependencies in the hypothetical Scandinavian language Norwedish.', 'He also argues that paired English complementizers may also require structural descriptions whose path sets have nested dependencies.'])
dict_values(['This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.', 'Each derivation of a grammar can be represented by a generalized context-free derivation tree.', "LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85)."])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:210', 'F:0']
dict_values(['Members of LCFRS whose operations have this property can be translated into the ILFP notation (Rounds, 1985).'])
dict_values(["In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.", 'We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.', 'To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00101', '(95%-conf.int.', '0.00101', '-', '0.00101)']
['system', 'ROUGE-S*', 'Average_P:', '0.02778', '(95%-conf.int.', '0.02778', '-', '0.02778)']
['system', 'ROUGE-S*', 'Average_F:', '0.00195', '(95%-conf.int.', '0.00195', '-', '0.00195)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:990', 'P:36', 'F:1']
dict_values(["As in the case of the derivation trees of CFG's, nodes are labeled by a member of some finite set of symbols (perhaps only implicit in the grammar as in TAG's) used to denote derived structures."])
dict_values(['A multicomponent Tree Adjoining Grammar (MCTAG) consists of a finite set of finite elementary tree sets.', 'To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.', 'A TAG consists of a finite set of elementary trees that are either initial trees or auxiliary trees.'])
['system', 'ROUGE-S*', 'Average_R:', '0.04184', '(95%-conf.int.', '0.04184', '-', '0.04184)']
['system', 'ROUGE-S*', 'Average_P:', '0.25833', '(95%-conf.int.', '0.25833', '-', '0.25833)']
['system', 'ROUGE-S*', 'Average_F:', '0.07201', '(95%-conf.int.', '0.07201', '-', '0.07201)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:741', 'P:120', 'F:31']
dict_values(["From Thatcher's (1973) work, it is obvious that the complexity of the set of paths from root to frontier of trees in a local set (the tree set of a CFG) is regular'."])
dict_values(['Each derivation of a grammar can be represented by a generalized context-free derivation tree.', 'Each member of a set of trees can be adjoined into distinct nodes of trees in a single elementary tree set, i.e, derivations always involve the adjunction of a derived auxiliary tree set into an elementary tree set.', 'The derivation trees of a MCTAG are similar to those of a TAG.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01783', '(95%-conf.int.', '0.01783', '-', '0.01783)']
['system', 'ROUGE-S*', 'Average_P:', '0.08333', '(95%-conf.int.', '0.08333', '-', '0.08333)']
['system', 'ROUGE-S*', 'Average_F:', '0.02937', '(95%-conf.int.', '0.02937', '-', '0.02937)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:120', 'F:10']
dict_values(["LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85)."])
dict_values(['Each derivation of a grammar can be represented by a generalized context-free derivation tree.', 'We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.', 'For example, let us consider a tree set containing trees of the form shown in Figure 4a.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00285', '(95%-conf.int.', '0.00285', '-', '0.00285)']
['system', 'ROUGE-S*', 'Average_P:', '0.01282', '(95%-conf.int.', '0.01282', '-', '0.01282)']
['system', 'ROUGE-S*', 'Average_F:', '0.00466', '(95%-conf.int.', '0.00466', '-', '0.00466)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:78', 'F:1']
dict_values(["TAG's can be used to give the structural descriptions discussed by Gazdar (1985) for the unbounded nested dependencies in Norwedish, for cross serial dependencies in Dutch subordinate clauses, and for the nestings of paired English complementizers."])
dict_values(['We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.', 'Each derivation of a grammar can be represented by a generalized context-free derivation tree.', "These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's)."])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:406', 'P:210', 'F:0']
0.04062636326703306 0.008313636288057853 0.012605454430859506





input/ref/Task1/E03-1005_aakansha.csv
input/res/Task1/E03-1005.annv3.csv
parsing: input/ref/Task1/E03-1005_aakansha.csv
<S sid="105" ssid="8">The derivation with the smallest sum, or highest rank, is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP, its results are still rather impressive for such a simple model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'105'"]
'105'
['105']
parsed_discourse_facet ['method_citation']
<S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'"]
'145'
['145']
parsed_discourse_facet ['method_citation']
<S sid="80" ssid="32">DOP1 has a serious bias: its subtree estimator provides more probability to nodes with more subtrees (Bonnema et al. 1999).</S>
original cit marker offset is 0
new cit marker offset is 0



["'80'"]
'80'
['80']
parsed_discourse_facet ['method_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'"]
'143'
['143']
parsed_discourse_facet ['method_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="141" ssid="6">This is roughly an 11% relative reduction in error rate over Charniak (2000) and Bods PCFG-reduction reported in Table 1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'", "'141'"]
'140'
'141'
['140', '141']
parsed_discourse_facet ['result_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['result_citation']
<S sid="102" ssid="5">In case the shortest derivation is not unique, Bod (2000b) proposes to back off to a frequency ordering of the subtrees.</S>
    <S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S>
original cit marker offset is 0
new cit marker offset is 0



["'102'", "'103'"]
'102'
'103'
['102', '103']
parsed_discourse_facet ['method_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['result_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['result_citation']
<S sid="46" ssid="43">Most previous notions of best parse tree in DOP1 were based on a probabilistic metric, with Bod (2000b) as a notable exception, who used a simplicity metric based on the shortest derivation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'46'"]
'46'
['46']
parsed_discourse_facet ['method_citation']
<S sid="85" ssid="37">For example, Bod (2001) samples a fixed number of subtrees of each depth, which has the effect of assigning roughly equal weight to each node in the training data, and roughly exponentially less probability for larger trees (see Goodman 2002: 12).</S>
    <S sid="86" ssid="38">Bod reports state-of-the-art results with this method, and observes no decrease in parse accuracy when larger subtrees are included (using subtrees up to depth 14).</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'86'"]
'85'
'86'
['85', '86']
parsed_discourse_facet ['method_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['result_citation']
<S sid="115" ssid="18">The only thing that needs to be changed for Simplicity-DOP is that all subtrees should be assigned equal probabilities.</S>
original cit marker offset is 0
new cit marker offset is 0



["'115'"]
'115'
['115']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/E03-1005.annv3.csv
<S sid="104" ssid="7">Next, the rank of each (shortest) derivation is computed as the sum of the ranks of the subtrees involved.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'", "'143'", "'103'"]
'104'
'143'
'103'
['104', '143', '103']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="0" ssid="0">An Efficient Implementation of a New DOP Model</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'143'", "'0'"]
'145'
'143'
'0'
['145', '143', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="94" ssid="46">This paper presents the first published results with this estimator on the WSJ.</S><S sid="29" ssid="26">Johnson (1998b, 2002) showed that DOP1's subtree estimation method is statistically biased and inconsistent.</S><S sid="43" ssid="40">Bod (2001, 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'", "'29'", "'43'"]
'94'
'29'
'43'
['94', '29', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="21" ssid="18">One instantiation of DOP which has received considerable interest is the model known as DOP12 (Bod 1992).</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'145'", "'21'"]
'143'
'145'
'21'
['143', '145', '21']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="2" ssid="2">This paper proposes an integration of the two models which outperforms each of them separately.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="34" ssid="31">But even with cross-validation, ML-DOP is outperformed by the much simpler DOP1 model on both the ATIS and OVIS treebanks (Bod 2000b).</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'145'", "'34'"]
'2'
'145'
'34'
['2', '145', '34']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="2" ssid="2">This paper proposes an integration of the two models which outperforms each of them separately.</S><S sid="133" ssid="14">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'", "'2'", "'133'"]
'140'
'2'
'133'
['140', '2', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="43" ssid="40">Bod (2001, 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'143'", "'43'"]
'103'
'143'
'43'
['103', '143', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S><S sid="126" ssid="7">We focused on the Labeled Precision (LP) and Labeled Recall (LR) scores, as these are commonly used to rank parsing systems.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'103'", "'126'"]
'143'
'103'
'126'
['143', '103', '126']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="97" ssid="49">In this paper, we will estimate the most probable parse by computing the 10,000 most probable derivations by means of Viterbi n-best, from which the most likely parse is estimated by summing up the probabilities of the derivations that generate the same parse.</S><S sid="25" ssid="22">Many implementations of DOP1 therefore estimate the most probable parse by Monte Carlo techniques (Bod 1998; Chappelier & Rajman 2000), or by Viterbi n-best search (Bod 2001), or by restricting the set of subtrees (Sima'an 1999; Chappelier et al. 2002).</S><S sid="26" ssid="23">Sima'an (1995) gave an efficient algorithm for computing the parse tree generated by the most probable derivation, which in some cases is a reasonable approximation of the most probable parse.</S>
original cit marker offset is 0
new cit marker offset is 0



["'97'", "'25'", "'26'"]
'97'
'25'
'26'
['97', '25', '26']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="133" ssid="14">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S><S sid="41" ssid="38">This paper presents the first published results with Goodman's PCFG-reductions of both Bonnema et al. 's (1999) and Bod's (2001) estimators on the WSJ.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'", "'133'", "'41'"]
'140'
'133'
'41'
['140', '133', '41']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="47" ssid="44">We show that a combination of a probabilistic and a simplicity metric, which chooses the simplest parse from the n likeliest parses, outperforms the use of these metrics alone.</S><S sid="104" ssid="7">Next, the rank of each (shortest) derivation is computed as the sum of the ranks of the subtrees involved.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'47'", "'104'", "'145'"]
'47'
'104'
'145'
['47', '104', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="86" ssid="38">Bod reports state-of-the-art results with this method, and observes no decrease in parse accuracy when larger subtrees are included (using subtrees up to depth 14).</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'86'", "'143'"]
'145'
'86'
'143'
['145', '86', '143']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="3" ssid="3">Together with a PCFGreduction of DOP we obtain improved accuracy and efficiency on the Wall Street Journal treebank Our results show an 11% relative reduction in error rate over previous models, and an average processing time of 3.6 seconds per WSJ sentence.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'3'", "'145'"]
'143'
'3'
'145'
['143', '3', '145']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="142" ssid="7">Compared to the reranking technique in Collins (2000), who obtained an LP of 89.9% and an LR of 89.6%, our results show a 9% relative error rate reduction.</S><S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'142'", "'140'", "'145'"]
'142'
'140'
'145'
['142', '140', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="36" ssid="33">As an alternative, Bonnema et al. (1999) propose a subtree estimator which reduces the probability of a tree by a factor of two for each non-root non-terminal it contains.</S><S sid="22" ssid="19">DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).</S><S sid="50" ssid="2">The probability of a parse tree is computed from the occurrencefrequencies of the subtrees in the treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'22'", "'50'"]
'36'
'22'
'50'
['36', '22', '50']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
dict_values(['The derivation with the smallest sum, or highest rank, is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP, its results are still rather impressive for such a simple model.'])
dict_values(['Next, the rank of each (shortest) derivation is computed as the sum of the ranks of the subtrees involved.', 'While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.', 'That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01814', '(95%-conf.int.', '0.01814', '-', '0.01814)']
['system', 'ROUGE-S*', 'Average_P:', '0.08333', '(95%-conf.int.', '0.08333', '-', '0.08333)']
['system', 'ROUGE-S*', 'Average_F:', '0.02980', '(95%-conf.int.', '0.02980', '-', '0.02980)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1378', 'P:300', 'F:25']
dict_values(['DOP1 has a serious bias: its subtree estimator provides more probability to nodes with more subtrees (Bonnema et al. 1999).'])
dict_values(['This paper presents the first published results with this estimator on the WSJ.', "Johnson (1998b, 2002) showed that DOP1's subtree estimation method is statistically biased and inconsistent.", 'Bod (2001, 2003).'])
['system', 'ROUGE-S*', 'Average_R:', '0.01905', '(95%-conf.int.', '0.01905', '-', '0.01905)']
['system', 'ROUGE-S*', 'Average_P:', '0.08889', '(95%-conf.int.', '0.08889', '-', '0.08889)']
['system', 'ROUGE-S*', 'Average_F:', '0.03137', '(95%-conf.int.', '0.03137', '-', '0.03137)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:210', 'P:45', 'F:4']
dict_values(['While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.'])
dict_values(['While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.', 'This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.', 'One instantiation of DOP which has received considerable interest is the model known as DOP12 (Bod 1992).'])
['system', 'ROUGE-S*', 'Average_R:', '0.23636', '(95%-conf.int.', '0.23636', '-', '0.23636)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.38235', '(95%-conf.int.', '0.38235', '-', '0.38235)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1485', 'P:351', 'F:351']
dict_values(['The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.'])
dict_values(['The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.', 'This paper proposes an integration of the two models which outperforms each of them separately.', 'It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).'])
['system', 'ROUGE-S*', 'Average_R:', '0.13904', '(95%-conf.int.', '0.13904', '-', '0.13904)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.24413', '(95%-conf.int.', '0.24413', '-', '0.24413)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:78', 'F:78']
dict_values(['In case the shortest derivation is not unique, Bod (2000b) proposes to back off to a frequency ordering of the subtrees.', 'That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.'])
dict_values(['That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.', 'While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.', 'Bod (2001, 2003).'])
['system', 'ROUGE-S*', 'Average_R:', '0.14096', '(95%-conf.int.', '0.14096', '-', '0.14096)']
['system', 'ROUGE-S*', 'Average_P:', '0.39163', '(95%-conf.int.', '0.39163', '-', '0.39163)']
['system', 'ROUGE-S*', 'Average_F:', '0.20730', '(95%-conf.int.', '0.20730', '-', '0.20730)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1128', 'P:406', 'F:159']
dict_values(['The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.'])
dict_values(['In this paper, we will estimate the most probable parse by computing the 10,000 most probable derivations by means of Viterbi n-best, from which the most likely parse is estimated by summing up the probabilities of the derivations that generate the same parse.', "Many implementations of DOP1 therefore estimate the most probable parse by Monte Carlo techniques (Bod 1998; Chappelier & Rajman 2000), or by Viterbi n-best search (Bod 2001), or by restricting the set of subtrees (Sima'an 1999; Chappelier et al. 2002).", "Sima'an (1995) gave an efficient algorithm for computing the parse tree generated by the most probable derivation, which in some cases is a reasonable approximation of the most probable parse."])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1711', 'P:78', 'F:0']
dict_values(['The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.'])
dict_values(['The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.', 'It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).', "This paper presents the first published results with Goodman's PCFG-reductions of both Bonnema et al. 's (1999) and Bod's (2001) estimators on the WSJ."])
['system', 'ROUGE-S*', 'Average_R:', '0.08638', '(95%-conf.int.', '0.08638', '-', '0.08638)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.15902', '(95%-conf.int.', '0.15902', '-', '0.15902)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:78', 'F:78']
dict_values(['For example, Bod (2001) samples a fixed number of subtrees of each depth, which has the effect of assigning roughly equal weight to each node in the training data, and roughly exponentially less probability for larger trees (see Goodman 2002: 12).', 'Bod reports state-of-the-art results with this method, and observes no decrease in parse accuracy when larger subtrees are included (using subtrees up to depth 14).'])
dict_values(['While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.', 'Together with a PCFGreduction of DOP we obtain improved accuracy and efficiency on the Wall Street Journal treebank Our results show an 11% relative reduction in error rate over previous models, and an average processing time of 3.6 seconds per WSJ sentence.', 'This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00609', '(95%-conf.int.', '0.00609', '-', '0.00609)']
['system', 'ROUGE-S*', 'Average_P:', '0.02159', '(95%-conf.int.', '0.02159', '-', '0.02159)']
['system', 'ROUGE-S*', 'Average_F:', '0.00950', '(95%-conf.int.', '0.00950', '-', '0.00950)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2628', 'P:741', 'F:16']
dict_values(['The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.'])
dict_values(['Compared to the reranking technique in Collins (2000), who obtained an LP of 89.9% and an LR of 89.6%, our results show a 9% relative error rate reduction.', 'The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.', 'This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.'])
['system', 'ROUGE-S*', 'Average_R:', '0.06118', '(95%-conf.int.', '0.06118', '-', '0.06118)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.11530', '(95%-conf.int.', '0.11530', '-', '0.11530)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1275', 'P:78', 'F:78']
dict_values(['The only thing that needs to be changed for Simplicity-DOP is that all subtrees should be assigned equal probabilities.'])
dict_values(['As an alternative, Bonnema et al. (1999) propose a subtree estimator which reduces the probability of a tree by a factor of two for each non-root non-terminal it contains.', 'DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).', 'The probability of a parse tree is computed from the occurrencefrequencies of the subtrees in the treebank.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00150', '(95%-conf.int.', '0.00150', '-', '0.00150)']
['system', 'ROUGE-S*', 'Average_P:', '0.03571', '(95%-conf.int.', '0.03571', '-', '0.03571)']
['system', 'ROUGE-S*', 'Average_F:', '0.00288', '(95%-conf.int.', '0.00288', '-', '0.00288)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:28', 'F:1']
0.4621149953788501 0.07086999929130001 0.11816499881835003





input/ref/Task1/P11-1060_sweta.csv
input/res/Task1/P11-1060.annv3.csv
parsing: input/ref/Task1/P11-1060_sweta.csv
<S sid="8" ssid="4">On the other hand, existing unsupervised semantic parsers (Poon and Domingos, 2009) do not handle deeper linguistic phenomena such as quantification, negation, and superlatives.</S>
original cit marker offset is 0
new cit marker offset is 0



["8'"]
8'
['8']
parsed_discourse_facet ['method_citation']
<S sid="132" ssid="17">Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["132'"]
132'
['132']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="1">We first present a basic version (Section 2.1) of dependency-based compositional semantics (DCS), which captures the core idea of using trees to represent formal semantics.</S>
original cit marker offset is 0
new cit marker offset is 0



["25'"]
25'
['25']
parsed_discourse_facet ['method_citation']
 <S sid="45" ssid="21">The logical forms in DCS are called DCS trees, where nodes are labeled with predicates, and edges are labeled with relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["45'"]
45'
['45']
parsed_discourse_facet ['method_citation']
<S sid="51" ssid="27">It is impossible to represent the semantics of this phrase with just a CSP, so we introduce a new aggregate relation, notated E. Consider a tree hE:ci, whose root is connected to a child c via E. If the denotation of c is a set of values s, the parent&#8217;s denotation is then a singleton set containing s. Formally: Figure 3(a) shows the DCS tree for our running example.</S>
original cit marker offset is 0
new cit marker offset is 0



["51'"]
51'
['51']
parsed_discourse_facet ['method_citation']
 <S sid="166" ssid="51">Our employed (Zettlemoyer and Collins, 2007) or words work pushes the grounded language agenda towards are given multiple lexical entries (Kwiatkowski et deeper representations of language&#8212;think grounded al., 2010). compositional semantics.</S>
original cit marker offset is 0
new cit marker offset is 0



["166'"]
166'
['166']
parsed_discourse_facet ['method_citation']
 <S sid="8" ssid="4">On the other hand, existing unsupervised semantic parsers (Poon and Domingos, 2009) do not handle deeper linguistic phenomena such as quantification, negation, and superlatives.</S>
original cit marker offset is 0
new cit marker offset is 0



["8'"]
8'
['8']
parsed_discourse_facet ['method_citation']
 <S sid="11" ssid="7">Figure 1 shows our probabilistic model: with respect to a world w (database of facts), producing an answer y.</S>
original cit marker offset is 0
new cit marker offset is 0



["11'"]
11'
['11']
parsed_discourse_facet ['method_citation']
  <S sid="115" ssid="91">After training, given a new utterance x, our system outputs the most likely y, summing out the latent logical form z: argmaxy p&#952;(T)(y  |x, z &#8712; &#732;ZL,&#952;(T)).</S>
original cit marker offset is 0
new cit marker offset is 0



["115'"]
115'
['115']
parsed_discourse_facet ['method_citation']
<S sid="132" ssid="17">Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["132'"]
132'
['132']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="1">We first present a basic version (Section 2.1) of dependency-based compositional semantics (DCS), which captures the core idea of using trees to represent formal semantics.</S>
original cit marker offset is 0
new cit marker offset is 0



["25'"]
25'
['25']
parsed_discourse_facet ['method_citation']
<S sid="94" ssid="70">We now turn to the task of mapping natural language For the example in Figure 4(b), the de- utterances to DCS trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["94'"]
94'
['94']
parsed_discourse_facet ['method_citation']
<S sid="132" ssid="17">Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["132'"]
132'
['132']
parsed_discourse_facet ['method_citation']
<S sid="157" ssid="42">Eisenciations due to data sparsity, and having an insuffi- stein et al. (2009) induces conjunctive formulae and ciently large K. uses them as features in another learning problem.</S>
original cit marker offset is 0
new cit marker offset is 0



["157'"]
157'
['157']
parsed_discourse_facet ['method_citation']
<S sid="106" ssid="82">Learning Given a training dataset D containing (x, y) pairs, we define the regularized marginal log-likelihood objective O(&#952;) = E(x,y)ED log p&#952;(JzKw = y  |x, z &#8712; ZL(x)) &#8722; &#955;k&#952;k22, which sums over all DCS trees z that evaluate to the target answer y.</S>
original cit marker offset is 0
new cit marker offset is 0



["106'"]
106'
['106']
parsed_discourse_facet ['method_citation']
<S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S>
original cit marker offset is 0
new cit marker offset is 0



["167'"]
167'
['167']
parsed_discourse_facet ['method_citation']
<S sid="138" ssid="23">Next, we compared our systems (DCS and DCS+) with the state-of-the-art semantic parsers on the full dataset for both GEO and JOBS (see Table 3).</S>
original cit marker offset is 0
new cit marker offset is 0



["138'"]
138'
['138']
parsed_discourse_facet ['method_citation']
<S sid="40" ssid="16">The CSP has two types of constraints: (i) x &#8712; w(p) for each node x labeled with predicate p &#8712; P; and (ii) xj = yj0 (the j-th component of x must equal the j'-th component of y) for each edge (x, y) labeled with j0j &#8712; R. A solution to the CSP is an assignment of nodes to values that satisfies all the constraints.</S>
original cit marker offset is 0
new cit marker offset is 0



["40'"]
40'
['40']
parsed_discourse_facet ['method_citation']
<S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



["171'"]
171'
['171']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P11-1060.annv3.csv
<S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'3'", "'2'"]
'0'
'3'
'2'
['0', '3', '2']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="156" ssid="41">There has been a fair amount of past work on no predicates), confusion of Washington state with this topic: Liang et al. (2010) induces combinatory Washington D.C., learning the wrong lexical asso- logic programs in a non-linguistic setting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'3'", "'156'"]
'2'
'3'
'156'
['2', '3', '156']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="169" ssid="54">The combination rules are encoded in the tems, despite using no annotated logical forms.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'22'", "'6'"]
'169'
'22'
'6'
['169', '22', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="45" ssid="21">The logical forms in DCS are called DCS trees, where nodes are labeled with predicates, and edges are labeled with relations.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'", "'54'", "'21'"]
'45'
'54'
'21'
['45', '54', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["'167'", "'54'", "'21'"]
'167'
'54'
'21'
['167', '54', '21']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'0'", "'3'"]
'149'
'0'
'3'
['149', '0', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="163" ssid="48">Feedback from the context; for example, the lexical entry for borders world has been used to guide both syntactic parsing is S\NP/NP : Ay.Ax.border(x, y), which means (Schuler, 2003) and semantic parsing (Popescu et borders looks right for the first argument and left al., 2003; Clarke et al., 2010).</S><S sid="52" ssid="28">The denotation of the middle node is {s}, where s is all major cities.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'163'", "'52'"]
'3'
'163'
'52'
['3', '163', '52']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="169" ssid="54">The combination rules are encoded in the tems, despite using no annotated logical forms.</S><S sid="117" ssid="2">In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'117'", "'6'"]
'169'
'117'
'6'
['169', '117', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="117" ssid="2">In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="35" ssid="11">Although a DCS tree is a logical form, note that it looks like a syntactic dependency tree with predicates in place of words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'117'", "'22'", "'35'"]
'117'
'22'
'35'
['117', '22', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="2" ssid="2">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S><S sid="132" ssid="17">Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'6'", "'132'"]
'2'
'6'
'132'
['2', '6', '132']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'", "'0'", "'171'"]
'21'
'0'
'171'
['21', '0', '171']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="21" ssid="17">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S><S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'21'", "'149'"]
'0'
'21'
'149'
['0', '21', '149']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S><S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'54'", "'167'"]
'149'
'54'
'167'
['149', '54', '167']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="85" ssid="61">Extraction allows us to return the set of consistent values of a marked non-root node.</S><S sid="42" ssid="18">The denotation JzKw (z evaluated on w) is the set of consistent values of the root node (see Figure 2 for an example).</S><S sid="38" ssid="14">Let us start by considering a DCS tree z with only join relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'42'", "'38'"]
'85'
'42'
'38'
['85', '42', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="3" ssid="3">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S><S sid="1" ssid="1">Compositional question answering begins by mapping questions to logical forms, but training a semantic parser to perform this mapping typically requires the costly annotation of the target logical forms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'171'", "'1'"]
'3'
'171'
'1'
['3', '171', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="149" ssid="34">Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.</S><S sid="167" ssid="52">In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.</S><S sid="54" ssid="30">A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'149'", "'167'", "'54'"]
'149'
'167'
'54'
['149', '167', '54']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="172" ssid="57">Free from the burden It also allows us to easily add new lexical triggers of annotating logical forms, we hope to use our without becoming mired in the semantic formalism. techniques in developing even more accurate and Quantifiers and superlatives significantly compli- broader-coverage language understanding systems. cate scoping in lambda calculus, and often type rais- Acknowledgments We thank Luke Zettlemoyer ing needs to be employed.</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S><S sid="161" ssid="46">CCG (Steedman, 2000), in which semantic pars- The integration of natural language with denotaing is driven from the lexicon.</S>
original cit marker offset is 0
new cit marker offset is 0



["'172'", "'0'", "'161'"]
'172'
'0'
'161'
['172', '0', '161']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="6" ssid="2">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S><S sid="0" ssid="0">Learning Dependency-Based Compositional Semantics</S>
original cit marker offset is 0
new cit marker offset is 0



["'22'", "'6'", "'0'"]
'22'
'6'
'0'
['22', '6', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="48" ssid="24">In addition, trees enable efficient computation, thereby establishing a new connection between dependency syntax and efficient semantic evaluation.</S><S sid="22" ssid="18">The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.</S><S sid="171" ssid="56">This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'22'", "'171'"]
'48'
'22'
'171'
['48', '22', '171']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['On the other hand, existing unsupervised semantic parsers (Poon and Domingos, 2009) do not handle deeper linguistic phenomena such as quantification, negation, and superlatives.'])
dict_values(['Learning Dependency-Based Compositional Semantics', 'In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.', 'In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:105', 'F:0']
dict_values(['It is impossible to represent the semantics of this phrase with just a CSP, so we introduce a new aggregate relation, notated E. Consider a tree hE:ci, whose root is connected to a child c via E. If the denotation of c is a set of values s, the parent&#8217;s denotation is then a singleton set containing s. Formally: Figure 3(a) shows the DCS tree for our running example.'])
dict_values(['In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.', 'A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.', 'The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).'])
['system', 'ROUGE-S*', 'Average_R:', '0.02402', '(95%-conf.int.', '0.02402', '-', '0.02402)']
['system', 'ROUGE-S*', 'Average_P:', '0.03941', '(95%-conf.int.', '0.03941', '-', '0.03941)']
['system', 'ROUGE-S*', 'Average_F:', '0.02985', '(95%-conf.int.', '0.02985', '-', '0.02985)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:406', 'F:16']
dict_values(['Our employed (Zettlemoyer and Collins, 2007) or words work pushes the grounded language agenda towards are given multiple lexical entries (Kwiatkowski et deeper representations of language&#8212;think grounded al., 2010). compositional semantics.'])
dict_values(['Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.', 'Learning Dependency-Based Compositional Semantics', 'In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02496', '(95%-conf.int.', '0.02496', '-', '0.02496)']
['system', 'ROUGE-S*', 'Average_P:', '0.05534', '(95%-conf.int.', '0.05534', '-', '0.05534)']
['system', 'ROUGE-S*', 'Average_F:', '0.03440', '(95%-conf.int.', '0.03440', '-', '0.03440)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:253', 'F:14']
dict_values(['On the other hand, existing unsupervised semantic parsers (Poon and Domingos, 2009) do not handle deeper linguistic phenomena such as quantification, negation, and superlatives.'])
dict_values(['In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.', 'Feedback from the context; for example, the lexical entry for borders world has been used to guide both syntactic parsing is S\\NP/NP : Ay.Ax.border(x, y), which means (Schuler, 2003) and semantic parsing (Popescu et borders looks right for the first argument and left al., 2003; Clarke et al., 2010).', 'The denotation of the middle node is {s}, where s is all major cities.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1176', 'P:105', 'F:0']
dict_values(['Figure 1 shows our probabilistic model: with respect to a world w (database of facts), producing an answer y.'])
dict_values(['The combination rules are encoded in the tems, despite using no annotated logical forms.', 'In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.', 'Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:55', 'F:0']
dict_values(['After training, given a new utterance x, our system outputs the most likely y, summing out the latent logical form z: argmaxy p&#952;(T)(y  |x, z &#8712; &#732;ZL,&#952;(T)).'])
dict_values(['In each dataset, each sentence x is annotated with a Prolog logical form, which we use only to evaluate and get an answer y.', 'The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.', 'Although a DCS tree is a logical form, note that it looks like a syntactic dependency tree with predicates in place of words.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00142', '(95%-conf.int.', '0.00142', '-', '0.00142)']
['system', 'ROUGE-S*', 'Average_P:', '0.01099', '(95%-conf.int.', '0.01099', '-', '0.01099)']
['system', 'ROUGE-S*', 'Average_F:', '0.00252', '(95%-conf.int.', '0.00252', '-', '0.00252)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:703', 'P:91', 'F:1']
dict_values(['Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.'])
dict_values(['In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.', 'Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).', 'Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.12805', '(95%-conf.int.', '0.12805', '-', '0.12805)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.22703', '(95%-conf.int.', '0.22703', '-', '0.22703)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:820', 'P:105', 'F:105']
dict_values(['Eisenciations due to data sparsity, and having an insuffi- stein et al. (2009) induces conjunctive formulae and ciently large K. uses them as features in another learning problem.'])
dict_values(['Extraction allows us to return the set of consistent values of a marked non-root node.', 'The denotation JzKw (z evaluated on w) is the set of consistent values of the root node (see Figure 2 for an example).', 'Let us start by considering a DCS tree z with only join relations.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:253', 'P:120', 'F:0']
dict_values(['In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.'])
dict_values(['Think of DCS as a higher-level Our system learns lexical associations between programming language tailored to natural language, words and predicates.', 'In DCS, we start with lexical triggers, which are 6 Conclusion more basic than CCG lexical entries.', 'A DCS tree that contains only join and aggregate relations can be viewed as a collection of treestructured CSPs connected via aggregate relations.'])
['system', 'ROUGE-S*', 'Average_R:', '0.07143', '(95%-conf.int.', '0.07143', '-', '0.07143)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.13333', '(95%-conf.int.', '0.13333', '-', '0.13333)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:45', 'F:45']
dict_values(['Next, we compared our systems (DCS and DCS+) with the state-of-the-art semantic parsers on the full dataset for both GEO and JOBS (see Table 3).'])
dict_values(['Free from the burden It also allows us to easily add new lexical triggers of annotating logical forms, we hope to use our without becoming mired in the semantic formalism. techniques in developing even more accurate and Quantifiers and superlatives significantly compli- broader-coverage language understanding systems. cate scoping in lambda calculus, and often type rais- Acknowledgments We thank Luke Zettlemoyer ing needs to be employed.', 'Learning Dependency-Based Compositional Semantics', 'CCG (Steedman, 2000), in which semantic pars- The integration of natural language with denotaing is driven from the lexicon.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00075', '(95%-conf.int.', '0.00075', '-', '0.00075)']
['system', 'ROUGE-S*', 'Average_P:', '0.01099', '(95%-conf.int.', '0.01099', '-', '0.01099)']
['system', 'ROUGE-S*', 'Average_F:', '0.00141', '(95%-conf.int.', '0.00141', '-', '0.00141)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1326', 'P:91', 'F:1']
dict_values(["The CSP has two types of constraints: (i) x &#8712; w(p) for each node x labeled with predicate p &#8712; P; and (ii) xj = yj0 (the j-th component of x must equal the j'-th component of y) for each edge (x, y) labeled with j0j &#8712; R. A solution to the CSP is an assignment of nodes to values that satisfies all the constraints."])
dict_values(['The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.', 'Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).', 'Learning Dependency-Based Compositional Semantics'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:300', 'F:0']
dict_values(['This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.'])
dict_values(['In addition, trees enable efficient computation, thereby establishing a new connection between dependency syntax and efficient semantic evaluation.', 'The logical forms in this framework are trees, which is desirable for two reasons: (i) they parallel syntactic dependency trees, which facilitates parsing and learning; and (ii) evaluating them to obtain the answer is computationally efficient.', 'This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.'])
['system', 'ROUGE-S*', 'Average_R:', '0.14902', '(95%-conf.int.', '0.14902', '-', '0.14902)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.25939', '(95%-conf.int.', '0.25939', '-', '0.25939)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1275', 'P:190', 'F:190']
0.25972749783560417 0.033304166389131945 0.05732749952227084





input/ref/Task1/P04-1036_sweta.csv
input/res/Task1/P04-1036.annv3.csv
parsing: input/ref/Task1/P04-1036_sweta.csv
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["8'"]
8'
['8']
parsed_discourse_facet ['method_citation']
<S sid="82" ssid="11">We also calculate the WSD accuracy that would be obtained on SemCor, when using our first sense in all contexts ( ).</S>
original cit marker offset is 0
new cit marker offset is 0



["82'"]
82'
['82']
parsed_discourse_facet ['method_citation']
<S sid="64" ssid="20">We briefly summarise the two measures here; for a more detailed summary see (Patwardhan et al., 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["64'"]
64'
['64']
parsed_discourse_facet ['method_citation']
<S sid="172" ssid="20">We believe automatic ranking techniques such as ours will be useful for systems that rely on WordNet, for example those that use it for lexical acquisition or WSD.</S>
original cit marker offset is 0
new cit marker offset is 0



["172'"]
172'
['172']
parsed_discourse_facet ['method_citation']
<S sid="153" ssid="1">Most research in WSD concentrates on using contextual features, typically neighbouring words, to help determine the correct sense of a target word.</S>
original cit marker offset is 0
new cit marker offset is 0



["153'"]
153'
['153']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">word sense disambiguation the heuristic of choosing the most common sense is extremely powerful because the distribution of the senses of a word is often skewed.</S>
original cit marker offset is 0
new cit marker offset is 0



["1'"]
1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="165" ssid="13">Lapata and Brew obtain their priors for verb classes directly from subcategorisation evidence in a parsed corpus, whereas we use parsed data to find distributionally similar words (nearest neighbours) to the target word which reflect the different senses of the word and have associated distributional similarity scores which can be used for ranking the senses according to prevalence.</S>
original cit marker offset is 0
new cit marker offset is 0



["165'"]
165'
['165']
parsed_discourse_facet ['method_citation']
<S sid="171" ssid="19">In contrast, we use the neighbours lists and WordNet similarity measures to impose a prevalence ranking on the WordNet senses.</S>
original cit marker offset is 0
new cit marker offset is 0



["171'"]
171'
['171']
parsed_discourse_facet ['method_citation']
<S sid="89" ssid="18">Since both measures gave comparable results we restricted our remaining experiments to jcn because this gave good results for finding the predominant sense, and is much more efficient than lesk, given the precompilation of the IC files.</S>
original cit marker offset is 0
new cit marker offset is 0



["89'"]
89'
['89']
parsed_discourse_facet ['method_citation']
<S sid="172" ssid="20">We believe automatic ranking techniques such as ours will be useful for systems that rely on WordNet, for example those that use it for lexical acquisition or WSD.</S>
original cit marker offset is 0
new cit marker offset is 0



["172'"]
172'
['172']
parsed_discourse_facet ['method_citation']
<S sid="189" ssid="12">Additionally, we need to determine whether senses which do not occur in a wide variety of grammatical contexts fare badly using distributional measures of similarity, and what can be done to combat this problem using relation specific thesauruses.</S>
original cit marker offset is 0
new cit marker offset is 0



["189'"]
189'
['189']
parsed_discourse_facet ['method_citation']
<S sid="87" ssid="16">Again, the automatic ranking outperforms this by a large margin.</S>
original cit marker offset is 0
new cit marker offset is 0



["87'"]
87'
['87']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">word sense disambiguation the heuristic of choosing the most common sense is extremely powerful because the distribution of the senses of a word is often skewed.</S>
original cit marker offset is 0
new cit marker offset is 0



["1'"]
1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="89" ssid="18">Since both measures gave comparable results we restricted our remaining experiments to jcn because this gave good results for finding the predominant sense, and is much more efficient than lesk, given the precompilation of the IC files.</S>
original cit marker offset is 0
new cit marker offset is 0



["89'"]
89'
['89']
parsed_discourse_facet ['method_citation']
 <S sid="137" ssid="14">Additionally, we evaluated our method quantitatively using the Subject Field Codes (SFC) resource (Magnini and Cavagli`a, 2000) which annotates WordNet synsets with domain labels.</S>
original cit marker offset is 0
new cit marker offset is 0



["137'"]
137'
['137']
parsed_discourse_facet ['method_citation']
<S sid="63" ssid="19">We experimented using six of these to provide the in equation 1 above and obtained results well over our baseline, but because of space limitations give results for the two which perform the best.</S>
original cit marker offset is 0
new cit marker offset is 0



["63'"]
63'
['63']
parsed_discourse_facet ['method_citation']
<S sid="159" ssid="7">Magnini and Cavagli`a (2000) have identified WordNet word senses with particular domains, and this has proven useful for high precision WSD (Magnini et al., 2001); indeed in section 5 we used these domain labels for evaluation.</S>
original cit marker offset is 0
new cit marker offset is 0



["159'"]
159'
['159']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P04-1036.annv3.csv
<S sid="107" ssid="5">To disambiguate senses a system should take context into account.</S><S sid="154" ssid="2">In contrast, our work is aimed at discovering the predominant senses from raw text because the first sense heuristic is such a useful one, and because handtagged data is not always available.</S><S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'107'", "'154'", "'8'"]
'107'
'154'
'8'
['107', '154', '8']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="154" ssid="2">In contrast, our work is aimed at discovering the predominant senses from raw text because the first sense heuristic is such a useful one, and because handtagged data is not always available.</S><S sid="162" ssid="10">It only requires raw text from the given domain and because of this it can easily be applied to a new domain, or sense inventory, given sufficient text.</S><S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'154'", "'162'", "'180'"]
'154'
'162'
'180'
['154', '162', '180']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="167" ssid="15">In this work the lists of neighbours are themselves clustered to bring out the various senses of the word.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'167'", "'169'"]
'179'
'167'
'169'
['179', '167', '169']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="171" ssid="19">In contrast, we use the neighbours lists and WordNet similarity measures to impose a prevalence ranking on the WordNet senses.</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'171'", "'0'"]
'179'
'171'
'0'
['179', '171', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'126'", "'15'"]
'0'
'126'
'15'
['0', '126', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'169'", "'180'"]
'179'
'169'
'180'
['179', '169', '180']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="186" ssid="9">In particular, we will use balanced and domain specific corpora to isolate words having very different neighbours, and therefore rankings, in the different corpora and to detect and target words for which there is a highly skewed sense distribution in these corpora.</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'", "'186'", "'0'"]
'126'
'186'
'0'
['126', '186', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="81" ssid="10">4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'81'", "'0'"]
'48'
'81'
'0'
['48', '81', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="66" ssid="22">It uses the glosses of semantically related (according to WordNet) senses too. jcn (Jiang and Conrath, 1997) This score uses corpus data to populate classes (synsets) in the WordNet hierarchy with frequency counts.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'66'", "'4'"]
'179'
'66'
'4'
['179', '66', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'27'", "'45'"]
'169'
'27'
'45'
['169', '27', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'179'", "'45'"]
'48'
'179'
'45'
['48', '179', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S><S sid="58" ssid="14">A noun, , is thus described by a set of co-occurrence triples and associated frequencies, where is a grammatical relation and is a possible cooccurrence with in that relation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'45'", "'58'"]
'179'
'45'
'58'
['179', '45', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'179'", "'27'"]
'8'
'179'
'27'
['8', '179', '27']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="153" ssid="1">Most research in WSD concentrates on using contextual features, typically neighbouring words, to help determine the correct sense of a target word.</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'153'", "'126'", "'4'"]
'153'
'126'
'4'
['153', '126', '4']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="81" ssid="10">4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'81'", "'126'"]
'48'
'81'
'126'
['48', '81', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'169'", "'4'"]
'8'
'169'
'4'
['8', '169', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'27'", "'4'"]
'8'
'27'
'4'
['8', '27', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['We briefly summarise the two measures here; for a more detailed summary see (Patwardhan et al., 2003).'])
dict_values(['We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'In this work the lists of neighbours are themselves clustered to bring out the various senses of the word.', 'This method obtains precision of 61% and recall 51%.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:171', 'P:28', 'F:0']
dict_values(['word sense disambiguation the heuristic of choosing the most common sense is extremely powerful because the distribution of the senses of a word is often skewed.'])
dict_values(['We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'This method obtains precision of 61% and recall 51%.', 'The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00202', '(95%-conf.int.', '0.00202', '-', '0.00202)']
['system', 'ROUGE-S*', 'Average_P:', '0.01282', '(95%-conf.int.', '0.01282', '-', '0.01282)']
['system', 'ROUGE-S*', 'Average_F:', '0.00348', '(95%-conf.int.', '0.00348', '-', '0.00348)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:78', 'F:1']
dict_values(['In contrast, we use the neighbours lists and WordNet similarity measures to impose a prevalence ranking on the WordNet senses.'])
dict_values(['To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.', '4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).', 'Finding Predominant Word Senses in Untagged Text'])
['system', 'ROUGE-S*', 'Average_R:', '0.00794', '(95%-conf.int.', '0.00794', '-', '0.00794)']
['system', 'ROUGE-S*', 'Average_P:', '0.05455', '(95%-conf.int.', '0.05455', '-', '0.05455)']
['system', 'ROUGE-S*', 'Average_F:', '0.01386', '(95%-conf.int.', '0.01386', '-', '0.01386)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:55', 'F:3']
dict_values(['Since both measures gave comparable results we restricted our remaining experiments to jcn because this gave good results for finding the predominant sense, and is much more efficient than lesk, given the precompilation of the IC files.'])
dict_values(['We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'It uses the glosses of semantically related (according to WordNet) senses too. jcn (Jiang and Conrath, 1997) This score uses corpus data to populate classes (synsets) in the WordNet hierarchy with frequency counts.', 'We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01282', '(95%-conf.int.', '0.01282', '-', '0.01282)']
['system', 'ROUGE-S*', 'Average_P:', '0.05848', '(95%-conf.int.', '0.05848', '-', '0.05848)']
['system', 'ROUGE-S*', 'Average_F:', '0.02103', '(95%-conf.int.', '0.02103', '-', '0.02103)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:780', 'P:171', 'F:10']
dict_values(['Again, the automatic ranking outperforms this by a large margin.'])
dict_values(['We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).', 'A noun, , is thus described by a set of co-occurrence triples and associated frequencies, where is a grammatical relation and is a possible cooccurrence with in that relation.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:10', 'F:0']
dict_values(['word sense disambiguation the heuristic of choosing the most common sense is extremely powerful because the distribution of the senses of a word is often skewed.'])
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.', 'We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'We use WordNet as our sense inventory for this work.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01299', '(95%-conf.int.', '0.01299', '-', '0.01299)']
['system', 'ROUGE-S*', 'Average_P:', '0.03846', '(95%-conf.int.', '0.03846', '-', '0.03846)']
['system', 'ROUGE-S*', 'Average_F:', '0.01942', '(95%-conf.int.', '0.01942', '-', '0.01942)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:231', 'P:78', 'F:3']
dict_values(['Since both measures gave comparable results we restricted our remaining experiments to jcn because this gave good results for finding the predominant sense, and is much more efficient than lesk, given the precompilation of the IC files.'])
dict_values(['Most research in WSD concentrates on using contextual features, typically neighbouring words, to help determine the correct sense of a target word.', 'We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.', 'We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00476', '(95%-conf.int.', '0.00476', '-', '0.00476)']
['system', 'ROUGE-S*', 'Average_P:', '0.01754', '(95%-conf.int.', '0.01754', '-', '0.01754)']
['system', 'ROUGE-S*', 'Average_F:', '0.00749', '(95%-conf.int.', '0.00749', '-', '0.00749)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:171', 'F:3']
dict_values(['Additionally, we evaluated our method quantitatively using the Subject Field Codes (SFC) resource (Magnini and Cavagli`a, 2000) which annotates WordNet synsets with domain labels.'])
dict_values(['To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.', '4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).', 'We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:136', 'F:0']
dict_values(['We experimented using six of these to provide the in equation 1 above and obtained results well over our baseline, but because of space limitations give results for the two which perform the best.'])
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.', 'This method obtains precision of 61% and recall 51%.', 'We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:66', 'F:0']
dict_values(['Magnini and Cavagli`a (2000) have identified WordNet word senses with particular domains, and this has proven useful for high precision WSD (Magnini et al., 2001); indeed in section 5 we used these domain labels for evaluation.'])
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.', 'We use WordNet as our sense inventory for this work.', 'We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00430', '(95%-conf.int.', '0.00430', '-', '0.00430)']
['system', 'ROUGE-S*', 'Average_P:', '0.01053', '(95%-conf.int.', '0.01053', '-', '0.01053)']
['system', 'ROUGE-S*', 'Average_F:', '0.00611', '(95%-conf.int.', '0.00611', '-', '0.00611)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:465', 'P:190', 'F:2']
0.019237999807620004 0.004482999955170001 0.007138999928610002





input/ref/Task1/W06-3114_sweta.csv
input/res/Task1/W06-3114.annv3.csv
parsing: input/ref/Task1/W06-3114_sweta.csv
 <S sid="108" ssid="1">The results of the manual and automatic evaluation of the participating system translations is detailed in the figures at the end of this paper.</S>
original cit marker offset is 0
new cit marker offset is 0



["108'"]
108'
['108']
parsed_discourse_facet ['method_citation']
<S sid="34" ssid="27">For more on the participating systems, please refer to the respective system description in the proceedings of the workshop.</S>
original cit marker offset is 0
new cit marker offset is 0



["34'"]
34'
['34']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="11">In addition to the Europarl test set, we also collected 29 editorials from the Project Syndicate website2, which are published in all the four languages of the shared task.</S>
original cit marker offset is 0
new cit marker offset is 0



["18'"]
18'
['18']
parsed_discourse_facet ['method_citation']
 <S sid="151" ssid="44">The statistical systems seem to still lag behind the commercial rule-based competition when translating into morphological rich languages, as demonstrated by the results for English-German and English-French.</S>
original cit marker offset is 0
new cit marker offset is 0



["151'"]
151'
['151']
parsed_discourse_facet ['method_citation']
<S sid="16" ssid="9">The test data was again drawn from a segment of the Europarl corpus from the fourth quarter of 2000, which is excluded from the training data.</S>
original cit marker offset is 0
new cit marker offset is 0



["16'"]
16'
['16']
parsed_discourse_facet ['method_citation']
 <S sid="172" ssid="3">Due to many similarly performing systems, we are not able to draw strong conclusions on the question of correlation of manual and automatic evaluation metrics.</S>
original cit marker offset is 0
new cit marker offset is 0



["172'"]
172'
['172']
parsed_discourse_facet ['method_citation']
 <S sid="36" ssid="2">The BLEU metric, as all currently proposed automatic metrics, is occasionally suspected to be biased towards statistical systems, especially the phrase-based systems currently in use.</S>
original cit marker offset is 0
new cit marker offset is 0



["36'"]
36'
['36']
parsed_discourse_facet ['method_citation']
<S sid="103" ssid="19">Given a set of n sentences, we can compute the sample mean x&#65533; and sample variance s2 of the individual sentence judgements xi: The extend of the confidence interval [x&#8722;d, x+df can be computed by d = 1.96 &#183;&#65533;n (6) Pairwise Comparison: As for the automatic evaluation metric, we want to be able to rank different systems against each other, for which we need assessments of statistical significance on the differences between a pair of systems.</S>
original cit marker offset is 0
new cit marker offset is 0



["103'"]
103'
['103']
parsed_discourse_facet ['method_citation']
<S sid="167" ssid="60">One annotator suggested that this was the case for as much as 10% of our test sentences.</S>
original cit marker offset is 0
new cit marker offset is 0



["167'"]
167'
['167']
parsed_discourse_facet ['method_citation']
<S sid="102" ssid="18">Confidence Interval: To estimate confidence intervals for the average mean scores for the systems, we use standard significance testing.</S>
original cit marker offset is 0
new cit marker offset is 0



["102'"]
102'
['102']
parsed_discourse_facet ['method_citation']
<S sid="123" ssid="16">For the manual scoring, we can distinguish only half of the systems, both in terms of fluency and adequacy.</S>
original cit marker offset is 0
new cit marker offset is 0



["123'"]
123'
['123']
parsed_discourse_facet ['method_citation']
<S sid="34" ssid="27">For more on the participating systems, please refer to the respective system description in the proceedings of the workshop.</S>
original cit marker offset is 0
new cit marker offset is 0



["34'"]
34'
['34']
parsed_discourse_facet ['method_citation']
<S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S>
original cit marker offset is 0
new cit marker offset is 0



["62'"]
62'
['62']
parsed_discourse_facet ['method_citation']
<S sid="126" ssid="19">The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["126'"]
126'
['126']
parsed_discourse_facet ['method_citation']
<S sid="173" ssid="4">The bias of automatic methods in favor of statistical systems seems to be less pronounced on out-of-domain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["173'"]
173'
['173']
parsed_discourse_facet ['method_citation']
 <S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["170'"]
170'
['170']
parsed_discourse_facet ['method_citation']
<S sid="84" ssid="23">The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:</S>
original cit marker offset is 0
new cit marker offset is 0



["84'"]
84'
['84']
parsed_discourse_facet ['method_citation']
<S sid="8" ssid="1">The evaluation framework for the shared task is similar to the one used in last year&#8217;s shared task.</S>
original cit marker offset is 0
new cit marker offset is 0



["8'"]
8'
['8']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W06-3114.annv3.csv
<S sid="153" ssid="46">This is the first time that we organized a large-scale manual evaluation.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="175" ssid="6">Replacing this with an ranked evaluation seems to be more suitable.</S>
original cit marker offset is 0
new cit marker offset is 0



["'153'", "'170'", "'175'"]
'153'
'170'
'175'
['153', '170', '175']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S><S sid="26" ssid="19">Most of these groups follow a phrase-based statistical approach to machine translation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'0'", "'26'"]
'170'
'0'
'26'
['170', '0', '26']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="126" ssid="19">The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'126'"]
'9'
'170'
'126'
['9', '170', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="44" ssid="10">We computed BLEU scores for each submission with a single reference translation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'62'", "'44'"]
'170'
'62'
'44'
['170', '62', '44']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="19" ssid="12">We aligned the texts at a sentence level across all four languages, resulting in 1064 sentence per language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'19'"]
'9'
'170'
'19'
['9', '170', '19']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="36" ssid="2">The BLEU metric, as all currently proposed automatic metrics, is occasionally suspected to be biased towards statistical systems, especially the phrase-based systems currently in use.</S><S sid="35" ssid="1">For the automatic evaluation, we used BLEU, since it is the most established metric in the field.</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'", "'36'", "'35'"]
'62'
'36'
'35'
['62', '36', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="50" ssid="16">Following this method, we repeatedly — say, 1000 times — sample sets of sentences from the output of each system, measure their BLEU score, and use these 1000 BLEU scores as basis for estimating a confidence interval.</S><S sid="139" ssid="32">Given the closeness of most systems and the wide over-lapping confidence intervals it is hard to make strong statements about the correlation between human judgements and automatic scoring methods such as BLEU.</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S>
original cit marker offset is 0
new cit marker offset is 0



["'50'", "'139'", "'62'"]
'50'
'139'
'62'
['50', '139', '62']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="71" ssid="10">Presenting the output of several system allows the human judge to make more informed judgements, contrasting the quality of the different systems.</S><S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'71'", "'140'", "'0'"]
'71'
'140'
'0'
['71', '140', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="52" ssid="18">Pairwise comparison: We can use the same method to assess the statistical significance of one system outperforming another.</S><S sid="102" ssid="18">Confidence Interval: To estimate confidence intervals for the average mean scores for the systems, we use standard significance testing.</S><S sid="50" ssid="16">Following this method, we repeatedly — say, 1000 times — sample sets of sentences from the output of each system, measure their BLEU score, and use these 1000 BLEU scores as basis for estimating a confidence interval.</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'", "'102'", "'50'"]
'52'
'102'
'50'
['52', '102', '50']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="123" ssid="16">For the manual scoring, we can distinguish only half of the systems, both in terms of fluency and adequacy.</S><S sid="84" ssid="23">The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:</S><S sid="80" ssid="19">We collected around 300–400 judgements per judgement type (adequacy or fluency), per system, per language pair.</S>
original cit marker offset is 0
new cit marker offset is 0



["'123'", "'84'", "'80'"]
'123'
'84'
'80'
['123', '84', '80']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="11" ssid="4">To lower the barrier of entrance to the competition, we provided a complete baseline MT system, along with data resources.</S><S sid="117" ssid="10">For instance: if 10 systems participate, and one system does better than 3 others, worse then 2, and is not significant different from the remaining 4, its rank is in the interval 3–7.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'", "'117'", "'170'"]
'11'
'117'
'170'
['11', '117', '170']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="38" ssid="4">The BLEU score has been shown to correlate well with human judgement, when statistical machine translation systems are compared (Doddington, 2002; Przybocki, 2004; Li, 2005).</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="71" ssid="10">Presenting the output of several system allows the human judge to make more informed judgements, contrasting the quality of the different systems.</S>
original cit marker offset is 0
new cit marker offset is 0



["'38'", "'62'", "'71'"]
'38'
'62'
'71'
['38', '62', '71']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="126" ssid="19">The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'126'"]
'9'
'170'
'126'
['9', '170', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="36">For instance, for out-ofdomain English-French, Systran has the best BLEU and manual scores.</S><S sid="173" ssid="4">The bias of automatic methods in favor of statistical systems seems to be less pronounced on out-of-domain test data.</S><S sid="58" ssid="24">We divide up each test set into blocks of 20 sentences (100 blocks for the in-domain test set, 53 blocks for the out-of-domain test set), check for each block, if one system has a higher BLEU score than the other, and then use the sign test.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'173'", "'58'"]
'143'
'173'
'58'
['143', '173', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="64" ssid="3">Also, the argument has been made that machine translation performance should be evaluated via task-based evaluation metrics, i.e. how much it assists performing a useful task, such as supporting human translators or aiding the analysis of texts.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'170'", "'64'"]
'0'
'170'
'64'
['0', '170', '64']
parsed_discourse_facet ['hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="68" ssid="7">We asked participants to each judge 200–300 sentences in terms of fluency and adequacy, the most commonly used manual evaluation metrics.</S><S sid="84" ssid="23">The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'68'", "'84'"]
'170'
'68'
'84'
['170', '68', '84']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="44" ssid="10">We computed BLEU scores for each submission with a single reference translation.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'44'", "'0'"]
'170'
'44'
'0'
['170', '44', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
dict_values(['The results of the manual and automatic evaluation of the participating system translations is detailed in the figures at the end of this paper.'])
dict_values(['This is the first time that we organized a large-scale manual evaluation.', 'We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'Replacing this with an ranked evaluation seems to be more suitable.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02597', '(95%-conf.int.', '0.02597', '-', '0.02597)']
['system', 'ROUGE-S*', 'Average_P:', '0.10909', '(95%-conf.int.', '0.10909', '-', '0.10909)']
['system', 'ROUGE-S*', 'Average_F:', '0.04196', '(95%-conf.int.', '0.04196', '-', '0.04196)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:231', 'P:55', 'F:6']
dict_values(['For more on the participating systems, please refer to the respective system description in the proceedings of the workshop.'])
dict_values(['We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'Manual and Automatic Evaluation of Machine Translation between European Languages', 'Most of these groups follow a phrase-based statistical approach to machine translation.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:28', 'F:0']
dict_values(['In addition to the Europarl test set, we also collected 29 editorials from the Project Syndicate website2, which are published in all the four languages of the shared task.'])
dict_values(['Training and testing is based on the Europarl corpus.', 'We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01323', '(95%-conf.int.', '0.01323', '-', '0.01323)']
['system', 'ROUGE-S*', 'Average_P:', '0.05495', '(95%-conf.int.', '0.05495', '-', '0.05495)']
['system', 'ROUGE-S*', 'Average_F:', '0.02132', '(95%-conf.int.', '0.02132', '-', '0.02132)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:91', 'F:5']
dict_values(['The statistical systems seem to still lag behind the commercial rule-based competition when translating into morphological rich languages, as demonstrated by the results for English-German and English-French.'])
dict_values(['We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.', 'We computed BLEU scores for each submission with a single reference translation.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00256', '(95%-conf.int.', '0.00256', '-', '0.00256)']
['system', 'ROUGE-S*', 'Average_P:', '0.01471', '(95%-conf.int.', '0.01471', '-', '0.01471)']
['system', 'ROUGE-S*', 'Average_F:', '0.00437', '(95%-conf.int.', '0.00437', '-', '0.00437)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:780', 'P:136', 'F:2']
dict_values(['The test data was again drawn from a segment of the Europarl corpus from the fourth quarter of 2000, which is excluded from the training data.'])
dict_values(['Training and testing is based on the Europarl corpus.', 'We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'We aligned the texts at a sentence level across all four languages, resulting in 1064 sentence per language.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01000', '(95%-conf.int.', '0.01000', '-', '0.01000)']
['system', 'ROUGE-S*', 'Average_P:', '0.04545', '(95%-conf.int.', '0.04545', '-', '0.04545)']
['system', 'ROUGE-S*', 'Average_F:', '0.01639', '(95%-conf.int.', '0.01639', '-', '0.01639)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:66', 'F:3']
dict_values(['One annotator suggested that this was the case for as much as 10% of our test sentences.'])
dict_values(['We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:78', 'P:15', 'F:0']
dict_values(['For the manual scoring, we can distinguish only half of the systems, both in terms of fluency and adequacy.'])
dict_values(['For the manual scoring, we can distinguish only half of the systems, both in terms of fluency and adequacy.', 'The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:', 'We collected around 300–400 judgements per judgement type (adequacy or fluency), per system, per language pair.'])
['system', 'ROUGE-S*', 'Average_R:', '0.07977', '(95%-conf.int.', '0.07977', '-', '0.07977)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.14776', '(95%-conf.int.', '0.14776', '-', '0.14776)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:28', 'F:28']
dict_values(['For more on the participating systems, please refer to the respective system description in the proceedings of the workshop.'])
dict_values(['To lower the barrier of entrance to the competition, we provided a complete baseline MT system, along with data resources.', 'For instance: if 10 systems participate, and one system does better than 3 others, worse then 2, and is not significant different from the remaining 4, its rank is in the interval 3–7.', 'We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00300', '(95%-conf.int.', '0.00300', '-', '0.00300)']
['system', 'ROUGE-S*', 'Average_P:', '0.07143', '(95%-conf.int.', '0.07143', '-', '0.07143)']
['system', 'ROUGE-S*', 'Average_F:', '0.00576', '(95%-conf.int.', '0.00576', '-', '0.00576)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:28', 'F:2']
dict_values(['While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.'])
dict_values(['The BLEU score has been shown to correlate well with human judgement, when statistical machine translation systems are compared (Doddington, 2002; Przybocki, 2004; Li, 2005).', 'While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.', 'Presenting the output of several system allows the human judge to make more informed judgements, contrasting the quality of the different systems.'])
['system', 'ROUGE-S*', 'Average_R:', '0.18857', '(95%-conf.int.', '0.18857', '-', '0.18857)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.31731', '(95%-conf.int.', '0.31731', '-', '0.31731)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1225', 'P:231', 'F:231']
dict_values(['The bias of automatic methods in favor of statistical systems seems to be less pronounced on out-of-domain test data.'])
dict_values(['For instance, for out-ofdomain English-French, Systran has the best BLEU and manual scores.', 'The bias of automatic methods in favor of statistical systems seems to be less pronounced on out-of-domain test data.', 'We divide up each test set into blocks of 20 sentences (100 blocks for the in-domain test set, 53 blocks for the out-of-domain test set), check for each block, if one system has a higher BLEU score than the other, and then use the sign test.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05226', '(95%-conf.int.', '0.05226', '-', '0.05226)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.09934', '(95%-conf.int.', '0.09934', '-', '0.09934)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:861', 'P:45', 'F:45']
dict_values(['We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.'])
dict_values(['Manual and Automatic Evaluation of Machine Translation between European Languages', 'We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'Also, the argument has been made that machine translation performance should be evaluated via task-based evaluation metrics, i.e. how much it assists performing a useful task, such as supporting human translators or aiding the analysis of texts.'])
['system', 'ROUGE-S*', 'Average_R:', '0.08258', '(95%-conf.int.', '0.08258', '-', '0.08258)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.15257', '(95%-conf.int.', '0.15257', '-', '0.15257)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:55', 'F:55']
dict_values(['The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:'])
dict_values(['We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'We asked participants to each judge 200–300 sentences in terms of fluency and adequacy, the most commonly used manual evaluation metrics.', 'The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:'])
['system', 'ROUGE-S*', 'Average_R:', '0.05645', '(95%-conf.int.', '0.05645', '-', '0.05645)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.10687', '(95%-conf.int.', '0.10687', '-', '0.10687)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:28', 'F:28']
dict_values(['The evaluation framework for the shared task is similar to the one used in last year&#8217;s shared task.'])
dict_values(['We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'We computed BLEU scores for each submission with a single reference translation.', 'Manual and Automatic Evaluation of Machine Translation between European Languages'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:45', 'F:0']
0.407356150712645 0.039568461234088755 0.07028076869014793





input/ref/Task1/W11-2123_vardha.csv
input/res/Task1/W11-2123.annv3.csv
parsing: input/ref/Task1/W11-2123_vardha.csv
    <S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S>
original cit marker offset is 0
new cit marker offset is 0



["'12'"]
'12'
['12']
parsed_discourse_facet ['method_citation']
 <S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'7'"]
'7'
['7']
parsed_discourse_facet ['method_citation']
 <S sid="131" ssid="3">Dynamic programming efficiently scores many hypotheses by exploiting the fact that an N-gram language model conditions on at most N &#8722; 1 preceding words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'131'"]
'131'
['131']
parsed_discourse_facet ['method_citation']
 <S sid="21" ssid="16">Performance improvements transfer to the Moses (Koehn et al., 2007), cdec (Dyer et al., 2010), and Joshua (Li et al., 2009) translation systems where our code has been integrated.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
 <S sid="21" ssid="16">Performance improvements transfer to the Moses (Koehn et al., 2007), cdec (Dyer et al., 2010), and Joshua (Li et al., 2009) translation systems where our code has been integrated.</S>
original cit marker offset is 0
new cit marker offset is 0



["'21'"]
'21'
['21']
parsed_discourse_facet ['method_citation']
<S sid="108" ssid="12">Compared with SRILM, IRSTLM adds several features: lower memory consumption, a binary file format with memory mapping, caching to increase speed, and quantization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'108'"]
'108'
['108']
parsed_discourse_facet ['method_citation']
    <S sid="129" ssid="1">In addition to the optimizations specific to each datastructure described in Section 2, we implement several general optimizations for language modeling.</S>
original cit marker offset is 0
new cit marker offset is 0



["'129'"]
'129'
['129']
parsed_discourse_facet ['method_citation']
    <S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'"]
'199'
['199']
parsed_discourse_facet ['method_citation']
    <S sid="52" ssid="30">Our implementation permits jumping to any n-gram of any length with a single lookup; this appears to be unique among language model implementations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'"]
'52'
['52']
parsed_discourse_facet ['method_citation']
    <S sid="263" ssid="5">Quantization can be improved by jointly encoding probability and backoff.</S>
original cit marker offset is 0
new cit marker offset is 0



["'263'"]
'263'
['263']
parsed_discourse_facet ['method_citation']
    <S sid="52" ssid="30">Our implementation permits jumping to any n-gram of any length with a single lookup; this appears to be unique among language model implementations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'"]
'52'
['52']
parsed_discourse_facet ['method_citation']
    <S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="145" ssid="17">If the context wnf will never extend to the right (i.e. wnf v is not present in the model for all words v) then no subsequent query will match the full context.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'"]
'145'
['145']
parsed_discourse_facet ['method_citation']
 <S sid="182" ssid="1">This section measures performance on shared tasks in order of increasing complexity: sparse lookups, evaluating perplexity of a large file, and translation with Moses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'182'"]
'182'
['182']
parsed_discourse_facet ['method_citation']
    <S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S>
original cit marker offset is 0
new cit marker offset is 0



["'274'"]
'274'
['274']
parsed_discourse_facet ['method_citation']
    <S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S>
original cit marker offset is 0
new cit marker offset is 0



["'12'"]
'12'
['12']
parsed_discourse_facet ['method_citation']
    <S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'7'"]
'7'
['7']
parsed_discourse_facet ['method_citation']
    <S sid="140" ssid="12">We have modified Moses (Koehn et al., 2007) to keep our state with hypotheses; to conserve memory, phrases do not keep state.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['method_citation']
 <S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'"]
'199'
['199']
parsed_discourse_facet ['method_citation']
 <S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'"]
'199'
['199']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W11-2123.annv3.csv
<S sid="97" ssid="1">SRILM (Stolcke, 2002) is widely used within academia.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'97'", "'12'", "'199'"]
'97'
'12'
'199'
['97', '12', '199']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="223" ssid="42">The binary language model from Section 5.2 and text phrase table were forced into disk cache before each run.</S><S sid="203" ssid="22">As noted in Section 4.4, disk cache state is controlled by reading the entire binary file before each test begins.</S><S sid="180" ssid="52">In all of our experiments, the binary file (whether mapped or, in the case of most other packages, interpreted) is loaded into the disk cache in advance so that lazy mapping will never fault to disk.</S>
original cit marker offset is 0
new cit marker offset is 0



["'223'", "'203'", "'180'"]
'223'
'203'
'180'
['223', '203', '180']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="159" ssid="31">Saving state allows our code to walk the data structure exactly once per query.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="10" ssid="5">The problem is to store these two values for a large and sparse set of n-grams in a way that makes queries efficient.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'1'", "'10'"]
'159'
'1'
'10'
['159', '1', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'274'", "'199'"]
'1'
'274'
'199'
['1', '274', '199']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'12'", "'1'"]
'199'
'12'
'1'
['199', '12', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="24" ssid="2">The set of n-grams appearing in a model is sparse, and we want to efficiently find their associated probabilities and backoff penalties.</S><S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'24'", "'7'"]
'199'
'24'
'7'
['199', '24', '7']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="206" ssid="25">Tokens were converted to vocabulary identifiers in advance and state was carried from each query to the next.</S><S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'206'", "'103'"]
'1'
'206'
'103'
['1', '206', '103']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'1'", "'205'"]
'199'
'1'
'205'
['199', '1', '205']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="45" ssid="23">The PROBING data structure is a rather straightforward application of these hash tables to store Ngram language models.</S><S sid="274" ssid="1">We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.</S><S sid="23" ssid="1">We implement two data structures: PROBING, designed for speed, and TRIE, optimized for memory.</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'", "'274'", "'23'"]
'45'
'274'
'23'
['45', '274', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="92" ssid="70">To quantize, we use the binning method (Federico and Bertoldi, 2006) that sorts values, divides into equally sized bins, and averages within each bin.</S><S sid="34" ssid="12">Therefore, a populated probing hash table consists of an array of buckets that contain either one entry or are empty.</S><S sid="35" ssid="13">Non-empty buckets contain an entry belonging to them or to a preceding bucket where a conflict occurred.</S>
original cit marker offset is 0
new cit marker offset is 0



["'92'", "'34'", "'35'"]
'92'
'34'
'35'
['92', '34', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="275" ssid="2">The PROBING model is 2.4 times as fast as the fastest alternative, SRILM, and uses less memory too.</S><S sid="97" ssid="1">SRILM (Stolcke, 2002) is widely used within academia.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S>
original cit marker offset is 0
new cit marker offset is 0



["'275'", "'97'", "'12'"]
'275'
'97'
'12'
['275', '97', '12']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="102" ssid="6">The PROBING model was designed to improve upon SRILM by using linear probing hash tables (though not arranged in a trie), allocating memory all at once (eliminating the need for full pointers), and being easy to compile.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'199'", "'102'"]
'1'
'199'
'102'
['1', '199', '102']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'1'", "'0'"]
'103'
'1'
'0'
['103', '1', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="12" ssid="7">Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'12'", "'1'"]
'199'
'12'
'1'
['199', '12', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'103'", "'0'"]
'199'
'103'
'0'
['199', '103', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'205'", "'199'", "'1'"]
'205'
'199'
'1'
['205', '199', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="103" ssid="7">IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.</S><S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="131" ssid="3">Dynamic programming efficiently scores many hypotheses by exploiting the fact that an N-gram language model conditions on at most N − 1 preceding words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'199'", "'131'"]
'103'
'199'
'131'
['103', '199', '131']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S><S sid="7" ssid="2">This paper presents methods to query N-gram language models, minimizing time and space costs.</S><S sid="0" ssid="0">KenLM: Faster and Smaller Language Model Queries</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'", "'7'", "'0'"]
'1'
'7'
'0'
['1', '7', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="1" ssid="1">We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'205'", "'1'"]
'199'
'205'
'1'
['199', '205', '1']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="199" ssid="18">For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.</S><S sid="205" ssid="24">We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).</S><S sid="200" ssid="19">The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.</S>
original cit marker offset is 0
new cit marker offset is 0



["'199'", "'205'", "'200'"]
'199'
'205'
'200'
['199', '205', '200']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.'])
dict_values(['SRILM (Stolcke, 2002) is widely used within academia.', 'Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.', 'For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.'])
['system', 'ROUGE-S*', 'Average_R:', '0.08245', '(95%-conf.int.', '0.08245', '-', '0.08245)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.15234', '(95%-conf.int.', '0.15234', '-', '0.15234)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:946', 'P:78', 'F:78']
dict_values(['This paper presents methods to query N-gram language models, minimizing time and space costs.'])
dict_values(['The binary language model from Section 5.2 and text phrase table were forced into disk cache before each run.', 'As noted in Section 4.4, disk cache state is controlled by reading the entire binary file before each test begins.', 'In all of our experiments, the binary file (whether mapped or, in the case of most other packages, interpreted) is loaded into the disk cache in advance so that lazy mapping will never fault to disk.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00116', '(95%-conf.int.', '0.00116', '-', '0.00116)']
['system', 'ROUGE-S*', 'Average_P:', '0.01818', '(95%-conf.int.', '0.01818', '-', '0.01818)']
['system', 'ROUGE-S*', 'Average_F:', '0.00218', '(95%-conf.int.', '0.00218', '-', '0.00218)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:861', 'P:55', 'F:1']
dict_values(['Dynamic programming efficiently scores many hypotheses by exploiting the fact that an N-gram language model conditions on at most N &#8722; 1 preceding words.'])
dict_values(['Saving state allows our code to walk the data structure exactly once per query.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'The problem is to store these two values for a large and sparse set of n-grams in a way that makes queries efficient.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00920', '(95%-conf.int.', '0.00920', '-', '0.00920)']
['system', 'ROUGE-S*', 'Average_P:', '0.03810', '(95%-conf.int.', '0.03810', '-', '0.03810)']
['system', 'ROUGE-S*', 'Average_F:', '0.01481', '(95%-conf.int.', '0.01481', '-', '0.01481)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:105', 'F:4']
dict_values(['Performance improvements transfer to the Moses (Koehn et al., 2007), cdec (Dyer et al., 2010), and Joshua (Li et al., 2009) translation systems where our code has been integrated.'])
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.', 'For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00085', '(95%-conf.int.', '0.00085', '-', '0.00085)']
['system', 'ROUGE-S*', 'Average_P:', '0.00585', '(95%-conf.int.', '0.00585', '-', '0.00585)']
['system', 'ROUGE-S*', 'Average_F:', '0.00148', '(95%-conf.int.', '0.00148', '-', '0.00148)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1176', 'P:171', 'F:1']
dict_values(['Performance improvements transfer to the Moses (Koehn et al., 2007), cdec (Dyer et al., 2010), and Joshua (Li et al., 2009) translation systems where our code has been integrated.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00075', '(95%-conf.int.', '0.00075', '-', '0.00075)']
['system', 'ROUGE-S*', 'Average_P:', '0.00585', '(95%-conf.int.', '0.00585', '-', '0.00585)']
['system', 'ROUGE-S*', 'Average_F:', '0.00134', '(95%-conf.int.', '0.00134', '-', '0.00134)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1326', 'P:171', 'F:1']
dict_values(['Compared with SRILM, IRSTLM adds several features: lower memory consumption, a binary file format with memory mapping, caching to increase speed, and quantization.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'The set of n-grams appearing in a model is sparse, and we want to efficiently find their associated probabilities and backoff penalties.', 'This paper presents methods to query N-gram language models, minimizing time and space costs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1081', 'P:136', 'F:0']
dict_values(['In addition to the optimizations specific to each datastructure described in Section 2, we implement several general optimizations for language modeling.'])
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'Tokens were converted to vocabulary identifiers in advance and state was carried from each query to the next.', 'IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00605', '(95%-conf.int.', '0.00605', '-', '0.00605)']
['system', 'ROUGE-S*', 'Average_P:', '0.05455', '(95%-conf.int.', '0.05455', '-', '0.05455)']
['system', 'ROUGE-S*', 'Average_F:', '0.01089', '(95%-conf.int.', '0.01089', '-', '0.01089)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:55', 'F:3']
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).'])
['system', 'ROUGE-S*', 'Average_R:', '0.21104', '(95%-conf.int.', '0.21104', '-', '0.21104)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.34853', '(95%-conf.int.', '0.34853', '-', '0.34853)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1540', 'P:325', 'F:325']
dict_values(['Our implementation permits jumping to any n-gram of any length with a single lookup; this appears to be unique among language model implementations.'])
dict_values(['The PROBING model is 2.4 times as fast as the fastest alternative, SRILM, and uses less memory too.', 'SRILM (Stolcke, 2002) is widely used within academia.', 'Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:66', 'F:0']
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'The PROBING model was designed to improve upon SRILM by using linear probing hash tables (though not arranged in a trie), allocating memory all at once (eliminating the need for full pointers), and being easy to compile.'])
['system', 'ROUGE-S*', 'Average_R:', '0.04887', '(95%-conf.int.', '0.04887', '-', '0.04887)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.09319', '(95%-conf.int.', '0.09319', '-', '0.09319)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1596', 'P:78', 'F:78']
dict_values(['If the context wnf will never extend to the right (i.e. wnf v is not present in the model for all words v) then no subsequent query will match the full context.'])
dict_values(['IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'KenLM: Faster and Smaller Language Model Queries'])
['system', 'ROUGE-S*', 'Average_R:', '0.00690', '(95%-conf.int.', '0.00690', '-', '0.00690)']
['system', 'ROUGE-S*', 'Average_P:', '0.04545', '(95%-conf.int.', '0.04545', '-', '0.04545)']
['system', 'ROUGE-S*', 'Average_F:', '0.01198', '(95%-conf.int.', '0.01198', '-', '0.01198)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:66', 'F:3']
dict_values(['This section measures performance on shared tasks in order of increasing complexity: sparse lookups, evaluating perplexity of a large file, and translation with Moses.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00151', '(95%-conf.int.', '0.00151', '-', '0.00151)']
['system', 'ROUGE-S*', 'Average_P:', '0.01667', '(95%-conf.int.', '0.01667', '-', '0.01667)']
['system', 'ROUGE-S*', 'Average_F:', '0.00277', '(95%-conf.int.', '0.00277', '-', '0.00277)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1326', 'P:120', 'F:2']
dict_values(['We have described two data structures for language modeling that achieve substantial reductions in time and memory cost.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.', 'KenLM: Faster and Smaller Language Model Queries'])
['system', 'ROUGE-S*', 'Average_R:', '0.00111', '(95%-conf.int.', '0.00111', '-', '0.00111)']
['system', 'ROUGE-S*', 'Average_P:', '0.02222', '(95%-conf.int.', '0.02222', '-', '0.02222)']
['system', 'ROUGE-S*', 'Average_F:', '0.00211', '(95%-conf.int.', '0.00211', '-', '0.00211)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:45', 'F:1']
dict_values(['Throughout this paper we compare with several packages: SRILM 1.5.12 (Stolcke, 2002) is a popular toolkit based on tries used in several decoders.'])
dict_values(['We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).', 'For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00065', '(95%-conf.int.', '0.00065', '-', '0.00065)']
['system', 'ROUGE-S*', 'Average_P:', '0.01282', '(95%-conf.int.', '0.01282', '-', '0.01282)']
['system', 'ROUGE-S*', 'Average_F:', '0.00124', '(95%-conf.int.', '0.00124', '-', '0.00124)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1540', 'P:78', 'F:1']
dict_values(['This paper presents methods to query N-gram language models, minimizing time and space costs.'])
dict_values(['IRSTLM (Federico et al., 2008) is an open-source toolkit for building and querying language models.', 'For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'Dynamic programming efficiently scores many hypotheses by exploiting the fact that an N-gram language model conditions on at most N − 1 preceding words.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00471', '(95%-conf.int.', '0.00471', '-', '0.00471)']
['system', 'ROUGE-S*', 'Average_P:', '0.10909', '(95%-conf.int.', '0.10909', '-', '0.10909)']
['system', 'ROUGE-S*', 'Average_F:', '0.00902', '(95%-conf.int.', '0.00902', '-', '0.00902)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1275', 'P:55', 'F:6']
dict_values(['We have modified Moses (Koehn et al., 2007) to keep our state with hypotheses; to conserve memory, phrases do not keep state.'])
dict_values(['We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.', 'This paper presents methods to query N-gram language models, minimizing time and space costs.', 'KenLM: Faster and Smaller Language Model Queries'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:55', 'F:0']
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).', 'We present KenLM, a library that implements two data structures for efficient language model queries, reducing both time and costs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.21104', '(95%-conf.int.', '0.21104', '-', '0.21104)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.34853', '(95%-conf.int.', '0.34853', '-', '0.34853)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1540', 'P:325', 'F:325']
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.'])
dict_values(['For the perplexity and translation tasks, we used SRILM to build a 5-gram English language model on 834 million tokens from Europarl v6 (Koehn, 2005) and the 2011 Workshop on Machine Translation News Crawl corpus with duplicate lines removed.', 'We evaluate the time and memory consumption of each data structure by computing perplexity on 4 billion tokens from the English Gigaword corpus (Parker et al., 2009).', 'The model was built with open vocabulary, modified Kneser-Ney smoothing, and default pruning settings that remove singletons of order 3 and higher.'])
['system', 'ROUGE-S*', 'Average_R:', '0.18995', '(95%-conf.int.', '0.18995', '-', '0.18995)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.31925', '(95%-conf.int.', '0.31925', '-', '0.31925)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1711', 'P:325', 'F:325']
0.29604333168864816 0.0431244442048642 0.07331444403714198





input/ref/Task1/A97-1014_swastika.csv
input/res/Task1/A97-1014.annv3.csv
parsing: input/ref/Task1/A97-1014_swastika.csv
<S sid="168" ssid="10">We will closely coordinate the further development of our corpus with the annotation work in Verbmobil and with other German efforts in corpus annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



['168']
168
['168']
parsed_discourse_facet ['aim_citation']
<S sid="168" ssid="10">We will closely coordinate the further development of our corpus with the annotation work in Verbmobil and with other German efforts in corpus annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



['168']
168
['168']
parsed_discourse_facet ['aim_citation']
<S sid="151" ssid="32">For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).</S>
original cit marker offset is 0
new cit marker offset is 0



['151']
151
['151']
parsed_discourse_facet ['method_citation']
<S sid="15" ssid="5">Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.</S>
original cit marker offset is 0
new cit marker offset is 0



['15']
15
['15']
parsed_discourse_facet ['result_citation']
<S sid="47" ssid="37">Argument structure can be represented in terms of unordered trees (with crossing branches).</S>
original cit marker offset is 0
new cit marker offset is 0



['47']
47
['47']
parsed_discourse_facet ['method_citation']
<S sid="167" ssid="9">In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.</S>
original cit marker offset is 0
new cit marker offset is 0



['167']
167
['167']
parsed_discourse_facet ['method_citation']
<S sid="168" ssid="10">We will closely coordinate the further development of our corpus with the annotation work in Verbmobil and with other German efforts in corpus annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



['168']
168
['168']
parsed_discourse_facet ['aim_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



['4']
4
['4']
parsed_discourse_facet ['aim_citation']
<S sid="160" ssid="2">These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.</S>
original cit marker offset is 0
new cit marker offset is 0



['160']
160
['160']
parsed_discourse_facet ['method_citation']
<S sid="127" ssid="8">As the need for certain functionalities becomes obvious with growing annotation experience, we have decided to implement the tool in two stages.</S>
original cit marker offset is 0
new cit marker offset is 0



['127']
127
['127']
parsed_discourse_facet ['method_citation']
<S sid="39" ssid="29">Consider the German sentence (1) daran wird ihn Anna erkennen, &amp;di er weint at-it will him Anna recognise that he cries 'Anna will recognise him at his cry' A sample constituent structure is given below: The fairly short sentence contains three non-local dependencies, marked by co-references between traces and the corresponding nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



['39']
39
['39']
parsed_discourse_facet ['method_citation']
<S sid="72" ssid="17">In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.</S>
original cit marker offset is 0
new cit marker offset is 0



['72']
72
['72']
parsed_discourse_facet ['method_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



['4']
4
['4']
parsed_discourse_facet ['aim_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



['4']
4
['4']
parsed_discourse_facet ['aim_citation']
parsing: input/res/Task1/A97-1014.annv3.csv
<S sid="74" ssid="19">During the first phase, the focus is on annotating correct structures and a coarse-grained classification of grammatical functions, which represent the following areas of information: Dependency type: complements are further classified according to features such as category and case: clausal complements (OC), accusative objects (OA), datives (DA), etc.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S><S sid="170" ssid="12">Our annotation tool supplies efficient manipulation and immediate visualization of argument structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'74'", "'88'", "'170'"]
'74'
'88'
'170'
['74', '88', '170']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="72" ssid="17">In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="144" ssid="25">We distinguish five degrees of automation: So far, about 1100 sentences of our corpus have been annotated.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'", "'4'", "'144'"]
'72'
'4'
'144'
['72', '4', '144']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="153" ssid="34">The tagger rates 90% of all assignments as reliable and carries them out fully automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'159'", "'153'"]
'24'
'159'
'153'
['24', '159', '153']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="15" ssid="5">Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.</S><S sid="57" ssid="2">Argument structure, represented in terms of unordered trees.</S><S sid="0" ssid="0">An Annotation Scheme for Free Word Order Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'57'", "'0'"]
'15'
'57'
'0'
['15', '57', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="111" ssid="24">If the scope of such a word does not directly correspond to a tree node, the word is attached to the lowest node dominating all subconstituents appearing in its scope.</S><S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="47" ssid="37">Argument structure can be represented in terms of unordered trees (with crossing branches).</S>
original cit marker offset is 0
new cit marker offset is 0



["'111'", "'24'", "'47'"]
'111'
'24'
'47'
['111', '24', '47']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'24'", "'4'"]
'159'
'24'
'4'
['159', '24', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="167" ssid="9">In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.</S><S sid="141" ssid="22">The corpus is stored in a SQL database.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'167'", "'141'", "'4'"]
'167'
'141'
'4'
['167', '141', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="166" ssid="8">Syntactically annotated corpora of German have been missing until now.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="1" ssid="1">We describe an annotation scheme and a tool developed for creating linguistically annotated corpora for non-configurational languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'166'", "'4'", "'1'"]
'166'
'4'
'1'
['166', '4', '1']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S><S sid="0" ssid="0">An Annotation Scheme for Free Word Order Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'88'", "'0'"]
'159'
'88'
'0'
['159', '88', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="121" ssid="2">In order to make the annotation process more efficient, extra effort has been put. into the development of an annotation tool.</S><S sid="74" ssid="19">During the first phase, the focus is on annotating correct structures and a coarse-grained classification of grammatical functions, which represent the following areas of information: Dependency type: complements are further classified according to features such as category and case: clausal complements (OC), accusative objects (OA), datives (DA), etc.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'121'", "'74'"]
'159'
'121'
'74'
['159', '121', '74']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="72" ssid="17">In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'", "'4'", "'88'"]
'72'
'4'
'88'
['72', '4', '88']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="141" ssid="22">The corpus is stored in a SQL database.</S><S sid="143" ssid="24">Sentences annotated in previous steps are used as training material for further processing.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'", "'141'", "'143'"]
'4'
'141'
'143'
['4', '141', '143']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="71" ssid="16">However, there is a trade-off between the granularity of information encoded in the labels and the speed and accuracy of annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'", "'159'", "'71'"]
'4'
'159'
'71'
['4', '159', '71']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="160" ssid="2">These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="151" ssid="32">For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).</S>
original cit marker offset is 0
new cit marker offset is 0



["'160'", "'4'", "'151'"]
'160'
'4'
'151'
['160', '4', '151']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['We will closely coordinate the further development of our corpus with the annotation work in Verbmobil and with other German efforts in corpus annotation.'])
dict_values(['In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.', "The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.", 'We distinguish five degrees of automation: So far, about 1100 sentences of our corpus have been annotated.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02646', '(95%-conf.int.', '0.02646', '-', '0.02646)']
['system', 'ROUGE-S*', 'Average_P:', '0.18182', '(95%-conf.int.', '0.18182', '-', '0.18182)']
['system', 'ROUGE-S*', 'Average_F:', '0.04619', '(95%-conf.int.', '0.04619', '-', '0.04619)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:55', 'F:10']
dict_values(['For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).'])
dict_values(['The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.', 'As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.', 'The tagger rates 90% of all assignments as reliable and carries them out fully automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00178', '(95%-conf.int.', '0.00178', '-', '0.00178)']
['system', 'ROUGE-S*', 'Average_P:', '0.01818', '(95%-conf.int.', '0.01818', '-', '0.01818)']
['system', 'ROUGE-S*', 'Average_F:', '0.00325', '(95%-conf.int.', '0.00325', '-', '0.00325)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:55', 'F:1']
dict_values(['Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.'])
dict_values(['Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.', 'Argument structure, represented in terms of unordered trees.', 'An Annotation Scheme for Free Word Order Languages'])
['system', 'ROUGE-S*', 'Average_R:', '0.29915', '(95%-conf.int.', '0.29915', '-', '0.29915)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.46053', '(95%-conf.int.', '0.46053', '-', '0.46053)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:105', 'F:105']
dict_values(['In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.'])
dict_values(['As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.', 'The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.', "The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction."])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:703', 'P:91', 'F:0']
dict_values(['We will closely coordinate the further development of our corpus with the annotation work in Verbmobil and with other German efforts in corpus annotation.'])
dict_values(['In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.', 'The corpus is stored in a SQL database.', "The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction."])
['system', 'ROUGE-S*', 'Average_R:', '0.01839', '(95%-conf.int.', '0.01839', '-', '0.01839)']
['system', 'ROUGE-S*', 'Average_P:', '0.14545', '(95%-conf.int.', '0.14545', '-', '0.14545)']
['system', 'ROUGE-S*', 'Average_F:', '0.03265', '(95%-conf.int.', '0.03265', '-', '0.03265)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:55', 'F:8']
dict_values(['These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.'])
dict_values(['As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.', 'As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.', 'An Annotation Scheme for Free Word Order Languages'])
['system', 'ROUGE-S*', 'Average_R:', '0.01008', '(95%-conf.int.', '0.01008', '-', '0.01008)']
['system', 'ROUGE-S*', 'Average_P:', '0.28571', '(95%-conf.int.', '0.28571', '-', '0.28571)']
['system', 'ROUGE-S*', 'Average_F:', '0.01948', '(95%-conf.int.', '0.01948', '-', '0.01948)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:595', 'P:21', 'F:6']
dict_values(['As the need for certain functionalities becomes obvious with growing annotation experience, we have decided to implement the tool in two stages.'])
dict_values(['As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.', 'In order to make the annotation process more efficient, extra effort has been put. into the development of an annotation tool.', 'During the first phase, the focus is on annotating correct structures and a coarse-grained classification of grammatical functions, which represent the following areas of information: Dependency type: complements are further classified according to features such as category and case: clausal complements (OC), accusative objects (OA), datives (DA), etc.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00073', '(95%-conf.int.', '0.00073', '-', '0.00073)']
['system', 'ROUGE-S*', 'Average_P:', '0.02778', '(95%-conf.int.', '0.02778', '-', '0.02778)']
['system', 'ROUGE-S*', 'Average_F:', '0.00141', '(95%-conf.int.', '0.00141', '-', '0.00141)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1378', 'P:36', 'F:1']
dict_values(["Consider the German sentence (1) daran wird ihn Anna erkennen, &di er weint at-it will him Anna recognise that he cries 'Anna will recognise him at his cry' A sample constituent structure is given below: The fairly short sentence contains three non-local dependencies, marked by co-references between traces and the corresponding nodes."])
dict_values(['In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.', "The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.", 'As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:406', 'F:0']
dict_values(['In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.'])
dict_values(["The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.", 'The corpus is stored in a SQL database.', 'Sentences annotated in previous steps are used as training material for further processing.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00791', '(95%-conf.int.', '0.00791', '-', '0.00791)']
['system', 'ROUGE-S*', 'Average_P:', '0.05556', '(95%-conf.int.', '0.05556', '-', '0.05556)']
['system', 'ROUGE-S*', 'Average_F:', '0.01384', '(95%-conf.int.', '0.01384', '-', '0.01384)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:253', 'P:36', 'F:2']
dict_values(["The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction."])
dict_values(["The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.", 'As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.', 'However, there is a trade-off between the granularity of information encoded in the labels and the speed and accuracy of annotation.'])
['system', 'ROUGE-S*', 'Average_R:', '0.12500', '(95%-conf.int.', '0.12500', '-', '0.12500)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.22222', '(95%-conf.int.', '0.22222', '-', '0.22222)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:66', 'F:66']
dict_values(["The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction."])
dict_values(['These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.', "The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.", 'For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).'])
['system', 'ROUGE-S*', 'Average_R:', '0.15172', '(95%-conf.int.', '0.15172', '-', '0.15172)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.26347', '(95%-conf.int.', '0.26347', '-', '0.26347)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:66', 'F:66']
0.33768181511198353 0.0582927267427934 0.09663999912145456





input/ref/Task1/W99-0613_sweta.csv
input/res/Task1/W99-0613.annv3.csv
parsing: input/ref/Task1/W99-0613_sweta.csv
<S sid="121" ssid="54">They also describe an application of cotraining to classifying web pages (the to feature sets are the words on the page, and other pages pointing to the page).</S>
original cit marker offset is 0
new cit marker offset is 0



["121'"]
121'
['121']
parsed_discourse_facet ['method_citation']
<S sid="252" ssid="3">The method uses a &amp;quot;soft&amp;quot; measure of the agreement between two classifiers as an objective function; we described an algorithm which directly optimizes this function.</S>
original cit marker offset is 0
new cit marker offset is 0



["252'"]
252'
['252']
parsed_discourse_facet ['method_citation']
 <S sid="91" ssid="24">There are two differences between this method and the DL-CoTrain algorithm: spelling and contextual features, alternating between labeling and learning with the two types of features.</S>
original cit marker offset is 0
new cit marker offset is 0



["91'"]
91'
['91']
parsed_discourse_facet ['method_citation']
<S sid="91" ssid="24">There are two differences between this method and the DL-CoTrain algorithm: spelling and contextual features, alternating between labeling and learning with the two types of features.</S>
original cit marker offset is 0
new cit marker offset is 0



["91'"]
91'
['91']
parsed_discourse_facet ['method_citation']
 <S sid="213" ssid="80">Thus at each iteration the algorithm is forced to pick features for the location, person and organization in turn for the classifier being trained.</S>
original cit marker offset is 0
new cit marker offset is 0



["213'"]
213'
['213']
parsed_discourse_facet ['method_citation']
 <S sid="250" ssid="1">Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.</S>
original cit marker offset is 0
new cit marker offset is 0



["250'"]
250'
['250']
parsed_discourse_facet ['method_citation']
<S sid="39" ssid="33">(Brin 98) ,describes a system for extracting (author, book-title) pairs from the World Wide Web using an approach that bootstraps from an initial seed set of examples.</S>
original cit marker offset is 0
new cit marker offset is 0



["39'"]
39'
['39']
parsed_discourse_facet ['method_citation']
<S sid="202" ssid="69">The CoBoost algorithm just described is for the case where there are two labels: for the named entity task there are three labels, and in general it will be useful to generalize the CoBoost algorithm to the multiclass case.</S>
original cit marker offset is 0
new cit marker offset is 0



["202'"]
202'
['202']
parsed_discourse_facet ['method_citation']
<S sid="61" ssid="15">The following features were used: full-string=x The full string (e.g., for Maury Cooper, full- s tring=Maury_Cooper). contains(x) If the spelling contains more than one word, this feature applies for any words that the string contains (e.g., Maury Cooper contributes two such features, contains (Maury) and contains (Cooper) . allcapl This feature appears if the spelling is a single word which is all capitals (e.g., IBM would contribute this feature). allcap2 This feature appears if the spelling is a single word which is all capitals or full periods, and contains at least one period.</S>
original cit marker offset is 0
new cit marker offset is 0



["61'"]
61'
['61']
parsed_discourse_facet ['method_citation']
<S sid="176" ssid="43">(7) is at 0 when: 1) Vi : sign(gi (xi)) = sign(g2 (xi)); 2) Ig3(xi)l oo; and 3) sign(gi (xi)) = yi for i = 1, , m. In fact, Zco provides a bound on the sum of the classification error of the labeled examples and the number of disagreements between the two classifiers on the unlabeled examples.</S>
original cit marker offset is 0
new cit marker offset is 0



["176'"]
176'
['176']
parsed_discourse_facet ['method_citation']
 <S sid="108" ssid="41">In the cotraining case, (Blum and Mitchell 98) argue that the task should be to induce functions Ii and f2 such that So Ii and 12 must (1) correctly classify the labeled examples, and (2) must agree with each other on the unlabeled examples.</S>
original cit marker offset is 0
new cit marker offset is 0



["108'"]
108'
['108']
parsed_discourse_facet ['method_citation']
<S sid="27" ssid="21">The first method builds on results from (Yarowsky 95) and (Blum and Mitchell 98).</S>
    <S sid="28" ssid="22">(Yarowsky 95) describes an algorithm for word-sense disambiguation that exploits redundancy in contextual features, and gives impressive performance.</S>
original cit marker offset is 0
new cit marker offset is 0



["27'", "'28'"]
27'
'28'
['27', '28']
parsed_discourse_facet ['method_citation']
<S sid="7" ssid="1">Many statistical or machine-learning approaches for natural language problems require a relatively large amount of supervision, in the form of labeled training examples.</S>
original cit marker offset is 0
new cit marker offset is 0



["7'"]
7'
['7']
parsed_discourse_facet ['method_citation']
 <S sid="172" ssid="39">To see this, note thai the first two terms in the above equation correspond to the function that AdaBoost attempts to minimize in the standard supervised setting (Equ.</S>
original cit marker offset is 0
new cit marker offset is 0



["172'"]
172'
['172']
parsed_discourse_facet ['method_citation']
<S sid="85" ssid="18">(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.</S>
original cit marker offset is 0
new cit marker offset is 0



["85'"]
85'
['85']
parsed_discourse_facet ['method_citation']
 <S sid="214" ssid="81">This modification brings the method closer to the DL-CoTrain algorithm described earlier, and is motivated by the intuition that all three labels should be kept healthily populated in the unlabeled examples, preventing one label from dominating &#8212; this deserves more theoretical investigation.</S>
original cit marker offset is 0
new cit marker offset is 0



["214'"]
214'
['214']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W99-0613.annv3.csv
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'133'", "'137'"]
'0'
'133'
'137'
['0', '133', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="174" ssid="41">The two new terms force the two classifiers to agree, as much as possible, on the unlabeled examples.</S><S sid="248" ssid="15">With each iteration more examples are assigned labels by both classifiers, while a high level of agreement (> 94%) is maintained between them.</S><S sid="33" ssid="27">The second algorithm builds on a boosting algorithm called AdaBoost (Freund and Schapire 97; Schapire and Singer 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'248'", "'33'"]
'174'
'248'
'33'
['174', '248', '33']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S><S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="220" ssid="87">(7), such as the likelihood function used in maximum-entropy problems and other generalized additive models (Lafferty 99).</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'133'", "'220'"]
'79'
'133'
'220'
['79', '133', '220']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="40" ssid="34">(Berland and Charniak 99) describe a method for extracting parts of objects from wholes (e.g., &quot;speedometer&quot; from &quot;car&quot;) from a large corpus using hand-crafted patterns.</S><S sid="41" ssid="35">(Hearst 92) describes a method for extracting hyponyms from a corpus (pairs of words in &quot;isa&quot; relations).</S><S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'", "'41'", "'79'"]
'40'
'41'
'79'
['40', '41', '79']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="19" ssid="13">Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.</S><S sid="11" ssid="5">For example, a good classifier would identify Mrs. Frank as a person, Steptoe & Johnson as a company, and Honduras as a location.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'19'", "'11'"]
'0'
'19'
'11'
['0', '19', '11']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S><S sid="250" ssid="1">Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.</S><S sid="179" ssid="46">The algorithm builds two classifiers in parallel from labeled and unlabeled data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'", "'250'", "'179'"]
'137'
'250'
'179'
['137', '250', '179']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="19" ssid="13">Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.</S><S sid="236" ssid="3">We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'19'", "'236'"]
'0'
'19'
'236'
['0', '19', '236']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="16" ssid="10">Supervised methods have been applied quite successfully to the full MUC named-entity task (Bikel et al. 97).</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="133" ssid="66">Fort= 1,...,T:</S>
original cit marker offset is 0
new cit marker offset is 0



["'16'", "'0'", "'133'"]
'16'
'0'
'133'
['16', '0', '133']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="253" ssid="4">We are currently exploring other methods that employ similar ideas and their formal properties.</S><S sid="133" ssid="66">Fort= 1,...,T:</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'253'", "'133'"]
'0'
'253'
'133'
['0', '253', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="251" ssid="2">In addition to a heuristic based on decision list learning, we also presented a boosting-like framework that builds on ideas from (Blum and Mitchell 98).</S><S sid="68" ssid="1">The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).</S><S sid="31" ssid="25">Our first algorithm is similar to Yarowsky's, but with some important modifications motivated by (Blum and Mitchell 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'251'", "'68'", "'31'"]
'251'
'68'
'31'
['251', '68', '31']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="28" ssid="22">(Yarowsky 95) describes an algorithm for word-sense disambiguation that exploits redundancy in contextual features, and gives impressive performance.</S><S sid="39" ssid="33">(Brin 98) ,describes a system for extracting (author, book-title) pairs from the World Wide Web using an approach that bootstraps from an initial seed set of examples.</S><S sid="254" ssid="5">Future work should also extend the approach to build a complete named entity extractor - a method that pulls proper names from text and then classifies them.</S>
original cit marker offset is 0
new cit marker offset is 0



["'28'", "'39'", "'254'"]
'28'
'39'
'254'
['28', '39', '254']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="85" ssid="18">(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="77" ssid="10">In this paper k = 3 (the three labels are person, organization, location), and we set a = 0.1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'0'", "'77'"]
'85'
'0'
'77'
['85', '0', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation']
<S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="68" ssid="1">The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).</S>
original cit marker offset is 0
new cit marker offset is 0



["'133'", "'0'", "'68'"]
'133'
'0'
'68'
['133', '0', '68']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['The method uses a &quot;soft&quot; measure of the agreement between two classifiers as an objective function; we described an algorithm which directly optimizes this function.'])
dict_values(['The two new terms force the two classifiers to agree, as much as possible, on the unlabeled examples.', 'With each iteration more examples are assigned labels by both classifiers, while a high level of agreement (> 94%) is maintained between them.', 'The second algorithm builds on a boosting algorithm called AdaBoost (Freund and Schapire 97; Schapire and Singer 98).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00529', '(95%-conf.int.', '0.00529', '-', '0.00529)']
['system', 'ROUGE-S*', 'Average_P:', '0.02564', '(95%-conf.int.', '0.02564', '-', '0.02564)']
['system', 'ROUGE-S*', 'Average_F:', '0.00877', '(95%-conf.int.', '0.00877', '-', '0.00877)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:78', 'F:2']
dict_values(['There are two differences between this method and the DL-CoTrain algorithm: spelling and contextual features, alternating between labeling and learning with the two types of features.'])
dict_values(['2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).', 'Fort= 1,...,T:', '(7), such as the likelihood function used in maximum-entropy problems and other generalized additive models (Lafferty 99).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00460', '(95%-conf.int.', '0.00460', '-', '0.00460)']
['system', 'ROUGE-S*', 'Average_P:', '0.02564', '(95%-conf.int.', '0.02564', '-', '0.02564)']
['system', 'ROUGE-S*', 'Average_F:', '0.00780', '(95%-conf.int.', '0.00780', '-', '0.00780)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:78', 'F:2']
dict_values(['Thus at each iteration the algorithm is forced to pick features for the location, person and organization in turn for the classifier being trained.'])
dict_values(['Unsupervised Models for Named Entity Classification Collins', 'Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.', 'For example, a good classifier would identify Mrs. Frank as a person, Steptoe & Johnson as a company, and Honduras as a location.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:55', 'F:0']
dict_values(['Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.'])
dict_values(['The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.', 'Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.', 'The algorithm builds two classifiers in parallel from labeled and unlabeled data.'])
['system', 'ROUGE-S*', 'Average_R:', '0.15670', '(95%-conf.int.', '0.15670', '-', '0.15670)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.27094', '(95%-conf.int.', '0.27094', '-', '0.27094)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:55', 'F:55']
dict_values(['The CoBoost algorithm just described is for the case where there are two labels: for the named entity task there are three labels, and in general it will be useful to generalize the CoBoost algorithm to the multiclass case.'])
dict_values(['Unsupervised Models for Named Entity Classification Collins', 'Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.', 'We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00923', '(95%-conf.int.', '0.00923', '-', '0.00923)']
['system', 'ROUGE-S*', 'Average_P:', '0.03297', '(95%-conf.int.', '0.03297', '-', '0.03297)']
['system', 'ROUGE-S*', 'Average_F:', '0.01442', '(95%-conf.int.', '0.01442', '-', '0.01442)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:91', 'F:3']
dict_values(['The following features were used: full-string=x The full string (e.g., for Maury Cooper, full- s tring=Maury_Cooper). contains(x) If the spelling contains more than one word, this feature applies for any words that the string contains (e.g., Maury Cooper contributes two such features, contains (Maury) and contains (Cooper) . allcapl This feature appears if the spelling is a single word which is all capitals (e.g., IBM would contribute this feature). allcap2 This feature appears if the spelling is a single word which is all capitals or full periods, and contains at least one period.'])
dict_values(['Supervised methods have been applied quite successfully to the full MUC named-entity task (Bikel et al. 97).', 'Unsupervised Models for Named Entity Classification Collins', 'Fort= 1,...,T:'])
['system', 'ROUGE-S*', 'Average_R:', '0.00526', '(95%-conf.int.', '0.00526', '-', '0.00526)']
['system', 'ROUGE-S*', 'Average_P:', '0.00111', '(95%-conf.int.', '0.00111', '-', '0.00111)']
['system', 'ROUGE-S*', 'Average_F:', '0.00183', '(95%-conf.int.', '0.00183', '-', '0.00183)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:190', 'P:903', 'F:1']
dict_values(['In the cotraining case, (Blum and Mitchell 98) argue that the task should be to induce functions Ii and f2 such that So Ii and 12 must (1) correctly classify the labeled examples, and (2) must agree with each other on the unlabeled examples.'])
dict_values(['Unsupervised Models for Named Entity Classification Collins', 'We are currently exploring other methods that employ similar ideas and their formal properties.', 'Fort= 1,...,T:'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:105', 'P:231', 'F:0']
dict_values(['The first method builds on results from (Yarowsky 95) and (Blum and Mitchell 98).', '(Yarowsky 95) describes an algorithm for word-sense disambiguation that exploits redundancy in contextual features, and gives impressive performance.'])
dict_values(['In addition to a heuristic based on decision list learning, we also presented a boosting-like framework that builds on ideas from (Blum and Mitchell 98).', 'The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).', "Our first algorithm is similar to Yarowsky's, but with some important modifications motivated by (Blum and Mitchell 98)."])
['system', 'ROUGE-S*', 'Average_R:', '0.09091', '(95%-conf.int.', '0.09091', '-', '0.09091)']
['system', 'ROUGE-S*', 'Average_P:', '0.22078', '(95%-conf.int.', '0.22078', '-', '0.22078)']
['system', 'ROUGE-S*', 'Average_F:', '0.12879', '(95%-conf.int.', '0.12879', '-', '0.12879)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:231', 'F:51']
dict_values(['(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.'])
dict_values(['(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.', 'Unsupervised Models for Named Entity Classification Collins', 'In this paper k = 3 (the three labels are person, organization, location), and we set a = 0.1.'])
['system', 'ROUGE-S*', 'Average_R:', '0.49412', '(95%-conf.int.', '0.49412', '-', '0.49412)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.66142', '(95%-conf.int.', '0.66142', '-', '0.66142)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1275', 'P:630', 'F:630']
dict_values(['This modification brings the method closer to the DL-CoTrain algorithm described earlier, and is motivated by the intuition that all three labels should be kept healthily populated in the unlabeled examples, preventing one label from dominating &#8212; this deserves more theoretical investigation.'])
dict_values(['Fort= 1,...,T:', 'Unsupervised Models for Named Entity Classification Collins', 'The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:153', 'P:231', 'F:0']
0.23061399769386004 0.07661099923389002 0.10939699890603002





input/ref/Task1/P87-1015_vardha.csv
input/res/Task1/P87-1015.annv3.csv
parsing: input/ref/Task1/P87-1015_vardha.csv
<S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S>
original cit marker offset is 0
new cit marker offset is 0



["'165'"]
'165'
['165']
parsed_discourse_facet ['method_citation']
 <S sid="119" ssid="4">In defining LCFRS's, we hope to generalize the definition of CFG's to formalisms manipulating any structure, e.g. strings, trees, or graphs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'119'"]
'119'
['119']
parsed_discourse_facet ['method_citation']
    <S sid="3" ssid="1">Much of the study of grammatical systems in computational linguistics has been focused on the weak generative capacity of grammatical formalism.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'"]
'3'
['3']
parsed_discourse_facet ['method_citation']
    <S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'"]
'118'
['118']
parsed_discourse_facet ['method_citation']
    <S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'"]
'118'
['118']
parsed_discourse_facet ['method_citation']
    <S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'133'"]
'133'
['133']
parsed_discourse_facet ['method_citation']
 <S sid="138" ssid="23">We can show that languages generated by LCFRS's are semilinear as long as the composition operation does not remove any terminal symbols from its arguments.</S>
original cit marker offset is 0
new cit marker offset is 0



["'138'"]
'138'
['138']
parsed_discourse_facet ['method_citation']
    <S sid="156" ssid="41">Giving a recognition algorithm for LCFRL's involves describing the substrings of the input that are spanned by the structures derived by the LCFRS's and how the composition operation combines these substrings.</S>
original cit marker offset is 0
new cit marker offset is 0



["'156'"]
'156'
['156']
parsed_discourse_facet ['method_citation']
 <S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'"]
'118'
['118']
parsed_discourse_facet ['method_citation']
 <S sid="119" ssid="4">In defining LCFRS's, we hope to generalize the definition of CFG's to formalisms manipulating any structure, e.g. strings, trees, or graphs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'119'"]
'119'
['119']
parsed_discourse_facet ['method_citation']
  <S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'133'"]
'133'
['133']
parsed_discourse_facet ['method_citation']
 <S sid="164" ssid="49">Although embedding this version of LCFRS's in the framework of ILFP developed by Rounds (1985) is straightforward, our motivation was to capture properties shared by a family of grammatical systems and generalize them defining a class of related formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'164'"]
'164'
['164']
parsed_discourse_facet ['method_citation']
 <S sid="204" ssid="10">The similarities become apparent when they are studied at the level of derivation structures: derivation nee sets of CFG's, HG's, TAG's, and MCTAG's are all local sets.</S>
original cit marker offset is 0
new cit marker offset is 0



["'204'"]
'204'
['204']
parsed_discourse_facet ['method_citation']
    <S sid="9" ssid="7">We examine both the complexity of the paths of trees in the tree sets, and the kinds of dependencies that the formalisms can impose between paths.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
    <S sid="28" ssid="13">A TAG consists of a finite set of elementary trees that are either initial trees or auxiliary trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'28'"]
'28'
['28']
parsed_discourse_facet ['method_citation']
 <S sid="138" ssid="23">We can show that languages generated by LCFRS's are semilinear as long as the composition operation does not remove any terminal symbols from its arguments.</S>
original cit marker offset is 0
new cit marker offset is 0



["'138'"]
'138'
['138']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P87-1015.annv3.csv
<S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S><S sid="117" ssid="2">Our goal is to define a class of formal systems, and show that any member of this class will possess certain attractive properties.</S><S sid="110" ssid="16">The independence of paths in the tree sets of the k tI grammatical formalism in this hierarchy can be shown by means of tree pumping lemma of the form t1ti3t .</S>
original cit marker offset is 0
new cit marker offset is 0



["'165'", "'117'", "'110'"]
'165'
'117'
'110'
['165', '117', '110']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="111" ssid="17">.</S><S sid="230" ssid="36">LCFRS's have only been loosely defined in this paper; we have yet to provide a complete set of formal properties associated with members of this class.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'111'", "'230'", "'118'"]
'111'
'230'
'118'
['111', '230', '118']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="214" ssid="20">LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'125'", "'214'"]
'207'
'125'
'214'
['207', '125', '214']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'118'", "'92'"]
'207'
'118'
'92'
['207', '118', '92']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'92'", "'118'"]
'207'
'92'
'118'
['207', '92', '118']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'", "'207'", "'133'"]
'118'
'207'
'133'
['118', '207', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="214" ssid="20">LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S>
original cit marker offset is 0
new cit marker offset is 0



["'165'", "'125'", "'214'"]
'165'
'125'
'214'
['165', '125', '214']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="151" ssid="36">We now turn our attention to the recognition of string languages generated by these formalisms (LCFRL's).</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'151'", "'207'", "'92'"]
'151'
'207'
'92'
['151', '207', '92']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'118'", "'207'", "'133'"]
'118'
'207'
'133'
['118', '207', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="54" ssid="39">An IG can be viewed as a CFG in which each nonterminal is associated with a stack.</S><S sid="118" ssid="3">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S>
original cit marker offset is 0
new cit marker offset is 0



["'54'", "'118'", "'165'"]
'54'
'118'
'165'
['54', '118', '165']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="75" ssid="60">A multicomponent Tree Adjoining Grammar (MCTAG) consists of a finite set of finite elementary tree sets.</S><S sid="133" ssid="18">To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.</S><S sid="28" ssid="13">A TAG consists of a finite set of elementary trees that are either initial trees or auxiliary trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'75'", "'133'", "'28'"]
'75'
'133'
'28'
['75', '133', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="92" ssid="77">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'207'", "'92'"]
'125'
'207'
'92'
['125', '207', '92']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="204" ssid="10">The similarities become apparent when they are studied at the level of derivation structures: derivation nee sets of CFG's, HG's, TAG's, and MCTAG's are all local sets.</S><S sid="165" ssid="50">This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'204'", "'165'"]
'125'
'204'
'165'
['125', '204', '165']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="78" ssid="63">Each member of a set of trees can be adjoined into distinct nodes of trees in a single elementary tree set, i.e, derivations always involve the adjunction of a derived auxiliary tree set into an elementary tree set.</S><S sid="80" ssid="65">The derivation trees of a MCTAG are similar to those of a TAG.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'78'", "'80'"]
'125'
'78'
'80'
['125', '78', '80']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="102" ssid="8">For example, let us consider a tree set containing trees of the form shown in Figure 4a.</S>
original cit marker offset is 0
new cit marker offset is 0



["'125'", "'207'", "'102'"]
'125'
'207'
'102'
['125', '207', '102']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="207" ssid="13">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid="125" ssid="10">Each derivation of a grammar can be represented by a generalized context-free derivation tree.</S><S sid="134" ssid="19">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S>
original cit marker offset is 0
new cit marker offset is 0



["'207'", "'125'", "'134'"]
'207'
'125'
'134'
['207', '125', '134']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
dict_values(['This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.'])
dict_values(['This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.', 'Our goal is to define a class of formal systems, and show that any member of this class will possess certain attractive properties.', 'The independence of paths in the tree sets of the k tI grammatical formalism in this hierarchy can be shown by means of tree pumping lemma of the form t1ti3t .'])
['system', 'ROUGE-S*', 'Average_R:', '0.13937', '(95%-conf.int.', '0.13937', '-', '0.13937)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.24465', '(95%-conf.int.', '0.24465', '-', '0.24465)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:861', 'P:120', 'F:120']
dict_values(["In defining LCFRS's, we hope to generalize the definition of CFG's to formalisms manipulating any structure, e.g. strings, trees, or graphs."])
dict_values(['.', "LCFRS's have only been loosely defined in this paper; we have yet to provide a complete set of formal properties associated with members of this class.", "In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows."])
['system', 'ROUGE-S*', 'Average_R:', '0.00855', '(95%-conf.int.', '0.00855', '-', '0.00855)']
['system', 'ROUGE-S*', 'Average_P:', '0.04545', '(95%-conf.int.', '0.04545', '-', '0.04545)']
['system', 'ROUGE-S*', 'Average_F:', '0.01439', '(95%-conf.int.', '0.01439', '-', '0.01439)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:66', 'F:3']
dict_values(['Much of the study of grammatical systems in computational linguistics has been focused on the weak generative capacity of grammatical formalism.'])
dict_values(['We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.', 'Each derivation of a grammar can be represented by a generalized context-free derivation tree.', "LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85)."])
['system', 'ROUGE-S*', 'Average_R:', '0.01326', '(95%-conf.int.', '0.01326', '-', '0.01326)']
['system', 'ROUGE-S*', 'Average_P:', '0.12727', '(95%-conf.int.', '0.12727', '-', '0.12727)']
['system', 'ROUGE-S*', 'Average_F:', '0.02401', '(95%-conf.int.', '0.02401', '-', '0.02401)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:55', 'F:7']
dict_values(["In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows."])
dict_values(['We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.', "In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.", 'We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.'])
['system', 'ROUGE-S*', 'Average_R:', '0.18018', '(95%-conf.int.', '0.18018', '-', '0.18018)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.30534', '(95%-conf.int.', '0.30534', '-', '0.30534)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:120', 'F:120']
dict_values(['To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.'])
dict_values(["In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.", 'We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.', 'To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.'])
['system', 'ROUGE-S*', 'Average_R:', '0.13737', '(95%-conf.int.', '0.13737', '-', '0.13737)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.24156', '(95%-conf.int.', '0.24156', '-', '0.24156)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:990', 'P:136', 'F:136']
dict_values(["We can show that languages generated by LCFRS's are semilinear as long as the composition operation does not remove any terminal symbols from its arguments."])
dict_values(['This class of formalisms have the properties that their derivation trees are local sets, and manipulate objects, using a finite number of composition operations that use a finite number of symbols.', 'Each derivation of a grammar can be represented by a generalized context-free derivation tree.', "LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85)."])
['system', 'ROUGE-S*', 'Average_R:', '0.00601', '(95%-conf.int.', '0.00601', '-', '0.00601)']
['system', 'ROUGE-S*', 'Average_P:', '0.06061', '(95%-conf.int.', '0.06061', '-', '0.06061)']
['system', 'ROUGE-S*', 'Average_F:', '0.01093', '(95%-conf.int.', '0.01093', '-', '0.01093)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:66', 'F:4']
dict_values(["In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows."])
dict_values(["In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.", 'We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.', 'To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.'])
['system', 'ROUGE-S*', 'Average_R:', '0.12121', '(95%-conf.int.', '0.12121', '-', '0.12121)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.21622', '(95%-conf.int.', '0.21622', '-', '0.21622)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:990', 'P:120', 'F:120']
dict_values(['To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.'])
dict_values(['A multicomponent Tree Adjoining Grammar (MCTAG) consists of a finite set of finite elementary tree sets.', 'To show that the derivation trees of any grammar in LCFRS is a local set, we can rewrite the annotated derivation trees such that every node is labelled by a pair to include the composition operations.', 'A TAG consists of a finite set of elementary trees that are either initial trees or auxiliary trees.'])
['system', 'ROUGE-S*', 'Average_R:', '0.18354', '(95%-conf.int.', '0.18354', '-', '0.18354)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.31015', '(95%-conf.int.', '0.31015', '-', '0.31015)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:741', 'P:136', 'F:136']
dict_values(['We examine both the complexity of the paths of trees in the tree sets, and the kinds of dependencies that the formalisms can impose between paths.'])
dict_values(['Each derivation of a grammar can be represented by a generalized context-free derivation tree.', 'Each member of a set of trees can be adjoined into distinct nodes of trees in a single elementary tree set, i.e, derivations always involve the adjunction of a derived auxiliary tree set into an elementary tree set.', 'The derivation trees of a MCTAG are similar to those of a TAG.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00535', '(95%-conf.int.', '0.00535', '-', '0.00535)']
['system', 'ROUGE-S*', 'Average_P:', '0.05455', '(95%-conf.int.', '0.05455', '-', '0.05455)']
['system', 'ROUGE-S*', 'Average_F:', '0.00974', '(95%-conf.int.', '0.00974', '-', '0.00974)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:55', 'F:3']
dict_values(['A TAG consists of a finite set of elementary trees that are either initial trees or auxiliary trees.'])
dict_values(['Each derivation of a grammar can be represented by a generalized context-free derivation tree.', 'We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.', 'For example, let us consider a tree set containing trees of the form shown in Figure 4a.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01140', '(95%-conf.int.', '0.01140', '-', '0.01140)']
['system', 'ROUGE-S*', 'Average_P:', '0.08889', '(95%-conf.int.', '0.08889', '-', '0.08889)']
['system', 'ROUGE-S*', 'Average_F:', '0.02020', '(95%-conf.int.', '0.02020', '-', '0.02020)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:45', 'F:4']
dict_values(["We can show that languages generated by LCFRS's are semilinear as long as the composition operation does not remove any terminal symbols from its arguments."])
dict_values(['We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.', 'Each derivation of a grammar can be represented by a generalized context-free derivation tree.', "These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's)."])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:406', 'P:66', 'F:0']
0.48879726828366127 0.07329454478823141 0.12701727157257026





input/ref/Task1/W99-0623_vardha.csv
input/res/Task1/W99-0623.annv3.csv
parsing: input/ref/Task1/W99-0623_vardha.csv
    <S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'"]
'85'
['85']
parsed_discourse_facet ['method_citation']
<S sid="117" ssid="46">Another way to interpret this is that less than 5% of the correct constituents are missing from the hypotheses generated by the union of the three parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'117'"]
'117'
['117']
parsed_discourse_facet ['method_citation']
<S sid="72" ssid="1">The three parsers were trained and tuned by their creators on various sections of the WSJ portion of the Penn Treebank, leaving only sections 22 and 23 completely untouched during the development of any of the parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'"]
'72'
['72']
parsed_discourse_facet ['method_citation']
    <S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



["'120'"]
'120'
['120']
parsed_discourse_facet ['method_citation']
  <S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'"]
'139'
['139']
parsed_discourse_facet ['method_citation']
 <S sid="84" ssid="13">The first shows how constituent features and context do not help in deciding which parser to trust.</S>
original cit marker offset is 0
new cit marker offset is 0



["'84'"]
'84'
['84']
parsed_discourse_facet ['method_citation']
    <S sid="76" ssid="5">The standard measures for evaluating Penn Treebank parsing performance are precision and recall of the predicted constituents.</S>
original cit marker offset is 0
new cit marker offset is 0



["'76'"]
'76'
['76']
parsed_discourse_facet ['method_citation']
 <S sid="38" ssid="24">Under certain conditions the constituent voting and na&#239;ve Bayes constituent combination techniques are guaranteed to produce sets of constituents with no crossing brackets.</S>
original cit marker offset is 0
new cit marker offset is 0



["'38'"]
'38'
['38']
parsed_discourse_facet ['method_citation']
  <S sid="25" ssid="11">In our particular case the majority requires the agreement of only two parsers because we have only three.</S>
original cit marker offset is 0
new cit marker offset is 0



["'25'"]
'25'
['25']
parsed_discourse_facet ['method_citation']
 <S sid="72" ssid="1">The three parsers were trained and tuned by their creators on various sections of the WSJ portion of the Penn Treebank, leaving only sections 22 and 23 completely untouched during the development of any of the parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'"]
'72'
['72']
parsed_discourse_facet ['method_citation']
    <S sid="87" ssid="16">It is possible one could produce better models by introducing features describing constituents and their contexts because one parser could be much better than the majority of the others in particular situations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'87'"]
'87'
['87']
parsed_discourse_facet ['method_citation']
    <S sid="51" ssid="37">One can trivially create situations in which strictly binary-branching trees are combined to create a tree with only the root node and the terminal nodes, a completely flat structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'"]
'51'
['51']
parsed_discourse_facet ['method_citation']
    <S sid="79" ssid="8">Precision is the portion of hypothesized constituents that are correct and recall is the portion of the Treebank constituents that are hypothesized.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'"]
'79'
['79']
parsed_discourse_facet ['method_citation']
  <S sid="27" ssid="13">Another technique for parse hybridization is to use a na&#239;ve Bayes classifier to determine which constituents to include in the parse.</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'"]
'27'
['27']
parsed_discourse_facet ['method_citation']
 <S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'77'"]
'77'
['77']
parsed_discourse_facet ['method_citation']
  <S sid="11" ssid="7">Similar advances have been made in machine translation (Frederking and Nirenburg, 1994), speech recognition (Fiscus, 1997) and named entity recognition (Borthwick et al., 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'"]
'11'
['11']
parsed_discourse_facet ['method_citation']
  <S sid="116" ssid="45">The maximum precision row is the upper bound on accuracy if we could pick exactly the correct constituents from among the constituents suggested by the three parsers.</S>
original cit marker offset is 0
new cit marker offset is 0



["'116'"]
'116'
['116']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W99-0623.annv3.csv
<S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'120'", "'139'"]
'85'
'120'
'139'
['85', '120', '139']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="96" ssid="25">We call such a constituent an isolated constituent.</S>
original cit marker offset is 0
new cit marker offset is 0



["'120'", "'23'", "'96'"]
'120'
'23'
'96'
['120', '23', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="14" ssid="10">We used these three parsers to explore parser combination techniques.</S><S sid="25" ssid="11">In our particular case the majority requires the agreement of only two parsers because we have only three.</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'14'", "'25'"]
'139'
'14'
'25'
['139', '14', '25']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'77'", "'120'"]
'23'
'77'
'120'
['23', '77', '120']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="13">Another technique for parse hybridization is to use a naïve Bayes classifier to determine which constituents to include in the parse.</S><S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="16" ssid="2">We call this approach parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'15'", "'16'"]
'27'
'15'
'16'
['27', '15', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="96" ssid="25">We call such a constituent an isolated constituent.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'120'", "'96'"]
'23'
'120'
'96'
['23', '120', '96']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="5">Through parser combination we have reduced the precision error rate by 30% and the recall error rate by 6% compared to the best previously published result.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'120'", "'23'"]
'143'
'120'
'23'
['143', '120', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="23" ssid="9">We call this technique constituent voting.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'139'", "'120'"]
'23'
'139'
'120'
['23', '139', '120']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'67'", "'139'", "'77'"]
'67'
'139'
'77'
['67', '139', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="85" ssid="14">We then show that the combining techniques presented above give better parsing accuracy than any of the individual parsers.</S><S sid="143" ssid="5">Through parser combination we have reduced the precision error rate by 30% and the recall error rate by 6% compared to the best previously published result.</S>
original cit marker offset is 0
new cit marker offset is 0



["'120'", "'85'", "'143'"]
'120'
'85'
'143'
['120', '85', '143']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="60" ssid="46">First we present the non-parametric version of parser switching, similarity switching: The intuition for this technique is that we can measure a similarity between parses by counting the constituents they have in common.</S><S sid="120" ssid="49">The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.</S><S sid="23" ssid="9">We call this technique constituent voting.</S>
original cit marker offset is 0
new cit marker offset is 0



["'60'", "'120'", "'23'"]
'60'
'120'
'23'
['60', '120', '23']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'67'", "'77'"]
'139'
'67'
'77'
['139', '67', '77']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="78" ssid="7">The set is then compared with the set generated from the Penn Treebank parse to determine the precision and recall.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'67'", "'78'"]
'15'
'67'
'78'
['15', '67', '78']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="96" ssid="25">We call such a constituent an isolated constituent.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S><S sid="16" ssid="2">We call this approach parse hybridization.</S>
original cit marker offset is 0
new cit marker offset is 0



["'96'", "'77'", "'16'"]
'96'
'77'
'16'
['96', '77', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="118" ssid="47">The maximum precision oracle is an upper bound on the possible gain we can achieve by parse hybridization.</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'118'", "'77'"]
'15'
'118'
'77'
['15', '118', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="139" ssid="1">We have presented two general approaches to studying parser combination: parser switching and parse hybridization.</S><S sid="0" ssid="0">Exploiting Diversity in Natural Language Processing: Combining Parsers</S><S sid="77" ssid="6">Each parse is converted into a set of constituents represented as a tuples: (label, start, end).</S>
original cit marker offset is 0
new cit marker offset is 0



["'139'", "'0'", "'77'"]
'139'
'0'
'77'
['139', '0', '77']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="15" ssid="1">We are interested in combining the substructures of the input parses to produce a better parse.</S><S sid="67" ssid="53">The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.</S><S sid="78" ssid="7">The set is then compared with the set generated from the Penn Treebank parse to determine the precision and recall.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'67'", "'78'"]
'15'
'67'
'78'
['15', '67', '78']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['Another way to interpret this is that less than 5% of the correct constituents are missing from the hypotheses generated by the union of the three parsers.'])
dict_values(['The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.', 'We call this technique constituent voting.', 'We call such a constituent an isolated constituent.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00189', '(95%-conf.int.', '0.00189', '-', '0.00189)']
['system', 'ROUGE-S*', 'Average_P:', '0.02778', '(95%-conf.int.', '0.02778', '-', '0.02778)']
['system', 'ROUGE-S*', 'Average_F:', '0.00355', '(95%-conf.int.', '0.00355', '-', '0.00355)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:36', 'F:1']
dict_values(['The three parsers were trained and tuned by their creators on various sections of the WSJ portion of the Penn Treebank, leaving only sections 22 and 23 completely untouched during the development of any of the parsers.'])
dict_values(['We have presented two general approaches to studying parser combination: parser switching and parse hybridization.', 'We used these three parsers to explore parser combination techniques.', 'In our particular case the majority requires the agreement of only two parsers because we have only three.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00526', '(95%-conf.int.', '0.00526', '-', '0.00526)']
['system', 'ROUGE-S*', 'Average_P:', '0.00735', '(95%-conf.int.', '0.00735', '-', '0.00735)']
['system', 'ROUGE-S*', 'Average_F:', '0.00613', '(95%-conf.int.', '0.00613', '-', '0.00613)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:190', 'P:136', 'F:1']
dict_values(['The standard measures for evaluating Penn Treebank parsing performance are precision and recall of the predicted constituents.'])
dict_values(['Through parser combination we have reduced the precision error rate by 30% and the recall error rate by 6% compared to the best previously published result.', 'The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.', 'We call this technique constituent voting.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00740', '(95%-conf.int.', '0.00740', '-', '0.00740)']
['system', 'ROUGE-S*', 'Average_P:', '0.12727', '(95%-conf.int.', '0.12727', '-', '0.12727)']
['system', 'ROUGE-S*', 'Average_F:', '0.01399', '(95%-conf.int.', '0.01399', '-', '0.01399)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:946', 'P:55', 'F:7']
dict_values(['Under certain conditions the constituent voting and na&#239;ve Bayes constituent combination techniques are guaranteed to produce sets of constituents with no crossing brackets.'])
dict_values(['We call this technique constituent voting.', 'We have presented two general approaches to studying parser combination: parser switching and parse hybridization.', 'The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01350', '(95%-conf.int.', '0.01350', '-', '0.01350)']
['system', 'ROUGE-S*', 'Average_P:', '0.08333', '(95%-conf.int.', '0.08333', '-', '0.08333)']
['system', 'ROUGE-S*', 'Average_F:', '0.02323', '(95%-conf.int.', '0.02323', '-', '0.02323)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:741', 'P:120', 'F:10']
dict_values(['It is possible one could produce better models by introducing features describing constituents and their contexts because one parser could be much better than the majority of the others in particular situations.'])
dict_values(['First we present the non-parametric version of parser switching, similarity switching: The intuition for this technique is that we can measure a similarity between parses by counting the constituents they have in common.', 'The precision and recall of similarity switching and constituent voting are both significantly better than the best individual parser, and constituent voting is significantly better than parser switching in precision.4 Constituent voting gives the highest accuracy for parsing the Penn Treebank reported to date.', 'We call this technique constituent voting.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00101', '(95%-conf.int.', '0.00101', '-', '0.00101)']
['system', 'ROUGE-S*', 'Average_P:', '0.02222', '(95%-conf.int.', '0.02222', '-', '0.02222)']
['system', 'ROUGE-S*', 'Average_F:', '0.00193', '(95%-conf.int.', '0.00193', '-', '0.00193)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:990', 'P:45', 'F:1']
dict_values(['One can trivially create situations in which strictly binary-branching trees are combined to create a tree with only the root node and the terminal nodes, a completely flat structure.'])
dict_values(['We have presented two general approaches to studying parser combination: parser switching and parse hybridization.', 'The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.', 'Each parse is converted into a set of constituents represented as a tuples: (label, start, end).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:136', 'F:0']
dict_values(['Each parse is converted into a set of constituents represented as a tuples: (label, start, end).'])
dict_values(['We are interested in combining the substructures of the input parses to produce a better parse.', 'The maximum precision oracle is an upper bound on the possible gain we can achieve by parse hybridization.', 'Each parse is converted into a set of constituents represented as a tuples: (label, start, end).'])
['system', 'ROUGE-S*', 'Average_R:', '0.12000', '(95%-conf.int.', '0.12000', '-', '0.12000)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.21429', '(95%-conf.int.', '0.21429', '-', '0.21429)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:36', 'F:36']
dict_values(['The maximum precision row is the upper bound on accuracy if we could pick exactly the correct constituents from among the constituents suggested by the three parsers.'])
dict_values(['We are interested in combining the substructures of the input parses to produce a better parse.', 'The set of candidate constituents comes from the union of all the constituents suggested by the member parsers.', 'The set is then compared with the set generated from the Penn Treebank parse to determine the precision and recall.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02000', '(95%-conf.int.', '0.02000', '-', '0.02000)']
['system', 'ROUGE-S*', 'Average_P:', '0.09091', '(95%-conf.int.', '0.09091', '-', '0.09091)']
['system', 'ROUGE-S*', 'Average_F:', '0.03279', '(95%-conf.int.', '0.03279', '-', '0.03279)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:66', 'F:6']
0.16985749787678128 0.021132499735843753 0.036988749537640635





input/ref/Task1/P08-1028_sweta.csv
input/res/Task1/P08-1028.annv3.csv
parsing: input/ref/Task1/P08-1028_sweta.csv
<S sid="65" ssid="13">So, if we assume that only the ith components of u and v contribute to the ith component of p, that these components are not dependent on i, and that the function is symmetric with regard to the interchange of u and v, we obtain a simpler instantiation of an additive model: Analogously, under the same assumptions, we obtain the following simpler multiplicative model: only the ith components of u and v contribute to the ith component of p. Another class of models can be derived by relaxing this constraint.</S>
original cit marker offset is 0
new cit marker offset is 0



["65'"]
65'
['65']
parsed_discourse_facet ['method_citation']
 <S sid="75" ssid="23">An extreme form of this differential in the contribution of constituents is where one of the vectors, say u, contributes nothing at all to the combination: Admittedly the model in (8) is impoverished and rather simplistic, however it can serve as a simple baseline against which to compare more sophisticated models.</S>
original cit marker offset is 0
new cit marker offset is 0



["75'"]
75'
['75']
parsed_discourse_facet ['method_citation']
<S sid="42" ssid="15">This poses problems for modeling linguistic data which is typically represented by vectors with non-random structure.</S>
original cit marker offset is 0
new cit marker offset is 0



["42'"]
42'
['42']
parsed_discourse_facet ['method_citation']
 <S sid="21" ssid="17">Central in these models is the notion of compositionality &#8212; the meaning of complex expressions is determined by the meanings of their constituent expressions and the rules used to combine them.</S>
original cit marker offset is 0
new cit marker offset is 0



["21'"]
21'
['21']
parsed_discourse_facet ['method_citation']
    <S sid="195" ssid="7">The resulting vector is sparser but expresses more succinctly the meaning of the predicate-argument structure, and thus allows semantic similarity to be modelled more accurately.</S>
original cit marker offset is 0
new cit marker offset is 0



["195'"]
195'
['195']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="21">We present a general framework for vector-based composition which allows us to consider different classes of models.</S>
original cit marker offset is 0
new cit marker offset is 0



["25'"]
25'
['25']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="21">We present a general framework for vector-based composition which allows us to consider different classes of models.</S>
original cit marker offset is 0
new cit marker offset is 0



["25'"]
25'
['25']
parsed_discourse_facet ['method_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S>
original cit marker offset is 0
new cit marker offset is 0



["57'"]
57'
['57']
parsed_discourse_facet ['method_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["51'"]
51'
['51']
parsed_discourse_facet ['method_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



["190'"]
190'
['190']
parsed_discourse_facet ['method_citation']
 <S sid="29" ssid="2">While neural networks can readily represent single distinct objects, in the case of multiple objects there are fundamental difficulties in keeping track of which features are bound to which objects.</S>
original cit marker offset is 0
new cit marker offset is 0



["29'"]
29'
['29']
parsed_discourse_facet ['method_citation']
    <S sid="38" ssid="11">The projection is defined in terms of circular convolution a mathematical function that compresses the tensor product of two vectors.</S>
original cit marker offset is 0
new cit marker offset is 0



["38'"]
38'
['38']
parsed_discourse_facet ['method_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["51'"]
51'
['51']
parsed_discourse_facet ['method_citation']
<S sid="64" ssid="12">Now, if we assume that p lies in the same space as u and v, avoiding the issues of dimensionality associated with tensor products, and that f is a linear function, for simplicity, of the cartesian product of u and v, then we generate a class of additive models: where A and B are matrices which determine the contributions made by u and v to the product p. In contrast, if we assume that f is a linear function of the tensor product of u and v, then we obtain multiplicative models: where C is a tensor of rank 3, which projects the tensor product of u and v onto the space of p. Further constraints can be introduced to reduce the free parameters in these models.</S>
original cit marker offset is 0
new cit marker offset is 0



["64'"]
64'
['64']
parsed_discourse_facet ['method_citation']
<S sid="163" ssid="76">We expect better models to yield a pattern of similarity scores like those observed in the human ratings (see Figure 2).</S>
original cit marker offset is 0
new cit marker offset is 0



["163'"]
163'
['163']
parsed_discourse_facet ['method_citation']
<S sid="185" ssid="19">The multiplicative model yields a better fit with the experimental data, &#961; = 0.17.</S>
original cit marker offset is 0
new cit marker offset is 0



["185'"]
185'
['185']
parsed_discourse_facet ['method_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



["190'"]
190'
['190']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P08-1028.annv3.csv
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'3'", "'51'"]
'57'
'3'
'51'
['57', '3', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S><S sid="195" ssid="7">The resulting vector is sparser but expresses more succinctly the meaning of the predicate-argument structure, and thus allows semantic similarity to be modelled more accurately.</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'", "'138'", "'195'"]
'51'
'138'
'195'
['51', '138', '195']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'", "'95'", "'138'"]
'51'
'95'
'138'
['51', '95', '138']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'", "'26'", "'3'"]
'95'
'26'
'3'
['95', '26', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'", "'0'", "'51'"]
'95'
'0'
'51'
['95', '0', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="53" ssid="1">We formulate semantic composition as a function of two vectors, u and v. We assume that individual words are represented by vectors acquired from a corpus following any of the parametrisations that have been suggested in the literature.1 We briefly note here that a word’s vector typically represents its co-occurrence with neighboring words.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'53'", "'0'"]
'57'
'53'
'0'
['57', '53', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'189'", "'0'", "'51'"]
'189'
'0'
'51'
['189', '0', '51']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'51'", "'0'"]
'57'
'51'
'0'
['57', '51', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'51'", "'189'"]
'190'
'51'
'189'
['190', '51', '189']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S><S sid="60" ssid="8">To derive specific models from this general framework requires the identification of appropriate constraints to narrow the space of functions being considered.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S>
original cit marker offset is 0
new cit marker offset is 0



["'138'", "'60'", "'26'"]
'138'
'60'
'26'
['138', '60', '26']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="40" ssid="13">Noisy versions of the original vectors can be recovered by means of circular correlation which is the approximate inverse of circular convolution.</S><S sid="38" ssid="11">The projection is defined in terms of circular convolution a mathematical function that compresses the tensor product of two vectors.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'40'", "'38'"]
'190'
'40'
'38'
['190', '40', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="45" ssid="18">Vector addition does not increase the dimensionality of the resulting vector.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'45'", "'51'"]
'190'
'45'
'51'
['190', '45', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'", "'52'", "'3'"]
'26'
'52'
'3'
['26', '52', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'", "'52'", "'3'"]
'26'
'52'
'3'
['26', '52', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="25" ssid="21">We present a general framework for vector-based composition which allows us to consider different classes of models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'52'", "'25'"]
'3'
'52'
'25'
['3', '52', '25']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'26'", "'51'"]
'190'
'26'
'51'
['190', '26', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="48" ssid="21">The idea is to add not only the vectors representing the predicate and its argument but also the neighbors associated with both of them.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'51'", "'48'"]
'190'
'51'
'48'
['190', '51', '48']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
dict_values(['An extreme form of this differential in the contribution of constituents is where one of the vectors, say u, contributes nothing at all to the combination: Admittedly the model in (8) is impoverished and rather simplistic, however it can serve as a simple baseline against which to compare more sophisticated models.'])
dict_values(['Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.', 'Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.', 'Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00886', '(95%-conf.int.', '0.00886', '-', '0.00886)']
['system', 'ROUGE-S*', 'Average_P:', '0.04678', '(95%-conf.int.', '0.04678', '-', '0.04678)']
['system', 'ROUGE-S*', 'Average_F:', '0.01490', '(95%-conf.int.', '0.01490', '-', '0.01490)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:171', 'F:8']
dict_values(['This poses problems for modeling linguistic data which is typically represented by vectors with non-random structure.'])
dict_values(['Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).', 'Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.', 'The resulting vector is sparser but expresses more succinctly the meaning of the predicate-argument structure, and thus allows semantic similarity to be modelled more accurately.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00697', '(95%-conf.int.', '0.00697', '-', '0.00697)']
['system', 'ROUGE-S*', 'Average_P:', '0.13333', '(95%-conf.int.', '0.13333', '-', '0.13333)']
['system', 'ROUGE-S*', 'Average_F:', '0.01325', '(95%-conf.int.', '0.01325', '-', '0.01325)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:861', 'P:45', 'F:6']
dict_values(['The resulting vector is sparser but expresses more succinctly the meaning of the predicate-argument structure, and thus allows semantic similarity to be modelled more accurately.'])
dict_values(['Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.', 'Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.', 'Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00751', '(95%-conf.int.', '0.00751', '-', '0.00751)']
['system', 'ROUGE-S*', 'Average_P:', '0.06410', '(95%-conf.int.', '0.06410', '-', '0.06410)']
['system', 'ROUGE-S*', 'Average_F:', '0.01344', '(95%-conf.int.', '0.01344', '-', '0.01344)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:78', 'F:5']
dict_values(['We present a general framework for vector-based composition which allows us to consider different classes of models.'])
dict_values(['Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.', 'Vector-based Models of Semantic Composition', 'Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).'])
['system', 'ROUGE-S*', 'Average_R:', '0.01705', '(95%-conf.int.', '0.01705', '-', '0.01705)']
['system', 'ROUGE-S*', 'Average_P:', '0.32143', '(95%-conf.int.', '0.32143', '-', '0.32143)']
['system', 'ROUGE-S*', 'Average_F:', '0.03237', '(95%-conf.int.', '0.03237', '-', '0.03237)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:28', 'F:9']
dict_values(['Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.'])
dict_values(['In this paper we presented a general framework for vector-based semantic composition.', 'Vector-based Models of Semantic Composition', 'Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).'])
['system', 'ROUGE-S*', 'Average_R:', '0.02116', '(95%-conf.int.', '0.02116', '-', '0.02116)']
['system', 'ROUGE-S*', 'Average_P:', '0.05882', '(95%-conf.int.', '0.05882', '-', '0.05882)']
['system', 'ROUGE-S*', 'Average_F:', '0.03113', '(95%-conf.int.', '0.03113', '-', '0.03113)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:136', 'F:8']
dict_values(['We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.'])
dict_values(['We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.', 'Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).', 'In this paper we presented a general framework for vector-based semantic composition.'])
['system', 'ROUGE-S*', 'Average_R:', '0.07258', '(95%-conf.int.', '0.07258', '-', '0.07258)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.13534', '(95%-conf.int.', '0.13534', '-', '0.13534)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:36', 'F:36']
dict_values(['The projection is defined in terms of circular convolution a mathematical function that compresses the tensor product of two vectors.'])
dict_values(['We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.', 'Noisy versions of the original vectors can be recovered by means of circular correlation which is the approximate inverse of circular convolution.', 'The projection is defined in terms of circular convolution a mathematical function that compresses the tensor product of two vectors.'])
['system', 'ROUGE-S*', 'Average_R:', '0.11089', '(95%-conf.int.', '0.11089', '-', '0.11089)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.19964', '(95%-conf.int.', '0.19964', '-', '0.19964)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:55', 'F:55']
dict_values(['We expect better models to yield a pattern of similarity scores like those observed in the human ratings (see Figure 2).'])
dict_values(['Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.', 'Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.', 'Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00504', '(95%-conf.int.', '0.00504', '-', '0.00504)']
['system', 'ROUGE-S*', 'Average_P:', '0.05455', '(95%-conf.int.', '0.05455', '-', '0.05455)']
['system', 'ROUGE-S*', 'Average_F:', '0.00923', '(95%-conf.int.', '0.00923', '-', '0.00923)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:595', 'P:55', 'F:3']
dict_values(['We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.'])
dict_values(['We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.', 'Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).', 'The idea is to add not only the vectors representing the predicate and its argument but also the neighbors associated with both of them.'])
['system', 'ROUGE-S*', 'Average_R:', '0.07742', '(95%-conf.int.', '0.07742', '-', '0.07742)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.14371', '(95%-conf.int.', '0.14371', '-', '0.14371)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:465', 'P:36', 'F:36']
0.4087788843469013 0.036386666262370373 0.06588999926788891





input/ref/Task1/P08-1028_aakansha.csv
input/res/Task1/P08-1028.annv3.csv
parsing: input/ref/Task1/P08-1028_aakansha.csv
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'"]
'51'
['51']
parsed_discourse_facet ['method_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
    <S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



["'189'", "'190'"]
'189'
'190'
['189', '190']
parsed_discourse_facet ['method_citation']
<S sid="185" ssid="19">The multiplicative model yields a better fit with the experimental data, &#961; = 0.17.</S>
    <S sid="186" ssid="20">The combined model is best overall with &#961; = 0.19.</S>
    <S sid="187" ssid="21">However, the difference between the two models is not statistically significant.</S>
original cit marker offset is 0
new cit marker offset is 0



["'185'", "'186'"]
'185'
'186'
['185', '186']
parsed_discourse_facet ['result_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'"]
'51'
['51']
parsed_discourse_facet ['method_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
    <S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



["'189'", "'190'"]
'189'
'190'
['189', '190']
parsed_discourse_facet ['method_citation']
<S sid="48" ssid="21">The idea is to add not only the vectors representing the predicate and its argument but also the neighbors associated with both of them.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'"]
'48'
['48']
parsed_discourse_facet ['method_citation']
<S sid="53" ssid="1">We formulate semantic composition as a function of two vectors, u and v. We assume that individual words are represented by vectors acquired from a corpus following any of the parametrisations that have been suggested in the literature.1 We briefly note here that a word&#8217;s vector typically represents its co-occurrence with neighboring words.</S><S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S>
original cit marker offset is 0
new cit marker offset is 0



["'53'", "'57'"]
'53'
'57'
['53', '57']
parsed_discourse_facet ['method_citation']
<S sid="68" ssid="16">Although the composition model in (5) is commonly used in the literature, from a linguistic perspective, the model in (6) is more appealing.</S>
    <S sid="69" ssid="17">Simply adding the vectors u and v lumps their contents together rather than allowing the content of one vector to pick out the relevant content of the other.</S>
    <S sid="70" ssid="18">Instead, it could be argued that the contribution of the ith component of u should be scaled according to its relevance to v, and vice versa.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'", "'69'", "'70'"]
'68'
'69'
'70'
['68', '69', '70']
parsed_discourse_facet ['method_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
    <S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



["'189'", "'190'"]
'189'
'190'
['189', '190']
parsed_discourse_facet ['method_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
    <S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



["'189'", "'190'"]
'189'
'190'
['189', '190']
parsed_discourse_facet ['method_citation']
<S sid="24" ssid="20">In this paper we examine models of semantic composition that are empirically grounded and can represent similarity relations.</S>
    <S sid="25" ssid="21">We present a general framework for vector-based composition which allows us to consider different classes of models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'25'"]
'24'
'25'
['24', '25']
parsed_discourse_facet ['method_citation']
<S sid="64" ssid="12">Now, if we assume that p lies in the same space as u and v, avoiding the issues of dimensionality associated with tensor products, and that f is a linear function, for simplicity, of the cartesian product of u and v, then we generate a class of additive models: where A and B are matrices which determine the contributions made by u and v to the product p. In contrast, if we assume that f is a linear function of the tensor product of u and v, then we obtain multiplicative models: where C is a tensor of rank 3, which projects the tensor product of u and v onto the space of p. Further constraints can be introduced to reduce the free parameters in these models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'64'"]
'64'
['64']
parsed_discourse_facet ['method_citation']
<S sid="176" ssid="10">The multiplicative and combined models yield means closer to the human ratings.</S>
    <S sid="177" ssid="11">The difference between High and Low similarity values estimated by these models are statistically significant (p &lt; 0.01 using the Wilcoxon rank sum test).</S>
original cit marker offset is 0
new cit marker offset is 0



["'176'", "'177'"]
'176'
'177'
['176', '177']
parsed_discourse_facet ['method_citation']
<S sid="191" ssid="3">Despite the popularity of additive models, our experimental results showed the superiority of models utilizing multiplicative combinations, at least for the sentence similarity task attempted here.</S>
original cit marker offset is 0
new cit marker offset is 0



["'191'"]
'191'
['191']
parsed_discourse_facet ['method_citation']
<S sid="24" ssid="20">In this paper we examine models of semantic composition that are empirically grounded and can represent similarity relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'"]
'24'
['24']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P08-1028.annv3.csv
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'3'", "'51'"]
'57'
'3'
'51'
['57', '3', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S><S sid="195" ssid="7">The resulting vector is sparser but expresses more succinctly the meaning of the predicate-argument structure, and thus allows semantic similarity to be modelled more accurately.</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'", "'138'", "'195'"]
'51'
'138'
'195'
['51', '138', '195']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'", "'95'", "'138'"]
'51'
'95'
'138'
['51', '95', '138']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'", "'26'", "'3'"]
'95'
'26'
'3'
['95', '26', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'", "'0'", "'51'"]
'95'
'0'
'51'
['95', '0', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="53" ssid="1">We formulate semantic composition as a function of two vectors, u and v. We assume that individual words are represented by vectors acquired from a corpus following any of the parametrisations that have been suggested in the literature.1 We briefly note here that a word’s vector typically represents its co-occurrence with neighboring words.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'53'", "'0'"]
'57'
'53'
'0'
['57', '53', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'189'", "'0'", "'51'"]
'189'
'0'
'51'
['189', '0', '51']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'51'", "'0'"]
'57'
'51'
'0'
['57', '51', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'51'", "'189'"]
'190'
'51'
'189'
['190', '51', '189']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S><S sid="60" ssid="8">To derive specific models from this general framework requires the identification of appropriate constraints to narrow the space of functions being considered.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S>
original cit marker offset is 0
new cit marker offset is 0



["'138'", "'60'", "'26'"]
'138'
'60'
'26'
['138', '60', '26']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="40" ssid="13">Noisy versions of the original vectors can be recovered by means of circular correlation which is the approximate inverse of circular convolution.</S><S sid="38" ssid="11">The projection is defined in terms of circular convolution a mathematical function that compresses the tensor product of two vectors.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'40'", "'38'"]
'190'
'40'
'38'
['190', '40', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="45" ssid="18">Vector addition does not increase the dimensionality of the resulting vector.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'45'", "'51'"]
'190'
'45'
'51'
['190', '45', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'", "'52'", "'3'"]
'26'
'52'
'3'
['26', '52', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'", "'52'", "'3'"]
'26'
'52'
'3'
['26', '52', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="25" ssid="21">We present a general framework for vector-based composition which allows us to consider different classes of models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'52'", "'25'"]
'3'
'52'
'25'
['3', '52', '25']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'26'", "'51'"]
'190'
'26'
'51'
['190', '26', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="48" ssid="21">The idea is to add not only the vectors representing the predicate and its argument but also the neighbors associated with both of them.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'51'", "'48'"]
'190'
'51'
'48'
['190', '51', '48']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
dict_values(['Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).'])
dict_values(['Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.', 'Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.', 'Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).'])
['system', 'ROUGE-S*', 'Average_R:', '0.11628', '(95%-conf.int.', '0.11628', '-', '0.11628)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.20833', '(95%-conf.int.', '0.20833', '-', '0.20833)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:105', 'F:105']
dict_values(['The multiplicative model yields a better fit with the experimental data, &#961; = 0.17.', 'The combined model is best overall with &#961; = 0.19.', 'However, the difference between the two models is not statistically significant.'])
dict_values(['Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.', 'Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.', 'Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01502', '(95%-conf.int.', '0.01502', '-', '0.01502)']
['system', 'ROUGE-S*', 'Average_P:', '0.06536', '(95%-conf.int.', '0.06536', '-', '0.06536)']
['system', 'ROUGE-S*', 'Average_F:', '0.02442', '(95%-conf.int.', '0.02442', '-', '0.02442)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:153', 'F:10']
dict_values(['Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).'])
dict_values(['Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.', 'Vector-based Models of Semantic Composition', 'Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).'])
['system', 'ROUGE-S*', 'Average_R:', '0.19886', '(95%-conf.int.', '0.19886', '-', '0.19886)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.33175', '(95%-conf.int.', '0.33175', '-', '0.33175)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:105', 'F:105']
dict_values(['The idea is to add not only the vectors representing the predicate and its argument but also the neighbors associated with both of them.'])
dict_values(['In this paper we presented a general framework for vector-based semantic composition.', 'Vector-based Models of Semantic Composition', 'Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:21', 'F:0']
dict_values(['Although the composition model in (5) is commonly used in the literature, from a linguistic perspective, the model in (6) is more appealing.', 'Simply adding the vectors u and v lumps their contents together rather than allowing the content of one vector to pick out the relevant content of the other.', 'Instead, it could be argued that the contribution of the ith component of u should be scaled according to its relevance to v, and vice versa.'])
dict_values(['We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.', 'Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).', 'In this paper we presented a general framework for vector-based semantic composition.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01815', '(95%-conf.int.', '0.01815', '-', '0.01815)']
['system', 'ROUGE-S*', 'Average_P:', '0.02217', '(95%-conf.int.', '0.02217', '-', '0.02217)']
['system', 'ROUGE-S*', 'Average_F:', '0.01996', '(95%-conf.int.', '0.01996', '-', '0.01996)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:406', 'F:9']
dict_values(['In this paper we presented a general framework for vector-based semantic composition.', 'We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.'])
dict_values(['We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.', 'Noisy versions of the original vectors can be recovered by means of circular correlation which is the approximate inverse of circular convolution.', 'The projection is defined in terms of circular convolution a mathematical function that compresses the tensor product of two vectors.'])
['system', 'ROUGE-S*', 'Average_R:', '0.08468', '(95%-conf.int.', '0.08468', '-', '0.08468)']
['system', 'ROUGE-S*', 'Average_P:', '0.30882', '(95%-conf.int.', '0.30882', '-', '0.30882)']
['system', 'ROUGE-S*', 'Average_F:', '0.13291', '(95%-conf.int.', '0.13291', '-', '0.13291)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:136', 'F:42']
dict_values(['The multiplicative and combined models yield means closer to the human ratings.', 'The difference between High and Low similarity values estimated by these models are statistically significant (p &lt; 0.01 using the Wilcoxon rank sum test).'])
dict_values(['Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.', 'Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.', 'Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02521', '(95%-conf.int.', '0.02521', '-', '0.02521)']
['system', 'ROUGE-S*', 'Average_P:', '0.05435', '(95%-conf.int.', '0.05435', '-', '0.05435)']
['system', 'ROUGE-S*', 'Average_F:', '0.03444', '(95%-conf.int.', '0.03444', '-', '0.03444)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:595', 'P:276', 'F:15']
dict_values(['In this paper we examine models of semantic composition that are empirically grounded and can represent similarity relations.'])
dict_values(['We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.', 'Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).', 'The idea is to add not only the vectors representing the predicate and its argument but also the neighbors associated with both of them.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00645', '(95%-conf.int.', '0.00645', '-', '0.00645)']
['system', 'ROUGE-S*', 'Average_P:', '0.06667', '(95%-conf.int.', '0.06667', '-', '0.06667)']
['system', 'ROUGE-S*', 'Average_F:', '0.01176', '(95%-conf.int.', '0.01176', '-', '0.01176)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:465', 'P:45', 'F:3']
0.3146712460666094 0.05808124927398439 0.09544624880692189





input/ref/Task1/A00-2030_aakansha.csv
input/res/Task1/A00-2030.annv3.csv
parsing: input/ref/Task1/A00-2030_aakansha.csv
<S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'"]
'4'
['4']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
    <S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'"]
'33'
'34'
['33', '34']
parsed_discourse_facet ['method_citation']
<S sid="49" ssid="9">By necessity, we adopted the strategy of hand marking only the semantics.</S>
    <S sid="50" ssid="10">Figure 4 shows an example of the semantic annotation, which was the only type of manual annotation we performed.</S>
original cit marker offset is 0
new cit marker offset is 0



["'49'", "'50'"]
'49'
'50'
['49', '50']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
    <S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'"]
'33'
'34'
['33', '34']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="8">Instead, our parsing algorithm, trained on the UPenn TREEBANK, was run on the New York Times source to create unsupervised syntactic training which was constrained to be consistent with semantic annotation.</S
original cit marker offset is 0
new cit marker offset is 0



["'10'"]
'10'
['10']
parsed_discourse_facet ['method_citation']
<S sid="16" ssid="6">For the following example, the The Template Relations (TR) task involves identifying instances of three relations in the text: TR builds on TE in that TR reports binary relations between elements of TE.</S>
original cit marker offset is 0
new cit marker offset is 0



["'16'"]
'16'
['16']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
    <S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'"]
'33'
'34'
['33', '34']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
    <S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'"]
'33'
'34'
['33', '34']
parsed_discourse_facet ['method_citation']
<S sid="23" ssid="6">An integrated model can limit the propagation of errors by making all decisions jointly.</S>
    <S sid="24" ssid="7">For this reason, we focused on designing an integrated model in which tagging, namefinding, parsing, and semantic interpretation decisions all have the opportunity to mutually influence each other.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'24'"]
'23'
'24'
['23', '24']
parsed_discourse_facet ['method_citation']
<S sid="23" ssid="6">An integrated model can limit the propagation of errors by making all decisions jointly.</S>
    <S sid="24" ssid="7">For this reason, we focused on designing an integrated model in which tagging, namefinding, parsing, and semantic interpretation decisions all have the opportunity to mutually influence each other.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'24'"]
'23'
'24'
['23', '24']
parsed_discourse_facet ['method_citation']
<S sid="23" ssid="6">An integrated model can limit the propagation of errors by making all decisions jointly.</S>
    <S sid="24" ssid="7">For this reason, we focused on designing an integrated model in which tagging, namefinding, parsing, and semantic interpretation decisions all have the opportunity to mutually influence each other.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
    <S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'23'", "'24'", "'33'", "'34'"]
'23'
'24'
'33'
'34'
['23', '24', '33', '34']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
    <S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'"]
'33'
'34'
['33', '34']
parsed_discourse_facet ['method_citation']
<S sid="60" ssid="1">In our statistical model, trees are generated according to a process similar to that described in (Collins 1996, 1997).</S>
    <S sid="61" ssid="2">The detailed probability structure differs, however, in that it was designed to jointly perform part-of-speech tagging, name finding, syntactic parsing, and relation finding in a single process.</S>
original cit marker offset is 0
new cit marker offset is 0



["'60'", "'61'"]
'60'
'61'
['60', '61']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'"]
'33'
['33']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
    <S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'"]
'33'
'34'
['33', '34']
parsed_discourse_facet ['method_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
    <S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'"]
'33'
'34'
['33', '34']
parsed_discourse_facet ['method_citation']
<S sid="11" ssid="1">We evaluated the new approach to information extraction on two of the tasks of the Seventh Message Understanding Conference (MUC-7) and reported in (Marsh, 1998).</S>
    <S sid="12" ssid="2">The Template Element (TE) task identifies organizations, persons, locations, and some artifacts (rocket and airplane-related artifacts).</S><S sid="16" ssid="6">For the following example, the The Template Relations (TR) task involves identifying instances of three relations in the text: TR builds on TE in that TR reports binary relations between elements of TE.</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'", "'12'", "'16'"]
'11'
'12'
'16'
['11', '12', '16']
parsed_discourse_facet ['method_citation']
<S sid="105" ssid="2">A single model proved capable of performing all necessary sentential processing, both syntactic and semantic.</S>
original cit marker offset is 0
new cit marker offset is 0



["'105'"]
'105'
['105']
parsed_discourse_facet ['result_citation']
<S sid="60" ssid="1">In our statistical model, trees are generated according to a process similar to that described in (Collins 1996, 1997).</S>
    <S sid="61" ssid="2">The detailed probability structure differs, however, in that it was designed to jointly perform part-of-speech tagging, name finding, syntactic parsing, and relation finding in a single process.</S>
original cit marker offset is 0
new cit marker offset is 0



["'60'", "'61'"]
'60'
'61'
['60', '61']
parsed_discourse_facet ['method_citation']
<S sid="16" ssid="6">For the following example, the The Template Relations (TR) task involves identifying instances of three relations in the text: TR builds on TE in that TR reports binary relations between elements of TE.</S>
original cit marker offset is 0
new cit marker offset is 0



["'16'"]
'16'
['16']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/A00-2030.annv3.csv
<S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'6'", "'0'"]
'2'
'6'
'0'
['2', '6', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'0'"]
'33'
'34'
'0'
['33', '34', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="95" ssid="14">The semantics — that is, the entities and relations — can then be directly extracted from these sentential trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'95'"]
'33'
'34'
'95'
['33', '34', '95']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'58'"]
'33'
'34'
'58'
['33', '34', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="51" ssid="11">To produce a corpus of augmented parse trees, we used the following multi-step training procedure which exploited the Penn TREEBANK Applying this procedure yielded a new version of the semantically annotated corpus, now annotated with complete augmented trees like that in Figure 3.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'51'", "'0'"]
'33'
'51'
'0'
['33', '51', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S><S sid="56" ssid="2">For example, in the phrase &quot;Lt. Cmdr.</S><S sid="38" ssid="6">Other labels indicate relations among entities.</S>
original cit marker offset is 0
new cit marker offset is 0



["'6'", "'56'", "'38'"]
'6'
'56'
'38'
['6', '56', '38']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'34'", "'33'"]
'0'
'34'
'33'
['0', '34', '33']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'34'", "'0'"]
'33'
'34'
'0'
['33', '34', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="76" ssid="17">Finally, word features, fm, for modifiers are predicted based on the modifier, cm, the partof-speech tag of the modifier word , t„„ the part-of-speech tag of the head word th, the head word itself, wh, and whether or not the modifier head word, w„„ is known or unknown.</S><S sid="63" ssid="4">Head words, along with their part-of-speech tags and features, are generated for each modifier as soon as the modifier is created.</S><S sid="22" ssid="5">There is no opportunity for a later stage, such as parsing, to influence or correct an earlier stage such as part-of-speech tagging.</S>
original cit marker offset is 0
new cit marker offset is 0



["'76'", "'63'", "'22'"]
'76'
'63'
'22'
['76', '63', '22']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="23" ssid="6">An integrated model can limit the propagation of errors by making all decisions jointly.</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'23'", "'104'"]
'0'
'23'
'104'
['0', '23', '104']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'33'", "'58'"]
'34'
'33'
'58'
['34', '33', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="2" ssid="2">In this paper we report adapting a lexic al ized, probabilistic context-free parser to information extraction and evaluate this new technique on MUC-7 template elements and template relations.</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'6'"]
'0'
'2'
'6'
['0', '2', '6']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="6" ssid="4">In this paper, we report adapting a lexicalized, probabilistic context-free parser with head rules (LPCFG-HR) to information extraction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'0'", "'6'"]
'33'
'0'
'6'
['33', '0', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S>
original cit marker offset is 0
new cit marker offset is 0



["'33'", "'0'", "'34'"]
'33'
'0'
'34'
['33', '0', '34']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'0'", "'58'"]
'34'
'0'
'58'
['34', '0', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="34" ssid="2">In these trees, the standard TREEBANK structures are augmented to convey semantic information, that is, entities and relations.</S><S sid="33" ssid="1">Our integrated model represents syntax and semantics jointly using augmented parse trees.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'34'", "'33'", "'0'"]
'34'
'33'
'0'
['34', '33', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="76" ssid="17">Finally, word features, fm, for modifiers are predicted based on the modifier, cm, the partof-speech tag of the modifier word , t„„ the part-of-speech tag of the head word th, the head word itself, wh, and whether or not the modifier head word, w„„ is known or unknown.</S><S sid="63" ssid="4">Head words, along with their part-of-speech tags and features, are generated for each modifier as soon as the modifier is created.</S><S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'76'", "'63'", "'0'"]
'76'
'63'
'0'
['76', '63', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S><S sid="11" ssid="1">We evaluated the new approach to information extraction on two of the tasks of the Seventh Message Understanding Conference (MUC-7) and reported in (Marsh, 1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'104'", "'11'"]
'0'
'104'
'11'
['0', '104', '11']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="0" ssid="0">A Novel Use of Statistical Parsing to Extract Information from Text</S><S sid="104" ssid="1">We have demonstrated, at least for one problem, that a lexicalized, probabilistic context-free parser with head rules (LPCFGHR) can be used effectively for information extraction.</S><S sid="58" ssid="4">Whenever a relation involves an entity that is not a direct descendant of that relation in the parse tree, semantic pointer labels are attached to all of the intermediate nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'104'", "'58'"]
'0'
'104'
'58'
['0', '104', '58']
parsed_discourse_facet ['hypothesis_citation', 'aim_citation', 'implication_citation']
Length 0 input/ref/Task1/A00-2030_aakansha.csv
0.0 0.0 0.0





input/ref/Task1/W06-3114_aakansha.csv
input/res/Task1/W06-3114.annv3.csv
parsing: input/ref/Task1/W06-3114_aakansha.csv
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'"]
'170'
['170']
parsed_discourse_facet ['method_citation']
<S sid="8" ssid="1">The evaluation framework for the shared task is similar to the one used in last year&#8217;s shared task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="36" ssid="2">The BLEU metric, as all currently proposed automatic metrics, is occasionally suspected to be biased towards statistical systems, especially the phrase-based systems currently in use.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="36" ssid="2">The BLEU metric, as all currently proposed automatic metrics, is occasionally suspected to be biased towards statistical systems, especially the phrase-based systems currently in use.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
<S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['method_citation']
<S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['method_citation']
<S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['method_citation']
<S sid="102" ssid="18">Confidence Interval: To estimate confidence intervals for the average mean scores for the systems, we use standard significance testing.</S>
original cit marker offset is 0
new cit marker offset is 0



["'102'"]
'102'
['102']
parsed_discourse_facet ['method_citation']
<S sid="84" ssid="23">The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:</S>
original cit marker offset is 0
new cit marker offset is 0



["'84'"]
'84'
['84']
parsed_discourse_facet ['method_citation']
<S sid="11" ssid="4">To lower the barrier of entrance to the competition, we provided a complete baseline MT system, along with data resources.</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'"]
'11'
['11']
parsed_discourse_facet ['method_citation']
<S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['method_citation']
<S sid="126" ssid="19">The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'"]
'126'
['126']
parsed_discourse_facet ['method_citation']
<S sid="15" ssid="8">Out-of-domain test data is from the Project Syndicate web site, a compendium of political commentary.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'"]
'15'
['15']
parsed_discourse_facet ['method_citation']
<S sid="8" ssid="1">The evaluation framework for the shared task is similar to the one used in last year&#8217;s shared task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
<S sid="90" ssid="6">Another way to view the judgements is that they are less quality judgements of machine translation systems per se, but rankings of machine translation systems.</S>
original cit marker offset is 0
new cit marker offset is 0



["'90'"]
'90'
['90']
parsed_discourse_facet ['method_citation']
<S sid="5" ssid="3">&#8226; We evaluated translation from English, in addition to into English.</S>
    <S sid="6" ssid="4">English was again paired with German, French, and Spanish.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'6'"]
'5'
'6'
['5', '6']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W06-3114.annv3.csv
<S sid="153" ssid="46">This is the first time that we organized a large-scale manual evaluation.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="175" ssid="6">Replacing this with an ranked evaluation seems to be more suitable.</S>
original cit marker offset is 0
new cit marker offset is 0



["'153'", "'170'", "'175'"]
'153'
'170'
'175'
['153', '170', '175']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S><S sid="26" ssid="19">Most of these groups follow a phrase-based statistical approach to machine translation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'0'", "'26'"]
'170'
'0'
'26'
['170', '0', '26']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="126" ssid="19">The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'126'"]
'9'
'170'
'126'
['9', '170', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="44" ssid="10">We computed BLEU scores for each submission with a single reference translation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'62'", "'44'"]
'170'
'62'
'44'
['170', '62', '44']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="19" ssid="12">We aligned the texts at a sentence level across all four languages, resulting in 1064 sentence per language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'19'"]
'9'
'170'
'19'
['9', '170', '19']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="36" ssid="2">The BLEU metric, as all currently proposed automatic metrics, is occasionally suspected to be biased towards statistical systems, especially the phrase-based systems currently in use.</S><S sid="35" ssid="1">For the automatic evaluation, we used BLEU, since it is the most established metric in the field.</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'", "'36'", "'35'"]
'62'
'36'
'35'
['62', '36', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="50" ssid="16">Following this method, we repeatedly — say, 1000 times — sample sets of sentences from the output of each system, measure their BLEU score, and use these 1000 BLEU scores as basis for estimating a confidence interval.</S><S sid="139" ssid="32">Given the closeness of most systems and the wide over-lapping confidence intervals it is hard to make strong statements about the correlation between human judgements and automatic scoring methods such as BLEU.</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S>
original cit marker offset is 0
new cit marker offset is 0



["'50'", "'139'", "'62'"]
'50'
'139'
'62'
['50', '139', '62']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="71" ssid="10">Presenting the output of several system allows the human judge to make more informed judgements, contrasting the quality of the different systems.</S><S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'71'", "'140'", "'0'"]
'71'
'140'
'0'
['71', '140', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="52" ssid="18">Pairwise comparison: We can use the same method to assess the statistical significance of one system outperforming another.</S><S sid="102" ssid="18">Confidence Interval: To estimate confidence intervals for the average mean scores for the systems, we use standard significance testing.</S><S sid="50" ssid="16">Following this method, we repeatedly — say, 1000 times — sample sets of sentences from the output of each system, measure their BLEU score, and use these 1000 BLEU scores as basis for estimating a confidence interval.</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'", "'102'", "'50'"]
'52'
'102'
'50'
['52', '102', '50']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="123" ssid="16">For the manual scoring, we can distinguish only half of the systems, both in terms of fluency and adequacy.</S><S sid="84" ssid="23">The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:</S><S sid="80" ssid="19">We collected around 300–400 judgements per judgement type (adequacy or fluency), per system, per language pair.</S>
original cit marker offset is 0
new cit marker offset is 0



["'123'", "'84'", "'80'"]
'123'
'84'
'80'
['123', '84', '80']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="11" ssid="4">To lower the barrier of entrance to the competition, we provided a complete baseline MT system, along with data resources.</S><S sid="117" ssid="10">For instance: if 10 systems participate, and one system does better than 3 others, worse then 2, and is not significant different from the remaining 4, its rank is in the interval 3–7.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'", "'117'", "'170'"]
'11'
'117'
'170'
['11', '117', '170']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="38" ssid="4">The BLEU score has been shown to correlate well with human judgement, when statistical machine translation systems are compared (Doddington, 2002; Przybocki, 2004; Li, 2005).</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="71" ssid="10">Presenting the output of several system allows the human judge to make more informed judgements, contrasting the quality of the different systems.</S>
original cit marker offset is 0
new cit marker offset is 0



["'38'", "'62'", "'71'"]
'38'
'62'
'71'
['38', '62', '71']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="126" ssid="19">The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'126'"]
'9'
'170'
'126'
['9', '170', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="36">For instance, for out-ofdomain English-French, Systran has the best BLEU and manual scores.</S><S sid="173" ssid="4">The bias of automatic methods in favor of statistical systems seems to be less pronounced on out-of-domain test data.</S><S sid="58" ssid="24">We divide up each test set into blocks of 20 sentences (100 blocks for the in-domain test set, 53 blocks for the out-of-domain test set), check for each block, if one system has a higher BLEU score than the other, and then use the sign test.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'173'", "'58'"]
'143'
'173'
'58'
['143', '173', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="64" ssid="3">Also, the argument has been made that machine translation performance should be evaluated via task-based evaluation metrics, i.e. how much it assists performing a useful task, such as supporting human translators or aiding the analysis of texts.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'170'", "'64'"]
'0'
'170'
'64'
['0', '170', '64']
parsed_discourse_facet ['hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="68" ssid="7">We asked participants to each judge 200–300 sentences in terms of fluency and adequacy, the most commonly used manual evaluation metrics.</S><S sid="84" ssid="23">The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'68'", "'84'"]
'170'
'68'
'84'
['170', '68', '84']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="44" ssid="10">We computed BLEU scores for each submission with a single reference translation.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'44'", "'0'"]
'170'
'44'
'0'
['170', '44', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
dict_values(['We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.'])
dict_values(['This is the first time that we organized a large-scale manual evaluation.', 'We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'Replacing this with an ranked evaluation seems to be more suitable.'])
['system', 'ROUGE-S*', 'Average_R:', '0.23810', '(95%-conf.int.', '0.23810', '-', '0.23810)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.38462', '(95%-conf.int.', '0.38462', '-', '0.38462)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:231', 'P:55', 'F:55']
dict_values(['The evaluation framework for the shared task is similar to the one used in last year&#8217;s shared task.'])
dict_values(['We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'Manual and Automatic Evaluation of Machine Translation between European Languages', 'Most of these groups follow a phrase-based statistical approach to machine translation.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:45', 'F:0']
dict_values(['Training and testing is based on the Europarl corpus.'])
dict_values(['Training and testing is based on the Europarl corpus.', 'We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02646', '(95%-conf.int.', '0.02646', '-', '0.02646)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.05155', '(95%-conf.int.', '0.05155', '-', '0.05155)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:10', 'F:10']
dict_values(['The BLEU metric, as all currently proposed automatic metrics, is occasionally suspected to be biased towards statistical systems, especially the phrase-based systems currently in use.'])
dict_values(['We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.', 'We computed BLEU scores for each submission with a single reference translation.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00256', '(95%-conf.int.', '0.00256', '-', '0.00256)']
['system', 'ROUGE-S*', 'Average_P:', '0.02564', '(95%-conf.int.', '0.02564', '-', '0.02564)']
['system', 'ROUGE-S*', 'Average_F:', '0.00466', '(95%-conf.int.', '0.00466', '-', '0.00466)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:780', 'P:78', 'F:2']
dict_values(['Training and testing is based on the Europarl corpus.'])
dict_values(['Training and testing is based on the Europarl corpus.', 'We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'We aligned the texts at a sentence level across all four languages, resulting in 1064 sentence per language.'])
['system', 'ROUGE-S*', 'Average_R:', '0.03333', '(95%-conf.int.', '0.03333', '-', '0.03333)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.06452', '(95%-conf.int.', '0.06452', '-', '0.06452)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:10', 'F:10']
dict_values(['We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.'])
dict_values(['We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.'])
['system', 'ROUGE-S*', 'Average_R:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:78', 'P:78', 'F:78']
dict_values(['The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:'])
dict_values(['For the manual scoring, we can distinguish only half of the systems, both in terms of fluency and adequacy.', 'The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:', 'We collected around 300–400 judgements per judgement type (adequacy or fluency), per system, per language pair.'])
['system', 'ROUGE-S*', 'Average_R:', '0.07977', '(95%-conf.int.', '0.07977', '-', '0.07977)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.14776', '(95%-conf.int.', '0.14776', '-', '0.14776)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:28', 'F:28']
dict_values(['To lower the barrier of entrance to the competition, we provided a complete baseline MT system, along with data resources.'])
dict_values(['To lower the barrier of entrance to the competition, we provided a complete baseline MT system, along with data resources.', 'For instance: if 10 systems participate, and one system does better than 3 others, worse then 2, and is not significant different from the remaining 4, its rank is in the interval 3–7.', 'We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.08258', '(95%-conf.int.', '0.08258', '-', '0.08258)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.15257', '(95%-conf.int.', '0.15257', '-', '0.15257)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:55', 'F:55']
dict_values(['We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.'])
dict_values(['The BLEU score has been shown to correlate well with human judgement, when statistical machine translation systems are compared (Doddington, 2002; Przybocki, 2004; Li, 2005).', 'While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.', 'Presenting the output of several system allows the human judge to make more informed judgements, contrasting the quality of the different systems.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00082', '(95%-conf.int.', '0.00082', '-', '0.00082)']
['system', 'ROUGE-S*', 'Average_P:', '0.01282', '(95%-conf.int.', '0.01282', '-', '0.01282)']
['system', 'ROUGE-S*', 'Average_F:', '0.00153', '(95%-conf.int.', '0.00153', '-', '0.00153)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1225', 'P:78', 'F:1']
dict_values(['Out-of-domain test data is from the Project Syndicate web site, a compendium of political commentary.'])
dict_values(['For instance, for out-ofdomain English-French, Systran has the best BLEU and manual scores.', 'The bias of automatic methods in favor of statistical systems seems to be less pronounced on out-of-domain test data.', 'We divide up each test set into blocks of 20 sentences (100 blocks for the in-domain test set, 53 blocks for the out-of-domain test set), check for each block, if one system has a higher BLEU score than the other, and then use the sign test.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00348', '(95%-conf.int.', '0.00348', '-', '0.00348)']
['system', 'ROUGE-S*', 'Average_P:', '0.06667', '(95%-conf.int.', '0.06667', '-', '0.06667)']
['system', 'ROUGE-S*', 'Average_F:', '0.00662', '(95%-conf.int.', '0.00662', '-', '0.00662)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:861', 'P:45', 'F:3']
dict_values(['The evaluation framework for the shared task is similar to the one used in last year&#8217;s shared task.'])
dict_values(['Manual and Automatic Evaluation of Machine Translation between European Languages', 'We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'Also, the argument has been made that machine translation performance should be evaluated via task-based evaluation metrics, i.e. how much it assists performing a useful task, such as supporting human translators or aiding the analysis of texts.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00450', '(95%-conf.int.', '0.00450', '-', '0.00450)']
['system', 'ROUGE-S*', 'Average_P:', '0.06667', '(95%-conf.int.', '0.06667', '-', '0.06667)']
['system', 'ROUGE-S*', 'Average_F:', '0.00844', '(95%-conf.int.', '0.00844', '-', '0.00844)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:45', 'F:3']
dict_values(['Another way to view the judgements is that they are less quality judgements of machine translation systems per se, but rankings of machine translation systems.'])
dict_values(['We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'We asked participants to each judge 200–300 sentences in terms of fluency and adequacy, the most commonly used manual evaluation metrics.', 'The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:'])
['system', 'ROUGE-S*', 'Average_R:', '0.00202', '(95%-conf.int.', '0.00202', '-', '0.00202)']
['system', 'ROUGE-S*', 'Average_P:', '0.01515', '(95%-conf.int.', '0.01515', '-', '0.01515)']
['system', 'ROUGE-S*', 'Average_F:', '0.00356', '(95%-conf.int.', '0.00356', '-', '0.00356)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:66', 'F:1']
dict_values(['&#8226; We evaluated translation from English, in addition to into English.', 'English was again paired with German, French, and Spanish.'])
dict_values(['We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'We computed BLEU scores for each submission with a single reference translation.', 'Manual and Automatic Evaluation of Machine Translation between European Languages'])
['system', 'ROUGE-S*', 'Average_R:', '0.01000', '(95%-conf.int.', '0.01000', '-', '0.01000)']
['system', 'ROUGE-S*', 'Average_P:', '0.05455', '(95%-conf.int.', '0.05455', '-', '0.05455)']
['system', 'ROUGE-S*', 'Average_F:', '0.01690', '(95%-conf.int.', '0.01690', '-', '0.01690)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:55', 'F:3']
0.4801153809221894 0.11412461450673374 0.14174846044808878





input/ref/Task1/A97-1014_vardha.csv
input/res/Task1/A97-1014.annv3.csv
parsing: input/ref/Task1/A97-1014_vardha.csv
<S sid="72" ssid="17">In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'"]
'72'
['72']
parsed_discourse_facet ['method_citation']
 <S sid="144" ssid="25">We distinguish five degrees of automation: So far, about 1100 sentences of our corpus have been annotated.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'"]
'144'
['144']
parsed_discourse_facet ['method_citation']
<S sid="14" ssid="4">Corpora annotated with syntactic structures are commonly referred to as trctbank.5.</S>
original cit marker offset is 0
new cit marker offset is 0



["'14'"]
'14'
['14']
parsed_discourse_facet ['method_citation']
<S sid="15" ssid="5">Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'"]
'15'
['15']
parsed_discourse_facet ['method_citation']
  <S sid="36" ssid="26">As for free word order languages, the following features may cause problems: sition between the two poles.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'"]
'36'
['36']
parsed_discourse_facet ['method_citation']
 <S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'"]
'24'
['24']
parsed_discourse_facet ['method_citation']
 <S sid="160" ssid="2">These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.</S>
original cit marker offset is 0
new cit marker offset is 0



["'160'"]
'160'
['160']
parsed_discourse_facet ['method_citation']
 <S sid="151" ssid="32">For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).</S>
original cit marker offset is 0
new cit marker offset is 0



["'151'"]
'151'
['151']
parsed_discourse_facet ['method_citation']
 <S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'"]
'4'
['4']
parsed_discourse_facet ['method_citation']
<S sid="160" ssid="2">These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.</S>
original cit marker offset is 0
new cit marker offset is 0



["'160'"]
'160'
['160']
parsed_discourse_facet ['method_citation']
 <S sid="167" ssid="9">In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.</S>
original cit marker offset is 0
new cit marker offset is 0



["'167'"]
'167'
['167']
parsed_discourse_facet ['method_citation']
<S sid="39" ssid="29">Consider the German sentence (1) daran wird ihn Anna erkennen, &amp;di er weint at-it will him Anna recognise that he cries 'Anna will recognise him at his cry' A sample constituent structure is given below: The fairly short sentence contains three non-local dependencies, marked by co-references between traces and the corresponding nodes.</S>
original cit marker offset is 0
new cit marker offset is 0



["'39'"]
'39'
['39']
parsed_discourse_facet ['method_citation']
 <S sid="151" ssid="32">For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).</S>
original cit marker offset is 0
new cit marker offset is 0



["'151'"]
'151'
['151']
parsed_discourse_facet ['method_citation']
<S sid="71" ssid="16">However, there is a trade-off between the granularity of information encoded in the labels and the speed and accuracy of annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'71'"]
'71'
['71']
parsed_discourse_facet ['method_citation']
 <S sid="144" ssid="25">We distinguish five degrees of automation: So far, about 1100 sentences of our corpus have been annotated.</S>
original cit marker offset is 0
new cit marker offset is 0



["'144'"]
'144'
['144']
parsed_discourse_facet ['method_citation']
<S sid="160" ssid="2">These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.</S>
original cit marker offset is 0
new cit marker offset is 0



["'160'"]
'160'
['160']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/A97-1014.annv3.csv
<S sid="74" ssid="19">During the first phase, the focus is on annotating correct structures and a coarse-grained classification of grammatical functions, which represent the following areas of information: Dependency type: complements are further classified according to features such as category and case: clausal complements (OC), accusative objects (OA), datives (DA), etc.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S><S sid="170" ssid="12">Our annotation tool supplies efficient manipulation and immediate visualization of argument structures.</S>
original cit marker offset is 0
new cit marker offset is 0



["'74'", "'88'", "'170'"]
'74'
'88'
'170'
['74', '88', '170']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="72" ssid="17">In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="144" ssid="25">We distinguish five degrees of automation: So far, about 1100 sentences of our corpus have been annotated.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'", "'4'", "'144'"]
'72'
'4'
'144'
['72', '4', '144']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="153" ssid="34">The tagger rates 90% of all assignments as reliable and carries them out fully automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'24'", "'159'", "'153'"]
'24'
'159'
'153'
['24', '159', '153']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="15" ssid="5">Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.</S><S sid="57" ssid="2">Argument structure, represented in terms of unordered trees.</S><S sid="0" ssid="0">An Annotation Scheme for Free Word Order Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'", "'57'", "'0'"]
'15'
'57'
'0'
['15', '57', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="111" ssid="24">If the scope of such a word does not directly correspond to a tree node, the word is attached to the lowest node dominating all subconstituents appearing in its scope.</S><S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="47" ssid="37">Argument structure can be represented in terms of unordered trees (with crossing branches).</S>
original cit marker offset is 0
new cit marker offset is 0



["'111'", "'24'", "'47'"]
'111'
'24'
'47'
['111', '24', '47']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="24" ssid="14">The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'24'", "'4'"]
'159'
'24'
'4'
['159', '24', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="167" ssid="9">In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.</S><S sid="141" ssid="22">The corpus is stored in a SQL database.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["'167'", "'141'", "'4'"]
'167'
'141'
'4'
['167', '141', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="166" ssid="8">Syntactically annotated corpora of German have been missing until now.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="1" ssid="1">We describe an annotation scheme and a tool developed for creating linguistically annotated corpora for non-configurational languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'166'", "'4'", "'1'"]
'166'
'4'
'1'
['166', '4', '1']
parsed_discourse_facet ['hypothesis_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S><S sid="0" ssid="0">An Annotation Scheme for Free Word Order Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'88'", "'0'"]
'159'
'88'
'0'
['159', '88', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="121" ssid="2">In order to make the annotation process more efficient, extra effort has been put. into the development of an annotation tool.</S><S sid="74" ssid="19">During the first phase, the focus is on annotating correct structures and a coarse-grained classification of grammatical functions, which represent the following areas of information: Dependency type: complements are further classified according to features such as category and case: clausal complements (OC), accusative objects (OA), datives (DA), etc.</S>
original cit marker offset is 0
new cit marker offset is 0



["'159'", "'121'", "'74'"]
'159'
'121'
'74'
['159', '121', '74']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="72" ssid="17">In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="88" ssid="1">As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.</S>
original cit marker offset is 0
new cit marker offset is 0



["'72'", "'4'", "'88'"]
'72'
'4'
'88'
['72', '4', '88']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="141" ssid="22">The corpus is stored in a SQL database.</S><S sid="143" ssid="24">Sentences annotated in previous steps are used as training material for further processing.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'", "'141'", "'143'"]
'4'
'141'
'143'
['4', '141', '143']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="159" ssid="1">As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.</S><S sid="71" ssid="16">However, there is a trade-off between the granularity of information encoded in the labels and the speed and accuracy of annotation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'4'", "'159'", "'71'"]
'4'
'159'
'71'
['4', '159', '71']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'aim_citation', 'implication_citation']
<S sid="160" ssid="2">These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.</S><S sid="4" ssid="1">The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.</S><S sid="151" ssid="32">For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).</S>
original cit marker offset is 0
new cit marker offset is 0



["'160'", "'4'", "'151'"]
'160'
'4'
'151'
['160', '4', '151']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['We distinguish five degrees of automation: So far, about 1100 sentences of our corpus have been annotated.'])
dict_values(['In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.', "The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.", 'We distinguish five degrees of automation: So far, about 1100 sentences of our corpus have been annotated.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05556', '(95%-conf.int.', '0.05556', '-', '0.05556)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.10526', '(95%-conf.int.', '0.10526', '-', '0.10526)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:21', 'F:21']
dict_values(['Corpora annotated with syntactic structures are commonly referred to as trctbank.5.'])
dict_values(['The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.', 'As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.', 'The tagger rates 90% of all assignments as reliable and carries them out fully automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00178', '(95%-conf.int.', '0.00178', '-', '0.00178)']
['system', 'ROUGE-S*', 'Average_P:', '0.03571', '(95%-conf.int.', '0.03571', '-', '0.03571)']
['system', 'ROUGE-S*', 'Average_F:', '0.00340', '(95%-conf.int.', '0.00340', '-', '0.00340)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:28', 'F:1']
dict_values(['Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.'])
dict_values(['Existing treebank annotation schemes exhibit a fairly uniform architecture, as they all have to meet the same basic requirements, namely: Descriptivity: Grammatical phenomena are to be described rather than explained.', 'Argument structure, represented in terms of unordered trees.', 'An Annotation Scheme for Free Word Order Languages'])
['system', 'ROUGE-S*', 'Average_R:', '0.29915', '(95%-conf.int.', '0.29915', '-', '0.29915)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.46053', '(95%-conf.int.', '0.46053', '-', '0.46053)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:105', 'F:105']
dict_values(['These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.'])
dict_values(['As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.', 'The typical treebank architecture is as follows: Structures: A context-free backbone is augmented with trace-filler representations of non-local dependencies.', "The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction."])
['system', 'ROUGE-S*', 'Average_R:', '0.00569', '(95%-conf.int.', '0.00569', '-', '0.00569)']
['system', 'ROUGE-S*', 'Average_P:', '0.19048', '(95%-conf.int.', '0.19048', '-', '0.19048)']
['system', 'ROUGE-S*', 'Average_F:', '0.01105', '(95%-conf.int.', '0.01105', '-', '0.01105)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:703', 'P:21', 'F:4']
dict_values(['For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).'])
dict_values(['In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.', 'The corpus is stored in a SQL database.', "The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction."])
['system', 'ROUGE-S*', 'Average_R:', '0.00230', '(95%-conf.int.', '0.00230', '-', '0.00230)']
['system', 'ROUGE-S*', 'Average_P:', '0.01818', '(95%-conf.int.', '0.01818', '-', '0.01818)']
['system', 'ROUGE-S*', 'Average_F:', '0.00408', '(95%-conf.int.', '0.00408', '-', '0.00408)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:55', 'F:1']
dict_values(['These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.'])
dict_values(['As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.', 'As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.', 'An Annotation Scheme for Free Word Order Languages'])
['system', 'ROUGE-S*', 'Average_R:', '0.01008', '(95%-conf.int.', '0.01008', '-', '0.01008)']
['system', 'ROUGE-S*', 'Average_P:', '0.28571', '(95%-conf.int.', '0.28571', '-', '0.28571)']
['system', 'ROUGE-S*', 'Average_F:', '0.01948', '(95%-conf.int.', '0.01948', '-', '0.01948)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:595', 'P:21', 'F:6']
dict_values(['In the second phase of the project Verbmobil a. treebank for :30,000 German spoken sentences as well as for the same amount of English and Japanese sentences will be created.'])
dict_values(['As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.', 'In order to make the annotation process more efficient, extra effort has been put. into the development of an annotation tool.', 'During the first phase, the focus is on annotating correct structures and a coarse-grained classification of grammatical functions, which represent the following areas of information: Dependency type: complements are further classified according to features such as category and case: clausal complements (OC), accusative objects (OA), datives (DA), etc.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1378', 'P:91', 'F:0']
dict_values(["Consider the German sentence (1) daran wird ihn Anna erkennen, &di er weint at-it will him Anna recognise that he cries 'Anna will recognise him at his cry' A sample constituent structure is given below: The fairly short sentence contains three non-local dependencies, marked by co-references between traces and the corresponding nodes."])
dict_values(['In order to avoid inconsistencies, the corpus is annotated in two stages: basic annotation and nfirtellte714.', "The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.", 'As theory-independence is one of our objectives, the annotation scheme incorporates a number of widely accepted linguistic analyses, especially in the area of verbal, adverbial and adjectival syntax.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:406', 'F:0']
dict_values(['For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).'])
dict_values(["The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.", 'The corpus is stored in a SQL database.', 'Sentences annotated in previous steps are used as training material for further processing.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01581', '(95%-conf.int.', '0.01581', '-', '0.01581)']
['system', 'ROUGE-S*', 'Average_P:', '0.07273', '(95%-conf.int.', '0.07273', '-', '0.07273)']
['system', 'ROUGE-S*', 'Average_F:', '0.02597', '(95%-conf.int.', '0.02597', '-', '0.02597)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:253', 'P:55', 'F:4']
dict_values(['However, there is a trade-off between the granularity of information encoded in the labels and the speed and accuracy of annotation.'])
dict_values(["The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.", 'As the annotation scheme described in this paper focusses on annotating argument structure rather than constituent trees, it differs from existing treebanks in several aspects.', 'However, there is a trade-off between the granularity of information encoded in the labels and the speed and accuracy of annotation.'])
['system', 'ROUGE-S*', 'Average_R:', '0.05303', '(95%-conf.int.', '0.05303', '-', '0.05303)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.10072', '(95%-conf.int.', '0.10072', '-', '0.10072)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:28', 'F:28']
dict_values(['These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.'])
dict_values(['These differences can be illustrated by a comparison with the Penn Treebank annotation scheme.', "The work reported in this paper aims at providing syntactically annotated corpora (treebanks') for stochastic grammar induction.", 'For evaluation, the already annotated sentences were divided into two disjoint sets, one for training (90% of the corpus), the other one for testing (10%).'])
['system', 'ROUGE-S*', 'Average_R:', '0.04828', '(95%-conf.int.', '0.04828', '-', '0.04828)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.09211', '(95%-conf.int.', '0.09211', '-', '0.09211)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:21', 'F:21']
0.4184372689232976 0.044698181411834716 0.0747818175019835





input/ref/Task1/P11-1061_sweta.csv
input/res/Task1/P11-1061.annv3.csv
parsing: input/ref/Task1/P11-1061_sweta.csv
 <S sid="9" ssid="5">Unfortunately, the best completely unsupervised English POS tagger (that does not make use of a tagging dictionary) reaches only 76.1% accuracy (Christodoulopoulos et al., 2010), making its practical usability questionable at best.</S>
original cit marker offset is 0
new cit marker offset is 0



["9'"]
9'
['9']
parsed_discourse_facet ['method_citation']
<S sid="47" ssid="13">Our monolingual similarity function (for connecting pairs of foreign trigram types) is the same as the one used by Subramanya et al. (2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["47'"]
47'
['47']
parsed_discourse_facet ['method_citation']
<S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["10'"]
10'
['10']
parsed_discourse_facet ['method_citation']
<S sid="70" ssid="1">Given the bilingual graph described in the previous section, we can use label propagation to project the English POS labels to the foreign language.</S>
original cit marker offset is 0
new cit marker offset is 0



["70'"]
70'
['70']
parsed_discourse_facet ['method_citation']
<S sid="52" ssid="18">This is similar to stacking the different feature instantiations into long (sparse) vectors and computing the cosine similarity between them.</S>
original cit marker offset is 0
new cit marker offset is 0



["52'"]
52'
['52']
parsed_discourse_facet ['method_citation']
 <S sid="83" ssid="14">We then extract a set of possible tags tx(y) by eliminating labels whose probability is below a threshold value &#964;: We describe how we choose &#964; in &#167;6.4.</S>
original cit marker offset is 0
new cit marker offset is 0



["83'"]
83'
['83']
parsed_discourse_facet ['method_citation']
<S sid="113" ssid="13">For each language under consideration, Petrov et al. (2011) provide a mapping A from the fine-grained language specific POS tags in the foreign treebank to the universal POS tags.</S>
original cit marker offset is 0
new cit marker offset is 0



["113'"]
113'
['113']
parsed_discourse_facet ['method_citation']
<S sid="3" ssid="3">We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["3'"]
3'
['3']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S>
original cit marker offset is 0
new cit marker offset is 0



["18'"]
18'
['18']
parsed_discourse_facet ['method_citation']
 <S sid="13" ssid="9">(2009) study related but different multilingual grammar and tagger induction tasks, where it is assumed that no labeled data at all is available.</S>
original cit marker offset is 0
new cit marker offset is 0



["13'"]
13'
['13']
parsed_discourse_facet ['method_citation']
 <S sid="3" ssid="3">We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["3'"]
3'
['3']
parsed_discourse_facet ['method_citation']
<S sid="120" ssid="20">We were intentionally lenient with our baselines: bilingual information by projecting POS tags directly across alignments in the parallel data.</S>
original cit marker offset is 0
new cit marker offset is 0



["120'"]
120'
['120']
parsed_discourse_facet ['method_citation']
<S sid="2" ssid="2">Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["2'"]
2'
['2']
parsed_discourse_facet ['method_citation']
<S sid="19" ssid="15">Syntactic universals are a well studied concept in linguistics (Carnie, 2002; Newmeyer, 2005), and were recently used in similar form by Naseem et al. (2010) for multilingual grammar induction.</S>
original cit marker offset is 0
new cit marker offset is 0



["19'"]
19'
['19']
parsed_discourse_facet ['method_citation']
<S sid="153" ssid="16">Figure 2 shows an excerpt of a sentence from the Italian test set and the tags assigned by four different models, as well as the gold tags.</S>
original cit marker offset is 0
new cit marker offset is 0



["153'"]
153'
['153']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S>
original cit marker offset is 0
new cit marker offset is 0



["18'"]
18'
['18']
parsed_discourse_facet ['method_citation']
<S sid="161" ssid="4">Our results outperform strong unsupervised baselines as well as approaches that rely on direct projections, and bridge the gap between purely supervised and unsupervised POS tagging models.</S>
original cit marker offset is 0
new cit marker offset is 0



["161'"]
161'
['161']
parsed_discourse_facet ['method_citation']
<S sid="23" ssid="19">Our final average POS tagging accuracy of 83.4% compares very favorably to the average accuracy of Berg-Kirkpatrick et al.&#8217;s monolingual unsupervised state-of-the-art model (73.0%), and considerably bridges the gap to fully supervised POS tagging performance (96.6%).</S>
original cit marker offset is 0
new cit marker offset is 0



["23'"]
23'
['23']
parsed_discourse_facet ['method_citation']
<S sid="23" ssid="19">Our final average POS tagging accuracy of 83.4% compares very favorably to the average accuracy of Berg-Kirkpatrick et al.&#8217;s monolingual unsupervised state-of-the-art model (73.0%), and considerably bridges the gap to fully supervised POS tagging performance (96.6%).</S>
original cit marker offset is 0
new cit marker offset is 0



["23'"]
23'
['23']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P11-1061.annv3.csv
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="6" ssid="2">Supervised part-of-speech (POS) taggers, for example, approach the level of inter-annotator agreement (Shen et al., 2007, 97.3% accuracy for English).</S><S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'6'", "'18'"]
'0'
'6'
'18'
['0', '6', '18']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'7'", "'27'"]
'0'
'7'
'27'
['0', '7', '27']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="3" ssid="3">We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).</S><S sid="35" ssid="1">In graph-based learning approaches one constructs a graph whose vertices are labeled and unlabeled examples, and whose weighted edges encode the degree to which the examples they link have the same label (Zhu et al., 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'3'", "'35'"]
'0'
'3'
'35'
['0', '3', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="52" ssid="18">This is similar to stacking the different feature instantiations into long (sparse) vectors and computing the cosine similarity between them.</S><S sid="51" ssid="17">For each trigram type x2 x3 x4 in a sequence x1 x2 x3 x4 x5, we count how many times that trigram type co-occurs with the different instantiations of each concept, and compute the point-wise mutual information (PMI) between the two.5 The similarity between two trigram types is given by summing over the PMI values over feature instantiations that they have in common.</S><S sid="42" ssid="8">The foreign language vertices (denoted by Vf) correspond to foreign trigram types, exactly as in Subramanya et al. (2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'", "'51'", "'42'"]
'52'
'51'
'42'
['52', '51', '42']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="31" ssid="8">By aggregating the POS labels of the English tokens to types, we can generate label distributions for the English vertices.</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'7'", "'31'"]
'27'
'7'
'31'
['27', '7', '31']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S><S sid="6" ssid="2">Supervised part-of-speech (POS) taggers, for example, approach the level of inter-annotator agreement (Shen et al., 2007, 97.3% accuracy for English).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'6'"]
'0'
'24'
'6'
['0', '24', '6']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="85" ssid="16">We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).</S><S sid="3" ssid="3">We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'85'", "'3'"]
'0'
'85'
'3'
['0', '85', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="18" ssid="14">To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).</S><S sid="158" ssid="1">We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'18'", "'158'"]
'0'
'18'
'158'
['0', '18', '158']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="2" ssid="2">Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.</S><S sid="16" ssid="12">To this end, we construct a bilingual graph over word types to establish a connection between the two languages (§3), and then use graph label propagation to project syntactic information from English to the foreign language (§4).</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'16'"]
'0'
'2'
'16'
['0', '2', '16']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="71" ssid="2">We use label propagation in two stages to generate soft labels on all the vertices in the graph.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="35" ssid="1">In graph-based learning approaches one constructs a graph whose vertices are labeled and unlabeled examples, and whose weighted edges encode the degree to which the examples they link have the same label (Zhu et al., 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'71'", "'0'", "'35'"]
'71'
'0'
'35'
['71', '0', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S><S sid="160" ssid="3">Our results suggest that it is possible to learn accurate POS taggers for languages which do not have any annotated data, but have translations into a resource-rich language.</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'", "'160'", "'24'"]
'106'
'160'
'24'
['106', '160', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S><S sid="160" ssid="3">Our results suggest that it is possible to learn accurate POS taggers for languages which do not have any annotated data, but have translations into a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'24'", "'160'"]
'0'
'24'
'160'
['0', '24', '160']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="46" ssid="12">We use two different similarity functions to define the edge weights among the foreign vertices and between vertices from different languages.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S>
original cit marker offset is 0
new cit marker offset is 0



["'46'", "'0'", "'106'"]
'46'
'0'
'106'
['46', '0', '106']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="7" ssid="3">However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.</S><S sid="144" ssid="7">For comparison, the completely unsupervised feature-HMM baseline accuracy on the universal POS tags for English is 79.4%, and goes up to 88.7% with a treebank dictionary.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'7'", "'144'"]
'0'
'7'
'144'
['0', '7', '144']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="2" ssid="2">Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.</S><S sid="24" ssid="1">The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'2'", "'24'"]
'0'
'2'
'24'
['0', '2', '24']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="106" ssid="6">Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="10" ssid="6">To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'106'", "'0'", "'10'"]
'106'
'0'
'10'
['106', '0', '10']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="56" ssid="22">To define a similarity function between the English and the foreign vertices, we rely on high-confidence word alignments.</S><S sid="57" ssid="23">Since our graph is built from a parallel corpus, we can use standard word alignment techniques to align the English sentences De 5Note that many combinations are impossible giving a PMI value of 0; e.g., when the trigram type and the feature instantiation don’t have words in common. and their foreign language translations Df.6 Label propagation in the graph will provide coverage and high recall, and we therefore extract only intersected high-confidence (> 0.9) alignments De�f.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S>
original cit marker offset is 0
new cit marker offset is 0



["'56'", "'57'", "'0'"]
'56'
'57'
'0'
['56', '57', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="27" ssid="4">Graph construction does not require any labeled data, but makes use of two similarity functions.</S><S sid="0" ssid="0">Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections</S><S sid="85" ssid="16">We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).</S>
original cit marker offset is 0
new cit marker offset is 0



["'27'", "'0'", "'85'"]
'27'
'0'
'85'
['27', '0', '85']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['Our monolingual similarity function (for connecting pairs of foreign trigram types) is the same as the one used by Subramanya et al. (2010).'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'Supervised part-of-speech (POS) taggers, for example, approach the level of inter-annotator agreement (Shen et al., 2007, 97.3% accuracy for English).', 'To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:55', 'F:0']
dict_values(['To bridge this gap, we consider a practically motivated scenario, in which we want to leverage existing resources from a resource-rich language (like English) when building tools for resource-poor foreign languages.1 We assume that absolutely no labeled training data is available for the foreign language of interest, but that we have access to parallel data with a resource-rich language.'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.', 'Graph construction does not require any labeled data, but makes use of two similarity functions.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01846', '(95%-conf.int.', '0.01846', '-', '0.01846)']
['system', 'ROUGE-S*', 'Average_P:', '0.01136', '(95%-conf.int.', '0.01136', '-', '0.01136)']
['system', 'ROUGE-S*', 'Average_F:', '0.01407', '(95%-conf.int.', '0.01407', '-', '0.01407)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:528', 'F:6']
dict_values(['We then extract a set of possible tags tx(y) by eliminating labels whose probability is below a threshold value &#964;: We describe how we choose &#964; in &#167;6.4.'])
dict_values(['Graph construction does not require any labeled data, but makes use of two similarity functions.', 'However, supervised methods rely on labeled training data, which is time-consuming and expensive to generate.', 'By aggregating the POS labels of the English tokens to types, we can generate label distributions for the English vertices.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:406', 'P:105', 'F:0']
dict_values(['We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).', 'We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).'])
['system', 'ROUGE-S*', 'Average_R:', '0.20420', '(95%-conf.int.', '0.20420', '-', '0.20420)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.33915', '(95%-conf.int.', '0.33915', '-', '0.33915)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:136', 'F:136']
dict_values(['To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).', 'We have shown the efficacy of graph-based label propagation for projecting part-of-speech information across languages.'])
['system', 'ROUGE-S*', 'Average_R:', '0.14194', '(95%-conf.int.', '0.14194', '-', '0.14194)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.24859', '(95%-conf.int.', '0.24859', '-', '0.24859)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:465', 'P:66', 'F:66']
dict_values(['(2009) study related but different multilingual grammar and tagger induction tasks, where it is assumed that no labeled data at all is available.'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.', 'To this end, we construct a bilingual graph over word types to establish a connection between the two languages (§3), and then use graph label propagation to project syntactic information from English to the foreign language (§4).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00111', '(95%-conf.int.', '0.00111', '-', '0.00111)']
['system', 'ROUGE-S*', 'Average_P:', '0.01818', '(95%-conf.int.', '0.01818', '-', '0.01818)']
['system', 'ROUGE-S*', 'Average_F:', '0.00209', '(95%-conf.int.', '0.00209', '-', '0.00209)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:55', 'F:1']
dict_values(['We use graph-based label propagation for cross-lingual knowledge transfer and use the projected labels as features in an unsupervised model (Berg- Kirkpatrick et al., 2010).'])
dict_values(['We use label propagation in two stages to generate soft labels on all the vertices in the graph.', 'Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'In graph-based learning approaches one constructs a graph whose vertices are labeled and unlabeled examples, and whose weighted edges encode the degree to which the examples they link have the same label (Zhu et al., 2003).'])
['system', 'ROUGE-S*', 'Average_R:', '0.03810', '(95%-conf.int.', '0.03810', '-', '0.03810)']
['system', 'ROUGE-S*', 'Average_P:', '0.17647', '(95%-conf.int.', '0.17647', '-', '0.17647)']
['system', 'ROUGE-S*', 'Average_F:', '0.06266', '(95%-conf.int.', '0.06266', '-', '0.06266)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:136', 'F:24']
dict_values(['Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.', 'Our results suggest that it is possible to learn accurate POS taggers for languages which do not have any annotated data, but have translations into a resource-rich language.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01849', '(95%-conf.int.', '0.01849', '-', '0.01849)']
['system', 'ROUGE-S*', 'Average_P:', '0.10476', '(95%-conf.int.', '0.10476', '-', '0.10476)']
['system', 'ROUGE-S*', 'Average_F:', '0.03143', '(95%-conf.int.', '0.03143', '-', '0.03143)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:595', 'P:105', 'F:11']
dict_values(['Syntactic universals are a well studied concept in linguistics (Carnie, 2002; Newmeyer, 2005), and were recently used in similar form by Naseem et al. (2010) for multilingual grammar induction.'])
dict_values(['We use two different similarity functions to define the edge weights among the foreign vertices and between vertices from different languages.', 'Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'Taking the intersection of languages in these resources, and selecting languages with large amounts of parallel data, yields the following set of eight Indo-European languages: Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:780', 'P:153', 'F:0']
dict_values(['To make the projection practical, we rely on the twelve universal part-of-speech tags of Petrov et al. (2011).'])
dict_values(['Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'Our method does not assume any knowledge about the target language (in particular no tagging dictionary is assumed), making it applicable to a wide array of resource-poor languages.', 'The focus of this work is on building POS taggers for foreign languages, assuming that we have an English POS tagger and some parallel text between the two languages.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00601', '(95%-conf.int.', '0.00601', '-', '0.00601)']
['system', 'ROUGE-S*', 'Average_P:', '0.06061', '(95%-conf.int.', '0.06061', '-', '0.06061)']
['system', 'ROUGE-S*', 'Average_F:', '0.01093', '(95%-conf.int.', '0.01093', '-', '0.01093)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:66', 'F:4']
dict_values(['Our final average POS tagging accuracy of 83.4% compares very favorably to the average accuracy of Berg-Kirkpatrick et al.&#8217;s monolingual unsupervised state-of-the-art model (73.0%), and considerably bridges the gap to fully supervised POS tagging performance (96.6%).'])
dict_values(['Graph construction does not require any labeled data, but makes use of two similarity functions.', 'Unsupervised Part-of-Speech Tagging with Bilingual Graph-Based Projections', 'We develop our POS induction model based on the feature-based HMM of Berg-Kirkpatrick et al. (2010).'])
['system', 'ROUGE-S*', 'Average_R:', '0.03968', '(95%-conf.int.', '0.03968', '-', '0.03968)']
['system', 'ROUGE-S*', 'Average_P:', '0.03024', '(95%-conf.int.', '0.03024', '-', '0.03024)']
['system', 'ROUGE-S*', 'Average_F:', '0.03432', '(95%-conf.int.', '0.03432', '-', '0.03432)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:496', 'F:15']
0.21832908892428105 0.04254454506777687 0.06756727211302481





input/ref/Task1/P08-1028_swastika.csv
input/res/Task1/P08-1028.annv3.csv
parsing: input/ref/Task1/P08-1028_swastika.csv
<S sid="21" ssid="17">Central in these models is the notion of compositionality &#8212; the meaning of complex expressions is determined by the meanings of their constituent expressions and the rules used to combine them.</S>
original cit marker offset is 0
new cit marker offset is 0



['21']
21
['21']
parsed_discourse_facet ['method_citation']
<S sid="27" ssid="23">Our results show that the multiplicative models are superior and correlate significantly with behavioral data.</S>
original cit marker offset is 0
new cit marker offset is 0



['27']
27
['27']
parsed_discourse_facet ['result_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
original cit marker offset is 0
new cit marker offset is 0



['189']
189
['189']
parsed_discourse_facet ['aim_citation']
<S sid="53" ssid="1">We formulate semantic composition as a function of two vectors, u and v. We assume that individual words are represented by vectors acquired from a corpus following any of the parametrisations that have been suggested in the literature.1 We briefly note here that a word&#8217;s vector typically represents its co-occurrence with neighboring words.</S>
original cit marker offset is 0
new cit marker offset is 0



['53']
53
['53']
parsed_discourse_facet ['method_citation']
<S sid="76" ssid="24">The models considered so far assume that components do not &#8216;interfere&#8217; with each other, i.e., that It is also possible to re-introduce the dependence on K into the model of vector composition.</S>
original cit marker offset is 0
new cit marker offset is 0



['76']
76
['76']
parsed_discourse_facet ['method_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S>
original cit marker offset is 0
new cit marker offset is 0



['57']
57
['57']
parsed_discourse_facet ['method_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S>
original cit marker offset is 0
new cit marker offset is 0



['57']
57
['57']
parsed_discourse_facet ['method_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



['190']
190
['190']
parsed_discourse_facet ['result_citation']
<S sid="60" ssid="8">To derive specific models from this general framework requires the identification of appropriate constraints to narrow the space of functions being considered.</S>
original cit marker offset is 0
new cit marker offset is 0



['60']
60
['60']
parsed_discourse_facet ['method_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



['190']
190
['190']
parsed_discourse_facet ['result_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



['190']
190
['190']
parsed_discourse_facet ['result_citation']
<S sid="73" ssid="21">Relaxing the assumption of symmetry in the case of the simple additive model produces a model which weighs the contribution of the two components differently: This allows additive models to become more syntax aware, since semantically important constituents can participate more actively in the composition.</S>
original cit marker offset is 0
new cit marker offset is 0



['73']
73
['73']
parsed_discourse_facet ['result_citation']
<S sid="99" ssid="12">In order to establish an independent measure of sentence similarity, we assembled a set of experimental materials and elicited similarity ratings from human subjects.</S>
original cit marker offset is 0
new cit marker offset is 0



['99']
99
['99']
parsed_discourse_facet ['method_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
original cit marker offset is 0
new cit marker offset is 0



['189']
189
['189']
parsed_discourse_facet ['aim_citation']
<S sid="191" ssid="3">Despite the popularity of additive models, our experimental results showed the superiority of models utilizing multiplicative combinations, at least for the sentence similarity task attempted here.</S>
original cit marker offset is 0
new cit marker offset is 0



['191']
191
['191']
parsed_discourse_facet ['result_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S>
original cit marker offset is 0
new cit marker offset is 0



['190']
190
['190']
parsed_discourse_facet ['result_citation']
parsing: input/res/Task1/P08-1028.annv3.csv
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'3'", "'51'"]
'57'
'3'
'51'
['57', '3', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S><S sid="195" ssid="7">The resulting vector is sparser but expresses more succinctly the meaning of the predicate-argument structure, and thus allows semantic similarity to be modelled more accurately.</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'", "'138'", "'195'"]
'51'
'138'
'195'
['51', '138', '195']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'51'", "'95'", "'138'"]
'51'
'95'
'138'
['51', '95', '138']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'", "'26'", "'3'"]
'95'
'26'
'3'
['95', '26', '3']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="95" ssid="8">Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'95'", "'0'", "'51'"]
'95'
'0'
'51'
['95', '0', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="53" ssid="1">We formulate semantic composition as a function of two vectors, u and v. We assume that individual words are represented by vectors acquired from a corpus following any of the parametrisations that have been suggested in the literature.1 We briefly note here that a word’s vector typically represents its co-occurrence with neighboring words.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'53'", "'0'"]
'57'
'53'
'0'
['57', '53', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'189'", "'0'", "'51'"]
'189'
'0'
'51'
['189', '0', '51']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="57" ssid="5">Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="0" ssid="0">Vector-based Models of Semantic Composition</S>
original cit marker offset is 0
new cit marker offset is 0



["'57'", "'51'", "'0'"]
'57'
'51'
'0'
['57', '51', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="189" ssid="1">In this paper we presented a general framework for vector-based semantic composition.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'51'", "'189'"]
'190'
'51'
'189'
['190', '51', '189']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="138" ssid="51">Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.</S><S sid="60" ssid="8">To derive specific models from this general framework requires the identification of appropriate constraints to narrow the space of functions being considered.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S>
original cit marker offset is 0
new cit marker offset is 0



["'138'", "'60'", "'26'"]
'138'
'60'
'26'
['138', '60', '26']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="40" ssid="13">Noisy versions of the original vectors can be recovered by means of circular correlation which is the approximate inverse of circular convolution.</S><S sid="38" ssid="11">The projection is defined in terms of circular convolution a mathematical function that compresses the tensor product of two vectors.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'40'", "'38'"]
'190'
'40'
'38'
['190', '40', '38']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="45" ssid="18">Vector addition does not increase the dimensionality of the resulting vector.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'45'", "'51'"]
'190'
'45'
'51'
['190', '45', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'", "'52'", "'3'"]
'26'
'52'
'3'
['26', '52', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'", "'52'", "'3'"]
'26'
'52'
'3'
['26', '52', '3']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="3" ssid="3">Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.</S><S sid="52" ssid="25">Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.</S><S sid="25" ssid="21">We present a general framework for vector-based composition which allows us to consider different classes of models.</S>
original cit marker offset is 0
new cit marker offset is 0



["'3'", "'52'", "'25'"]
'3'
'52'
'25'
['3', '52', '25']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="26" ssid="22">Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'26'", "'51'"]
'190'
'26'
'51'
['190', '26', '51']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="190" ssid="2">We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.</S><S sid="51" ssid="24">Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).</S><S sid="48" ssid="21">The idea is to add not only the vectors representing the predicate and its argument but also the neighbors associated with both of them.</S>
original cit marker offset is 0
new cit marker offset is 0



["'190'", "'51'", "'48'"]
'190'
'51'
'48'
['190', '51', '48']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
dict_values(['Our results show that the multiplicative models are superior and correlate significantly with behavioral data.'])
dict_values(['Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.', 'Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.', 'Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:36', 'F:0']
dict_values(['In this paper we presented a general framework for vector-based semantic composition.'])
dict_values(['Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).', 'Model Parameters Irrespectively of their form, all composition models discussed here are based on a semantic space for representing the meanings of individual words.', 'The resulting vector is sparser but expresses more succinctly the meaning of the predicate-argument structure, and thus allows semantic similarity to be modelled more accurately.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00929', '(95%-conf.int.', '0.00929', '-', '0.00929)']
['system', 'ROUGE-S*', 'Average_P:', '0.28571', '(95%-conf.int.', '0.28571', '-', '0.28571)']
['system', 'ROUGE-S*', 'Average_F:', '0.01800', '(95%-conf.int.', '0.01800', '-', '0.01800)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:861', 'P:28', 'F:8']
dict_values(['We formulate semantic composition as a function of two vectors, u and v. We assume that individual words are represented by vectors acquired from a corpus following any of the parametrisations that have been suggested in the literature.1 We briefly note here that a word&#8217;s vector typically represents its co-occurrence with neighboring words.'])
dict_values(['Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.', 'Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.', 'Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00450', '(95%-conf.int.', '0.00450', '-', '0.00450)']
['system', 'ROUGE-S*', 'Average_P:', '0.00923', '(95%-conf.int.', '0.00923', '-', '0.00923)']
['system', 'ROUGE-S*', 'Average_F:', '0.00605', '(95%-conf.int.', '0.00605', '-', '0.00605)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:325', 'F:3']
dict_values(['The models considered so far assume that components do not &#8216;interfere&#8217; with each other, i.e., that It is also possible to re-introduce the dependence on K into the model of vector composition.'])
dict_values(['Focusing on a single compositional structure, namely intransitive verbs and their subjects, is a good point of departure for studying vector combination.', 'Vector-based Models of Semantic Composition', 'Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00947', '(95%-conf.int.', '0.00947', '-', '0.00947)']
['system', 'ROUGE-S*', 'Average_P:', '0.07576', '(95%-conf.int.', '0.07576', '-', '0.07576)']
['system', 'ROUGE-S*', 'Average_F:', '0.01684', '(95%-conf.int.', '0.01684', '-', '0.01684)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:66', 'F:5']
dict_values(['Let p denote the composition of two vectors u and v, representing a pair of constituents which stand in some syntactic relation R. Let K stand for any additional knowledge or information which is needed to construct the semantics of their composition.'])
dict_values(['In this paper we presented a general framework for vector-based semantic composition.', 'Vector-based Models of Semantic Composition', 'Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).'])
['system', 'ROUGE-S*', 'Average_R:', '0.02116', '(95%-conf.int.', '0.02116', '-', '0.02116)']
['system', 'ROUGE-S*', 'Average_P:', '0.05882', '(95%-conf.int.', '0.05882', '-', '0.05882)']
['system', 'ROUGE-S*', 'Average_F:', '0.03113', '(95%-conf.int.', '0.03113', '-', '0.03113)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:136', 'F:8']
dict_values(['We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.'])
dict_values(['We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.', 'Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).', 'In this paper we presented a general framework for vector-based semantic composition.'])
['system', 'ROUGE-S*', 'Average_R:', '0.07258', '(95%-conf.int.', '0.07258', '-', '0.07258)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.13534', '(95%-conf.int.', '0.13534', '-', '0.13534)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:36', 'F:36']
dict_values(['We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.'])
dict_values(['We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.', 'Noisy versions of the original vectors can be recovered by means of circular correlation which is the approximate inverse of circular convolution.', 'The projection is defined in terms of circular convolution a mathematical function that compresses the tensor product of two vectors.'])
['system', 'ROUGE-S*', 'Average_R:', '0.07258', '(95%-conf.int.', '0.07258', '-', '0.07258)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.13534', '(95%-conf.int.', '0.13534', '-', '0.13534)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:36', 'F:36']
dict_values(['In order to establish an independent measure of sentence similarity, we assembled a set of experimental materials and elicited similarity ratings from human subjects.'])
dict_values(['Specifically, we present both additive and multiplicative models of vector combination and assess their performance on a sentence similarity rating experiment.', 'Under this framework, we introduce novel composition models which we compare empirically against previous work using a rigorous evaluation methodology.', 'Under this framework, we introduce a wide range of composition models which we evaluate empirically on a sentence similarity task.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01345', '(95%-conf.int.', '0.01345', '-', '0.01345)']
['system', 'ROUGE-S*', 'Average_P:', '0.07619', '(95%-conf.int.', '0.07619', '-', '0.07619)']
['system', 'ROUGE-S*', 'Average_F:', '0.02286', '(95%-conf.int.', '0.02286', '-', '0.02286)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:595', 'P:105', 'F:8']
dict_values(['We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.'])
dict_values(['We formulated composition as a function of two vectors and introduced several models based on addition and multiplication.', 'Our work proposes a framework for vector composition which allows the derivation of different types of models and licenses two fundamental composition operations, multiplication and addition (and their combination).', 'The idea is to add not only the vectors representing the predicate and its argument but also the neighbors associated with both of them.'])
['system', 'ROUGE-S*', 'Average_R:', '0.07742', '(95%-conf.int.', '0.07742', '-', '0.07742)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.14371', '(95%-conf.int.', '0.14371', '-', '0.14371)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:465', 'P:36', 'F:36']
0.3895233290052964 0.031161110764876553 0.056585554926827174





input/ref/Task1/W06-3114_swastika.csv
input/res/Task1/W06-3114.annv3.csv
parsing: input/ref/Task1/W06-3114_swastika.csv
<S sid="47" ssid="13">Because of this, we retokenized and lowercased submitted output with our own tokenizer, which was also used to prepare the training and test data.</S>
original cit marker offset is 0
new cit marker offset is 0



['47']
47
['47']
parsed_discourse_facet ['method_citation']
    <S sid="8" ssid="1">The evaluation framework for the shared task is similar to the one used in last year&#8217;s shared task.</S>
original cit marker offset is 0
new cit marker offset is 0



['8']
8
['8']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="11">In addition to the Europarl test set, we also collected 29 editorials from the Project Syndicate website2, which are published in all the four languages of the shared task.</S>
original cit marker offset is 0
new cit marker offset is 0



['18']
18
['18']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="11">In addition to the Europarl test set, we also collected 29 editorials from the Project Syndicate website2, which are published in all the four languages of the shared task.</S>
original cit marker offset is 0
new cit marker offset is 0



['18']
18
['18']
parsed_discourse_facet ['method_citation']
<S sid="144" ssid="37">Our suspicion is that BLEU is very sensitive to jargon, to selecting exactly the right words, and not synonyms that human judges may appreciate as equally good.</S>
original cit marker offset is 0
new cit marker offset is 0



['144']
144
['144']
parsed_discourse_facet ['result_citation']
<S sid="145" ssid="38">This is can not be the only explanation, since the discrepancy still holds, for instance, for out-of-domain French-English, where Systran receives among the best adequacy and fluency scores, but a worse BLEU score than all but one statistical system.</S>
original cit marker offset is 0
new cit marker offset is 0



['145']
145
['145']
parsed_discourse_facet ['result_citation']
    <S sid="103" ssid="19">Given a set of n sentences, we can compute the sample mean x&#65533; and sample variance s2 of the individual sentence judgements xi: The extend of the confidence interval [x&#8722;d, x+df can be computed by d = 1.96 &#183;&#65533;n (6) Pairwise Comparison: As for the automatic evaluation metric, we want to be able to rank different systems against each other, for which we need assessments of statistical significance on the differences between a pair of systems.</S>
original cit marker offset is 0
new cit marker offset is 0



['103']
103
['103']
parsed_discourse_facet ['method_citation']
<S sid="50" ssid="16">Following this method, we repeatedly &#8212; say, 1000 times &#8212; sample sets of sentences from the output of each system, measure their BLEU score, and use these 1000 BLEU scores as basis for estimating a confidence interval.</S>
original cit marker offset is 0
new cit marker offset is 0



['50']
50
['50']
parsed_discourse_facet ['method_citation']
<S sid="68" ssid="7">We asked participants to each judge 200&#8211;300 sentences in terms of fluency and adequacy, the most commonly used manual evaluation metrics.</S>
original cit marker offset is 0
new cit marker offset is 0



['68']
68
['68']
parsed_discourse_facet ['method_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



['170']
170
['170']
parsed_discourse_facet ['method_citation']
<S sid="18" ssid="11">In addition to the Europarl test set, we also collected 29 editorials from the Project Syndicate website2, which are published in all the four languages of the shared task.</S>
original cit marker offset is 0
new cit marker offset is 0



['18']
18
['18']
parsed_discourse_facet ['method_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



['170']
170
['170']
parsed_discourse_facet ['method_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



['170']
170
['170']
parsed_discourse_facet ['method_citation']
<S sid="92" ssid="8">The way judgements are collected, human judges tend to use the scores to rank systems against each other.</S>
original cit marker offset is 0
new cit marker offset is 0



['92']
92
['92']
parsed_discourse_facet ['result_citation']
<S sid="145" ssid="38">This is can not be the only explanation, since the discrepancy still holds, for instance, for out-of-domain French-English, where Systran receives among the best adequacy and fluency scores, but a worse BLEU score than all but one statistical system.</S>
original cit marker offset is 0
new cit marker offset is 0



['145']
145
['145']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W06-3114.annv3.csv
<S sid="153" ssid="46">This is the first time that we organized a large-scale manual evaluation.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="175" ssid="6">Replacing this with an ranked evaluation seems to be more suitable.</S>
original cit marker offset is 0
new cit marker offset is 0



["'153'", "'170'", "'175'"]
'153'
'170'
'175'
['153', '170', '175']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S><S sid="26" ssid="19">Most of these groups follow a phrase-based statistical approach to machine translation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'0'", "'26'"]
'170'
'0'
'26'
['170', '0', '26']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="126" ssid="19">The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'126'"]
'9'
'170'
'126'
['9', '170', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="44" ssid="10">We computed BLEU scores for each submission with a single reference translation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'62'", "'44'"]
'170'
'62'
'44'
['170', '62', '44']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="19" ssid="12">We aligned the texts at a sentence level across all four languages, resulting in 1064 sentence per language.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'19'"]
'9'
'170'
'19'
['9', '170', '19']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="36" ssid="2">The BLEU metric, as all currently proposed automatic metrics, is occasionally suspected to be biased towards statistical systems, especially the phrase-based systems currently in use.</S><S sid="35" ssid="1">For the automatic evaluation, we used BLEU, since it is the most established metric in the field.</S>
original cit marker offset is 0
new cit marker offset is 0



["'62'", "'36'", "'35'"]
'62'
'36'
'35'
['62', '36', '35']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="50" ssid="16">Following this method, we repeatedly — say, 1000 times — sample sets of sentences from the output of each system, measure their BLEU score, and use these 1000 BLEU scores as basis for estimating a confidence interval.</S><S sid="139" ssid="32">Given the closeness of most systems and the wide over-lapping confidence intervals it is hard to make strong statements about the correlation between human judgements and automatic scoring methods such as BLEU.</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S>
original cit marker offset is 0
new cit marker offset is 0



["'50'", "'139'", "'62'"]
'50'
'139'
'62'
['50', '139', '62']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="71" ssid="10">Presenting the output of several system allows the human judge to make more informed judgements, contrasting the quality of the different systems.</S><S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'71'", "'140'", "'0'"]
'71'
'140'
'0'
['71', '140', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="140" ssid="33">We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'"]
'140'
['140']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="52" ssid="18">Pairwise comparison: We can use the same method to assess the statistical significance of one system outperforming another.</S><S sid="102" ssid="18">Confidence Interval: To estimate confidence intervals for the average mean scores for the systems, we use standard significance testing.</S><S sid="50" ssid="16">Following this method, we repeatedly — say, 1000 times — sample sets of sentences from the output of each system, measure their BLEU score, and use these 1000 BLEU scores as basis for estimating a confidence interval.</S>
original cit marker offset is 0
new cit marker offset is 0



["'52'", "'102'", "'50'"]
'52'
'102'
'50'
['52', '102', '50']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="123" ssid="16">For the manual scoring, we can distinguish only half of the systems, both in terms of fluency and adequacy.</S><S sid="84" ssid="23">The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:</S><S sid="80" ssid="19">We collected around 300–400 judgements per judgement type (adequacy or fluency), per system, per language pair.</S>
original cit marker offset is 0
new cit marker offset is 0



["'123'", "'84'", "'80'"]
'123'
'84'
'80'
['123', '84', '80']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="11" ssid="4">To lower the barrier of entrance to the competition, we provided a complete baseline MT system, along with data resources.</S><S sid="117" ssid="10">For instance: if 10 systems participate, and one system does better than 3 others, worse then 2, and is not significant different from the remaining 4, its rank is in the interval 3–7.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S>
original cit marker offset is 0
new cit marker offset is 0



["'11'", "'117'", "'170'"]
'11'
'117'
'170'
['11', '117', '170']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="38" ssid="4">The BLEU score has been shown to correlate well with human judgement, when statistical machine translation systems are compared (Doddington, 2002; Przybocki, 2004; Li, 2005).</S><S sid="62" ssid="1">While automatic measures are an invaluable tool for the day-to-day development of machine translation systems, they are only a imperfect substitute for human assessment of translation quality, or as the acronym BLEU puts it, a bilingual evaluation understudy.</S><S sid="71" ssid="10">Presenting the output of several system allows the human judge to make more informed judgements, contrasting the quality of the different systems.</S>
original cit marker offset is 0
new cit marker offset is 0



["'38'", "'62'", "'71'"]
'38'
'62'
'71'
['38', '62', '71']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="9" ssid="2">Training and testing is based on the Europarl corpus.</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="126" ssid="19">The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'", "'170'", "'126'"]
'9'
'170'
'126'
['9', '170', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="36">For instance, for out-ofdomain English-French, Systran has the best BLEU and manual scores.</S><S sid="173" ssid="4">The bias of automatic methods in favor of statistical systems seems to be less pronounced on out-of-domain test data.</S><S sid="58" ssid="24">We divide up each test set into blocks of 20 sentences (100 blocks for the in-domain test set, 53 blocks for the out-of-domain test set), check for each block, if one system has a higher BLEU score than the other, and then use the sign test.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'173'", "'58'"]
'143'
'173'
'58'
['143', '173', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S><S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="64" ssid="3">Also, the argument has been made that machine translation performance should be evaluated via task-based evaluation metrics, i.e. how much it assists performing a useful task, such as supporting human translators or aiding the analysis of texts.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'170'", "'64'"]
'0'
'170'
'64'
['0', '170', '64']
parsed_discourse_facet ['hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="68" ssid="7">We asked participants to each judge 200–300 sentences in terms of fluency and adequacy, the most commonly used manual evaluation metrics.</S><S sid="84" ssid="23">The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'68'", "'84'"]
'170'
'68'
'84'
['170', '68', '84']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="170" ssid="1">We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.</S><S sid="44" ssid="10">We computed BLEU scores for each submission with a single reference translation.</S><S sid="0" ssid="0">Manual and Automatic Evaluation of Machine Translation between European Languages</S>
original cit marker offset is 0
new cit marker offset is 0



["'170'", "'44'", "'0'"]
'170'
'44'
'0'
['170', '44', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
dict_values(['Because of this, we retokenized and lowercased submitted output with our own tokenizer, which was also used to prepare the training and test data.'])
dict_values(['This is the first time that we organized a large-scale manual evaluation.', 'We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'Replacing this with an ranked evaluation seems to be more suitable.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:231', 'P:36', 'F:0']
dict_values(['The evaluation framework for the shared task is similar to the one used in last year&#8217;s shared task.'])
dict_values(['We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'Manual and Automatic Evaluation of Machine Translation between European Languages', 'Most of these groups follow a phrase-based statistical approach to machine translation.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:45', 'F:0']
dict_values(['In addition to the Europarl test set, we also collected 29 editorials from the Project Syndicate website2, which are published in all the four languages of the shared task.'])
dict_values(['Training and testing is based on the Europarl corpus.', 'We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'The test set included 2000 sentences from the Europarl corpus, but also 1064 sentences out-ofdomain test data.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01323', '(95%-conf.int.', '0.01323', '-', '0.01323)']
['system', 'ROUGE-S*', 'Average_P:', '0.05495', '(95%-conf.int.', '0.05495', '-', '0.05495)']
['system', 'ROUGE-S*', 'Average_F:', '0.02132', '(95%-conf.int.', '0.02132', '-', '0.02132)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:91', 'F:5']
dict_values(['In addition to the Europarl test set, we also collected 29 editorials from the Project Syndicate website2, which are published in all the four languages of the shared task.'])
dict_values(['Training and testing is based on the Europarl corpus.', 'We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'We aligned the texts at a sentence level across all four languages, resulting in 1064 sentence per language.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00667', '(95%-conf.int.', '0.00667', '-', '0.00667)']
['system', 'ROUGE-S*', 'Average_P:', '0.02198', '(95%-conf.int.', '0.02198', '-', '0.02198)']
['system', 'ROUGE-S*', 'Average_F:', '0.01023', '(95%-conf.int.', '0.01023', '-', '0.01023)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:91', 'F:2']
dict_values(['Given a set of n sentences, we can compute the sample mean x&#65533; and sample variance s2 of the individual sentence judgements xi: The extend of the confidence interval [x&#8722;d, x+df can be computed by d = 1.96 &#183;&#65533;n (6) Pairwise Comparison: As for the automatic evaluation metric, we want to be able to rank different systems against each other, for which we need assessments of statistical significance on the differences between a pair of systems.'])
dict_values(['We confirm the finding by Callison-Burch et al. (2006) that the rule-based system of Systran is not adequately appreciated by BLEU.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:78', 'P:630', 'F:0']
dict_values(['We asked participants to each judge 200&#8211;300 sentences in terms of fluency and adequacy, the most commonly used manual evaluation metrics.'])
dict_values(['For the manual scoring, we can distinguish only half of the systems, both in terms of fluency and adequacy.', 'The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:', 'We collected around 300–400 judgements per judgement type (adequacy or fluency), per system, per language pair.'])
['system', 'ROUGE-S*', 'Average_R:', '0.02279', '(95%-conf.int.', '0.02279', '-', '0.02279)']
['system', 'ROUGE-S*', 'Average_P:', '0.08791', '(95%-conf.int.', '0.08791', '-', '0.08791)']
['system', 'ROUGE-S*', 'Average_F:', '0.03620', '(95%-conf.int.', '0.03620', '-', '0.03620)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:91', 'F:8']
dict_values(['We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.'])
dict_values(['To lower the barrier of entrance to the competition, we provided a complete baseline MT system, along with data resources.', 'For instance: if 10 systems participate, and one system does better than 3 others, worse then 2, and is not significant different from the remaining 4, its rank is in the interval 3–7.', 'We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.'])
['system', 'ROUGE-S*', 'Average_R:', '0.08258', '(95%-conf.int.', '0.08258', '-', '0.08258)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.15257', '(95%-conf.int.', '0.15257', '-', '0.15257)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:55', 'F:55']
dict_values(['We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.'])
dict_values(['For instance, for out-ofdomain English-French, Systran has the best BLEU and manual scores.', 'The bias of automatic methods in favor of statistical systems seems to be less pronounced on out-of-domain test data.', 'We divide up each test set into blocks of 20 sentences (100 blocks for the in-domain test set, 53 blocks for the out-of-domain test set), check for each block, if one system has a higher BLEU score than the other, and then use the sign test.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00116', '(95%-conf.int.', '0.00116', '-', '0.00116)']
['system', 'ROUGE-S*', 'Average_P:', '0.01818', '(95%-conf.int.', '0.01818', '-', '0.01818)']
['system', 'ROUGE-S*', 'Average_F:', '0.00218', '(95%-conf.int.', '0.00218', '-', '0.00218)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:861', 'P:55', 'F:1']
dict_values(['We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.'])
dict_values(['Manual and Automatic Evaluation of Machine Translation between European Languages', 'We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'Also, the argument has been made that machine translation performance should be evaluated via task-based evaluation metrics, i.e. how much it assists performing a useful task, such as supporting human translators or aiding the analysis of texts.'])
['system', 'ROUGE-S*', 'Average_R:', '0.08258', '(95%-conf.int.', '0.08258', '-', '0.08258)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.15257', '(95%-conf.int.', '0.15257', '-', '0.15257)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:55', 'F:55']
dict_values(['The way judgements are collected, human judges tend to use the scores to rank systems against each other.'])
dict_values(['We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'We asked participants to each judge 200–300 sentences in terms of fluency and adequacy, the most commonly used manual evaluation metrics.', 'The human judges were presented with the following definition of adequacy and fluency, but no additional instructions:'])
['system', 'ROUGE-S*', 'Average_R:', '0.00202', '(95%-conf.int.', '0.00202', '-', '0.00202)']
['system', 'ROUGE-S*', 'Average_P:', '0.03571', '(95%-conf.int.', '0.03571', '-', '0.03571)']
['system', 'ROUGE-S*', 'Average_F:', '0.00382', '(95%-conf.int.', '0.00382', '-', '0.00382)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:28', 'F:1']
dict_values(['This is can not be the only explanation, since the discrepancy still holds, for instance, for out-of-domain French-English, where Systran receives among the best adequacy and fluency scores, but a worse BLEU score than all but one statistical system.'])
dict_values(['We carried out an extensive manual and automatic evaluation of machine translation performance on European language pairs.', 'We computed BLEU scores for each submission with a single reference translation.', 'Manual and Automatic Evaluation of Machine Translation between European Languages'])
['system', 'ROUGE-S*', 'Average_R:', '0.00333', '(95%-conf.int.', '0.00333', '-', '0.00333)']
['system', 'ROUGE-S*', 'Average_P:', '0.00735', '(95%-conf.int.', '0.00735', '-', '0.00735)']
['system', 'ROUGE-S*', 'Average_F:', '0.00459', '(95%-conf.int.', '0.00459', '-', '0.00459)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:136', 'F:1']
0.2023709072511736 0.019487272550115703 0.034861817864892564





input/ref/Task1/W99-0613_vardha.csv
input/res/Task1/W99-0613.annv3.csv
parsing: input/ref/Task1/W99-0613_vardha.csv
    <S sid="9" ssid="3">This paper discusses the use of unlabeled examples for the problem of named entity classification.</S>
original cit marker offset is 0
new cit marker offset is 0



["'9'"]
'9'
['9']
parsed_discourse_facet ['method_citation']
    <S sid="35" ssid="29">AdaBoost finds a weighted combination of simple (weak) classifiers, where the weights are chosen to minimize a function that bounds the classification error on a set of training examples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'35'"]
'35'
['35']
parsed_discourse_facet ['method_citation']
    <S sid="134" ssid="1">This section describes an algorithm based on boosting algorithms, which were previously developed for supervised machine learning problems.</S>
original cit marker offset is 0
new cit marker offset is 0



["'134'"]
'134'
['134']
parsed_discourse_facet ['method_citation']
    <S sid="236" ssid="3">We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.</S>
original cit marker offset is 0
new cit marker offset is 0



["'236'"]
'236'
['236']
parsed_discourse_facet ['method_citation']
    <S sid="8" ssid="2">Recent results (e.g., (Yarowsky 95; Brill 95; Blum and Mitchell 98)) have suggested that unlabeled data can be used quite profitably in reducing the need for supervision.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
    <S sid="42" ssid="36">(Riloff and Shepherd 97) describe a bootstrapping approach for acquiring nouns in particular categories (such as &amp;quot;vehicle&amp;quot; or &amp;quot;weapon&amp;quot; categories).</S>
original cit marker offset is 0
new cit marker offset is 0



["'42'"]
'42'
['42']
parsed_discourse_facet ['method_citation']
    <S sid="236" ssid="3">We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.</S>
original cit marker offset is 0
new cit marker offset is 0



["'236'"]
'236'
['236']
parsed_discourse_facet ['method_citation']
    <S sid="222" ssid="1">The Expectation Maximization (EM) algorithm (Dempster, Laird and Rubin 77) is a common approach for unsupervised training; in this section we describe its application to the named entity problem.</S>
original cit marker offset is 0
new cit marker offset is 0



["'222'"]
'222'
['222']
parsed_discourse_facet ['method_citation']
    <S sid="30" ssid="24">(Blum and Mitchell 98) offer a promising formulation of redundancy, also prove some results about how the use of can help classification, and suggest an objective function when training with unlabeled examples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'30'"]
'30'
['30']
parsed_discourse_facet ['method_citation']
 <S sid="26" ssid="20">We present two algorithms.</S>
original cit marker offset is 0
new cit marker offset is 0



["'26'"]
'26'
['26']
parsed_discourse_facet ['method_citation']
    <S sid="7" ssid="1">Many statistical or machine-learning approaches for natural language problems require a relatively large amount of supervision, in the form of labeled training examples.</S>
original cit marker offset is 0
new cit marker offset is 0



["'7'"]
'7'
['7']
parsed_discourse_facet ['method_citation']
    <S sid="32" ssid="26">The algorithm can be viewed as heuristically optimizing an objective function suggested by (Blum and Mitchell 98); empirically it is shown to be quite successful in optimizing this criterion.</S>
original cit marker offset is 0
new cit marker offset is 0



["'32'"]
'32'
['32']
parsed_discourse_facet ['method_citation']
    <S sid="47" ssid="1">971,746 sentences of New York Times text were parsed using the parser of (Collins 96).1 Word sequences that met the following criteria were then extracted as named entity examples: whose head is a singular noun (tagged NN).</S>
original cit marker offset is 0
new cit marker offset is 0



["'47'"]
'47'
['47']
parsed_discourse_facet ['method_citation']
    <S sid="127" ssid="60">The DL-CoTrain algorithm can be motivated as being a greedy method of satisfying the above 2 constraints.</S>
original cit marker offset is 0
new cit marker offset is 0



["'127'"]
'127'
['127']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/W99-0613.annv3.csv
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'133'", "'137'"]
'0'
'133'
'137'
['0', '133', '137']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="174" ssid="41">The two new terms force the two classifiers to agree, as much as possible, on the unlabeled examples.</S><S sid="248" ssid="15">With each iteration more examples are assigned labels by both classifiers, while a high level of agreement (> 94%) is maintained between them.</S><S sid="33" ssid="27">The second algorithm builds on a boosting algorithm called AdaBoost (Freund and Schapire 97; Schapire and Singer 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'248'", "'33'"]
'174'
'248'
'33'
['174', '248', '33']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S><S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="220" ssid="87">(7), such as the likelihood function used in maximum-entropy problems and other generalized additive models (Lafferty 99).</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'", "'133'", "'220'"]
'79'
'133'
'220'
['79', '133', '220']
parsed_discourse_facet ['method_citation', 'implication_citation']
<S sid="40" ssid="34">(Berland and Charniak 99) describe a method for extracting parts of objects from wholes (e.g., &quot;speedometer&quot; from &quot;car&quot;) from a large corpus using hand-crafted patterns.</S><S sid="41" ssid="35">(Hearst 92) describes a method for extracting hyponyms from a corpus (pairs of words in &quot;isa&quot; relations).</S><S sid="79" ssid="12">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'", "'41'", "'79'"]
'40'
'41'
'79'
['40', '41', '79']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="19" ssid="13">Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.</S><S sid="11" ssid="5">For example, a good classifier would identify Mrs. Frank as a person, Steptoe & Johnson as a company, and Honduras as a location.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'19'", "'11'"]
'0'
'19'
'11'
['0', '19', '11']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="137" ssid="4">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S><S sid="250" ssid="1">Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.</S><S sid="179" ssid="46">The algorithm builds two classifiers in parallel from labeled and unlabeled data.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'", "'250'", "'179'"]
'137'
'250'
'179'
['137', '250', '179']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="19" ssid="13">Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.</S><S sid="236" ssid="3">We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'19'", "'236'"]
'0'
'19'
'236'
['0', '19', '236']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="16" ssid="10">Supervised methods have been applied quite successfully to the full MUC named-entity task (Bikel et al. 97).</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="133" ssid="66">Fort= 1,...,T:</S>
original cit marker offset is 0
new cit marker offset is 0



["'16'", "'0'", "'133'"]
'16'
'0'
'133'
['16', '0', '133']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="253" ssid="4">We are currently exploring other methods that employ similar ideas and their formal properties.</S><S sid="133" ssid="66">Fort= 1,...,T:</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'253'", "'133'"]
'0'
'253'
'133'
['0', '253', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="251" ssid="2">In addition to a heuristic based on decision list learning, we also presented a boosting-like framework that builds on ideas from (Blum and Mitchell 98).</S><S sid="68" ssid="1">The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).</S><S sid="31" ssid="25">Our first algorithm is similar to Yarowsky's, but with some important modifications motivated by (Blum and Mitchell 98).</S>
original cit marker offset is 0
new cit marker offset is 0



["'251'", "'68'", "'31'"]
'251'
'68'
'31'
['251', '68', '31']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="28" ssid="22">(Yarowsky 95) describes an algorithm for word-sense disambiguation that exploits redundancy in contextual features, and gives impressive performance.</S><S sid="39" ssid="33">(Brin 98) ,describes a system for extracting (author, book-title) pairs from the World Wide Web using an approach that bootstraps from an initial seed set of examples.</S><S sid="254" ssid="5">Future work should also extend the approach to build a complete named entity extractor - a method that pulls proper names from text and then classifies them.</S>
original cit marker offset is 0
new cit marker offset is 0



["'28'", "'39'", "'254'"]
'28'
'39'
'254'
['28', '39', '254']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="85" ssid="18">(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="77" ssid="10">In this paper k = 3 (the three labels are person, organization, location), and we set a = 0.1.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'", "'0'", "'77'"]
'85'
'0'
'77'
['85', '0', '77']
parsed_discourse_facet ['method_citation', 'hypothesis_citation']
<S sid="133" ssid="66">Fort= 1,...,T:</S><S sid="0" ssid="0">Unsupervised Models for Named Entity Classification Collins</S><S sid="68" ssid="1">The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).</S>
original cit marker offset is 0
new cit marker offset is 0



["'133'", "'0'", "'68'"]
'133'
'0'
'68'
['133', '0', '68']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['AdaBoost finds a weighted combination of simple (weak) classifiers, where the weights are chosen to minimize a function that bounds the classification error on a set of training examples.'])
dict_values(['The two new terms force the two classifiers to agree, as much as possible, on the unlabeled examples.', 'With each iteration more examples are assigned labels by both classifiers, while a high level of agreement (> 94%) is maintained between them.', 'The second algorithm builds on a boosting algorithm called AdaBoost (Freund and Schapire 97; Schapire and Singer 98).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00265', '(95%-conf.int.', '0.00265', '-', '0.00265)']
['system', 'ROUGE-S*', 'Average_P:', '0.00735', '(95%-conf.int.', '0.00735', '-', '0.00735)']
['system', 'ROUGE-S*', 'Average_F:', '0.00389', '(95%-conf.int.', '0.00389', '-', '0.00389)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:136', 'F:1']
dict_values(['This section describes an algorithm based on boosting algorithms, which were previously developed for supervised machine learning problems.'])
dict_values(['2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).', 'Fort= 1,...,T:', '(7), such as the likelihood function used in maximum-entropy problems and other generalized additive models (Lafferty 99).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00690', '(95%-conf.int.', '0.00690', '-', '0.00690)']
['system', 'ROUGE-S*', 'Average_P:', '0.04545', '(95%-conf.int.', '0.04545', '-', '0.04545)']
['system', 'ROUGE-S*', 'Average_F:', '0.01198', '(95%-conf.int.', '0.01198', '-', '0.01198)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:66', 'F:3']
dict_values(['We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.'])
dict_values(['Unsupervised Models for Named Entity Classification Collins', 'Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.', 'For example, a good classifier would identify Mrs. Frank as a person, Steptoe & Johnson as a company, and Honduras as a location.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:45', 'F:0']
dict_values(['Recent results (e.g., (Yarowsky 95; Brill 95; Blum and Mitchell 98)) have suggested that unlabeled data can be used quite profitably in reducing the need for supervision.'])
dict_values(['The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.', 'Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.', 'The algorithm builds two classifiers in parallel from labeled and unlabeled data.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01709', '(95%-conf.int.', '0.01709', '-', '0.01709)']
['system', 'ROUGE-S*', 'Average_P:', '0.05714', '(95%-conf.int.', '0.05714', '-', '0.05714)']
['system', 'ROUGE-S*', 'Average_F:', '0.02632', '(95%-conf.int.', '0.02632', '-', '0.02632)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:351', 'P:105', 'F:6']
dict_values(['We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.'])
dict_values(['Unsupervised Models for Named Entity Classification Collins', 'Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.', 'We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.'])
['system', 'ROUGE-S*', 'Average_R:', '0.13846', '(95%-conf.int.', '0.13846', '-', '0.13846)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.24324', '(95%-conf.int.', '0.24324', '-', '0.24324)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:325', 'P:45', 'F:45']
dict_values(['The Expectation Maximization (EM) algorithm (Dempster, Laird and Rubin 77) is a common approach for unsupervised training; in this section we describe its application to the named entity problem.'])
dict_values(['Supervised methods have been applied quite successfully to the full MUC named-entity task (Bikel et al. 97).', 'Unsupervised Models for Named Entity Classification Collins', 'Fort= 1,...,T:'])
['system', 'ROUGE-S*', 'Average_R:', '0.01579', '(95%-conf.int.', '0.01579', '-', '0.01579)']
['system', 'ROUGE-S*', 'Average_P:', '0.01961', '(95%-conf.int.', '0.01961', '-', '0.01961)']
['system', 'ROUGE-S*', 'Average_F:', '0.01749', '(95%-conf.int.', '0.01749', '-', '0.01749)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:190', 'P:153', 'F:3']
dict_values(['We present two algorithms.'])
dict_values(['In addition to a heuristic based on decision list learning, we also presented a boosting-like framework that builds on ideas from (Blum and Mitchell 98).', 'The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).', "Our first algorithm is similar to Yarowsky's, but with some important modifications motivated by (Blum and Mitchell 98)."])
['system', 'ROUGE-S*', 'Average_R:', '0.00178', '(95%-conf.int.', '0.00178', '-', '0.00178)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00356', '(95%-conf.int.', '0.00356', '-', '0.00356)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:1', 'F:1']
dict_values(['The algorithm can be viewed as heuristically optimizing an objective function suggested by (Blum and Mitchell 98); empirically it is shown to be quite successful in optimizing this criterion.'])
dict_values(['(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.', 'Unsupervised Models for Named Entity Classification Collins', 'In this paper k = 3 (the three labels are person, organization, location), and we set a = 0.1.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1275', 'P:105', 'F:0']
dict_values(['The DL-CoTrain algorithm can be motivated as being a greedy method of satisfying the above 2 constraints.'])
dict_values(['Fort= 1,...,T:', 'Unsupervised Models for Named Entity Classification Collins', 'The first unsupervised algorithm we describe is based on the decision list method from (Yarowsky 95).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00654', '(95%-conf.int.', '0.00654', '-', '0.00654)']
['system', 'ROUGE-S*', 'Average_P:', '0.02778', '(95%-conf.int.', '0.02778', '-', '0.02778)']
['system', 'ROUGE-S*', 'Average_F:', '0.01058', '(95%-conf.int.', '0.01058', '-', '0.01058)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:153', 'P:36', 'F:1']
0.239703330669963 0.021023333099740745 0.0352288884974568





input/ref/Task1/A00-2018_akanksha.csv
input/res/Task1/A00-2018.annv3.csv
parsing: input/ref/Task1/A00-2018_akanksha.csv
<S sid="90" ssid="1">We created a parser based upon the maximumentropy-inspired model of the last section, smoothed using standard deleted interpolation.</S>
    <S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'90'", "'91'"]
'90'
'91'
['90', '91']
parsed_discourse_facet ['method_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length &lt; 40, and 89.5% for sentences of length &lt; 100, when trained and tested on the previously established [5,9,10,15,17] &amp;quot;standard&amp;quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'"]
'5'
['5']
parsed_discourse_facet ['method_citation']
<S sid="90" ssid="1">We created a parser based upon the maximumentropy-inspired model of the last section, smoothed using standard deleted interpolation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'90'"]
'90'
['90']
parsed_discourse_facet ['method_citation']
<S sid="48" ssid="17">Maximum-entropy models have two benefits for a parser builder.</S>
    <S sid="49" ssid="18">First, as already implicit in our discussion, factoring the probability computation into a sequence of values corresponding to various &amp;quot;features&amp;quot; suggests that the probability model should be easily changeable &#8212; just change the set of features used.</S>
    <S sid="51" ssid="20">Second, and this is a point we have not yet mentioned, the features used in these models need have no particular independence of one another.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'49'", "'51'"]
'48'
'49'
'51'
['48', '49', '51']
parsed_discourse_facet ['method_citation']
<S sid="90" ssid="1">We created a parser based upon the maximumentropy-inspired model of the last section, smoothed using standard deleted interpolation.</S>
    <S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
    <S sid="92" ssid="3">For runs with the generative model based upon Markov grammar statistics, the first pass uses the same statistics, but conditioned only on standard PCFG information.</S>
    <S sid="93" ssid="4">This allows the second pass to see expansions not present in the training corpus.</S>
    <S sid="94" ssid="5">We use the gathered statistics for all observed words, even those with very low counts, though obviously our deleted interpolation smoothing gives less emphasis to observed probabilities for rare words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'90'", "'91'", "'92'", "'93'", "'94'"]
'90'
'91'
'92'
'93'
'94'
['90', '91', '92', '93', '94']
parsed_discourse_facet ['method_citation']
�NA�
original cit marker offset is 0
new cit marker offset is 0



['0']
0
['0']
Error in Reference Offset
<S sid="90" ssid="1">We created a parser based upon the maximumentropy-inspired model of the last section, smoothed using standard deleted interpolation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'90'"]
'90'
['90']
parsed_discourse_facet ['method_citation']
<S sid="90" ssid="1">We created a parser based upon the maximumentropy-inspired model of the last section, smoothed using standard deleted interpolation.</S>
    <S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
    <S sid="92" ssid="3">For runs with the generative model based upon Markov grammar statistics, the first pass uses the same statistics, but conditioned only on standard PCFG information.</S>
    <S sid="93" ssid="4">This allows the second pass to see expansions not present in the training corpus.</S>
    <S sid="94" ssid="5">We use the gathered statistics for all observed words, even those with very low counts, though obviously our deleted interpolation smoothing gives less emphasis to observed probabilities for rare words.</S>
original cit marker offset is 0
new cit marker offset is 0



["'90'", "'91'", "'92'", "'93'", "'94'"]
'90'
'91'
'92'
'93'
'94'
['90', '91', '92', '93', '94']
parsed_discourse_facet ['method_citation']
<S sid="38" ssid="7">To compute a probability in a log-linear model one first defines a set of &amp;quot;features&amp;quot;, functions from the space of configurations over which one is trying to compute probabilities to integers that denote the number of times some pattern occurs in the input.</S>
    <S sid="39" ssid="8">In our work we assume that any feature can occur at most once, so features are boolean-valued: 0 if the pattern does not occur, 1 if it does.</S>
    <S sid="40" ssid="9">In the parser we further assume that features are chosen from certain feature schemata and that every feature is a boolean conjunction of sub-features.</S>
original cit marker offset is 0
new cit marker offset is 0



["'38'", "'39'", "'40'"]
'38'
'39'
'40'
['38', '39', '40']
parsed_discourse_facet ['method_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length &lt; 40 and 89.5% on sentences of length &lt; 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'"]
'174'
['174']
parsed_discourse_facet ['result_citation']
<S sid="85" ssid="54">As partition-function calculation is typically the major on-line computational problem for maximum-entropy models, this simplifies the model significantly.</S>
original cit marker offset is 0
new cit marker offset is 0



["'85'"]
'85'
['85']
parsed_discourse_facet ['method_citation']
<S sid="63" ssid="32">As we discuss in more detail in Section 5, several different features in the context surrounding c are useful to include in H: the label, head pre-terminal and head of the parent of c (denoted as lp, tp, hp), the label of c's left sibling (lb for &amp;quot;before&amp;quot;), and the label of the grandparent of c (la).</S><S sid="143" ssid="34">The first is simply that if we first guess the pre-terminal, when we go to guess the head the first thing we can condition upon is the pre-terminal, i.e., we compute p(h I t).</S><S sid="146" ssid="37">The second major reason why first guessing the pre-terminal makes so much difference is that it can be used when backing off the lexical head in computing the probability of the rule expansion.</S>
original cit marker offset is 0
new cit marker offset is 0



["'63'", "'143'", "'146'"]
'63'
'143'
'146'
['63', '143', '146']
parsed_discourse_facet ['method_citation']
???<S sid="78" ssid="47">With some prior knowledge, non-zero values can greatly speed up this process because fewer iterations are required for convergence.</S>                                        <S sid="79" ssid="48">We comment on this because in our example we can substantially speed up the process by choosing values picked so that, when the maximum-entropy equation is expressed in the form of Equation 4, the gi have as their initial values the values of the corresponding terms in Equation 7.</S>
original cit marker offset is 0
new cit marker offset is 0



["'78'", "'79'"]
'78'
'79'
['78', '79']
parsed_discourse_facet ['method_citation']
<S sid="90" ssid="1">We created a parser based upon the maximumentropy-inspired model of the last section, smoothed using standard deleted interpolation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'90'"]
'90'
['90']
parsed_discourse_facet ['method_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length &lt; 40 and 89.5% on sentences of length &lt; 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'"]
'174'
['174']
parsed_discourse_facet ['result_citation']
parsing: input/res/Task1/A00-2018.annv3.csv
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'5'", "'174'"]
'130'
'5'
'174'
['130', '5', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'130'", "'5'"]
'174'
'130'
'5'
['174', '130', '5']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'91'", "'174'"]
'130'
'91'
'174'
['130', '91', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'1'", "'174'"]
'130'
'1'
'174'
['130', '1', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="7" ssid="3">Following [5,10], our parser is based upon a probabilistic generative model.</S><S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'7'", "'91'"]
'5'
'7'
'91'
['5', '7', '91']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'5'", "'1'"]
'174'
'5'
'1'
['174', '5', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="7" ssid="3">Following [5,10], our parser is based upon a probabilistic generative model.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'7'", "'130'"]
'5'
'7'
'130'
['5', '7', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'5'", "'1'"]
'174'
'5'
'1'
['174', '5', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="114" ssid="5">That parser, as stated in Figure 1, achieves an average precision/recall of 87.5.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'174'", "'114'"]
'130'
'174'
'114'
['130', '174', '114']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="141" ssid="32">(For example, part-ofspeech tagging using the most probable preterminal for each word is 90% accurate [8].)</S><S sid="125" ssid="16">For example, the final version of our system achieves an average precision/recall of 90.1% on the test corpus but an average precision/recall of only 89.7% on the development corpus.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'141'", "'125'", "'174'"]
'141'
'125'
'174'
['141', '125', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'1'"]
'5'
'174'
'1'
['5', '174', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="115" ssid="6">As noted in [5], that system is based upon a &quot;tree-bank grammar&quot; - a grammar read directly off the training corpus.</S><S sid="129" ssid="20">It makes no use of special maximum-entropyinspired features (though their presence made it much easier to perform these experiments), it does not guess the pre-terminal before guessing the lexical head, and it uses a tree-bank grammar rather than a Markov grammar.</S><S sid="28" ssid="17">More generally, one can condition on the m previously generated labels, thereby obtaining an mth-order Markov grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["'115'", "'129'", "'28'"]
'115'
'129'
'28'
['115', '129', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'130'"]
'5'
'174'
'130'
['5', '174', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'130'"]
'5'
'174'
'130'
['5', '174', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="180" ssid="7">From our perspective, perhaps the two most important numbers to come out of this research are the overall error reduction of 13% over the results in [9] and the intermediateresult improvement of nearly 2% on labeled precision/recall due to the simple idea of guessing the head's pre-terminal before guessing the head.</S><S sid="184" ssid="11">The first is the slight, but important, improvement achieved by using this model over conventional deleted interpolation, as indicated in Figure 2.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'180'", "'184'", "'5'"]
'180'
'184'
'5'
['180', '184', '5']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
dict_values(['We created a parser based upon the maximumentropy-inspired model of the last section, smoothed using standard deleted interpolation.', 'As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.'])
dict_values(['This parser achieves an average precision/recall of 86.2%.', 'We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.02333', '(95%-conf.int.', '0.02333', '-', '0.02333)']
['system', 'ROUGE-S*', 'Average_P:', '0.01248', '(95%-conf.int.', '0.01248', '-', '0.01248)']
['system', 'ROUGE-S*', 'Average_F:', '0.01626', '(95%-conf.int.', '0.01626', '-', '0.01626)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:561', 'F:7']
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length &lt; 40, and 89.5% for sentences of length &lt; 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.'])
dict_values(['We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.27143', '(95%-conf.int.', '0.27143', '-', '0.27143)']
['system', 'ROUGE-S*', 'Average_P:', '0.06025', '(95%-conf.int.', '0.06025', '-', '0.06025)']
['system', 'ROUGE-S*', 'Average_F:', '0.09862', '(95%-conf.int.', '0.09862', '-', '0.09862)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:210', 'P:946', 'F:57']
dict_values(['We created a parser based upon the maximumentropy-inspired model of the last section, smoothed using standard deleted interpolation.'])
dict_values(['This parser achieves an average precision/recall of 86.2%.', 'As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.', 'We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00408', '(95%-conf.int.', '0.00408', '-', '0.00408)']
['system', 'ROUGE-S*', 'Average_P:', '0.07576', '(95%-conf.int.', '0.07576', '-', '0.07576)']
['system', 'ROUGE-S*', 'Average_F:', '0.00775', '(95%-conf.int.', '0.00775', '-', '0.00775)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1225', 'P:66', 'F:5']
dict_values(['Maximum-entropy models have two benefits for a parser builder.', 'First, as already implicit in our discussion, factoring the probability computation into a sequence of values corresponding to various &quot;features&quot; suggests that the probability model should be easily changeable &#8212; just change the set of features used.', 'Second, and this is a point we have not yet mentioned, the features used in these models need have no particular independence of one another.'])
dict_values(['This parser achieves an average precision/recall of 86.2%.', 'We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.', 'We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00347', '(95%-conf.int.', '0.00347', '-', '0.00347)']
['system', 'ROUGE-S*', 'Average_P:', '0.01505', '(95%-conf.int.', '0.01505', '-', '0.01505)']
['system', 'ROUGE-S*', 'Average_F:', '0.00564', '(95%-conf.int.', '0.00564', '-', '0.00564)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2016', 'P:465', 'F:7']
dict_values(['We created a parser based upon the maximumentropy-inspired model of the last section, smoothed using standard deleted interpolation.', 'As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.', 'For runs with the generative model based upon Markov grammar statistics, the first pass uses the same statistics, but conditioned only on standard PCFG information.', 'This allows the second pass to see expansions not present in the training corpus.', 'We use the gathered statistics for all observed words, even those with very low counts, though obviously our deleted interpolation smoothing gives less emphasis to observed probabilities for rare words.'])
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.01307', '(95%-conf.int.', '0.01307', '-', '0.01307)']
['system', 'ROUGE-S*', 'Average_P:', '0.00090', '(95%-conf.int.', '0.00090', '-', '0.00090)']
['system', 'ROUGE-S*', 'Average_F:', '0.00169', '(95%-conf.int.', '0.00169', '-', '0.00169)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:153', 'P:2211', 'F:2']
no Reference Text in gold A00-2018
dict_values(['We created a parser based upon the maximumentropy-inspired model of the last section, smoothed using standard deleted interpolation.'])
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:153', 'P:66', 'F:0']
dict_values(['To compute a probability in a log-linear model one first defines a set of &quot;features&quot;, functions from the space of configurations over which one is trying to compute probabilities to integers that denote the number of times some pattern occurs in the input.', 'In our work we assume that any feature can occur at most once, so features are boolean-valued: 0 if the pattern does not occur, 1 if it does.', 'In the parser we further assume that features are chosen from certain feature schemata and that every feature is a boolean conjunction of sub-features.'])
dict_values(['This parser achieves an average precision/recall of 86.2%.', 'We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00265', '(95%-conf.int.', '0.00265', '-', '0.00265)']
['system', 'ROUGE-S*', 'Average_P:', '0.00106', '(95%-conf.int.', '0.00106', '-', '0.00106)']
['system', 'ROUGE-S*', 'Average_F:', '0.00151', '(95%-conf.int.', '0.00151', '-', '0.00151)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:946', 'F:1']
dict_values(['As partition-function calculation is typically the major on-line computational problem for maximum-entropy models, this simplifies the model significantly.'])
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:91', 'F:0']
dict_values(['With some prior knowledge, non-zero values can greatly speed up this process because fewer iterations are required for convergence.', 'We comment on this because in our example we can substantially speed up the process by choosing values picked so that, when the maximum-entropy equation is expressed in the form of Equation 4, the gi have as their initial values the values of the corresponding terms in Equation 7.'])
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:153', 'P:465', 'F:0']
dict_values(['We created a parser based upon the maximumentropy-inspired model of the last section, smoothed using standard deleted interpolation.'])
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:153', 'P:66', 'F:0']
dict_values(['We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length &lt; 40 and 89.5% on sentences of length &lt; 100.'])
dict_values(["From our perspective, perhaps the two most important numbers to come out of this research are the overall error reduction of 13% over the results in [9] and the intermediateresult improvement of nearly 2% on labeled precision/recall due to the simple idea of guessing the head's pre-terminal before guessing the head.", 'The first is the slight, but important, improvement achieved by using this model over conventional deleted interpolation, as indicated in Figure 2.', 'We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.04354', '(95%-conf.int.', '0.04354', '-', '0.04354)']
['system', 'ROUGE-S*', 'Average_P:', '0.14778', '(95%-conf.int.', '0.14778', '-', '0.14778)']
['system', 'ROUGE-S*', 'Average_F:', '0.06726', '(95%-conf.int.', '0.06726', '-', '0.06726)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1378', 'P:406', 'F:60']
0.028479999741090913 0.032869999701181825 0.01806636347212397





input/ref/Task1/E03-1005_swastika.csv
input/res/Task1/E03-1005.annv3.csv
parsing: input/ref/Task1/E03-1005_swastika.csv
<S sid="105" ssid="8">The derivation with the smallest sum, or highest rank, is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP, its results are still rather impressive for such a simple model.</S>
original cit marker offset is 0
new cit marker offset is 0



['105']
105
['105']
parsed_discourse_facet ['result_citation']
    <S sid="41" ssid="38">This paper presents the first published results with Goodman's PCFG-reductions of both Bonnema et al. 's (1999) and Bod's (2001) estimators on the WSJ.</S>
original cit marker offset is 0
new cit marker offset is 0



['41']
41
['41']
parsed_discourse_facet ['aim_citation']
<S sid="80" ssid="32">DOP1 has a serious bias: its subtree estimator provides more probability to nodes with more subtrees (Bonnema et al. 1999).</S>
original cit marker offset is 0
new cit marker offset is 0



['80']
80
['80']
parsed_discourse_facet ['result_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S>
original cit marker offset is 0
new cit marker offset is 0



['143']
143
['143']
parsed_discourse_facet ['method_citation']
<S sid="146" ssid="11">This paper also re-affirmed that the coarsegrained approach of using all subtrees from a treebank outperforms the fine-grained approach of specifically modeling lexical-syntactic depen dencies (as e.g. in Collins 1999 and Charniak 2000).</S>
original cit marker offset is 0
new cit marker offset is 0



['146']
146
['146']
parsed_discourse_facet ['method_citation']
    <S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>
original cit marker offset is 0
new cit marker offset is 0



['140']
140
['140']
parsed_discourse_facet ['result_citation']
<S sid="105" ssid="8">The derivation with the smallest sum, or highest rank, is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP, its results are still rather impressive for such a simple model.</S>
original cit marker offset is 0
new cit marker offset is 0



['105']
105
['105']
parsed_discourse_facet ['result_citation']
    <S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>
original cit marker offset is 0
new cit marker offset is 0



['140']
140
['140']
parsed_discourse_facet ['result_citation']
<S sid="100" ssid="3">In Bod (2000b), an alternative notion for the best parse tree was proposed based on a simplicity criterion: instead of producing the most probable tree, this model produced the tree generated by the shortest derivation with the fewest training subtrees.</S>
original cit marker offset is 0
new cit marker offset is 0



['100']
100
['100']
parsed_discourse_facet ['result_citation']
    <S sid="30" ssid="27">Bod (2000a) solved this problem by training the subtree probabilities by a maximum likelihood procedure based on Expectation-Maximization.</S>
original cit marker offset is 0
new cit marker offset is 0



['30']
30
['30']
parsed_discourse_facet ['method_citation']
    <S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>
original cit marker offset is 0
new cit marker offset is 0



['140']
140
['140']
parsed_discourse_facet ['result_citation']
    <S sid="30" ssid="27">Bod (2000a) solved this problem by training the subtree probabilities by a maximum likelihood procedure based on Expectation-Maximization.</S>
original cit marker offset is 0
new cit marker offset is 0



['30']
30
['30']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/E03-1005.annv3.csv
<S sid="104" ssid="7">Next, the rank of each (shortest) derivation is computed as the sum of the ranks of the subtrees involved.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'", "'143'", "'103'"]
'104'
'143'
'103'
['104', '143', '103']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="0" ssid="0">An Efficient Implementation of a New DOP Model</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'143'", "'0'"]
'145'
'143'
'0'
['145', '143', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="94" ssid="46">This paper presents the first published results with this estimator on the WSJ.</S><S sid="29" ssid="26">Johnson (1998b, 2002) showed that DOP1's subtree estimation method is statistically biased and inconsistent.</S><S sid="43" ssid="40">Bod (2001, 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'", "'29'", "'43'"]
'94'
'29'
'43'
['94', '29', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="21" ssid="18">One instantiation of DOP which has received considerable interest is the model known as DOP12 (Bod 1992).</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'145'", "'21'"]
'143'
'145'
'21'
['143', '145', '21']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="2" ssid="2">This paper proposes an integration of the two models which outperforms each of them separately.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="34" ssid="31">But even with cross-validation, ML-DOP is outperformed by the much simpler DOP1 model on both the ATIS and OVIS treebanks (Bod 2000b).</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'145'", "'34'"]
'2'
'145'
'34'
['2', '145', '34']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="2" ssid="2">This paper proposes an integration of the two models which outperforms each of them separately.</S><S sid="133" ssid="14">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'", "'2'", "'133'"]
'140'
'2'
'133'
['140', '2', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="43" ssid="40">Bod (2001, 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'143'", "'43'"]
'103'
'143'
'43'
['103', '143', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S><S sid="126" ssid="7">We focused on the Labeled Precision (LP) and Labeled Recall (LR) scores, as these are commonly used to rank parsing systems.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'103'", "'126'"]
'143'
'103'
'126'
['143', '103', '126']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="97" ssid="49">In this paper, we will estimate the most probable parse by computing the 10,000 most probable derivations by means of Viterbi n-best, from which the most likely parse is estimated by summing up the probabilities of the derivations that generate the same parse.</S><S sid="25" ssid="22">Many implementations of DOP1 therefore estimate the most probable parse by Monte Carlo techniques (Bod 1998; Chappelier & Rajman 2000), or by Viterbi n-best search (Bod 2001), or by restricting the set of subtrees (Sima'an 1999; Chappelier et al. 2002).</S><S sid="26" ssid="23">Sima'an (1995) gave an efficient algorithm for computing the parse tree generated by the most probable derivation, which in some cases is a reasonable approximation of the most probable parse.</S>
original cit marker offset is 0
new cit marker offset is 0



["'97'", "'25'", "'26'"]
'97'
'25'
'26'
['97', '25', '26']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="133" ssid="14">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S><S sid="41" ssid="38">This paper presents the first published results with Goodman's PCFG-reductions of both Bonnema et al. 's (1999) and Bod's (2001) estimators on the WSJ.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'", "'133'", "'41'"]
'140'
'133'
'41'
['140', '133', '41']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="47" ssid="44">We show that a combination of a probabilistic and a simplicity metric, which chooses the simplest parse from the n likeliest parses, outperforms the use of these metrics alone.</S><S sid="104" ssid="7">Next, the rank of each (shortest) derivation is computed as the sum of the ranks of the subtrees involved.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'47'", "'104'", "'145'"]
'47'
'104'
'145'
['47', '104', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="86" ssid="38">Bod reports state-of-the-art results with this method, and observes no decrease in parse accuracy when larger subtrees are included (using subtrees up to depth 14).</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'86'", "'143'"]
'145'
'86'
'143'
['145', '86', '143']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="3" ssid="3">Together with a PCFGreduction of DOP we obtain improved accuracy and efficiency on the Wall Street Journal treebank Our results show an 11% relative reduction in error rate over previous models, and an average processing time of 3.6 seconds per WSJ sentence.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'3'", "'145'"]
'143'
'3'
'145'
['143', '3', '145']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="142" ssid="7">Compared to the reranking technique in Collins (2000), who obtained an LP of 89.9% and an LR of 89.6%, our results show a 9% relative error rate reduction.</S><S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'142'", "'140'", "'145'"]
'142'
'140'
'145'
['142', '140', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="36" ssid="33">As an alternative, Bonnema et al. (1999) propose a subtree estimator which reduces the probability of a tree by a factor of two for each non-root non-terminal it contains.</S><S sid="22" ssid="19">DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).</S><S sid="50" ssid="2">The probability of a parse tree is computed from the occurrencefrequencies of the subtrees in the treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'22'", "'50'"]
'36'
'22'
'50'
['36', '22', '50']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
dict_values(['The derivation with the smallest sum, or highest rank, is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP, its results are still rather impressive for such a simple model.'])
dict_values(['Next, the rank of each (shortest) derivation is computed as the sum of the ranks of the subtrees involved.', 'While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.', 'That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01814', '(95%-conf.int.', '0.01814', '-', '0.01814)']
['system', 'ROUGE-S*', 'Average_P:', '0.08333', '(95%-conf.int.', '0.08333', '-', '0.08333)']
['system', 'ROUGE-S*', 'Average_F:', '0.02980', '(95%-conf.int.', '0.02980', '-', '0.02980)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1378', 'P:300', 'F:25']
dict_values(['DOP1 has a serious bias: its subtree estimator provides more probability to nodes with more subtrees (Bonnema et al. 1999).'])
dict_values(['This paper presents the first published results with this estimator on the WSJ.', "Johnson (1998b, 2002) showed that DOP1's subtree estimation method is statistically biased and inconsistent.", 'Bod (2001, 2003).'])
['system', 'ROUGE-S*', 'Average_R:', '0.01905', '(95%-conf.int.', '0.01905', '-', '0.01905)']
['system', 'ROUGE-S*', 'Average_P:', '0.08889', '(95%-conf.int.', '0.08889', '-', '0.08889)']
['system', 'ROUGE-S*', 'Average_F:', '0.03137', '(95%-conf.int.', '0.03137', '-', '0.03137)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:210', 'P:45', 'F:4']
dict_values(['While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.'])
dict_values(['While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.', 'This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.', 'One instantiation of DOP which has received considerable interest is the model known as DOP12 (Bod 1992).'])
['system', 'ROUGE-S*', 'Average_R:', '0.23636', '(95%-conf.int.', '0.23636', '-', '0.23636)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.38235', '(95%-conf.int.', '0.38235', '-', '0.38235)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1485', 'P:351', 'F:351']
dict_values(['The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.'])
dict_values(['The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.', 'This paper proposes an integration of the two models which outperforms each of them separately.', 'It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).'])
['system', 'ROUGE-S*', 'Average_R:', '0.13904', '(95%-conf.int.', '0.13904', '-', '0.13904)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.24413', '(95%-conf.int.', '0.24413', '-', '0.24413)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:78', 'F:78']
dict_values(['The derivation with the smallest sum, or highest rank, is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP, its results are still rather impressive for such a simple model.'])
dict_values(['In this paper, we will estimate the most probable parse by computing the 10,000 most probable derivations by means of Viterbi n-best, from which the most likely parse is estimated by summing up the probabilities of the derivations that generate the same parse.', "Many implementations of DOP1 therefore estimate the most probable parse by Monte Carlo techniques (Bod 1998; Chappelier & Rajman 2000), or by Viterbi n-best search (Bod 2001), or by restricting the set of subtrees (Sima'an 1999; Chappelier et al. 2002).", "Sima'an (1995) gave an efficient algorithm for computing the parse tree generated by the most probable derivation, which in some cases is a reasonable approximation of the most probable parse."])
['system', 'ROUGE-S*', 'Average_R:', '0.00818', '(95%-conf.int.', '0.00818', '-', '0.00818)']
['system', 'ROUGE-S*', 'Average_P:', '0.04667', '(95%-conf.int.', '0.04667', '-', '0.04667)']
['system', 'ROUGE-S*', 'Average_F:', '0.01392', '(95%-conf.int.', '0.01392', '-', '0.01392)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1711', 'P:300', 'F:14']
dict_values(['The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.'])
dict_values(['The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.', 'It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).', "This paper presents the first published results with Goodman's PCFG-reductions of both Bonnema et al. 's (1999) and Bod's (2001) estimators on the WSJ."])
['system', 'ROUGE-S*', 'Average_R:', '0.08638', '(95%-conf.int.', '0.08638', '-', '0.08638)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.15902', '(95%-conf.int.', '0.15902', '-', '0.15902)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:78', 'F:78']
dict_values(['Bod (2000a) solved this problem by training the subtree probabilities by a maximum likelihood procedure based on Expectation-Maximization.'])
dict_values(['While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.', 'Together with a PCFGreduction of DOP we obtain improved accuracy and efficiency on the Wall Street Journal treebank Our results show an 11% relative reduction in error rate over previous models, and an average processing time of 3.6 seconds per WSJ sentence.', 'This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00038', '(95%-conf.int.', '0.00038', '-', '0.00038)']
['system', 'ROUGE-S*', 'Average_P:', '0.01282', '(95%-conf.int.', '0.01282', '-', '0.01282)']
['system', 'ROUGE-S*', 'Average_F:', '0.00074', '(95%-conf.int.', '0.00074', '-', '0.00074)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2628', 'P:78', 'F:1']
dict_values(['The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.'])
dict_values(['Compared to the reranking technique in Collins (2000), who obtained an LP of 89.9% and an LR of 89.6%, our results show a 9% relative error rate reduction.', 'The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.', 'This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.'])
['system', 'ROUGE-S*', 'Average_R:', '0.06118', '(95%-conf.int.', '0.06118', '-', '0.06118)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.11530', '(95%-conf.int.', '0.11530', '-', '0.11530)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1275', 'P:78', 'F:78']
dict_values(['Bod (2000a) solved this problem by training the subtree probabilities by a maximum likelihood procedure based on Expectation-Maximization.'])
dict_values(['As an alternative, Bonnema et al. (1999) propose a subtree estimator which reduces the probability of a tree by a factor of two for each non-root non-terminal it contains.', 'DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).', 'The probability of a parse tree is computed from the occurrencefrequencies of the subtrees in the treebank.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00150', '(95%-conf.int.', '0.00150', '-', '0.00150)']
['system', 'ROUGE-S*', 'Average_P:', '0.01282', '(95%-conf.int.', '0.01282', '-', '0.01282)']
['system', 'ROUGE-S*', 'Average_F:', '0.00269', '(95%-conf.int.', '0.00269', '-', '0.00269)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:78', 'F:1']
0.47161443920428403 0.06335666596270371 0.10881333212429632





input/ref/Task1/P04-1036_vardha.csv
input/res/Task1/P04-1036.annv3.csv
parsing: input/ref/Task1/P04-1036_vardha.csv
    <S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
    <S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



["'15'"]
'15'
['15']
parsed_discourse_facet ['method_citation']
<S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'45'"]
'45'
['45']
parsed_discourse_facet ['method_citation']
<S sid="66" ssid="22">It uses the glosses of semantically related (according to WordNet) senses too. jcn (Jiang and Conrath, 1997) This score uses corpus data to populate classes (synsets) in the WordNet hierarchy with frequency counts.</S>
original cit marker offset is 0
new cit marker offset is 0



["'66'"]
'66'
['66']
parsed_discourse_facet ['method_citation']
 <S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'"]
'126'
['126']
parsed_discourse_facet ['method_citation']
<S sid="101" ssid="30">Thus, if we used the sense ranking as a heuristic for an &#8220;all nouns&#8221; task we would expect to get precision in the region of 60%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'101'"]
'101'
['101']
parsed_discourse_facet ['method_citation']
 <S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'"]
'126'
['126']
parsed_discourse_facet ['method_citation']
 <S sid="115" ssid="13">Our automatically acquired predominant sense performs nearly as well as the first sense provided by SemCor, which is very encouraging given that our method only uses raw text, with no manual labelling.</S>
original cit marker offset is 0
new cit marker offset is 0



["'115'"]
'115'
['115']
parsed_discourse_facet ['method_citation']
  <S sid="89" ssid="18">Since both measures gave comparable results we restricted our remaining experiments to jcn because this gave good results for finding the predominant sense, and is much more efficient than lesk, given the precompilation of the IC files.</S>
original cit marker offset is 0
new cit marker offset is 0



["'89'"]
'89'
['89']
parsed_discourse_facet ['method_citation']
 <S sid="137" ssid="14">Additionally, we evaluated our method quantitatively using the Subject Field Codes (SFC) resource (Magnini and Cavagli`a, 2000) which annotates WordNet synsets with domain labels.</S>
original cit marker offset is 0
new cit marker offset is 0



["'137'"]
'137'
['137']
parsed_discourse_facet ['method_citation']
75 ssid="4">We generated a thesaurus entry for all polysemous nouns which occurred in SemCor with a frequency 2, and in the BNC with a frequency 10 in the grammatical relations listed in section 2.1 above.</S>
original cit marker offset is 0
new cit marker offset is 0



["'75'"]
'75'
['75']
Error in Reference Offset
 <S sid="155" ssid="3">A major benefit of our work, rather than reliance on hand-tagged training data such as SemCor, is that this method permits us to produce predominant senses for the domain and text type required.</S>
original cit marker offset is 0
new cit marker offset is 0



["'155'"]
'155'
['155']
parsed_discourse_facet ['method_citation']
  <S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
 <S sid="155" ssid="3">A major benefit of our work, rather than reliance on hand-tagged training data such as SemCor, is that this method permits us to produce predominant senses for the domain and text type required.</S>
original cit marker offset is 0
new cit marker offset is 0



["'155'"]
'155'
['155']
parsed_discourse_facet ['method_citation']
<S sid="68" ssid="24">We are of course able to apply the method to other versions of WordNet. synset, is incremented with the frequency counts from the corpus of all words belonging to that synset, directly or via the hyponymy relation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'68'"]
'68'
['68']
parsed_discourse_facet ['method_citation']
    <S sid="13" ssid="6">The high performance of the first sense baseline is due to the skewed frequency distribution of word senses.</S>
original cit marker offset is 0
new cit marker offset is 0



["'13'"]
'13'
['13']
parsed_discourse_facet ['method_citation']
  <S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'"]
'8'
['8']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/P04-1036.annv3.csv
<S sid="107" ssid="5">To disambiguate senses a system should take context into account.</S><S sid="154" ssid="2">In contrast, our work is aimed at discovering the predominant senses from raw text because the first sense heuristic is such a useful one, and because handtagged data is not always available.</S><S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S>
original cit marker offset is 0
new cit marker offset is 0



["'107'", "'154'", "'8'"]
'107'
'154'
'8'
['107', '154', '8']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="154" ssid="2">In contrast, our work is aimed at discovering the predominant senses from raw text because the first sense heuristic is such a useful one, and because handtagged data is not always available.</S><S sid="162" ssid="10">It only requires raw text from the given domain and because of this it can easily be applied to a new domain, or sense inventory, given sufficient text.</S><S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'154'", "'162'", "'180'"]
'154'
'162'
'180'
['154', '162', '180']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="167" ssid="15">In this work the lists of neighbours are themselves clustered to bring out the various senses of the word.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'167'", "'169'"]
'179'
'167'
'169'
['179', '167', '169']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="171" ssid="19">In contrast, we use the neighbours lists and WordNet similarity measures to impose a prevalence ranking on the WordNet senses.</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'171'", "'0'"]
'179'
'171'
'0'
['179', '171', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="15" ssid="8">Whilst a first sense heuristic based on a sense-tagged corpus such as SemCor is clearly useful, there is a strong case for obtaining a first, or predominant, sense from untagged corpus data so that a WSD system can be tuned to the genre or domain at hand.</S>
original cit marker offset is 0
new cit marker offset is 0



["'0'", "'126'", "'15'"]
'0'
'126'
'15'
['0', '126', '15']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="180" ssid="3">The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'169'", "'180'"]
'179'
'169'
'180'
['179', '169', '180']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="186" ssid="9">In particular, we will use balanced and domain specific corpora to isolate words having very different neighbours, and therefore rankings, in the different corpora and to detect and target words for which there is a highly skewed sense distribution in these corpora.</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'126'", "'186'", "'0'"]
'126'
'186'
'0'
['126', '186', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="81" ssid="10">4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).</S><S sid="0" ssid="0">Finding Predominant Word Senses in Untagged Text</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'81'", "'0'"]
'48'
'81'
'0'
['48', '81', '0']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="66" ssid="22">It uses the glosses of semantically related (according to WordNet) senses too. jcn (Jiang and Conrath, 1997) This score uses corpus data to populate classes (synsets) in the WordNet hierarchy with frequency counts.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'66'", "'4'"]
'179'
'66'
'4'
['179', '66', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'169'", "'27'", "'45'"]
'169'
'27'
'45'
['169', '27', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'179'", "'45'"]
'48'
'179'
'45'
['48', '179', '45']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="45" ssid="1">In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).</S><S sid="58" ssid="14">A noun, , is thus described by a set of co-occurrence triples and associated frequencies, where is a grammatical relation and is a possible cooccurrence with in that relation.</S>
original cit marker offset is 0
new cit marker offset is 0



["'179'", "'45'", "'58'"]
'179'
'45'
'58'
['179', '45', '58']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="179" ssid="2">We use an automatically acquired thesaurus and a WordNet Similarity measure.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'179'", "'27'"]
'8'
'179'
'27'
['8', '179', '27']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="153" ssid="1">Most research in WSD concentrates on using contextual features, typically neighbouring words, to help determine the correct sense of a target word.</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'153'", "'126'", "'4'"]
'153'
'126'
'4'
['153', '126', '4']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="48" ssid="4">To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.</S><S sid="81" ssid="10">4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).</S><S sid="126" ssid="3">We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.</S>
original cit marker offset is 0
new cit marker offset is 0



["'48'", "'81'", "'126'"]
'48'
'81'
'126'
['48', '81', '126']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="169" ssid="17">This method obtains precision of 61% and recall 51%.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'169'", "'4'"]
'8'
'169'
'4'
['8', '169', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="8" ssid="1">The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.</S><S sid="27" ssid="20">We use WordNet as our sense inventory for this work.</S><S sid="4" ssid="4">We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.</S>
original cit marker offset is 0
new cit marker offset is 0



["'8'", "'27'", "'4'"]
'8'
'27'
'4'
['8', '27', '4']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
dict_values(['In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).'])
dict_values(['We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'In this work the lists of neighbours are themselves clustered to bring out the various senses of the word.', 'This method obtains precision of 61% and recall 51%.'])
['system', 'ROUGE-S*', 'Average_R:', '0.03509', '(95%-conf.int.', '0.03509', '-', '0.03509)']
['system', 'ROUGE-S*', 'Average_P:', '0.05714', '(95%-conf.int.', '0.05714', '-', '0.05714)']
['system', 'ROUGE-S*', 'Average_F:', '0.04348', '(95%-conf.int.', '0.04348', '-', '0.04348)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:171', 'P:105', 'F:6']
dict_values(['Thus, if we used the sense ranking as a heuristic for an &#8220;all nouns&#8221; task we would expect to get precision in the region of 60%.'])
dict_values(['We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'This method obtains precision of 61% and recall 51%.', 'The automatically acquired predominant senses were evaluated against the hand-tagged resources SemCor and the SENSEVAL-2 English all-words task giving us a WSD precision of 64% on an all-nouns task.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01008', '(95%-conf.int.', '0.01008', '-', '0.01008)']
['system', 'ROUGE-S*', 'Average_P:', '0.09091', '(95%-conf.int.', '0.09091', '-', '0.09091)']
['system', 'ROUGE-S*', 'Average_F:', '0.01815', '(95%-conf.int.', '0.01815', '-', '0.01815)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:496', 'P:55', 'F:5']
dict_values(['Our automatically acquired predominant sense performs nearly as well as the first sense provided by SemCor, which is very encouraging given that our method only uses raw text, with no manual labelling.'])
dict_values(['To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.', '4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).', 'Finding Predominant Word Senses in Untagged Text'])
['system', 'ROUGE-S*', 'Average_R:', '0.03439', '(95%-conf.int.', '0.03439', '-', '0.03439)']
['system', 'ROUGE-S*', 'Average_P:', '0.12381', '(95%-conf.int.', '0.12381', '-', '0.12381)']
['system', 'ROUGE-S*', 'Average_F:', '0.05383', '(95%-conf.int.', '0.05383', '-', '0.05383)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:105', 'F:13']
dict_values(['Since both measures gave comparable results we restricted our remaining experiments to jcn because this gave good results for finding the predominant sense, and is much more efficient than lesk, given the precompilation of the IC files.'])
dict_values(['We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'It uses the glosses of semantically related (according to WordNet) senses too. jcn (Jiang and Conrath, 1997) This score uses corpus data to populate classes (synsets) in the WordNet hierarchy with frequency counts.', 'We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01282', '(95%-conf.int.', '0.01282', '-', '0.01282)']
['system', 'ROUGE-S*', 'Average_P:', '0.05848', '(95%-conf.int.', '0.05848', '-', '0.05848)']
['system', 'ROUGE-S*', 'Average_F:', '0.02103', '(95%-conf.int.', '0.02103', '-', '0.02103)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:780', 'P:171', 'F:10']
dict_values(['A major benefit of our work, rather than reliance on hand-tagged training data such as SemCor, is that this method permits us to produce predominant senses for the domain and text type required.'])
dict_values(['We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'In order to find the predominant sense of a target word we use a thesaurus acquired from automatically parsed text based on the method of Lin (1998).', 'A noun, , is thus described by a set of co-occurrence triples and associated frequencies, where is a grammatical relation and is a possible cooccurrence with in that relation.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00690', '(95%-conf.int.', '0.00690', '-', '0.00690)']
['system', 'ROUGE-S*', 'Average_P:', '0.01961', '(95%-conf.int.', '0.01961', '-', '0.01961)']
['system', 'ROUGE-S*', 'Average_F:', '0.01020', '(95%-conf.int.', '0.01020', '-', '0.01020)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:153', 'F:3']
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.'])
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.', 'We use an automatically acquired thesaurus and a WordNet Similarity measure.', 'We use WordNet as our sense inventory for this work.'])
['system', 'ROUGE-S*', 'Average_R:', '0.28571', '(95%-conf.int.', '0.28571', '-', '0.28571)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.44444', '(95%-conf.int.', '0.44444', '-', '0.44444)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:231', 'P:66', 'F:66']
dict_values(['A major benefit of our work, rather than reliance on hand-tagged training data such as SemCor, is that this method permits us to produce predominant senses for the domain and text type required.'])
dict_values(['Most research in WSD concentrates on using contextual features, typically neighbouring words, to help determine the correct sense of a target word.', 'We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.', 'We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00794', '(95%-conf.int.', '0.00794', '-', '0.00794)']
['system', 'ROUGE-S*', 'Average_P:', '0.03268', '(95%-conf.int.', '0.03268', '-', '0.03268)']
['system', 'ROUGE-S*', 'Average_F:', '0.01277', '(95%-conf.int.', '0.01277', '-', '0.01277)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:153', 'F:5']
dict_values(['We are of course able to apply the method to other versions of WordNet. synset, is incremented with the frequency counts from the corpus of all words belonging to that synset, directly or via the hyponymy relation.'])
dict_values(['To find the first sense of a word ( ) we take each sense in turn and obtain a score reflecting the prevalence which is used for ranking.', '4 We calculate the accuracy of finding the predominant sense, when there is indeed one sense with a higher frequency than the others for this word in SemCor ( ).', 'We demonstrate that choosing texts from a particular domain has a significant influence on the sense ranking.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00230', '(95%-conf.int.', '0.00230', '-', '0.00230)']
['system', 'ROUGE-S*', 'Average_P:', '0.00952', '(95%-conf.int.', '0.00952', '-', '0.00952)']
['system', 'ROUGE-S*', 'Average_F:', '0.00370', '(95%-conf.int.', '0.00370', '-', '0.00370)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:435', 'P:105', 'F:1']
dict_values(['The high performance of the first sense baseline is due to the skewed frequency distribution of word senses.'])
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.', 'This method obtains precision of 61% and recall 51%.', 'We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01136', '(95%-conf.int.', '0.01136', '-', '0.01136)']
['system', 'ROUGE-S*', 'Average_P:', '0.10909', '(95%-conf.int.', '0.10909', '-', '0.10909)']
['system', 'ROUGE-S*', 'Average_F:', '0.02058', '(95%-conf.int.', '0.02058', '-', '0.02058)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:528', 'P:55', 'F:6']
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.'])
dict_values(['The first sense heuristic which is often used as a baseline for supervised WSD systems outperforms many of these systems which take surrounding context into account.', 'We use WordNet as our sense inventory for this work.', 'We present work on the use of a thesaurus acquired from raw textual corpora and the WordNet similarity package to find predominant noun senses automatically.'])
['system', 'ROUGE-S*', 'Average_R:', '0.14194', '(95%-conf.int.', '0.14194', '-', '0.14194)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.24859', '(95%-conf.int.', '0.24859', '-', '0.24859)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:465', 'P:66', 'F:66']
0.2501239974987601 0.05485299945147001 0.08767699912323





input/ref/Task1/A00-2018_sweta.csv
input/res/Task1/A00-2018.annv3.csv
parsing: input/ref/Task1/A00-2018_sweta.csv
 <S sid="17" ssid="6">In Section 5 we present some results in which the possible expansions of a constituent are fixed in advanced by extracting a tree-bank grammar [3] from the training corpus.</S>
original cit marker offset is 0
new cit marker offset is 0



["17'"]
17'
['17']
parsed_discourse_facet ['method_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length &lt; 40, and 89.5% for sentences of length &lt; 100, when trained and tested on the previously established [5,9,10,15,17] &amp;quot;standard&amp;quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["5'"]
5'
['5']
parsed_discourse_facet ['method_citation']
 <S sid="17" ssid="6">In Section 5 we present some results in which the possible expansions of a constituent are fixed in advanced by extracting a tree-bank grammar [3] from the training corpus.</S>
original cit marker offset is 0
new cit marker offset is 0



["17'"]
17'
['17']
parsed_discourse_facet ['method_citation']
<S sid="120" ssid="11">Second, Char97 uses unsupervised learning in that the original system was run on about thirty million words of unparsed text, the output was taken as &amp;quot;correct&amp;quot;, and statistics were collected on the resulting parses.</S>
original cit marker offset is 0
new cit marker offset is 0



["120'"]
120'
['120']
parsed_discourse_facet ['method_citation']
<S sid="119" ssid="10">(It is &amp;quot;soft&amp;quot; clustering in that a word can belong to more than one cluster with different weights - the weights express the probability of producing the word given that one is going to produce a word from that cluster.)</S>
original cit marker offset is 0
new cit marker offset is 0



["119'"]
119'
['119']
parsed_discourse_facet ['method_citation']
<S sid="95" ssid="6">We guess the preterminals of words that are not observed in the training data using statistics on capitalization, hyphenation, word endings (the last two letters), and the probability that a given pre-terminal is realized using a previously unobserved word.</S>
original cit marker offset is 0
new cit marker offset is 0



["95'"]
95'
['95']
parsed_discourse_facet ['method_citation']
 <S sid="175" ssid="2">This corresponds to an error reduction of 13% over the best previously published single parser results on this test set, those of Collins [9].</S>
original cit marker offset is 0
new cit marker offset is 0



["175'"]
175'
['175']
parsed_discourse_facet ['method_citation']
<S sid="92" ssid="3">For runs with the generative model based upon Markov grammar statistics, the first pass uses the same statistics, but conditioned only on standard PCFG information.</S>
original cit marker offset is 0
new cit marker offset is 0



["92'"]
92'
['92']
parsed_discourse_facet ['method_citation']
<S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &amp;quot;standard&amp;quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["1'"]
1'
['1']
parsed_discourse_facet ['method_citation']
<S sid="126" ssid="17">This is indicated in Figure 2, where the model labeled &amp;quot;Best&amp;quot; has precision of 89.8% and recall of 89.6% for an average of 89.7%, 0.4% lower than the results on the official test corpus.</S>
original cit marker offset is 0
new cit marker offset is 0



["126'"]
126'
['126']
parsed_discourse_facet ['method_citation']
<S sid="12" ssid="1">The model assigns a probability to a parse by a top-down process of considering each constituent c in Ir and for each c first guessing the pre-terminal of c, t(c) (t for &amp;quot;tag&amp;quot;), then the lexical head of c, h(c), and then the expansion of c into further constituents e(c).</S>
original cit marker offset is 0
new cit marker offset is 0



["12'"]
12'
['12']
parsed_discourse_facet ['method_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length &lt; 40 and 89.5% on sentences of length &lt; 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["174'"]
174'
['174']
parsed_discourse_facet ['method_citation']
<S sid="63" ssid="32">As we discuss in more detail in Section 5, several different features in the context surrounding c are useful to include in H: the label, head pre-terminal and head of the parent of c (denoted as lp, tp, hp), the label of c's left sibling (lb for &amp;quot;before&amp;quot;), and the label of the grandparent of c (la).</S>
original cit marker offset is 0
new cit marker offset is 0



["63'"]
63'
['63']
parsed_discourse_facet ['method_citation']
<S sid="78" ssid="47">With some prior knowledge, non-zero values can greatly speed up this process because fewer iterations are required for convergence.</S>
original cit marker offset is 0
new cit marker offset is 0



["78'"]
78'
['78']
parsed_discourse_facet ['method_citation']
 <S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["91'"]
91'
['91']
parsed_discourse_facet ['method_citation']
<S sid="180" ssid="7">From our perspective, perhaps the two most important numbers to come out of this research are the overall error reduction of 13% over the results in [9] and the intermediateresult improvement of nearly 2% on labeled precision/recall due to the simple idea of guessing the head's pre-terminal before guessing the head.</S>
original cit marker offset is 0
new cit marker offset is 0



["180'"]
180'
['180']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/A00-2018.annv3.csv
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'5'", "'174'"]
'130'
'5'
'174'
['130', '5', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'130'", "'5'"]
'174'
'130'
'5'
['174', '130', '5']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'91'", "'174'"]
'130'
'91'
'174'
['130', '91', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'1'", "'174'"]
'130'
'1'
'174'
['130', '1', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="7" ssid="3">Following [5,10], our parser is based upon a probabilistic generative model.</S><S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'7'", "'91'"]
'5'
'7'
'91'
['5', '7', '91']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'5'", "'1'"]
'174'
'5'
'1'
['174', '5', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="7" ssid="3">Following [5,10], our parser is based upon a probabilistic generative model.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'7'", "'130'"]
'5'
'7'
'130'
['5', '7', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'5'", "'1'"]
'174'
'5'
'1'
['174', '5', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="114" ssid="5">That parser, as stated in Figure 1, achieves an average precision/recall of 87.5.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'174'", "'114'"]
'130'
'174'
'114'
['130', '174', '114']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="141" ssid="32">(For example, part-ofspeech tagging using the most probable preterminal for each word is 90% accurate [8].)</S><S sid="125" ssid="16">For example, the final version of our system achieves an average precision/recall of 90.1% on the test corpus but an average precision/recall of only 89.7% on the development corpus.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'141'", "'125'", "'174'"]
'141'
'125'
'174'
['141', '125', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'1'"]
'5'
'174'
'1'
['5', '174', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="115" ssid="6">As noted in [5], that system is based upon a &quot;tree-bank grammar&quot; - a grammar read directly off the training corpus.</S><S sid="129" ssid="20">It makes no use of special maximum-entropyinspired features (though their presence made it much easier to perform these experiments), it does not guess the pre-terminal before guessing the lexical head, and it uses a tree-bank grammar rather than a Markov grammar.</S><S sid="28" ssid="17">More generally, one can condition on the m previously generated labels, thereby obtaining an mth-order Markov grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["'115'", "'129'", "'28'"]
'115'
'129'
'28'
['115', '129', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'130'"]
'5'
'174'
'130'
['5', '174', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'130'"]
'5'
'174'
'130'
['5', '174', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="180" ssid="7">From our perspective, perhaps the two most important numbers to come out of this research are the overall error reduction of 13% over the results in [9] and the intermediateresult improvement of nearly 2% on labeled precision/recall due to the simple idea of guessing the head's pre-terminal before guessing the head.</S><S sid="184" ssid="11">The first is the slight, but important, improvement achieved by using this model over conventional deleted interpolation, as indicated in Figure 2.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'180'", "'184'", "'5'"]
'180'
'184'
'5'
['180', '184', '5']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
dict_values(['In Section 5 we present some results in which the possible expansions of a constituent are fixed in advanced by extracting a tree-bank grammar [3] from the training corpus.'])
dict_values(['This parser achieves an average precision/recall of 86.2%.', 'We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.01000', '(95%-conf.int.', '0.01000', '-', '0.01000)']
['system', 'ROUGE-S*', 'Average_P:', '0.02857', '(95%-conf.int.', '0.02857', '-', '0.02857)']
['system', 'ROUGE-S*', 'Average_F:', '0.01481', '(95%-conf.int.', '0.01481', '-', '0.01481)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:105', 'F:3']
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length &lt; 40, and 89.5% for sentences of length &lt; 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.'])
dict_values(['We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.27143', '(95%-conf.int.', '0.27143', '-', '0.27143)']
['system', 'ROUGE-S*', 'Average_P:', '0.06025', '(95%-conf.int.', '0.06025', '-', '0.06025)']
['system', 'ROUGE-S*', 'Average_F:', '0.09862', '(95%-conf.int.', '0.09862', '-', '0.09862)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:210', 'P:946', 'F:57']
dict_values(['In Section 5 we present some results in which the possible expansions of a constituent are fixed in advanced by extracting a tree-bank grammar [3] from the training corpus.'])
dict_values(['This parser achieves an average precision/recall of 86.2%.', 'As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.', 'We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00245', '(95%-conf.int.', '0.00245', '-', '0.00245)']
['system', 'ROUGE-S*', 'Average_P:', '0.02857', '(95%-conf.int.', '0.02857', '-', '0.02857)']
['system', 'ROUGE-S*', 'Average_F:', '0.00451', '(95%-conf.int.', '0.00451', '-', '0.00451)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1225', 'P:105', 'F:3']
dict_values(['Second, Char97 uses unsupervised learning in that the original system was run on about thirty million words of unparsed text, the output was taken as &quot;correct&quot;, and statistics were collected on the resulting parses.'])
dict_values(['This parser achieves an average precision/recall of 86.2%.', 'We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.', 'We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00149', '(95%-conf.int.', '0.00149', '-', '0.00149)']
['system', 'ROUGE-S*', 'Average_P:', '0.01754', '(95%-conf.int.', '0.01754', '-', '0.01754)']
['system', 'ROUGE-S*', 'Average_F:', '0.00274', '(95%-conf.int.', '0.00274', '-', '0.00274)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2016', 'P:171', 'F:3']
dict_values(['(It is &quot;soft&quot; clustering in that a word can belong to more than one cluster with different weights - the weights express the probability of producing the word given that one is going to produce a word from that cluster.)'])
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:153', 'P:120', 'F:0']
dict_values(['We guess the preterminals of words that are not observed in the training data using statistics on capitalization, hyphenation, word endings (the last two letters), and the probability that a given pre-terminal is realized using a previously unobserved word.'])
dict_values(['We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:210', 'P:190', 'F:0']
dict_values(['This corresponds to an error reduction of 13% over the best previously published single parser results on this test set, those of Collins [9].'])
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:153', 'P:78', 'F:0']
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.'])
dict_values(['This parser achieves an average precision/recall of 86.2%.', 'We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.24868', '(95%-conf.int.', '0.24868', '-', '0.24868)']
['system', 'ROUGE-S*', 'Average_P:', '0.14921', '(95%-conf.int.', '0.14921', '-', '0.14921)']
['system', 'ROUGE-S*', 'Average_F:', '0.18651', '(95%-conf.int.', '0.18651', '-', '0.18651)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:630', 'F:94']
dict_values(['We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length &lt; 40 and 89.5% on sentences of length &lt; 100.'])
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.'])
['system', 'ROUGE-S*', 'Average_R:', '0.16032', '(95%-conf.int.', '0.16032', '-', '0.16032)']
['system', 'ROUGE-S*', 'Average_P:', '0.24877', '(95%-conf.int.', '0.24877', '-', '0.24877)']
['system', 'ROUGE-S*', 'Average_F:', '0.19498', '(95%-conf.int.', '0.19498', '-', '0.19498)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:406', 'F:101']
dict_values(['With some prior knowledge, non-zero values can greatly speed up this process because fewer iterations are required for convergence.'])
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:153', 'P:45', 'F:0']
dict_values(['As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.'])
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.01307', '(95%-conf.int.', '0.01307', '-', '0.01307)']
['system', 'ROUGE-S*', 'Average_P:', '0.00866', '(95%-conf.int.', '0.00866', '-', '0.00866)']
['system', 'ROUGE-S*', 'Average_F:', '0.01042', '(95%-conf.int.', '0.01042', '-', '0.01042)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:153', 'P:231', 'F:2']
dict_values(["From our perspective, perhaps the two most important numbers to come out of this research are the overall error reduction of 13% over the results in [9] and the intermediateresult improvement of nearly 2% on labeled precision/recall due to the simple idea of guessing the head's pre-terminal before guessing the head."])
dict_values(["From our perspective, perhaps the two most important numbers to come out of this research are the overall error reduction of 13% over the results in [9] and the intermediateresult improvement of nearly 2% on labeled precision/recall due to the simple idea of guessing the head's pre-terminal before guessing the head.", 'The first is the slight, but important, improvement achieved by using this model over conventional deleted interpolation, as indicated in Figure 2.', 'We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.20029', '(95%-conf.int.', '0.20029', '-', '0.20029)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.33374', '(95%-conf.int.', '0.33374', '-', '0.33374)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1378', 'P:276', 'F:276']
0.12846416559613197 0.07564416603629863 0.07052749941227085





input/ref/Task1/E03-1005_sweta.csv
input/res/Task1/E03-1005.annv3.csv
parsing: input/ref/Task1/E03-1005_sweta.csv
<S sid="20" ssid="17">Thus the major innovations of DOP are: 2. the use of arbitrarily large fragments rather than restricted ones Both have gained or are gaining wide usage, and are also becoming relevant for theoretical linguistics (see Bod et al. 2003a).</S>
original cit marker offset is 0
new cit marker offset is 0



["20'"]
20'
['20']
parsed_discourse_facet ['method_citation']
 <S sid="74" ssid="26">Goodman's main theorem is that this construction produces PCFG derivations isomorphic to DOP derivations with equal probability.</S>
original cit marker offset is 0
new cit marker offset is 0



["74'"]
74'
['74']
parsed_discourse_facet ['method_citation']
<S sid="44" ssid="41">But while Bod's estimator obtains state-of-the-art results on the WSJ, comparable to Charniak (2000) and Collins (2000), Bonnema et al. 's estimator performs worse and is comparable to Collins (1996).</S>
original cit marker offset is 0
new cit marker offset is 0



["44'"]
44'
['44']
parsed_discourse_facet ['method_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["143'"]
143'
['143']
parsed_discourse_facet ['method_citation']
<S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["145'"]
145'
['145']
parsed_discourse_facet ['method_citation']
<S sid="134" ssid="15">This may be explained by the fact our best results in Bod (2001) were obtained by testing various subtree restrictions until the highest accuracy was obtained, while in the current experiment we used all subtrees as given by the PCFG-reduction.</S>
original cit marker offset is 0
new cit marker offset is 0



["134'"]
134'
['134']
parsed_discourse_facet ['method_citation']
<S sid="22" ssid="19">DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).</S>
original cit marker offset is 0
new cit marker offset is 0



["22'"]
22'
['22']
parsed_discourse_facet ['method_citation']
<S sid="133" ssid="14">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S>
original cit marker offset is 0
new cit marker offset is 0



["133'"]
133'
['133']
parsed_discourse_facet ['method_citation']
<S sid="25" ssid="22">Many implementations of DOP1 therefore estimate the most probable parse by Monte Carlo techniques (Bod 1998; Chappelier &amp; Rajman 2000), or by Viterbi n-best search (Bod 2001), or by restricting the set of subtrees (Sima'an 1999; Chappelier et al. 2002).</S>
original cit marker offset is 0
new cit marker offset is 0



["25'"]
25'
['25']
parsed_discourse_facet ['method_citation']
<S sid="38" ssid="35">Although Bod's method obtains very competitive results on the Wall Street Journal (WSJ) task, the parsing time was reported to be over 200 seconds per sentence (Bod 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["38'"]
38'
['38']
parsed_discourse_facet ['method_citation']
 <S sid="100" ssid="3">In Bod (2000b), an alternative notion for the best parse tree was proposed based on a simplicity criterion: instead of producing the most probable tree, this model produced the tree generated by the shortest derivation with the fewest training subtrees.</S>
original cit marker offset is 0
new cit marker offset is 0



["100'"]
100'
['100']
parsed_discourse_facet ['method_citation']
<S sid="32" ssid="29">However, ML-DOP suffers from overlearning if the subtrees are trained on the same treebank trees as they are derived from.</S>
original cit marker offset is 0
new cit marker offset is 0



["32'"]
32'
['32']
parsed_discourse_facet ['method_citation']
 <S sid="130" ssid="11">While the PCFG reduction of Bod (2001) obtains state-of-the-art results on the WSJ, comparable to Charniak (2000), Bonnema et al. 's estimator performs worse and is comparable to Collins (1996).</S>
original cit marker offset is 0
new cit marker offset is 0



["130'"]
130'
['130']
parsed_discourse_facet ['method_citation']
 <S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S>
original cit marker offset is 0
new cit marker offset is 0



["140'"]
140'
['140']
parsed_discourse_facet ['method_citation']
<S sid="27" ssid="24">Goodman (1996, 1998) developed a polynomial time PCFG-reduction of DOP1 whose size is linear in the size of the training set, thus converting the exponential number of subtrees to a compact grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["27'"]
27'
['27']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/E03-1005.annv3.csv
<S sid="104" ssid="7">Next, the rank of each (shortest) derivation is computed as the sum of the ranks of the subtrees involved.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S>
original cit marker offset is 0
new cit marker offset is 0



["'104'", "'143'", "'103'"]
'104'
'143'
'103'
['104', '143', '103']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="0" ssid="0">An Efficient Implementation of a New DOP Model</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'143'", "'0'"]
'145'
'143'
'0'
['145', '143', '0']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="94" ssid="46">This paper presents the first published results with this estimator on the WSJ.</S><S sid="29" ssid="26">Johnson (1998b, 2002) showed that DOP1's subtree estimation method is statistically biased and inconsistent.</S><S sid="43" ssid="40">Bod (2001, 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'94'", "'29'", "'43'"]
'94'
'29'
'43'
['94', '29', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="21" ssid="18">One instantiation of DOP which has received considerable interest is the model known as DOP12 (Bod 1992).</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'145'", "'21'"]
'143'
'145'
'21'
['143', '145', '21']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="2" ssid="2">This paper proposes an integration of the two models which outperforms each of them separately.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="34" ssid="31">But even with cross-validation, ML-DOP is outperformed by the much simpler DOP1 model on both the ATIS and OVIS treebanks (Bod 2000b).</S>
original cit marker offset is 0
new cit marker offset is 0



["'2'", "'145'", "'34'"]
'2'
'145'
'34'
['2', '145', '34']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="2" ssid="2">This paper proposes an integration of the two models which outperforms each of them separately.</S><S sid="133" ssid="14">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'", "'2'", "'133'"]
'140'
'2'
'133'
['140', '2', '133']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="43" ssid="40">Bod (2001, 2003).</S>
original cit marker offset is 0
new cit marker offset is 0



["'103'", "'143'", "'43'"]
'103'
'143'
'43'
['103', '143', '43']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="103" ssid="6">That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.</S><S sid="126" ssid="7">We focused on the Labeled Precision (LP) and Labeled Recall (LR) scores, as these are commonly used to rank parsing systems.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'103'", "'126'"]
'143'
'103'
'126'
['143', '103', '126']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="97" ssid="49">In this paper, we will estimate the most probable parse by computing the 10,000 most probable derivations by means of Viterbi n-best, from which the most likely parse is estimated by summing up the probabilities of the derivations that generate the same parse.</S><S sid="25" ssid="22">Many implementations of DOP1 therefore estimate the most probable parse by Monte Carlo techniques (Bod 1998; Chappelier & Rajman 2000), or by Viterbi n-best search (Bod 2001), or by restricting the set of subtrees (Sima'an 1999; Chappelier et al. 2002).</S><S sid="26" ssid="23">Sima'an (1995) gave an efficient algorithm for computing the parse tree generated by the most probable derivation, which in some cases is a reasonable approximation of the most probable parse.</S>
original cit marker offset is 0
new cit marker offset is 0



["'97'", "'25'", "'26'"]
'97'
'25'
'26'
['97', '25', '26']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="133" ssid="14">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S><S sid="41" ssid="38">This paper presents the first published results with Goodman's PCFG-reductions of both Bonnema et al. 's (1999) and Bod's (2001) estimators on the WSJ.</S>
original cit marker offset is 0
new cit marker offset is 0



["'140'", "'133'", "'41'"]
'140'
'133'
'41'
['140', '133', '41']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="47" ssid="44">We show that a combination of a probabilistic and a simplicity metric, which chooses the simplest parse from the n likeliest parses, outperforms the use of these metrics alone.</S><S sid="104" ssid="7">Next, the rank of each (shortest) derivation is computed as the sum of the ranks of the subtrees involved.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'47'", "'104'", "'145'"]
'47'
'104'
'145'
['47', '104', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S><S sid="86" ssid="38">Bod reports state-of-the-art results with this method, and observes no decrease in parse accuracy when larger subtrees are included (using subtrees up to depth 14).</S><S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S>
original cit marker offset is 0
new cit marker offset is 0



["'145'", "'86'", "'143'"]
'145'
'86'
'143'
['145', '86', '143']
parsed_discourse_facet ['results_citation', 'hypothesis_citation', 'implication_citation', 'method_citation', 'aim_citation']
<S sid="143" ssid="8">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S><S sid="3" ssid="3">Together with a PCFGreduction of DOP we obtain improved accuracy and efficiency on the Wall Street Journal treebank Our results show an 11% relative reduction in error rate over previous models, and an average processing time of 3.6 seconds per WSJ sentence.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'143'", "'3'", "'145'"]
'143'
'3'
'145'
['143', '3', '145']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="142" ssid="7">Compared to the reranking technique in Collins (2000), who obtained an LP of 89.9% and an LR of 89.6%, our results show a 9% relative error rate reduction.</S><S sid="140" ssid="5">The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.</S><S sid="145" ssid="10">This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'142'", "'140'", "'145'"]
'142'
'140'
'145'
['142', '140', '145']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="36" ssid="33">As an alternative, Bonnema et al. (1999) propose a subtree estimator which reduces the probability of a tree by a factor of two for each non-root non-terminal it contains.</S><S sid="22" ssid="19">DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).</S><S sid="50" ssid="2">The probability of a parse tree is computed from the occurrencefrequencies of the subtrees in the treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'36'", "'22'", "'50'"]
'36'
'22'
'50'
['36', '22', '50']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
dict_values(['Thus the major innovations of DOP are: 2. the use of arbitrarily large fragments rather than restricted ones Both have gained or are gaining wide usage, and are also becoming relevant for theoretical linguistics (see Bod et al. 2003a).'])
dict_values(['Next, the rank of each (shortest) derivation is computed as the sum of the ranks of the subtrees involved.', 'While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.', 'That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.'])
['system', 'ROUGE-S*', 'Average_R:', '0.01161', '(95%-conf.int.', '0.01161', '-', '0.01161)']
['system', 'ROUGE-S*', 'Average_P:', '0.10458', '(95%-conf.int.', '0.10458', '-', '0.10458)']
['system', 'ROUGE-S*', 'Average_F:', '0.02090', '(95%-conf.int.', '0.02090', '-', '0.02090)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1378', 'P:153', 'F:16']
dict_values(["But while Bod's estimator obtains state-of-the-art results on the WSJ, comparable to Charniak (2000) and Collins (2000), Bonnema et al. 's estimator performs worse and is comparable to Collins (1996)."])
dict_values(['This paper presents the first published results with this estimator on the WSJ.', "Johnson (1998b, 2002) showed that DOP1's subtree estimation method is statistically biased and inconsistent.", 'Bod (2001, 2003).'])
['system', 'ROUGE-S*', 'Average_R:', '0.02381', '(95%-conf.int.', '0.02381', '-', '0.02381)']
['system', 'ROUGE-S*', 'Average_P:', '0.02632', '(95%-conf.int.', '0.02632', '-', '0.02632)']
['system', 'ROUGE-S*', 'Average_F:', '0.02500', '(95%-conf.int.', '0.02500', '-', '0.02500)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:210', 'P:190', 'F:5']
dict_values(['While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.'])
dict_values(['While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.', 'This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.', 'One instantiation of DOP which has received considerable interest is the model known as DOP12 (Bod 1992).'])
['system', 'ROUGE-S*', 'Average_R:', '0.23636', '(95%-conf.int.', '0.23636', '-', '0.23636)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.38235', '(95%-conf.int.', '0.38235', '-', '0.38235)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1485', 'P:351', 'F:351']
dict_values(['This may be explained by the fact our best results in Bod (2001) were obtained by testing various subtree restrictions until the highest accuracy was obtained, while in the current experiment we used all subtrees as given by the PCFG-reduction.'])
dict_values(['The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.', 'This paper proposes an integration of the two models which outperforms each of them separately.', 'It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00713', '(95%-conf.int.', '0.00713', '-', '0.00713)']
['system', 'ROUGE-S*', 'Average_P:', '0.02941', '(95%-conf.int.', '0.02941', '-', '0.02941)']
['system', 'ROUGE-S*', 'Average_F:', '0.01148', '(95%-conf.int.', '0.01148', '-', '0.01148)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:561', 'P:136', 'F:4']
dict_values(['DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).'])
dict_values(['That is, all subtrees of each root label are assigned a rank according to their frequency in the treebank: the most frequent subtree (or subtrees) of each root label gets rank 1, the second most frequent subtree gets rank 2, etc.', 'While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.', 'Bod (2001, 2003).'])
['system', 'ROUGE-S*', 'Average_R:', '0.00798', '(95%-conf.int.', '0.00798', '-', '0.00798)']
['system', 'ROUGE-S*', 'Average_P:', '0.06618', '(95%-conf.int.', '0.06618', '-', '0.06618)']
['system', 'ROUGE-S*', 'Average_F:', '0.01424', '(95%-conf.int.', '0.01424', '-', '0.01424)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1128', 'P:136', 'F:9']
dict_values(["Many implementations of DOP1 therefore estimate the most probable parse by Monte Carlo techniques (Bod 1998; Chappelier & Rajman 2000), or by Viterbi n-best search (Bod 2001), or by restricting the set of subtrees (Sima'an 1999; Chappelier et al. 2002)."])
dict_values(['In this paper, we will estimate the most probable parse by computing the 10,000 most probable derivations by means of Viterbi n-best, from which the most likely parse is estimated by summing up the probabilities of the derivations that generate the same parse.', "Many implementations of DOP1 therefore estimate the most probable parse by Monte Carlo techniques (Bod 1998; Chappelier & Rajman 2000), or by Viterbi n-best search (Bod 2001), or by restricting the set of subtrees (Sima'an 1999; Chappelier et al. 2002).", "Sima'an (1995) gave an efficient algorithm for computing the parse tree generated by the most probable derivation, which in some cases is a reasonable approximation of the most probable parse."])
['system', 'ROUGE-S*', 'Average_R:', '0.17534', '(95%-conf.int.', '0.17534', '-', '0.17534)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.29836', '(95%-conf.int.', '0.29836', '-', '0.29836)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1711', 'P:300', 'F:300']
dict_values(["Although Bod's method obtains very competitive results on the Wall Street Journal (WSJ) task, the parsing time was reported to be over 200 seconds per sentence (Bod 2003)."])
dict_values(['The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.', 'It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).', "This paper presents the first published results with Goodman's PCFG-reductions of both Bonnema et al. 's (1999) and Bod's (2001) estimators on the WSJ."])
['system', 'ROUGE-S*', 'Average_R:', '0.01661', '(95%-conf.int.', '0.01661', '-', '0.01661)']
['system', 'ROUGE-S*', 'Average_P:', '0.09804', '(95%-conf.int.', '0.09804', '-', '0.09804)']
['system', 'ROUGE-S*', 'Average_F:', '0.02841', '(95%-conf.int.', '0.02841', '-', '0.02841)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:903', 'P:153', 'F:15']
dict_values(["While the PCFG reduction of Bod (2001) obtains state-of-the-art results on the WSJ, comparable to Charniak (2000), Bonnema et al. 's estimator performs worse and is comparable to Collins (1996)."])
dict_values(['While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.', 'Together with a PCFGreduction of DOP we obtain improved accuracy and efficiency on the Wall Street Journal treebank Our results show an 11% relative reduction in error rate over previous models, and an average processing time of 3.6 seconds per WSJ sentence.', 'This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00381', '(95%-conf.int.', '0.00381', '-', '0.00381)']
['system', 'ROUGE-S*', 'Average_P:', '0.05263', '(95%-conf.int.', '0.05263', '-', '0.05263)']
['system', 'ROUGE-S*', 'Average_F:', '0.00710', '(95%-conf.int.', '0.00710', '-', '0.00710)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2628', 'P:190', 'F:10']
dict_values(['The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.'])
dict_values(['Compared to the reranking technique in Collins (2000), who obtained an LP of 89.9% and an LR of 89.6%, our results show a 9% relative error rate reduction.', 'The highest accuracy is obtained by SL-DOP at 12 n 14: an LP of 90.8% and an LR of 90.7%.', 'This paper showed that a PCFG-reduction of DOP in combination with a new notion of the best parse tree results in fast processing times and very competitive accuracy on the Wall Street Journal treebank.'])
['system', 'ROUGE-S*', 'Average_R:', '0.06118', '(95%-conf.int.', '0.06118', '-', '0.06118)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.11530', '(95%-conf.int.', '0.11530', '-', '0.11530)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1275', 'P:78', 'F:78']
dict_values(['Goodman (1996, 1998) developed a polynomial time PCFG-reduction of DOP1 whose size is linear in the size of the training set, thus converting the exponential number of subtrees to a compact grammar.'])
dict_values(['As an alternative, Bonnema et al. (1999) propose a subtree estimator which reduces the probability of a tree by a factor of two for each non-root non-terminal it contains.', 'DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).', 'The probability of a parse tree is computed from the occurrencefrequencies of the subtrees in the treebank.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00150', '(95%-conf.int.', '0.00150', '-', '0.00150)']
['system', 'ROUGE-S*', 'Average_P:', '0.00526', '(95%-conf.int.', '0.00526', '-', '0.00526)']
['system', 'ROUGE-S*', 'Average_F:', '0.00234', '(95%-conf.int.', '0.00234', '-', '0.00234)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:666', 'P:190', 'F:1']
0.3382419966175801 0.054532999454669995 0.09054799909452001





input/ref/Task1/A00-2018_vardha.csv
input/res/Task1/A00-2018.annv3.csv
parsing: input/ref/Task1/A00-2018_vardha.csv
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length &lt; 40, and 89.5% for sentences of length &lt; 100, when trained and tested on the previously established [5,9,10,15,17] &amp;quot;standard&amp;quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'"]
'5'
['5']
parsed_discourse_facet ['method_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length &lt; 40, and 89.5% for sentences of length &lt; 100, when trained and tested on the previously established [5,9,10,15,17] &amp;quot;standard&amp;quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'"]
'5'
['5']
parsed_discourse_facet ['method_citation']
<S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'91'"]
'91'
['91']
parsed_discourse_facet ['method_citation']
<S sid="39" ssid="8">In our work we assume that any feature can occur at most once, so features are boolean-valued: 0 if the pattern does not occur, 1 if it does.</S>
original cit marker offset is 0
new cit marker offset is 0



["'39'"]
'39'
['39']
parsed_discourse_facet ['method_citation']
<S sid="162" ssid="53">Given we are already at the 88% level of accuracy, we judge a 0.6% improvement to be very much worth while.</S>
original cit marker offset is 0
new cit marker offset is 0



["'162'"]
'162'
['162']
parsed_discourse_facet ['method_citation']
 <S sid="87" ssid="56">In a pure maximum-entropy model this is done by feature selection, as in Ratnaparkhi's maximum-entropy parser [17].</S>
original cit marker offset is 0
new cit marker offset is 0



["'87'"]
'87'
['87']
parsed_discourse_facet ['method_citation']
<S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'91'"]
'91'
['91']
parsed_discourse_facet ['method_citation']
 <S sid="176" ssid="3">That the previous three best parsers on this test [5,9,17] all perform within a percentage point of each other, despite quite different basic mechanisms, led some researchers to wonder if there might be some maximum level of parsing performance that could be obtained using the treebank for training, and to conjecture that perhaps we were at it.</S>
original cit marker offset is 0
new cit marker offset is 0



["'176'"]
'176'
['176']
parsed_discourse_facet ['method_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length &lt; 40 and 89.5% on sentences of length &lt; 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'"]
'174'
['174']
parsed_discourse_facet ['method_citation']
 <S sid="101" ssid="12">In keeping with the standard methodology [5, 9,10,15,17], we used the Penn Wall Street Journal tree-bank [16] with sections 2-21 for training, section 23 for testing, and section 24 for development (debugging and tuning).</S>
original cit marker offset is 0
new cit marker offset is 0



["'101'"]
'101'
['101']
parsed_discourse_facet ['method_citation']
<S sid="155" ssid="46">For example, in the Penn Treebank a vp with both main and auxiliary verbs has the structure shown in Figure 3.</S>
original cit marker offset is 0
new cit marker offset is 0



["'155'"]
'155'
['155']
parsed_discourse_facet ['method_citation']
  <S sid="17" ssid="6">In Section 5 we present some results in which the possible expansions of a constituent are fixed in advanced by extracting a tree-bank grammar [3] from the training corpus.</S>
original cit marker offset is 0
new cit marker offset is 0



["'17'"]
'17'
['17']
parsed_discourse_facet ['method_citation']
<S sid="162" ssid="53">Given we are already at the 88% level of accuracy, we judge a 0.6% improvement to be very much worth while.</S>
original cit marker offset is 0
new cit marker offset is 0



["'162'"]
'162'
['162']
parsed_discourse_facet ['method_citation']
 <S sid="40" ssid="9">In the parser we further assume that features are chosen from certain feature schemata and that every feature is a boolean conjunction of sub-features.</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'"]
'40'
['40']
parsed_discourse_facet ['method_citation']
 <S sid="79" ssid="48">We comment on this because in our example we can substantially speed up the process by choosing values picked so that, when the maximum-entropy equation is expressed in the form of Equation 4, the gi have as their initial values the values of the corresponding terms in Equation 7.</S>
original cit marker offset is 0
new cit marker offset is 0



["'79'"]
'79'
['79']
parsed_discourse_facet ['method_citation']
    <S sid="40" ssid="9">In the parser we further assume that features are chosen from certain feature schemata and that every feature is a boolean conjunction of sub-features.</S>
original cit marker offset is 0
new cit marker offset is 0



["'40'"]
'40'
['40']
parsed_discourse_facet ['method_citation']
    <S sid="175" ssid="2">This corresponds to an error reduction of 13% over the best previously published single parser results on this test set, those of Collins [9].</S>
original cit marker offset is 0
new cit marker offset is 0



["'175'"]
'175'
['175']
parsed_discourse_facet ['method_citation']
parsing: input/res/Task1/A00-2018.annv3.csv
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'5'", "'174'"]
'130'
'5'
'174'
['130', '5', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'130'", "'5'"]
'174'
'130'
'5'
['174', '130', '5']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'91'", "'174'"]
'130'
'91'
'174'
['130', '91', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'1'", "'174'"]
'130'
'1'
'174'
['130', '1', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="7" ssid="3">Following [5,10], our parser is based upon a probabilistic generative model.</S><S sid="91" ssid="2">As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'7'", "'91'"]
'5'
'7'
'91'
['5', '7', '91']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'5'", "'1'"]
'174'
'5'
'1'
['174', '5', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="7" ssid="3">Following [5,10], our parser is based upon a probabilistic generative model.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'7'", "'130'"]
'5'
'7'
'130'
['5', '7', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'174'", "'5'", "'1'"]
'174'
'5'
'1'
['174', '5', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="114" ssid="5">That parser, as stated in Figure 1, achieves an average precision/recall of 87.5.</S>
original cit marker offset is 0
new cit marker offset is 0



["'130'", "'174'", "'114'"]
'130'
'174'
'114'
['130', '174', '114']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
<S sid="141" ssid="32">(For example, part-ofspeech tagging using the most probable preterminal for each word is 90% accurate [8].)</S><S sid="125" ssid="16">For example, the final version of our system achieves an average precision/recall of 90.1% on the test corpus but an average precision/recall of only 89.7% on the development corpus.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S>
original cit marker offset is 0
new cit marker offset is 0



["'141'", "'125'", "'174'"]
'141'
'125'
'174'
['141', '125', '174']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'1'"]
'5'
'174'
'1'
['5', '174', '1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="1" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'1'"]
'1'
['1']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="115" ssid="6">As noted in [5], that system is based upon a &quot;tree-bank grammar&quot; - a grammar read directly off the training corpus.</S><S sid="129" ssid="20">It makes no use of special maximum-entropyinspired features (though their presence made it much easier to perform these experiments), it does not guess the pre-terminal before guessing the lexical head, and it uses a tree-bank grammar rather than a Markov grammar.</S><S sid="28" ssid="17">More generally, one can condition on the m previously generated labels, thereby obtaining an mth-order Markov grammar.</S>
original cit marker offset is 0
new cit marker offset is 0



["'115'", "'129'", "'28'"]
'115'
'129'
'28'
['115', '129', '28']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'130'"]
'5'
'174'
'130'
['5', '174', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S><S sid="174" ssid="1">We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length < 40 and 89.5% on sentences of length < 100.</S><S sid="130" ssid="21">This parser achieves an average precision/recall of 86.2%.</S>
original cit marker offset is 0
new cit marker offset is 0



["'5'", "'174'", "'130'"]
'5'
'174'
'130'
['5', '174', '130']
parsed_discourse_facet ['method_citation', 'aim_citation', 'results_citation', 'implication_citation']
<S sid="180" ssid="7">From our perspective, perhaps the two most important numbers to come out of this research are the overall error reduction of 13% over the results in [9] and the intermediateresult improvement of nearly 2% on labeled precision/recall due to the simple idea of guessing the head's pre-terminal before guessing the head.</S><S sid="184" ssid="11">The first is the slight, but important, improvement achieved by using this model over conventional deleted interpolation, as indicated in Figure 2.</S><S sid="5" ssid="1">We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length < 40, and 89.5% for sentences of length < 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.</S>
original cit marker offset is 0
new cit marker offset is 0



["'180'", "'184'", "'5'"]
'180'
'184'
'5'
['180', '184', '5']
parsed_discourse_facet ['method_citation', 'hypothesis_citation', 'results_citation', 'implication_citation']
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length &lt; 40, and 89.5% for sentences of length &lt; 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.'])
dict_values(['This parser achieves an average precision/recall of 86.2%.', 'We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.57667', '(95%-conf.int.', '0.57667', '-', '0.57667)']
['system', 'ROUGE-S*', 'Average_P:', '0.18288', '(95%-conf.int.', '0.18288', '-', '0.18288)']
['system', 'ROUGE-S*', 'Average_F:', '0.27769', '(95%-conf.int.', '0.27769', '-', '0.27769)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:300', 'P:946', 'F:173']
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length &lt; 40, and 89.5% for sentences of length &lt; 100, when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal tree-bank.'])
dict_values(['We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.27143', '(95%-conf.int.', '0.27143', '-', '0.27143)']
['system', 'ROUGE-S*', 'Average_P:', '0.06025', '(95%-conf.int.', '0.06025', '-', '0.06025)']
['system', 'ROUGE-S*', 'Average_F:', '0.09862', '(95%-conf.int.', '0.09862', '-', '0.09862)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:210', 'P:946', 'F:57']
dict_values(['As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.'])
dict_values(['This parser achieves an average precision/recall of 86.2%.', 'As the generative model is top-down and we use a standard bottom-up best-first probabilistic chart parser [2,7], we use the chart parser as a first pass to generate candidate possible parses to be evaluated in the second pass by our probabilistic model.', 'We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.18857', '(95%-conf.int.', '0.18857', '-', '0.18857)']
['system', 'ROUGE-S*', 'Average_P:', '1.00000', '(95%-conf.int.', '1.00000', '-', '1.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.31731', '(95%-conf.int.', '0.31731', '-', '0.31731)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1225', 'P:231', 'F:231']
dict_values(['In our work we assume that any feature can occur at most once, so features are boolean-valued: 0 if the pattern does not occur, 1 if it does.'])
dict_values(['This parser achieves an average precision/recall of 86.2%.', 'We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.', 'We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:2016', 'P:55', 'F:0']
dict_values(['Given we are already at the 88% level of accuracy, we judge a 0.6% improvement to be very much worth while.'])
dict_values(['We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:210', 'P:28', 'F:0']
dict_values(["In a pure maximum-entropy model this is done by feature selection, as in Ratnaparkhi's maximum-entropy parser [17]."])
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:153', 'P:55', 'F:0']
dict_values(['That the previous three best parsers on this test [5,9,17] all perform within a percentage point of each other, despite quite different basic mechanisms, led some researchers to wonder if there might be some maximum level of parsing performance that could be obtained using the treebank for training, and to conjecture that perhaps we were at it.'])
dict_values(['This parser achieves an average precision/recall of 86.2%.', 'We have presented a lexicalized Markov grammar parsing model that achieves (using the now standard training/testing/development sections of the Penn treebank) an average precision/recall of 91.1% on sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.01852', '(95%-conf.int.', '0.01852', '-', '0.01852)']
['system', 'ROUGE-S*', 'Average_P:', '0.03333', '(95%-conf.int.', '0.03333', '-', '0.03333)']
['system', 'ROUGE-S*', 'Average_F:', '0.02381', '(95%-conf.int.', '0.02381', '-', '0.02381)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:378', 'P:210', 'F:7']
dict_values(['Given we are already at the 88% level of accuracy, we judge a 0.6% improvement to be very much worth while.'])
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees that achieves 90.1% average precision/recall for sentences of 40 and less, and for of length 100 and less when trained and tested on the previously established [5,9,10,15,17] &quot;standard&quot; sections of the Wall Street Journal treebank.'])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:630', 'P:28', 'F:0']
dict_values(['We comment on this because in our example we can substantially speed up the process by choosing values picked so that, when the maximum-entropy equation is expressed in the form of Equation 4, the gi have as their initial values the values of the corresponding terms in Equation 7.'])
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:153', 'P:210', 'F:0']
dict_values(['In the parser we further assume that features are chosen from certain feature schemata and that every feature is a boolean conjunction of sub-features.'])
dict_values(['We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_P:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Average_F:', '0.00000', '(95%-conf.int.', '0.00000', '-', '0.00000)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:153', 'P:45', 'F:0']
dict_values(['This corresponds to an error reduction of 13% over the best previously published single parser results on this test set, those of Collins [9].'])
dict_values(["From our perspective, perhaps the two most important numbers to come out of this research are the overall error reduction of 13% over the results in [9] and the intermediateresult improvement of nearly 2% on labeled precision/recall due to the simple idea of guessing the head's pre-terminal before guessing the head.", 'The first is the slight, but important, improvement achieved by using this model over conventional deleted interpolation, as indicated in Figure 2.', 'We present a new parser for parsing down to Penn tree-bank style parse trees [16] that achieves 90.1% average precision/recall for sentences of length '])
['system', 'ROUGE-S*', 'Average_R:', '0.00943', '(95%-conf.int.', '0.00943', '-', '0.00943)']
['system', 'ROUGE-S*', 'Average_P:', '0.16667', '(95%-conf.int.', '0.16667', '-', '0.16667)']
['system', 'ROUGE-S*', 'Average_F:', '0.01786', '(95%-conf.int.', '0.01786', '-', '0.01786)']
['system', 'ROUGE-S*', 'Eval', 'test.system', 'R:1378', 'P:78', 'F:13']
0.131193635170967 0.09678363548378514 0.06684454484686776
