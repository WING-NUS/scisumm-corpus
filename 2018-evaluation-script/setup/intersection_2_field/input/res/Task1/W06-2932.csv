Citance Number,Reference Article,Citing Article,Citation Marker Offset,Citation Marker,Citation Offset,Citation Text,Citation Text Clean,Reference Offset,Reference Text,Discourse Facet
2,W06-2932,W06-2920,,"McDonald et al, 2006",0.0,"Introduce through post-processing ,e.g. through reattachment rules (Bick, 2006) or if the change increases overall parse tree probability (McDonald et al, 2006)","Introduce through post-processing ,e.g. through reattachment rules (Bick, 2006) or if the change increases overall parse tree probability (McDonald et al, 2006)","'11','7','57','5'","<S sid=""11"" ssid=""7"">This has been shown through their successful use in many standard natural language processing tasks, including machine translation (Ding and Palmer, 2005), sentence compression (McDonald, 2006), and textual inference (Haghighi et al., 2005).</S><S sid=""7"" ssid=""3"">However, recently their has been a revived interest in parsing models that produce dependency graph representations of sentences, which model words and their arguments through directed edges (Hudson, 1984; Mel'&#711;cuk, 1988).</S><S sid=""57"" ssid=""5"">Performance is measured through unlabeled accuracy, which is the percentage of words that modify the correct head in the dependency graph, and labeled accuracy, which is the percentage of words that modify the correct head and label the dependency edge correctly in the graph.</S><S sid=""5"" ssid=""1"">Often in language processing we require a deep syntactic representation of a sentence in order to assist further processing.</S>","['method_citation','results_citation']"
3,W06-2932,W06-2920,0.0,2006,0.0,Table 5 shows the official results for submitted parser outputs.31 The two participant groups with the highest total score are McDonald et al (2006) and Nivre et al (2006),Table 5 shows the official results for submitted parser outputs. The two participant groups with the highest total score are McDonald et al (2006) and Nivre et al (2006),'37',"<S sid=""37"" ssid=""6"">The simplest labeler would be to take as input an edge (i, j) E y for sentence x and find the label with highest score, Doing this for each edge in the tree would produce the final output.</S>",['method_citation']
4,W06-2932,W06-2920,0.0,2006,0.0,"Even though McDonald et al (2006) and Nivre et al (2006) obtained very similar overall scores, a more detailed look at their performance shows clear differences","Even though McDonald et al (2006) and Nivre et al (2006) obtained very similar overall scores, a more detailed look at their performance shows clear differences",'77',"<S sid=""77"" ssid=""15"">Similar improvements are common across all languages, though not as dramatic.</S>",['method_citation']
5,W06-2932,W08-1007,0.0,2006,0.0,"The high est score on parsing German in the CoNLL-X shared task was obtained by the system of McDonald et al (2006) with a LAS of 87.34 based on the TIGER tree bank, but we want to stress that these results are not comparable due to different data sets (anda different policy regarding the inclusion of punctuation) .The constituency versions were evaluated according to the labeled recall (LR), labeled precision (LP) and labeled F-score (LF)","The highest score on parsing German in the CoNLL-X shared task was obtained by the system of McDonald et al (2006) with a LAS of 87.34 based on the TIGER tree bank, but we want to stress that these results are not comparable due to different data sets (and a different policy regarding the inclusion of punctuation). The constituency versions were evaluated according to the labeled recall (LR), labeled precision (LP) and labeled F-score (LF)","'4','37'","<S sid=""4"" ssid=""4"">We report results on the CoNLL-X shared task (Buchholz et al., 2006) data sets and present an error analysis.</S><S sid=""37"" ssid=""6"">The simplest labeler would be to take as input an edge (i, j) E y for sentence x and find the label with highest score, Doing this for each edge in the tree would produce the final output.</S>",['method_citation']
6,W06-2932,W09-1210,0.0,2006,,McDonald et al (2006) use an additional algorithm,McDonald et al (2006) use an additional algorithm,"'23','18'","<S sid=""23"" ssid=""5"">That system uses MIRA, an online large-margin learning algorithm, to compute model parameters.</S><S sid=""18"" ssid=""14"">We Proceedings of the 10th Conference on Computational Natural Language Learning (CoNLL-X), pages 216&#8211;220, New York City, June 2006. c&#65533;2006 Association for Computational Linguistics assume that all dependency graphs are trees but may be non-projective, both of which are true in the data sets we use.</S>",['method_citation']
7,W06-2932,W12-3407,0.0,"McDonald et al, 2006",0.0,"Regarding the data-driven parsers, we have made use of MaltParser (Nivre et al, 2007b) and MST Parser (McDonald et al, 2006), two state of the art dependency parsers representing two dominant approaches in data-driven dependency parsing, and that have been successfully applied to typologically different languages and tree banks (McDonald and Nivre, 2007)","Regarding the data-driven parsers, we have made use of MaltParser (Nivre et al, 2007b) and MST Parser (McDonald et al, 2006), two state of the art dependency parsers representing two dominant approaches in data-driven dependency parsing, and that have been successfully applied to typologically different languages and tree banks (McDonald and Nivre, 2007)","'0','12'","<S sid=""0"">Multilingual Dependency Analysis with a Two-Stage Discriminative Parser</S><S sid=""12"" ssid=""8"">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S>",['method_citation']
8,W06-2932,I08-1012,0.0,"McDonald et al, 2006",0.0,"In fact, our approach can also be applied to other parsers, such as (Yamada and Matsumoto, 2003)? s parser, (McDonald et al., 2006)? s parser, and so on","In fact, our approach can also be applied to other parsers, such as (Yamada and Matsumoto, 2003)'s parser, (McDonald et al., 2006)'s parser, and so on","'12','36'","<S sid=""12"" ssid=""8"">In this paper we describe a two-stage discriminative parsing approach consisting of an unlabeled parser and a subsequent edge labeler.</S><S sid=""36"" ssid=""5"">However, in a two stage system we can incorporate features over the entire output of the unlabeled parser since that structure is fixed as input.</S>",['method_citation']
11,W06-2932,N07-1050,0.0,"McDonald et al, 2006",0.0,"We have shown that, for languages with a7McDonald et al (2006) use post-processing for non projective dependencies and for labeling",McDonald et al (2006) use post-processing for non-projective dependencies and for labeling,"'18','11','22'","<S sid=""18"" ssid=""14"">We Proceedings of the 10th Conference on Computational Natural Language Learning (CoNLL-X), pages 216&#8211;220, New York City, June 2006. c&#65533;2006 Association for Computational Linguistics assume that all dependency graphs are trees but may be non-projective, both of which are true in the data sets we use.</S><S sid=""11"" ssid=""7"">This has been shown through their successful use in many standard natural language processing tasks, including machine translation (Ding and Palmer, 2005), sentence compression (McDonald, 2006), and textual inference (Haghighi et al., 2005).</S><S sid=""22"" ssid=""4"">An exact projective and an approximate non-projective parsing algorithm are presented, since it is shown that nonprojective dependency parsing becomes NP-hard when features are extended beyond a single edge.</S>",['method_citation']
12,W06-2932,D07-1122,0.0,"McDonald et al, 2006",0.0,"As described in (McDonald et al, 2006), we treat the labeling of dependencies as a sequence labeling problem","As described in (McDonald et al, 2006), we treat the labeling of dependencies as a sequence labeling problem",'41',"<S sid=""41"" ssid=""10"">To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm&#65533;1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm&#8722;1) in the tree y.</S>",['method_citation']
14,W06-2932,D07-1015,0.0,2006,0.0,5It should be noted that McDonald et al (2006) use a richer feature set that is incomparable to our features,It should be noted that McDonald et al (2006) use a richer feature set that is incomparable to our features,"'31','110'","<S sid=""31"" ssid=""13"">Not all data sets in our experiments include morphological features, so we use them only when available.</S><S sid=""110"" ssid=""7"">It is our hope that a better morphological feature set will help with both unlabeled parsing and labeling for highly inflected languages.</S>","['method_citation','results_citation']"
18,W06-2932,D10-1004,0.0,2006,0.0,"Entries marked with? are the highest reported in the literature, to the best of our knowledge, beating (sometimes slightly) McDonald et al (2006), Martins et al (2008), Martins et al (2009), and, in the case of English Proj., also the third-order parser of Koo and Collins (2010), which achieves 93.04% on that dataset (their experiments in Czech are not comparable, since the datasets are different)","Entries marked with are the highest reported in the literature, to the best of our knowledge, beating (sometimes slightly) McDonald et al (2006), Martins et al (2008), Martins et al (2009), and, in the case of English Proj., also the third-order parser of Koo and Collins (2010), which achieves 93.04% on that dataset (their experiments in Czech are not comparable, since the datasets are different)","'45','61','31'","<S sid=""45"" ssid=""14"">Furthermore, it made the system homogeneous in terms of learning algorithms since that is what is used to train our unlabeled parser (McDonald and Pereira, 2006).</S><S sid=""61"" ssid=""9"">In fact, for every language our models perform significantly higher than the average performance for all the systems reported in Buchholz et al. (2006).</S><S sid=""31"" ssid=""13"">Not all data sets in our experiments include morphological features, so we use them only when available.</S>","['method_citation','results_citation']"
19,W06-2932,P08-1108,0.0,"McDonald et al, 2006",0.0,"The specific graph-based model studied in this work is that presented by McDonald et al (2006), which factors scores over pairs of arcs (instead of just single arcs) and uses near exhaustive search for unlabeled parsing coupled with a separate classifier to label each arc. We call this system MSTParser, or simply MST for short, which is also the name of the freely available implementation.2 2.3 Transition-Based Models","The specific graph-based model studied in this work is that presented by McDonald et al (2006), which factors scores over pairs of arcs (instead of just single arcs) and uses near exhaustive search for unlabeled parsing coupled with a separate classifier to label each arc. We call this system MSTParser, or simply MST for short, which is also the name of the freely available implementation.",'35',"<S sid=""35"" ssid=""4"">In our case this means we are forced only to consider features over single edges or pairs of edges.</S>",['method_citation']
20,W06-2932,P08-1108,0.0,"McDonald et al, 2006",0.0,"More precisely, dependency arcs (or pairs of arcs) are first represented by a high dimensional feature vector f (i, j, l)? Rk, where f is typically a bi nary feature vector over properties of the arc as well as the surrounding input (McDonald et al, 2005a; McDonald et al, 2006)","More precisely, dependency arcs (or pairs of arcs) are first represented by a high dimensional feature vector f (i, j, l) Rk, where f is typically a binary feature vector over properties of the arc as well as the surrounding input (McDonald et al, 2005a; McDonald et al, 2006)","'43','16','41'","<S sid=""43"" ssid=""12"">For score functions, we use simple dot products between high dimensional feature representations and a weight vector Assuming we have an appropriate feature representation, we can find the highest scoring label sequence with Viterbi&#8217;s algorithm.</S><S sid=""16"" ssid=""12"">A dependency graph is represented by a set of ordered pairs (i, j) E y in which xj is a dependent and xi is the corresponding head.</S><S sid=""41"" ssid=""10"">To model this we treat the labeling of the edges (i, j1), ... , (i, jM) as a sequence labeling problem, We use a first-order Markov factorization of the score s(l(i,jm), l(i,jm&#65533;1), i, y, x) in which each factor is the score of labeling the adjacent edges (i, jm) and (i, jm&#8722;1) in the tree y.</S>",['method_citation']
