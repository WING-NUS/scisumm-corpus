Improving the Performance of the Random Walk Model for Answering Complex Questions
Proceedings of ACL-08: HLT, Short Papers (Companion Volume), pages 9–12,Columbus, Ohio, USA, June 2008. c©2008 Association for Computational Linguistics
Improving the Performance of the Random Walk Model for AnsweringComplex Questions
Yllias Chali and Shafiq R. JotyUniversity of Lethbridge4401 University Drive
Lethbridge, Alberta, Canada, T1K 3M4{chali,jotys}@cs.uleth.ca
Abstract
We consider the problem of answering com-plex questions that require inferencing andsynthesizing information from multiple doc-uments and can be seen as a kind of topic-oriented, informative multi-document summa-rization. The stochastic, graph-based methodfor computing the relative importance of tex-tual units (i.e. sentences) is very successfulin generic summarization. In this method,a sentence is encoded as a vector in whicheach component represents the occurrence fre-quency (TF*IDF) of a word. However, themajor limitation of the TF*IDF approach isthat it only retains the frequency of the wordsand does not take into account the sequence,syntactic and semantic information. In this pa-per, we study the impact of syntactic and shal-low semantic information in the graph-basedmethod for answering complex questions.
1 Introduction
After having made substantial headway in factoidand list questions, researchers have turned their at-tention to more complex information needs that can-not be answered by simply extracting named en-tities like persons, organizations, locations, dates,etc. Unlike informationally-simple factoid ques-tions, complex questions often seek multiple differ-ent types of information simultaneously and do notpresupposed that one single answer could meet allof its information needs. For example, with complexquestions like “What are the causes of AIDS?”, thewider focus of this question suggests that the sub-mitter may not have a single or well-defined infor-
mation need and therefore may be amenable to re-ceiving additional supporting information that is rel-evant to some (as yet) undefined informational goal.This type of questions require inferencing and syn-thesizing information from multiple documents. InNatural Language Processing (NLP), this informa-tion synthesis can be seen as a kind of topic-oriented,informative multi-document summarization, wherethe goal is to produce a single text as a compressedversion of a set of documents with a minimum lossof relevant information.
Recently, the graph-based method (LexRank) isapplied successfully to generic, multi-documentsummarization (Erkan and Radev, 2004). A topic-sensitive LexRank is proposed in (Otterbacher et al.,2005). In this method, a sentence is mapped to a vec-tor in which each element represents the occurrencefrequency (TF*IDF) of a word. However, the majorlimitation of the TF*IDF approach is that it only re-tains the frequency of the words and does not takeinto account the sequence, syntactic and semanticinformation thus cannot distinguish between “Thehero killed the villain” and “The villain killed thehero”. The task like answering complex questionsthat requires the use of more complex syntactic andsemantics, the approaches with only TF*IDF are of-ten inadequate to perform fine-level textual analysis.
In this paper, we extensively study the impactof syntactic and shallow semantic information inmeasuring similarity between the sentences in therandom walk model for answering complex ques-tions. We argue that for this task, similarity mea-sures based on syntactic and semantic informationperforms better and can be used to characterize the
9
relation between a question and a sentence (answer)in a more effective way than the traditional TF*IDFbased similarity measures.
2 Graph-based Random Walk Model forText Summarization
In (Erkan and Radev, 2004), the concept of graph-based centrality is used to rank a set of sentences,in producing generic multi-document summaries. Asimilarity graph is produced where each node repre-sents a sentence in the collection and the edges be-tween nodes measure the cosine similarity betweenthe respective pair of sentences. Each sentence isrepresented as a vector of term specific weights. Theterm specific weights in the sentence vectors areproducts of term frequency (tf) and inverse docu-ment frequency (idf). The degree of a given nodeis an indication of how much important the sentenceis. To apply LexRank to query-focused context, atopic-sensitive version of LexRank is proposed in(Otterbacher et al., 2005). The score of a sentence isdetermined by a mixture model:
p(s|q) = d× rel(s|q)?z?C rel(z|q)
+ (1- d)
×?v?C
sim(s, v)?z?C sim(z, v)
× p(v|q) (1)
Where, p(s|q) is the score of a sentence s given aquestion q, is determined as the sum of its relevanceto the question (i.e. rel(s|q)) and the similarity toother sentences in the collection (i.e. sim(s, v)).The denominators in both terms are for normaliza-tion. C is the set of all sentences in the collection.The value of the parameter d which we call “bias”,is a trade-off between two terms in the equation andis set empirically. We claim that for a complex tasklike answering complex questions where the related-ness between the query sentences and the documentsentences is an important factor, the graph-basedrandom walk model of ranking sentences would per-form better if we could encode the syntactic and se-mantic information instead of just the bag of word(i.e. TF*IDF) information in calculating the similar-ity between sentences. Thus, our mixture model foranswering complex questions is:
p(s|q) = d× TREESIM(s, q) + (1- d)×
?v?C
TREESIM(s, v)× p(v|q) (2)
Figure 1: Example of semantic trees
Where TREESIM(s,q) is the normalized syntactic(and/or semantic) similarity between the query (q)and the document sentence (s) and C is the set ofall sentences in the collection. In cases where thequery is composed of two or more sentences, wecompute the similarity between the document sen-tence (s) and each of the query-sentences (qi) thenwe take the average of the scores.
3 Encoding Syntactic and ShallowSemantic Structures
Encoding syntactic structure is easier and straightforward. Given a sentence (or query), we first parseit into a syntactic tree using a syntactic parser (i.e.Charniak parser) and then we calculate the similaritybetween the two trees using the general tree kernelfunction (Section 4.1).
Initiatives such as PropBank (PB) (Kingsbury andPalmer, 2002) have made possible the design ofaccurate automatic Semantic Role Labeling (SRL)systems like ASSERT (Hacioglu et al., 2003). Forexample, consider the PB annotation:
[ARG0 all][TARGET use][ARG1 the frenchfranc][ARG2 as their currency]
Such annotation can be used to design a shallowsemantic representation that can be matched againstother semantically similar sentences, e.g.
[ARG0 the Vatican][TARGET use][ARG1 theItalian lira][ARG2 as their currency]
In order to calculate the semantic similarity be-tween the sentences, we first represent the annotatedsentence using the tree structures like Figure 1 whichwe call Semantic Tree (ST). In the semantic tree, ar-guments are replaced with the most important word-often referred to as the semantic head.
The sentences may contain one or more subordi-nate clauses. For example the sentence, “the Vati-can, located wholly within Italy uses the Italian lira
10
Figure 2: Two STs composing a STN
as their currency.” gives the STs as in Figure 2. Aswe can see in Figure 2(A), when an argument nodecorresponds to an entire subordinate clause, we la-bel its leaf with ST , e.g. the leaf of ARG0. Such STnode is actually the root of the subordinate clausein Figure 2(B). If taken separately, such STs do notexpress the whole meaning of the sentence, hence itis more accurate to define a single structure encod-ing the dependency between the two predicates as inFigure 2(C). We refer to this kind of nested STs asSTNs.
4 Syntactic and Semantic Kernels for Text
4.1 Tree Kernels
Once we build the trees (syntactic or semantic),our next task is to measure the similarity be-tween the trees. For this, every tree T is rep-resented by an m dimensional vector v(T ) =(v1(T ), v2(T ), · · · vm(T )), where the i-th elementvi(T ) is the number of occurrences of the i-th treefragment in tree T . The tree fragments of a tree areall of its sub-trees which include at least one produc-tion with the restriction that no production rules canbe broken into incomplete parts.
Implicitly we enumerate all the possible tree frag-ments 1, 2, · · · ,m. These fragments are the axisof this m-dimensional space. Note that this couldbe done only implicitly, since the number m is ex-tremely large. Because of this, (Collins and Duffy,2001) defines the tree kernel algorithm whose com-putational complexity does not depend on m. Wefollowed the similar approach to compute the treekernel between two syntactic trees.
4.2 Shallow Semantic Tree Kernel (SSTK)
Note that, the tree kernel (TK) function defined in(Collins and Duffy, 2001) computes the number ofcommon subtrees between two trees. Such subtreesare subject to the constraint that their nodes are takenwith all or none of the children they have in the orig-inal tree. Though, this definition of subtrees makesthe TK function appropriate for syntactic trees butat the same time makes it not well suited for the se-mantic trees (ST) defined in Section 3. For instance,although the two STs of Figure 1 share most of thesubtrees rooted in the ST node, the kernel definedabove computes no match.
The critical aspect of the TK function is that theproductions of two evaluated nodes have to be iden-tical to allow the match of further descendants. Thismeans that common substructures cannot be com-posed by a node with only some of its children asan effective ST representation would require. Mos-chitti et al. (2007) solve this problem by designingthe Shallow Semantic Tree Kernel (SSTK) whichallows to match portions of a ST. We followed thesimilar approach to compute the SSTK.
5 Experiments
5.1 Evaluation Setup
The Document Understanding Conference (DUC)series is run by the National Institute of Standardsand Technology (NIST) to further progress in sum-marization and enable researchers to participate inlarge-scale experiments. We used the DUC 2007datasets for evaluation.
We carried out automatic evaluation of our sum-maries using ROUGE (Lin, 2004) toolkit, whichhas been widely adopted by DUC for automaticsummarization evaluation. It measures summaryquality by counting overlapping units such as then-gram (ROUGE-N), word sequences (ROUGE-Land ROUGE-W) and word pairs (ROUGE-S andROUGE-SU) between the candidate summary andthe reference summary. ROUGE parameters wereset as the same as DUC 2007 evaluation setup. Allthe ROUGE measures were calculated by runningROUGE-1.5.5 with stemming but no removal ofstopwords. The ROUGE run-time parameters are:
ROUGE-1.5.5.pl -2 -1 -u -r 1000 -t 0 -n 4 -w 1.2-m -l 250 -a
11
The purpose of our experiments is to study theimpact of the syntactic and semantic representationfor complex question answering task. To accomplishthis, we generate summaries for the topics of DUC2007 by each of our four systems defined as below:(1) TF*IDF: system is the original topic-sensitiveLexRank described in Section 2 that uses the simi-larity measures based on tf*idf.(2) SYN: system measures the similarity betweenthe sentences using the syntactic tree and the gen-eral tree kernel function defined in Section 4.1.(3) SEM: system measures the similarity betweenthe sentences using the shallow semantic tree andthe shallow semantic tree kernel function defined inSection 4.2.(4) SYNSEM: system measures the similarity be-tween the sentences using both the syntactic andshallow semantic trees and their associated kernels.For each sentence it measures the syntactic and se-mantic similarity with the query and takes the aver-age of these measures.
5.2 Evaluation Results
The comparison between the systems in terms oftheir F-scores is given in Table 1. The SYN systemimproves the ROUGE-1, ROUGE-L and ROUGE-W scores over the TF*IDF system by 2.84%, 0.53%and 2.14% respectively. The SEM system im-proves the ROUGE-1, ROUGE-L, ROUGE-W, andROUGE-SU scores over the TF*IDF system by8.46%, 6.54%, 6.56%, and 11.68%, and over theSYN system by 5.46%, 5.98%, 4.33%, and 12.97%respectively. The SYNSEM system improves theROUGE-1, ROUGE-L, ROUGE-W, and ROUGE-SU scores over the TF*IDF system by 4.64%,1.63%, 2.15%, and 4.06%, and over the SYN sys-tem by 1.74%, 1.09%, 0%, and 5.26% respectively.The SEM system improves the ROUGE-1, ROUGE-L, ROUGE-W, and ROUGE-SU scores over theSYNSEM system by 3.65%, 4.84%, 4.32%, and7.33% respectively which indicates that includingsyntactic feature with the semantic feature degradesthe performance.
6 Conclusion
In this paper, we have introduced the syntactic andshallow semantic structures and discussed their im-
Systems ROUGE 1 ROUGE L ROUGE W ROUGE SUTF*IDF 0.359458 0.334882 0.124226 0.130603SYN 0.369677 0.336673 0.126890 0.129109SEM 0.389865 0.356792 0.132378 0.145859SYNSEM 0.376126 0.340330 0.126894 0.135901
Table 1: ROUGE F-scores for different systems
pacts in measuring the similarity between the sen-tences in the random walk framework for answer-ing complex questions. Our experiments suggest thefollowing: (a) similarity measures based on the syn-tactic tree and/or shallow semantic tree outperformsthe similarity measures based on the TF*IDF and (b)similarity measures based on the shallow semantictree performs best for this problem.
ReferencesM. Collins and N. Duffy. 2001. Convolution Kernels for
Natural Language. In Proceedings of Neural Informa-tion Processing Systems, pages 625–632, Vancouver,Canada.
G. Erkan and D. R. Radev. 2004. LexRank: Graph-based Lexical Centrality as Salience in Text Summa-rization. Journal of Artificial Intelligence Research,22:457–479.
K. Hacioglu, S. Pradhan, W. Ward, J. H. Martin, andD. Jurafsky. 2003. Shallow Semantic Parsing UsingSupport Vector Machines. In Technical Report TR-CSLR-2003-03, University of Colorado.
P. Kingsbury and M. Palmer. 2002. From Treebank toPropBank. In Proceedings of the international con-ference on Language Resources and Evaluation, LasPalmas, Spain.
C. Y. Lin. 2004. ROUGE: A Package for Auto-matic Evaluation of Summaries. In Proceedings ofWorkshop on Text Summarization Branches Out, Post-Conference Workshop of Association for Computa-tional Linguistics, pages 74–81, Barcelona, Spain.
A. Moschitti, S. Quarteroni, R. Basili, and S. Manand-har. 2007. Exploiting Syntactic and Shallow Seman-tic Kernels for Question/Answer Classificaion. In Pro-ceedings of the 45th Annual Meeting of the Associationof Computational Linguistics, pages 776–783, Prague,Czech Republic. ACL.
J. Otterbacher, G. Erkan, and D. R. Radev. 2005. Us-ing Random Walks for Question-focused Sentence Re-trieval. In Proceedings of Human Language Technol-ogy Conference and Conference on Empirical Meth-ods in Natural Language Processing, pages 915–922,Vancouver, Canada.
12
