<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">We propose a method to acquire paraphrases from the Web in accordance with a given sentence.</S>
		<S sid ="2" ssid = "2">For example, consider an input sentence “Lemon is a high vitamin c fruit”.</S>
		<S sid ="3" ssid = "3">Its paraphrases are expressions or sentences that convey the same meaning but are diﬀerent syntactically, such as “Lemons are rich in vitamin c”, or “Lemons contain a lot of vitamin c”.</S>
		<S sid ="4" ssid = "4">We aim at ﬁnding sentence-level paraphrases from the noisy Web, instead of domain-speciﬁc corpora.</S>
		<S sid ="5" ssid = "5">By observing search results of paraphrases, users are able to estimate the likelihood of the sentence as a fact.</S>
		<S sid ="6" ssid = "6">We evaluate the proposed method on ﬁve distinct semantic relations.</S>
		<S sid ="7" ssid = "7">Experiments show our average precision is 60.5 %, compared to TE/ASE method with average precision of 44.15 %.</S>
		<S sid ="8" ssid = "8">Besides, we can acquire 3 paraphrases more than TE/ASE method per input.</S>
		<S sid ="9" ssid = "9">Keywords: Paraphrase acquisition · Coordinate relationship · Web mining · Mutual reinforcement</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="10" ssid = "10">Nowadays, it is intuitive to utilize the Web as a huge encyclopedia and trust information on the Web.</S>
			<S sid ="11" ssid = "11">However, those information is not always correct or true.</S>
			<S sid ="12" ssid = "12">For example, it has been reported that information on the Wikipedia, which is regarded as the biggest online encyclopedia, is not so credible [9].</S>
			<S sid ="13" ssid = "13">Therefore, it is necessary to understand risks of Web information and distinguish facts from it.</S>
			<S sid ="14" ssid = "14">We assume information, which is often mentioned by people on the Web, is more likely to be correct or true.</S>
			<S sid ="15" ssid = "15">Consequently, such information is regarded as “fact” with a high possibility.</S>
			<S sid ="16" ssid = "16">On the contrary, we assume information, which is rarely mentioned by people on the Web, is more likely to be incorrect or untrue, consequently unlikely to be “fact”.</S>
			<S sid ="17" ssid = "17">Based on the assumption, a naive way to estimate the likelihood of a sentence as a fact is to observe its hit count on the Web.</S>
			<S sid ="18" ssid = "18">However, it always fails since the expression of a user-input sentence may be rarely used on the Web.</S>
			<S sid ="19" ssid = "19">Suppose a user wants to know whether lemon is a high vitamin c fruit or not.</S>
			<S sid ="20" ssid = "20">He thinks of a sentence like “Lemon is a high vitamin c fruit” and use it as a query to search on the Web.</S>
			<S sid ="21" ssid = "21">Neither Google1 nor 1 http://www.google.com.</S>
			<S sid ="22" ssid = "22">Oc Springer International Publishing Switzerland 2015 A. Liu et al.</S>
			<S sid ="23" ssid = "23">(Eds.): DASFAA 2015 Workshops, LNCS 9052, pp.</S>
			<S sid ="24" ssid = "24">135–151, 2015.</S>
			<S sid ="25" ssid = "25">DOI: 10.1007/9783-31922324-7 12 Bing2 return any matches for this query (at the time of writing the document).</S>
			<S sid ="26" ssid = "26">However, if it is rewritten as “Lemons are rich in vitamin c”, or “Lemons contain a lot of vitamin c”, adequate number of Web pages can be obtained.</S>
			<S sid ="27" ssid = "27">Hence, the user can infer that lemon is a high vitamin c fruit.</S>
			<S sid ="28" ssid = "28">In this paper, we aim at ﬁnding sentence-level paraphrases from the noisy Web, instead of domain-speciﬁc corpora.</S>
			<S sid ="29" ssid = "29">By observing search results of paraphrases, especially frequently-used ones, users are able to estimate the likelihood of an input sentence as a fact.</S>
			<S sid ="30" ssid = "30">Paraphrases are linguistic expressions that restate the same meaning using diﬀerent variations.</S>
			<S sid ="31" ssid = "31">In the most extreme case, they may not be even similar in wording.</S>
			<S sid ="32" ssid = "32">It has been shown that paraphrases are useful in many applications.</S>
			<S sid ="33" ssid = "33">For example, paraphrases can help detect fragments of text that convey the same meaning across documents and this can improve the precision of multi-document summarization [6, 17].</S>
			<S sid ="34" ssid = "34">In the ﬁeld of machine translation, [8, 15, 16] show that augmenting the training data with paraphrases generated by pivoting through other languages can alleviate the vocabulary coverage problem.</S>
			<S sid ="35" ssid = "35">In information extraction, [7, 10, 26] present approaches incorporating paraphrases to extract semantic relations among entities.</S>
			<S sid ="36" ssid = "36">In information retrieval, paraphrases have been used for query expansion [2, 20, 25].</S>
			<S sid ="37" ssid = "37">A large proportion of previous work extract and generate paraphrases based on parallel corpora [3, 5] or comparable corpora [4, 21, 23].</S>
			<S sid ="38" ssid = "38">However, there are limitations in using those corpora.</S>
			<S sid ="39" ssid = "39">For example, the quality of obtained paraphrases strongly depends on the quality of the corpus, a high-quality corpus can cost a great deal of manpower and time to construct.</S>
			<S sid ="40" ssid = "40">Moreover, it may be hard to cover all possible genres.</S>
			<S sid ="41" ssid = "41">For example, [23] uses a corpus consisted of newswire articles written by six diﬀerent news agencies.</S>
			<S sid ="42" ssid = "42">Entity tuples that describe or are members of the same relationships may be deﬁned as “coordinate tuples” to each other.</S>
			<S sid ="43" ssid = "43">For example, (guavas,vitamin c) and (tomatoes,potassium) are coordinate tuples since there is a highConcentration relation between guavas and vitamin c, so is between tomatoes and potassium.</S>
			<S sid ="44" ssid = "44">We think it is not easy to ﬁnd all variations of paraphrases by just one entity tuple, and such variations exist in expressions of its coordinate ones.</S>
			<S sid ="45" ssid = "45">For example, given the sentence “Guavas are rich in vitamin c”, it might be diﬃ- cult to ﬁnd part of its paraphrases, such as “Guavas are considered a high vitamin c fruit”, since it is seldom used by the entity tuple (guavas,vitamin c).</S>
			<S sid ="46" ssid = "46">However, such paraphrases can be acquired from the expressions of its coordinate entity tuples, i.e. the former paraphrase can be easily found via (tomatoes,potassium).</S>
			<S sid ="47" ssid = "47">Thus, we can capture more paraphrases by mining the expressions of coordinate entity tuples.</S>
			<S sid ="48" ssid = "48">The distributional hypothesis, attributed to Harris [12], has been the basis for Statistical Semantics.</S>
			<S sid ="49" ssid = "49">It states that words that occur in the same contexts tend to have similar meanings.</S>
			<S sid ="50" ssid = "50">Moreover, its extension that if two phrases, or two text units, occur in similar contexts then they may be interchangeable has been extensively tested.</S>
			<S sid ="51" ssid = "51">Our idea is based on the extended hypothesis: if two templates share more common coordinate entity tuples, then they may be 2 http://www.bing.com.</S>
			<S sid ="52" ssid = "52">paraphrase templates; if two entity tuples share more common paraphrase templates, then they may be coordinate entity tuples.</S>
			<S sid ="53" ssid = "53">Thus, paraphrase templates and coordinate tuples are in a mutually reinforcing relationship, and this relationship can be used to ﬁnd more paraphrase templates or coordinate tuples.</S>
			<S sid ="54" ssid = "54">We assume a sentence is mapped to a template and an entity tuple.</S>
			<S sid ="55" ssid = "55">Thus, given a sentence query, it can be separated into a template and a corresponding entity tuple.</S>
			<S sid ="56" ssid = "56">The proposed method ﬁrst extracts templates that connect that entity tuple and entity tuples mentioned by that template.</S>
			<S sid ="57" ssid = "57">Several ﬁlters and limitations are added to eliminate partial inappropriate templates and entity tuples.</S>
			<S sid ="58" ssid = "58">A mutually reinforcing approach is proposed to simultaneously identify diﬀerent templates that convey the same meaning with the given template, and entity tuples which hold the same relation with the given entity tuple.</S>
			<S sid ="59" ssid = "59">Finally, paraphrase queries can be generated by substituting the given entity tuple into discovered paraphrase templates.</S>
			<S sid ="60" ssid = "60">Our contributions can be summarized as follows.</S>
			<S sid ="61" ssid = "61">First, we propose a method for detecting sentence-level paraphrases and our method does not require deep natural language processing such as dependency parsing.</S>
			<S sid ="62" ssid = "62">Second, paraphrases are not limited to word-level, or phrase-level.</S>
			<S sid ="63" ssid = "63">Given a sentence query, our method outputs its paraphrases at the sentence level.</S>
			<S sid ="64" ssid = "64">Third, instead of using high-quality input data restricted to a particular genre, our method can employe the Web as its data source.</S>
			<S sid ="65" ssid = "65">The remainder of the paper is organized as follows.</S>
			<S sid ="66" ssid = "66">In Sect.</S>
			<S sid ="67" ssid = "67">2, we discuss some related work.</S>
			<S sid ="68" ssid = "68">Section 3 shows some preliminaries and Sect.</S>
			<S sid ="69" ssid = "69">4 describes our basic idea.</S>
			<S sid ="70" ssid = "70">In Sect.</S>
			<S sid ="71" ssid = "71">5, we illustrate the method to acquire paraphrases from the Web by a given sentence.</S>
			<S sid ="72" ssid = "72">We evaluate the proposed paraphrase acquisition method using ﬁve semantic relations in Sect.</S>
			<S sid ="73" ssid = "73">6.</S>
			<S sid ="74" ssid = "74">Finally, Sect.</S>
			<S sid ="75" ssid = "75">7 concludes the paper and gives an outline of our future work.</S>
	</SECTION>
	<SECTION title="Related Work. " number = "2">
			<S sid ="76" ssid = "1">2.1 Semantic Relation Extraction.</S>
			<S sid ="77" ssid = "2">Snowball [1], KnowItAll [11], TextRunner [26] are famous information extraction systems.</S>
			<S sid ="78" ssid = "3">All of them extract valuable information from plain-text documents by using lexical-syntactic patterns.</S>
			<S sid ="79" ssid = "4">Snowball and TextRunner require a handful of training examples from users, while KnowItAll emphasizes its distinctive ability to extract information without any hand-labeled training examples.</S>
			<S sid ="80" ssid = "5">In Snowball, given a handful of example tuples, such as organization-location tuple &lt;o,l&gt;, Snowball ﬁnds segments of text in the document collection where o and l occur close to each other, and analyzes the text that “connects” o and l to generate patterns.</S>
			<S sid ="81" ssid = "6">It extracts diﬀerent relationships from the Web by the bootstrap method.</S>
			<S sid ="82" ssid = "7">Besides, Snowball’s patterns include named-entity tags.</S>
			<S sid ="83" ssid = "8">An example is &lt;ORGANIZATION&gt;’s headquarters in &lt;LOCATION&gt;.</S>
			<S sid ="84" ssid = "9">&lt;ORGANIZATION&gt; will only match a string identiﬁed by a POS tagger as an entity of type ORGANIZATION.</S>
			<S sid ="85" ssid = "10">So does &lt;LOCATION&gt;.</S>
			<S sid ="86" ssid = "11">In KnowItAll, its input is a set of predicates that represent classes or relationships of interest.</S>
			<S sid ="87" ssid = "12">A generic representation of rule templates for binary predicates is relation(Class1,Class2).</S>
			<S sid ="88" ssid = "13">For example, the predicate CeoOf(PERSON, COMPANY) corresponds to the pattern &lt;PERSON&gt; is the CEO of &lt;COMPANY&gt;.</S>
			<S sid ="89" ssid = "14">It learns eﬀective patterns to extract relevant entity names.</S>
			<S sid ="90" ssid = "15">In TextRunner, extractions take the form of a tuple t = (ei , ri,j , ej ), where ei and ej are strings meant to denote entities, and ri,j is a string meant to denote a relationship between them.</S>
			<S sid ="91" ssid = "16">A deep linguistic parser is deployed to obtain dependency graph representations by parsing thousand of sentences.</S>
			<S sid ="92" ssid = "17">For each pair of noun phrases (ei , ej ), TextRunner traverses the dependency graph, especially the part connecting ei and ej , to ﬁnd a sequence of words that composes a potential relation ri,j in the tuple t. 2.2 Paraphrase Acquisition.</S>
			<S sid ="93" ssid = "18">Paraphrase acquisition is a task of acquiring paraphrases of a given text fragment.</S>
			<S sid ="94" ssid = "19">Some approaches have been proposed for acquiring paraphrases at word, or phrasal level.</S>
			<S sid ="95" ssid = "20">However, these techniques are designed only suitable for speciﬁc types of resources.</S>
			<S sid ="96" ssid = "21">Both [22] and [24] acquire paraphrases from news article.</S>
			<S sid ="97" ssid = "22">In [22], Shinyama et al. considered that news articles reported the same event of the same day by diﬀerent news agents can contain paraphrases.</S>
			<S sid ="98" ssid = "23">Thus, they proposed an automatic paraphrase acquisition approach based on the assumption that named entities are preserved across paraphrases.</S>
			<S sid ="99" ssid = "24">Pairs of similar sentences whose similarity is above a certain threshold are chosen.</S>
			<S sid ="100" ssid = "25">For any pair, if the two sentences share the same number of comparable named entities, then patterns in the two sentences are linked as paraphrases.</S>
			<S sid ="101" ssid = "26">In [24], news article headlines,which are already grouped by news aggregators such as Google News, are taken for further processing.</S>
			<S sid ="102" ssid = "27">k-means clustering and pairwise similarity are applied to ﬁnd paraphrases, respectively.</S>
			<S sid ="103" ssid = "28">These work has explicit access to, and relies strongly on clues such as the news articles that describe the same event.</S>
			<S sid ="104" ssid = "29">To acquire paraphrases, some works proposed methods based on deep natural language processing, i.e. dependency parsing.</S>
			<S sid ="105" ssid = "30">Lin and Pantel introduced an unsupervised method to discover inference rules from text in [14].</S>
			<S sid ="106" ssid = "31">Inference rules include not only exact paraphrases, but also related and potentially useful expressions.</S>
			<S sid ="107" ssid = "32">Their core idea is also based on an extension to the distributional hypothesis: if two paths in dependency trees tend to occur in similar contexts, the meanings of the paths tend to be similar.</S>
			<S sid ="108" ssid = "33">The words that ﬁll the slots of a path is regarded as a context for the path.</S>
			<S sid ="109" ssid = "34">Idan et al. [13] took a verb lexicon as the input and for each verb searches the Web for related syntactic entail- ment templates.</S>
			<S sid ="110" ssid = "35">Although they did not use the term “coordinate”, they used a similar concept called “anchors” referred to lexical elements describing the context of a sentence.</S>
			<S sid ="111" ssid = "36">Diﬀerent from our method, they ﬁrst extract promising anchor sets for the verb lexicon, then extract templates (dependency parse-tree fragments) for which an entailment relation holds with the verb lexicon from sentences containing the promising anchor sets.</S>
			<S sid ="112" ssid = "37">Pa¸sca and Dienes proposed a method diﬀered from previous ones in [19].</S>
			<S sid ="113" ssid = "38">They use inherently noisy, unreliable Web documents rather than clean, formatted documents so that the paraphrases are not limited to a speciﬁc domain or a narrow class.</S>
			<S sid ="114" ssid = "39">Their proposed method is based on the assumption that if two sentence fragments have common word sequences at both extremities, then the variable word sequences in the middle are potential paraphrases of each other.</S>
			<S sid ="115" ssid = "40">So actually, their acquired paraphrases are almost word-, or phrase-level ones, while our work aims to get sentential paraphrases.</S>
			<S sid ="116" ssid = "41">In [25], Yamamoto and Tanaka also concentrated on improving search results responded by sentence queries.</S>
			<S sid ="117" ssid = "42">Unlike we focus on paraphrases, they generally collected several types of sentence substitutions, including paraphrases, generalized sentences, detailed sentences and comparative sentences.</S>
			<S sid ="118" ssid = "43">Based on the criteria that sentence substitutions which appears frequently on the Web and whose context is similar to that of the input sentence query should be ranked higher, a ranking algorithm is also stated.</S>
	</SECTION>
	<SECTION title="Preliminaries. " number = "3">
			<S sid ="119" ssid = "1">We assume a sentence consists of a template and an entity tuple.</S>
			<S sid ="120" ssid = "2">Thus, given a sentence, it can be separated into a template and a corresponding entity tuple.</S>
			<S sid ="121" ssid = "3">For example, “Google has purchased Nest Labs” consists of the template X has purchased Y and the entity tuple (Google,Nest Labs).</S>
			<S sid ="122" ssid = "4">For further illustration, we borrow the idea about the deﬁnition of a relation in [7].</S>
			<S sid ="123" ssid = "5">They advocated a relation can be expressed extensionally by enumerating all the instances of that relation.</S>
			<S sid ="124" ssid = "6">Take the acquisition relation3 for example.</S>
			<S sid ="125" ssid = "7">An extensional deﬁnition of acquisition is a set of all pairs of two companies in which one company acquired another, i.e.</S>
			<S sid ="126" ssid = "8">(Google,Nest Labs), (Adobe Systems,Macromedia).</S>
			<S sid ="127" ssid = "9">In this paper, entity tuples hold the same relation are deﬁned to be “coordinated” to each other.</S>
			<S sid ="128" ssid = "10">For simplicity, relations are all binary relations.</S>
			<S sid ="129" ssid = "11">Thus, in the former example, (Adobe Systems,Macromedia) is a coordinate entity tuple of (Google,Nest Labs).</S>
			<S sid ="130" ssid = "12">Bollegala et al. [7] also introduced an intensional deﬁnition of a relation by listing all the paraphrases of that relation.</S>
			<S sid ="131" ssid = "13">Therefore, ﬁnding paraphrases of a template can also be regarded as a way to survey a certain relation.</S>
			<S sid ="132" ssid = "14">Terminologies used in this paper are listed Table 1.</S>
			<S sid ="133" ssid = "15">Let T be the set of all possible templates in the world, E be the set of all possible entity tuples in the world.</S>
			<S sid ="134" ssid = "16">Three predicates are deﬁned as follows: fact(e,t).</S>
			<S sid ="135" ssid = "17">It returns true when the statement of sentence mapped by e and t is actually the case or has really occurred, where e ∈ E, t ∈ T . If f act holds for a certain pair of an entity tuple and a template, we call the entity pair is “suitable” for the template and vice-versa.</S>
			<S sid ="136" ssid = "18">3 The acquisition relation exists between two companies such that one company.</S>
			<S sid ="137" ssid = "19">acquired another.</S>
			<S sid ="138" ssid = "20">Table 1.</S>
			<S sid ="139" ssid = "21">Terminologies Sen ten ce Go ogle has pur cha sed Nes t Lab s Ent ity tup le (Go ogl e,N est Lab s) Sub stit uti on X= Goo gle, Y= Nes t Lab s Te mpl ate X has pur cha sed Y. Par aph rase tem plat es X buy s Y, X has acq uire d Y, X ﬁna lizes acq uisi tio n of Y Par aph rase s Go ogle buy s Nes t Lab s Go ogle has acq uire d Nes t Lab s Go ogle ﬁna lizes acq uisi tio n of Nes t Lab s Co ordi nat e enti ty tup les (Mi cro soft ,No kia) ,(Y aho o,T um blr) ,(A ma zon ,Go odr ead s) para (t i , t j ).</S>
			<S sid ="140" ssid = "22">It returns true when template ti and template tj both convey the same meaning (“paraphrases”), where ti , tj ∈ T . coord (e k , e g ).</S>
			<S sid ="141" ssid = "23">It returns true when entity tuple ek and entity tuple eg hold the coordinate relation, where ek , eg ∈ E.</S>
	</SECTION>
	<SECTION title="Basic  Idea. " number = "4">
			<S sid ="142" ssid = "1">In this paper, in order to ﬁnd the paraphrases of a sentence query, we aim to ﬁnd pairs of templates ti and tj and coordinates ek and eg that make the predicate para(ti , tj ) and coord(ek , eg ) are true.</S>
			<S sid ="143" ssid = "2">In the ideal world, two templates are paraphrases if every entity tuple that is suitable for one templates is also suitable for the other template.</S>
			<S sid ="144" ssid = "3">Formally, let ti , tj ∈ T , and Eti = {e|f act(e, ti )}, Etj = {e|f act(e, tj )}.</S>
			<S sid ="145" ssid = "4">If Eti = Etj , then para(ti , tj ) = true.</S>
			<S sid ="146" ssid = "5">Similarly, two entity tuples are coordinates if every template that is suitable for one tuple is also suitable for the other tuple.</S>
			<S sid ="147" ssid = "6">Formally, let ek , eg ∈ E, and Tek = {t|f act(ek , t)}, Teg = {t|f act(eg , t)}.</S>
			<S sid ="148" ssid = "7">If Tek = Teg , then coord(ek , eg ) = true.</S>
			<S sid ="149" ssid = "8">However, even in the ideal world, we can easily ﬁnd a counterexample to the above discussion of para.</S>
			<S sid ="150" ssid = "9">Suppose ti is X and Y , and tj is X or Y . This is an extreme case where both ti and tj are very general templates suitable for almost all entity tuples.</S>
			<S sid ="151" ssid = "10">Consequently, Eti might be equal to Etj so that X and Y and X or Y are misjudged as paraphrases.</S>
			<S sid ="152" ssid = "11">One may add the following condition to exclude such noisy entity tuples: if Eti = Etj and ∀(ek , eg ) ∈ Eti × Eti , coord(ek , eg ), then para(ti , tj ) is true.</S>
			<S sid ="153" ssid = "12">Soon we ﬁnd another problem that the newly added condition is too strict and will likely miss many paraphrases.</S>
			<S sid ="154" ssid = "13">A single template may represent several relations.</S>
			<S sid ="155" ssid = "14">For example, X direct Y may be Fig.</S>
			<S sid ="156" ssid = "15">1.</S>
			<S sid ="157" ssid = "16">An example for grouped entity tuples.</S>
			<S sid ="158" ssid = "17">Entity tuples in big frame are those suitable for the template X direct Y , whereas entity tuples in small frame are those held the same relation.</S>
			<S sid ="159" ssid = "18">interpreted as the directorOf relation4 , the leaderOf relation5 , or the ceoOf relation6 . As a result, the entity tuples suitable for X direct Y are naturally grouped in accordance with the relation held by each tuple, shown in Fig.</S>
			<S sid ="160" ssid = "19">1.</S>
			<S sid ="161" ssid = "20">Hence, we moderate the conditions for para as follows: – If ∃Et ⊂ Eti ∩ Etj and |Et| &gt; α, ∀(ek , eg ) ∈ Et × Et, coord(ek , eg ), then para(ti , tj ) is true.</S>
			<S sid ="162" ssid = "21">Here α is a threshold.Let us look at a single entity tuple.</S>
			<S sid ="163" ssid = "22">It is easy to ﬁnd diﬀerent relation ships between the entities of the tuple.</S>
			<S sid ="164" ssid = "23">Take (Mark Zuckerberg,Facebook) as an example.</S>
			<S sid ="165" ssid = "24">There exists the founderOf relation7 between Mark Zuckerberg and Facebook.</S>
			<S sid ="166" ssid = "25">There also exists the ceoOf relation between Mark Zuckerberg and Facebook.</S>
			<S sid ="167" ssid = "26">Based on our discussion that a relation can be expressed by listing all 4 The directorOf relation exists between a director and his works, i.e.</S>
			<S sid ="168" ssid = "27">(Steven Spiel-.</S>
			<S sid ="169" ssid = "28">berg,Saving Private Ryan), (James Cameron,Titanic).</S>
			<S sid ="170" ssid = "29">5 The leaderOf relation exists between a country and its current leader, i.e.</S>
			<S sid ="171" ssid = "30">(Barack.</S>
			<S sid ="172" ssid = "31">Obama,U.S.), (Giorgio Napolitano,Italy).</S>
			<S sid ="173" ssid = "32">6 The ceoOf relation exists between a company and the chief executive oﬃcer of that.</S>
			<S sid ="174" ssid = "33">company, i.e.</S>
			<S sid ="175" ssid = "34">(Tim Cook,Apple), (Mark Zuckerberg,Facebook).</S>
			<S sid ="176" ssid = "35">7 The founderOf relation exists between a person and his founded company, i.e..</S>
			<S sid ="177" ssid = "36">(Larry Page,Google).</S>
			<S sid ="178" ssid = "37">the paraphrases of that relation, we can see the similar phenomenon occurs that the templates suitable for (Mark Zuckerberg,Facebook) are naturally grouped in accordance with diﬀerent relations.</S>
			<S sid ="179" ssid = "38">Following this, we modify conditions for coord as: – If ∃T t ⊂ Tek ∩ Teg and |T t| &gt; β, ∀(ti , tj ) ∈ T t × T t, para(ti , tj ), then coord(ek , eg ) is true.</S>
			<S sid ="180" ssid = "39">Here β is a threshold.</S>
			<S sid ="181" ssid = "40">However, in the real world, it is diﬃcult to ﬁnd all paraphrases by a single entity tuple perhaps because of idiomatic expressions and personal preferences.</S>
			<S sid ="182" ssid = "41">For example, consider the sentence “Guavas are rich in vitamin c”, where the entity tuple is (guavas,vitamin c), the template is X are rich in Y . It might be diﬃcult to ﬁnd some of its paraphrases, such as X are considered a high Y fruit, or X pop a powerful Y punch, since people seldom use those expressions to describe the relation between guavas and vitamin c. Similarly, it is diﬃcult to ﬁnd all coordinate entity tuples by a single template, since the template might be specially used with a subset of entity tuples.</S>
			<S sid ="183" ssid = "42">Hence, we cannot ﬁnd the exactly equal sets of entity tuples when considering the value of para(ti , tj ), and the exactly equal sets of templates when considering the value of coord(ek , eg ).</S>
			<S sid ="184" ssid = "43">In Fig.</S>
			<S sid ="185" ssid = "44">2(a), there are two templates t1 and t2 . Under each template, there is a set of all suitable entity tuples shown in a big oval.</S>
			<S sid ="186" ssid = "45">Besides, the tuples are further grouped according to the relations they hold, shown in a small oval.</S>
			<S sid ="187" ssid = "46">If e3 is coordinated to e4 , then we think they are interchangeable, meaning {e1 , e2 , e4 } = {e1 , e2 , e3 }.</S>
			<S sid ="188" ssid = "47">In addition, since e7 is coordinated to e5 , e6 under the same relation, we think people always use the expression of t2 to describe e7 but seldom use the expression of t1 . Therefore, although the sizes of two subsets are diﬀerent, {e5 , e6 } is regarded as equal to {e5 , e6 , e7 }.</S>
			<S sid ="189" ssid = "48">Finally, if all pairs of subsets are “equal”, t1 and t2 are paraphrases, meaning para(t1 , t2 ) = true.</S>
			<S sid ="190" ssid = "49">Similarly, in Fig.</S>
			<S sid ="191" ssid = "50">2(b), there are two entity tuples e1 and e2 . Under each tuple, there list all suitable templates in big oval.</S>
			<S sid ="192" ssid = "51">Besides, they are grouped according to diﬀerent relations, shown in small oval.</S>
			<S sid ="193" ssid = "52">If t3 is paraphrased to t4 , then we think they are interchangeable, meaning {t1 , t2 , t4 } = {t1 , t2 , t3 }.</S>
			<S sid ="194" ssid = "53">In addition, since t7 is paraphrased to t5 , t6 under the same relation, we think people always use the expression of t7 to describe e2 but seldom use it to describe e1 . Therefore, although the sizes of two subsets are diﬀerent, {t5 , t6 } is regarded as equal to {t5 , t6 , t7 }.</S>
			<S sid ="195" ssid = "54">Finally, if all pairs of subsets are “equal”, e1 and e2 are coordinate entity tuples, meaning coord(e1 , e2 ) = true.</S>
	</SECTION>
	<SECTION title="Our  Method. " number = "5">
			<S sid ="196" ssid = "1">In this paper, the problem to be solved is as follows: given a sentence, its paraphrases are automatically acquired from the Web, and they are ranked in accordance with paraphrase degree.</S>
			<S sid ="197" ssid = "2">We have stated our basic idea in Sect.</S>
			<S sid ="198" ssid = "3">4 that paraphrase relationship and coordinate relationship interdepend and mutually Fig.</S>
			<S sid ="199" ssid = "4">2.</S>
			<S sid ="200" ssid = "5">A real-world situation reinforce each other.</S>
			<S sid ="201" ssid = "6">Hence, at the very beginning, it is necessary to gather templates and entity tuples.</S>
			<S sid ="202" ssid = "7">Brief introductions of template extraction and entity tuple extraction are given in Sects.</S>
			<S sid ="203" ssid = "8">5.1 and 5.2, respectively.</S>
			<S sid ="204" ssid = "9">Then details of our method are addressed in Sect.</S>
			<S sid ="205" ssid = "10">5.3.</S>
			<S sid ="206" ssid = "11">5.1 Template Extraction.</S>
			<S sid ="207" ssid = "12">As we mentioned in Sect.</S>
			<S sid ="208" ssid = "13">1, we use the Web as our data source, so we search the Web and extract templates from it.</S>
			<S sid ="209" ssid = "14">Suppose a given sentence is s which consists of a template t and an entity tuple e. t is actually made by replacing two entities in e respectively with two variables X and Y in the sentence s. An example is shown in Table 1.</S>
			<S sid ="210" ssid = "15">The entity tuple is (Google,Nest Labs).</S>
			<S sid ="211" ssid = "16">We replace Goolge with variable X and Nest Labs with variable Y and get the template X has purchased Y . An AND query generated from e is issued to the Web, i.e. “Google AND Nest Labs”.</S>
			<S sid ="212" ssid = "17">We gather templates from the top N search results of the query8 that satisfy the following conditions.</S>
			<S sid ="213" ssid = "18">(1) A template must contain exactly one occurrence of each X and Y (i.e. exactly one X and one Y must exist in a template).</S>
			<S sid ="214" ssid = "19">(2) The maximum length of a template is Lmax times of that of s.</S>
			<S sid ="215" ssid = "20">(3) The minimum length of a template is Lmin times of that of s.</S>
			<S sid ="216" ssid = "21">(4) Information such as date, money, quantity, are removed if s doesn’t contain such information.</S>
			<S sid ="217" ssid = "22">(5) Templates must be consistent of s (if s is a question, gathered templates must limit to questions; if s is a declarative sentence, gathered templates must also be declarative ones).</S>
			<S sid ="218" ssid = "23">The values of parameters N , Lmax and Lmin are set experimentally, as explained later in Sect.</S>
			<S sid ="219" ssid = "24">6.</S>
			<S sid ="220" ssid = "25">The proposed template extraction algorithm takes all the words 8 Replace entities in e with variables..</S>
			<S sid ="221" ssid = "26">in a sentence into account, and is not limited to extract templates only from the portion of a sentence that appears between two entities.</S>
			<S sid ="222" ssid = "27">Besides, we assume an overlong template is more likely to contain additional information, while a too-short template is more likely to miss some information.</S>
			<S sid ="223" ssid = "28">Both the situations lead to non-paraphrases.</S>
			<S sid ="224" ssid = "29">Therefore, we consider two length limitations to exclude some inappropriate templates in advance and reduce the number of templates gathered from the Web.</S>
			<S sid ="225" ssid = "30">The consideration of (4), (5) is because of similar reasons.</S>
			<S sid ="226" ssid = "31">5.2 Entity Tuple Extraction.</S>
			<S sid ="227" ssid = "32">As we mentioned in Sect.</S>
			<S sid ="228" ssid = "33">1, we use the Web as our data source, so we search the Web and extract entity tuples from it.</S>
			<S sid ="229" ssid = "34">Suppose a given sentence is s which consists of a template t and an entity tuple e. Still use the example presented in Table 1.</S>
			<S sid ="230" ssid = "35">We ﬁrst search coordinate terms of two entities in e, respectively, using the bidirectional lexico-syntactic pattern-based algorithm [18].</S>
			<S sid ="231" ssid = "36">For example, we get Yahoo, Microsoft, Apple and etc. as coordinate terms of Google ; Samsung, Dropcam and etc. as coordinate terms of Nest Labs.</S>
			<S sid ="232" ssid = "37">Next, we issue wildcard queries generated by t and either of the two entities in e or their coordinate terms to the Web and extract the other ones from the top M search results.</S>
			<S sid ="233" ssid = "38">To detect entities in sentences, we run a POS tagger9 and only annotate sentences exactly contained the queries with POS tags.</S>
			<S sid ="234" ssid = "39">Then nouns or noun phrases are selected out.</S>
			<S sid ="235" ssid = "40">For example, queries, such as “Google has purchased *”, or “Yahoo has purchased *”, are formed to extract corresponding companions.</S>
			<S sid ="236" ssid = "41">As a result, entity tuples like (Google,YouTube), or (Google,Titan Aerospace) are extracted by the former query, entity tuples like (Yahoo,Tumblr), or (Yahoo,Blink) are extracted by the latter query.</S>
			<S sid ="237" ssid = "42">We use coordinate terms for the following two reasons.</S>
			<S sid ="238" ssid = "43">First, there is too massive information on the Web.</S>
			<S sid ="239" ssid = "44">If we only search by t (i.e. “* has purchased *”) and extract entity tuples from corresponding portions of sentences, many irrelevant tuples are gathered, such as (God,freedom).</S>
			<S sid ="240" ssid = "45">Hence, coordinate terms are used to reduce the number of irrelevant tuples.</S>
			<S sid ="241" ssid = "46">Second, there might be few entity tuples extracted from the Web if the binary relation in e is one-to-one type.</S>
			<S sid ="242" ssid = "47">For example, in sentence “The capital of Japan is Tokyo”, relation between Japan and Tokyo belongs to one-to-one type, since we can only ﬁnd Tokyo as the answer for which city the capital of Japan is, and vise versa, we can only ﬁnd Japan as the answer for Tokyo is the capital of which country.</S>
			<S sid ="243" ssid = "48">Thus, it is diﬃcult to get other entity tuples from wildcard query “The capital of * is Tokyo” or “The capital of Japan is *”.</S>
			<S sid ="244" ssid = "49">In this case, coordinate terms are used to increase the number of entity tuples extracted from the Web.</S>
			<S sid ="245" ssid = "50">5.3 The Mutual Reinforcement Algorithm.</S>
			<S sid ="246" ssid = "51">Assuming that the set of all extracted templates is T , and the set of all extracted entity tuples is E. Suppose there are m templates in T and n entity tuples in E. 9 http://nlp.stanford.edu/software/tagger.shtml.</S>
			<S sid ="247" ssid = "52">Fig.</S>
			<S sid ="248" ssid = "53">3.</S>
			<S sid ="249" ssid = "54">An example of the mutual reinforcement between P r(para(ti , tj )) and P r(coord(ek , eg )).</S>
			<S sid ="250" ssid = "55">Let W TE ∈ Rm×n denote the transition matrix from T to E, whose entry wte is the proportion of ej i ’s top search results.</S>
			<S sid ="251" ssid = "56">Let W ET ∈ Rn×m denote the transition matrix from E to T , whose entry wet is the proportion of tj ’s occurrence in ei ’s top search results.</S>
			<S sid ="252" ssid = "57">Since we want to know the quality of a paraphrase rather than treat all paraphrases equally, we introduce paraphrase degree between two templates ti and tj as P r(para(ti , tj )), which returns a value between 0 and 1.</S>
			<S sid ="253" ssid = "58">A high value will be returned when ti and tj are more likely to be paraphrased to each other.</S>
			<S sid ="254" ssid = "59">Similarly, we introduce coordinate degree between two entity tuples ei and ej as P r(coord(ei , ej )), which returns a value between 0 and 1.</S>
			<S sid ="255" ssid = "60">A high value will be returned when ei and ej are more likely to be coordinated to each other.</S>
			<S sid ="256" ssid = "61">As we mentioned in Sect.</S>
			<S sid ="257" ssid = "62">4, if two templates are paraphrased to each other, they are interchangeable; if two coordinate entity tuples are coordinated to each other, they are interchangeable.</S>
			<S sid ="258" ssid = "63">In Fig.</S>
			<S sid ="259" ssid = "64">3(a), it shows two diﬀerent situations to consider the paraphrase degree between ti and tj . One is exactly equivalence of ti ’s suitable entity tuples and tj ’s suitable entity tuples, such as ek . If we can ﬁnd many such entity tuples, the paraphrase degree between ti and tj is high.</S>
			<S sid ="260" ssid = "65">Another is interchangeability of ti ’s suitable entity tuples and tj ’s suitable entity tuples, i.e. ek and eg are interchangeable with the degree of P r(coord(ek , eg )).</S>
			<S sid ="261" ssid = "66">As a result, the value of P r(coord(ek , eg )) is propagated to P r(para(ti , tj )) according to the transition probability.</S>
			<S sid ="262" ssid = "67">Similarly, additional values are propagated from other paris of coordinate entity tuples in E to P r(para(ti , tj )), then the value of P r(para(ti , tj )) is updated.</S>
			<S sid ="263" ssid = "68">In Fig.</S>
			<S sid ="264" ssid = "69">3(b), it shows the new value is propagated to P r(coord(ek , eg )).</S>
			<S sid ="265" ssid = "70">Formally, the mutually reinforcing calculations are written as: 1 ) te et P r(para(ti , tj )) = 2 ( ek ,eg ∈E wik wgj P r(coord(ek , eg )) + ) wte et ek ,eg ∈E jg wki P r(coord(ek , eg ))) 1 ) et te P r(coord(ek , eg )) = 2 ( ti ,tj ∈T wki wjg P r(para(ti , tj )) + ) wet te ti ,tj ∈T gj wik P r(para(ti , tj ))) where i, j ∈ [1, m], k, g ∈ [1, n].</S>
			<S sid ="266" ssid = "71">Especially, when i = j, P r(para(ti , tj )) = 1, which indicates the exactly equal case.</S>
			<S sid ="267" ssid = "72">Similarly, when k = g, P r(coord(ek , eg )) = 1.</S>
			<S sid ="268" ssid = "73">After values for all pairs of templates are updated, a normalization is taken.</S>
			<S sid ="269" ssid = "74">place.</S>
			<S sid ="270" ssid = "75">The same for all pairs of entity tuples.</S>
			<S sid ="271" ssid = "76">Besides, update continues until diﬀerence between each new value and old value is smaller than a threshold θ.</S>
			<S sid ="272" ssid = "77">As a result, the paraphrase degree of two templates will be high if they share many common entity tuples, or have many interchangeable tuples; the coordinate degree of two entity tuples will be high if they share many common templates, or have many interchangeable templates.</S>
			<S sid ="273" ssid = "78">Finally, we get paraphrases of the given sentence by substituting its entity tuples into discovered paraphrase templates.</S>
	</SECTION>
	<SECTION title="Evaluation. " number = "6">
			<S sid ="274" ssid = "1">6.1 Experimental Setting.</S>
			<S sid ="275" ssid = "2">In this section, we introduce experiments to validate the main claims of the paper.</S>
			<S sid ="276" ssid = "3">Given a sentence, it is costly to ﬁnd all templates and all entity tuples through the whole Web.</S>
			<S sid ="277" ssid = "4">For our experiments, we set N as 1000, viz.</S>
			<S sid ="278" ssid = "5">we limit data to the top 1000 search results obtained from Bing Search API10 for each AND query formed by an entity tuple.</S>
			<S sid ="279" ssid = "6">Besides, to exclude overlong or too-short templates extracted from the Web, we set Lmax = 2, Lmin = 0.5.</S>
			<S sid ="280" ssid = "7">We set M as 250, viz.</S>
			<S sid ="281" ssid = "8">we extract entity tuples by a wildcard query in its top 250 search results.</S>
			<S sid ="282" ssid = "9">Moreover, since the calculation of WTE requires many accesses to the Web, we only consider 40 most frequently occurring templates.</S>
			<S sid ="283" ssid = "10">We ﬁx the value of threshold θ to 0.0001 and ﬁnd values of P r(para(ti , tj )) and P r(coord(ek , eg )) to converge after 20 ∼ 25 updates.One claim of this paper is that paraphrase relationship and coordinate rela tionship mutually reinforce each other, so paraphrase templates can be selected out.</S>
			<S sid ="284" ssid = "11">To verify this, we evaluate the performance on the following ﬁve semantic relations: 10 http://datamarket.azure.com/dataset/bing/search.</S>
			<S sid ="285" ssid = "12">1.</S>
			<S sid ="286" ssid = "13">highConcentration: We define this as a food contains a high amount of a certain nutrient.</S>
			<S sid ="287" ssid = "14">2.</S>
			<S sid ="288" ssid = "15">acquisition: We define this as the activity between two companies such that one company acquired another.</S>
			<S sid ="289" ssid = "16">3.</S>
			<S sid ="290" ssid = "17">founderOf: We define this as the relation between a person and his founded company.</S>
			<S sid ="291" ssid = "18">4.</S>
			<S sid ="292" ssid = "19">headquarter: We define this as the relation between a company and the location of its headquarter.</S>
			<S sid ="293" ssid = "20">5.</S>
			<S sid ="294" ssid = "21">field: We define this as the relation between a person and his field of expertise.</S>
			<S sid ="295" ssid = "22">Table 2.</S>
			<S sid ="296" ssid = "23">Input sentences.</S>
			<S sid ="297" ssid = "24">Rela tion Sen ten ce En tity tup le high Con cent ratio n Le mo ns are rich in vit am in c (le mo ns, vita min c) acqu isiti on Go ogl e has pur cha sed Nes t La bs (Go ogl e,N est Lab s) foun der Of Lar ry Pag e fou nde d Go ogl e (La rry Pa ge, Go ogl e) hea dqu arter Yah oo is hea dq uar ter ed in Su nn yva le (Ya hoo ,Su nny val e) ﬁeld Alb ert Ein stei n rev olu tio niz ed ph ysi cs (Al ber t Ein stei n,p hys ics) In Table 2, we list ﬁve input sentences of the above semantic relations, and the entity tuple extracted from each sentence, respectively.</S>
			<S sid ="298" ssid = "25">Thus, templates are easily obtained by substituting entity tuples with variables.</S>
			<S sid ="299" ssid = "26">For example, in the ﬁrst sentence, let X=lemons, Y=vitamin c, we have template X are rich in Y . We ﬁnd paraphrase templates and coordinate entity tuples for each of these inputs by the co-acquisition method described in Sect.</S>
			<S sid ="300" ssid = "27">5.</S>
			<S sid ="301" ssid = "28">Our evaluation will consider only paraphrasing, i.e. given a sentence s, we will assess the quality of its paraphrases we acquire from the Web, whether they convey the same meaning with the given sentence.</S>
			<S sid ="302" ssid = "29">We do not assess whether it is really a fact.</S>
			<S sid ="303" ssid = "30">Table 3.</S>
			<S sid ="304" ssid = "31">Performance of our method for paraphrase acquisition.</S>
			<S sid ="305" ssid = "32">relat ion hig hC onc ent rati on acq uisi tio n fou nde rOf hea dq uar ter ﬁel d # Obt aine d 1 6 2 6 1 1 10 5 # Para phra ses 9 2 1 5 4 4 Prec ision 56.</S>
			<S sid ="306" ssid = "33">3 % 80.</S>
			<S sid ="307" ssid = "34">8 % 45.</S>
			<S sid ="308" ssid = "35">5 % 40 % 80 % Aver age Prec ision 60.5 % Ave rage # per inpu t 8.6 Table 4.</S>
			<S sid ="309" ssid = "36">An example of some discovered paraphrases.</S>
			<S sid ="310" ssid = "37">Sen ten ce Go ogle has pur cha sed Nes t Lab s Cor rect Go ogle has acq uire d Nes t Lab s Go ogle is buyi ng Nes t Lab s Go ogle own ed Nes t Lab s Go ogle is buy s Nes t Lab s Go ogle has ann oun ced thei r acq uisi tion of Nes t Lab s Go ogle ﬁna lizes acq uisi tio n of Nes t Lab s Inc orre ct Go ogle has ann oun ced plan s to buy the rm ost at ma ker Nes t Lab s Go ogle has acq uir ed sm art ga dge t co mp any Nes t Lab s Table 5.</S>
			<S sid ="311" ssid = "38">Another example of some discovered paraphrases.</S>
			<S sid ="312" ssid = "39">Sen ten ce Yah oo is hea dqu arte red in Sun nyv ale Cor rect Yah oo is loc ate d in Sun nyv ale Su nny vale is ho me to not able co mp ani es suc h as Yah oo Yah oo hea dqu arte rs in the Su nny vale are a Yah oo hea dqu arte rs in Sun nyv ale.</S>
			<S sid ="313" ssid = "40">Inc orre ct Vie w all Yah oo jobs in Sun nyv ale Rev iew s on Yah oo in Sun nyv ale 6.2 Results.</S>
			<S sid ="314" ssid = "41">In this section, we show the results of the experiments and analyze them.</S>
			<S sid ="315" ssid = "42">Table 3 shows the performance of our proposed method for each of the ﬁve semantic relations and their average.</S>
			<S sid ="316" ssid = "43">We calculate the precision as how many “true” paraphrases are in the paraphrases obtained by our method.</S>
			<S sid ="317" ssid = "44">From Table 3, we can see the sentence query for the acquisition relation achieved the best performance with the precision of 80.8 %, while the sentence query for the headquarter relation preforms the worst with the precision of 40 %.</S>
			<S sid ="318" ssid = "45">As there isn’t much work in acquiring sentential-level paraphrases from the Web, it is hard to construct a baseline to compare against.</S>
			<S sid ="319" ssid = "46">However, we can analyze them in consideration of numbers reported previously for acquiring paraphrases from the Web.</S>
			<S sid ="320" ssid = "47">TE/ASE method [13] reports obtained precision of 44.15 %, compared to our average precision of 60.5 %.</S>
			<S sid ="321" ssid = "48">It is diﬃcult to estimate the recall since we do not have a complete set of paraphrases for a given sentence.</S>
			<S sid ="322" ssid = "49">Instead of evaluating recall, we calculate the average number of correct paraphrases per input sentence.</S>
			<S sid ="323" ssid = "50">The average number of paraphrases per input is 5.5 of TE/ASE method, compared to our 8.6.</S>
			<S sid ="324" ssid = "51">In order to ﬁnd the reasons why our method succeeds or fails to acquire paraphrases, let us do in-depth analysis especially on the best performance query and the worst performance query, respectively.</S>
			<S sid ="325" ssid = "52">Table 4 shows some correct and incorrect paraphrases obtained by our method for the query from the acquisition relation.</S>
			<S sid ="326" ssid = "53">As we mentioned before, this query achieves the best performance.</S>
			<S sid ="327" ssid = "54">Actually, we extract more than 280 templates from the top 1000 search results of the AND query “Google AND Nest Labs”.</S>
			<S sid ="328" ssid = "55">The most frequently occurring templates themselves are good candidates.</S>
			<S sid ="329" ssid = "56">Therefore, we get more paraphrases with a single input.</S>
			<S sid ="330" ssid = "57">On the other hand, take the incorrect paraphrase “Google has announced plans to buy thermostat maker Nest Labs.” for example.</S>
			<S sid ="331" ssid = "58">Compared with the given sentence “Google has purchased Nest Labs.”, it also contains a further explanation of Nest Labs that Nest Labs is a thermostat maker, and we think such additional information leads to non-paraphrases.</S>
			<S sid ="332" ssid = "59">Although its template X h as announced plans to buy thermostat maker Y is suitable for few extracted entity tuples, it received the propagated value from the strong coordinate degree between other tuples and (Google,Nest Labs).</S>
			<S sid ="333" ssid = "60">We surveyed the result of coordinate entity tuples and found that entity tuples such as (Microsoft,Nokia), (Yahoo,Tumblr) get higher coordinate values than those of other queries.</S>
			<S sid ="334" ssid = "61">This leads a misjudgment of paraphrases.</S>
			<S sid ="335" ssid = "62">Table 5 shows some correct and incorrect paraphrases obtained by our method for the query from the headquarter relation.</S>
			<S sid ="336" ssid = "63">As we mentioned before, this query performs the worst.</S>
			<S sid ="337" ssid = "64">Actually, we extract even less than 40 templates from the top 1000 search results of the query “Yahoo AND Sunnyvale”.</S>
			<S sid ="338" ssid = "65">The reasons we considered are that ﬁrstly, there are not so many search results contained both Yahoo and Sunnyvale in a single sentence; secondly, even they are in the same sentence, that sentence may be too short, or too long.</S>
			<S sid ="339" ssid = "66">Besides, advertisements also have an inﬂuence.</S>
			<S sid ="340" ssid = "67">Take the incorrect paraphrase “View all Yahoo jobs in Sunnyvale.” for example.</S>
			<S sid ="341" ssid = "68">Such advertisements are suitable for almost all extracted entity tuples, so they get higher paraphrase values.</S>
			<S sid ="342" ssid = "69">From the above discussion, we can point out that if the number of extracted templates could increase (i.e. using high-valued coordinate entity tuples to gather more templates), our method’s performance would improve to some extent.</S>
			<S sid ="343" ssid = "70">And we should give a penalty to a too-general template to restrict the value propagation, since it is likely to be an advertisement, or an automatically generated sequence by a website to increase its click rate.</S>
	</SECTION>
	<SECTION title="Conclusion. " number = "7">
			<S sid ="344" ssid = "1">Given a sentence, our proposed method aims to ﬁnd its paraphrases from the noisy Web.</S>
			<S sid ="345" ssid = "2">Here we incorporate coordinate relationship and take a mutually reinforcing way to calculate paraphrase degree and coordinate degree.</S>
			<S sid ="346" ssid = "3">Experiments show our average precision is 60.5 %, compared to TE/ASE method with average precision of 44.15 %.</S>
			<S sid ="347" ssid = "4">Besides, the average number of correct paraphrases is 8.6 of our method, compared to TE/ASE method of 5.5.</S>
			<S sid ="348" ssid = "5">As we stated in Sect.</S>
			<S sid ="349" ssid = "6">6.2, for some queries, we cannot get enough templates.</S>
			<S sid ="350" ssid = "7">One way to solve this problem is to use high-valued coordinate entity tuples to gather more templates, and even execute our method in a iterative way.</S>
			<S sid ="351" ssid = "8">However, it causes too many accesses to the Web, and sometimes, we still cannot ﬁnd enough templates.</S>
			<S sid ="352" ssid = "9">Another way to solve this problem is to do syntactic analysis to eliminate some additional information, i.e. “thermostat maker”.</S>
			<S sid ="353" ssid = "10">Furthermore, we will give a penalty to a too-general template to restrict the value propagation.</S>
			<S sid ="354" ssid = "11">Acknowledgment.</S>
			<S sid ="355" ssid = "12">This work was supported in part by the following projects: Grants- in-Aid for Scientiﬁc Research (Nos.</S>
			<S sid ="356" ssid = "13">24240013, 24680008) from MEXT of Japan.</S>
	</SECTION>
</PAPER>
