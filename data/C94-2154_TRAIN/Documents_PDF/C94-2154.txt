TIIE CORRECT AND EFFICIENT '~ TION OF' APPI[()PRIATENESS 
IMI)LI~',MI,N.[A" SPECIFI(:ATIONS FOR TYPF;D FlgATURI" STRUCTUR]~,S 
Dale GeMemalm and Paul John I(ing* 
Seminar t'iir Sprachwissenschaft, Uniw',rsitS~t Tiibingen t 

ABSTRACT 

in this pa,per, we argue tha, t type inferenc- ing incorrectly implements a.pl)rolwiate-ness specifica.tions for typed [ea.ture struc- tures, promote a combina.tion of l;ype res- olution and unfilling a,s a. correct a.nd ef'~ ticient Mternative, and consider the ex-pressive limits of this a.lterna.tive approa.ch. !['hroughout, we use feature cooccurence restrictions as illustration and linguistic motivation. 

INTRODUCTION 

Unification lbrmMisms ma.y be either un-typed (DCC~s, PATR-II, 1,F(;) or typed (npsG). A m~L,ior reason for adding types to ~ forma,lism is to express restrictions on fea.ture cooccurences a.s in (;l's(:: [5] in order to rule out nonexista.nt tyl)es of objects. For example, there a.re no verbs which have the [km.ture +R. The simplest way to express such restrictions is by mea.ns of a.n a.ppropria.teness pa.r-tim flmction Approp: Type × Feat ~ Type. With such a.n a.pl)rol)riatleness specifica.- tion lrla.tly Sllch restrictioi,s may be ex-pressed, though no restrictions involving reentrancies ma.y be expressed. 
In this pal)er, we will first in §2 survey the range of type eonstra.ints tha.t ma.y be expressed with just a. type hiera.rchy and 
*']'he resea.rch pl'eS(!lllL('d ill |,his; paper was pay tia.lly sponsored hy '[kfilprojekt B4 "(;onsl.rahH.s on Grammar fl~r Efficient Ck:neration" of the Soi,der forschungsbereich 340 of the Deutsche ["orschungs-gemeinscha, ft. "VVe would also like to thank 'l'hilo GStz for helph,l comments ou thc ideas present.ed here. All mistakes a.rc of collrsc our OWll. 
IKI. Wilhehnstr. 113, |)-721174Tfilfi,,ge,, (ler- ma.ny, {rig,King} g'~sfs.n phil.uni-I uebingen.de. 
a.n N)propria.teness specification. Then in ~3, we discuss how such type cons|fronts linty be mainta.ined under unification as exemplilied in the na.tura.1 language D~rs- ing/generation system '.l'ro]l [7]. 1 Unlike previous systems such as ALl,:, Troll does not employ a.ny type infereneing, inste~M, a, limited amount of named disjunction ([1 1], [12], [6])is introduced to record type resol u tion possibilities. The a.lnount of dis- junction is a.lso kept small by the technique of unlilli,g described in [9]. This strategy a.ctua.lly ma.inta.ins apl)ropri~tteness condi- tions in some ca.ses in which a. type in-ferencing stra.tegy would fa.il, l)'inMly, in §4, we discuss the possibilities for gener- a lizillg this a.pl)roa.ch to ha.ndle a bro~Mer r~tnge of constra.ints, including constraints inw)lving reentran cies. 

2 	APPROPRIATENESS FOR, MALISMS 
As discussed iu Gerdemann ,~ King [8], one ca.n view a.pl}rol)ria.teness CO[lditions as (lelining GPSG style fea,1;tl re cooccurence re- strict:ions (FCRs). In [8], we divided FCRs into co,j,,ctive and di.q,,~ctive ct~sses. A conjunctive FCI/. is a constra.int of the fol- lowing fornl : 
i[' a.n object is of ;~ cert;fin kind 
then 	ill deserves certa.in fea.tures 
with wdues of cert~till kinds 

An FCI~ stat:ing tha,2: a. verb must h~we v and N t'eatures with values A- and -re-spectively is a.ll example of a. conjunctive FCI{. A disjunctive I"CI{. is of the form: 
l rl'he "]'roll ,qysl.em was implemented in Quintus Prolog by Dale (lerdemann and '['hilo (]Stz. 
if an object is of a. cel'taiu kiud 
then it deserves cerl;a.in [ca,1;tll'C~s 
with vMues of certa.hi kinds, 
or it deserves cerl.ahi (pei'ha.liS 
other) fea.1;u res \vil, h viiiues of 
terra.in (perlla.ps other) kinds, 
or ... 
(31:it i:leserw.;s i:erl;a.in (lmrhal)S 
other) fea,1;llres wil.h Vi, l.[ll(~S o[ 
certain (perha.ps other) khi,<ls 

lo::I exa~]nple, the following F(',|/. sl.a.t.iug tha,t inverCed verbs lilt|S1, lie a.uxili;tries is disjunctive: a verb Ilitisl; ha.re the ['(~il.l.tll'(~s INV and AUX with va.l/ies d a.Iid I, -a.iitl 
i L-, or -;Mid -respectivel.y. 
Both o| these |el'illS or l,'(',lls iiHly I)(! expressed in a. foi'llla.iiSlli euiployhi<~ fiiiil.e lia,rtia.[ order (Type, E) o| types tllldel' sub- 8illnptioli> a, finite sel. Feat of ro;./.t;tll.(~s, 
and an a.pprol)ria.teness parl, ial rliilcl.ion 
Approp:Type X Feat -~ Type. [uluitively; the l, ypes fornla.lize I;lie notion ol" kinds +,j" objecl, t g: t,' ill' ca.oh oil|eel, of tyl>e t' i~<i 
Mso of l;Ylle L, il, ll(] Approp(l, f) = lI ill' (!;i('[I object oF type t deserves [eaA.urt~ f wil.]i :i. Vi./.]lle or type ft. ~@'e call S/IC]I it. [Ol'tll;li- iSlll i-i, ii ;I,])l)l"Opl']al, olio,~/ fOl'lllil]i~;lll. (',iLl'-
peliLel",s AI,F, and (,erdeliia. i ;ill(| (i(~t,z's Troll are ex:-t.niples o| illilllenienl.a.Lions o| 
a,pF, ro]) ria, Loliess |or illa.[iSlil,s. 
l low an a.i)ln'oprhi.teness [orniaJisnl en-co<les a conjunctive I:(',R is ob\.'i<>us~ bll(. llOW it encodes a disjuiictive I"(',1{ is less so. Ali exa.niple i|]usl;ral;es best how it. is done. ~Ul)pOS0 that F( ',1{ [i sl.al.es l.hal, ob- .iecls (if type t deserw! [(!a.[./ll'(!S f 'and .q, I)oth with boolea.I/ wdues a.ll(I ['lll'l,[lel'lllOF(~ that the va.hies of f aild g iil/lSl al~r(!e, [> is the disjunct]w! I"(111. 
if a,u object is o[ type l 

then it deserw:s f with va.lue -I- 

and q with wdue +, 

or it deserw.~s f with va.lue -

a.nd 9 with value -

To 0ncode [3> first iul,rodLiCe sul/l.yltes , t ~ ;+l.ll([ l" of I (1 E I/, 1.##), O11(! SUl)tyl)e ['()l' ea,ch disjuuct iu the cousequenl, of'p. Then encode the ]'ea.tli['e/wthl~.~ <'on(!il.illliS in l, he [irst disjunct ILy putthlg Approp(t', ./) :: ~-a,nd Approp(//~ q) -+, and encode the I'ea- ture/value conditions in the second dis-juu(:t by putting Approp(t',f) = -. and Approp(t',g) = . .'2 
This a pproa,ch Ina, kes two inll)ort;a, lll, 
closed-world type assumptious a, bouL (.he 
types tli~d; Slll)SlllIle 11o ogher types (hellCe- forth species), l:irst, the p;i.rtition condi-tiOII states tha.t for each type t, if a.n ob- ject is (31' type t theu the object is of ex-ax-I.ly o11(2 species subsulned by t. Second, the all-or-nothing cclndition sta, tes that 1'(31' each species ,q a.itd fea.ture f, either every 
el" IIO ol>,iecl, or species s deserves feature 
.#c.3 All a.l)ltroltriM,eliess [orli+ia.lisill sllc]l a.s 
ALl:, ([2], [3])ti,;t.l. does not uieet both c.ou-
ditions llla.y llOt; ]lroper[y el|cOde a, disjull('- 
five l"(:l/. For exalnple, consider disjunc-tive I"CI{. p. An a.I)prl;)pria.l, elleSS [ornia.l--iSlli I/lily l/O( properly encode 1,hi~t t / a.lld t" i'el)rt,selil, MI a.lid oilly the disjuncl, s ill the COll.qeqll(Hlt or [i wiLhout the i)a.rl,ition COll-d]tion. <till a.llln'ol)riill.eness [orlila.liSlll llia,y 
IIOl. llrOl)erly encode the [t~ii.l.llle/vii.hle (:(lll-<liiriOii: deinanded liy em'h disjuncl, hi the COli.~t!qllelil. o| p wilhoul, the a.i[-Ol'-liot;hilig c(m(til.ion. 
As indicat.ed a.bove, AI, I.; is iLIi exa.tlli)le o| it. f(n'liialiSlU I.ha.l, does it(it ineel; llol;h o| 1.hese closed world aS,glllnlil,iOli.g. In AI+E :-/. ['eli.l.tlr(~ st.i'llCtlile i.<4 won typed ifl' for ea.ch arc iit the te:+d.ure sI.l'tlCl;tlr0, if' 1,he SOtll'('(~ node is labelled wil.h type /., the targel; node is lallelled with 1;ype l / a.lld the il.i'c is IMlelled with [ea.tlll'(~ f 1,lien Approp(/.> .f) [ l/. Furl.her|note> a ['eal, urt~ strut(tire is 
>l'lds exanll)h: I:(JR is, for eXlmsil.ory l)nrl)oses, quilt simph'. "l'hc prolileni o[ c.xpr('.sshig F(Jl/'s, however, is a l'Cal Iiuguisl.ic i)rol)lcin. As noted I)y Copcstakc. ct al. [4], it. was inipossihlc I.o c.xpress CV('II Ihc .~ilii[)]oM. forilis o[ l"(JRs in l.hc.ii7 c×tciidcd VCISiOII (it' AI.E. 
'['hc basic principle of expressing l"Clls also ex lends Io I"(',[(s iuvolviug longer palhs. For exam-ple, to (:llSllt't: thai. for the type l, I.he path (fg) lakes a vahie subsuuied I)y .% one nlust tirst hll, ro ducc the chaiu Approp(/, f) = .,, Approp('a, g) = .~. Silch ilil.crlllCdialc I.'~'l)lts COllid ll(! hll.rodllced a.<-; part o[ a (onilli[al.iou sl.age.. 
4 Nob: I.hal. Ihesc cl,>s<,d world assulnplions art' explicitly made in Pollard ,t,. Sag (rorthcoming) [14]. 
well-typable iff the feature structure sub-sumes a well-typed feature structure, in ALl.:, type infereneing is employed to en-sure that all feature structures are well-typable--in fact, all feature structures are well typed. Unfortunately, well-typability is not sufficient to ensure that disjunctive FCRs are satisfied. Consider, For exam- pie, our encoding of the disjunctive FCR p and suppose that 99 is the fe, ature structure t[f : +,9 : -]. 90 is well-typed, and hence trivially well-typable. Unfortunately, 99 vb elates the encoded disjunctive FCR p. The only way one could interpret ~ as well-formed 
By contrast, the Troll system described in this paper has an etfeetive algorithm f<>r deciding well-formedness, which is based on the idea of efficiently representing dis- junctive possibilities within the feature struetu.re. Call a well-typed feature struc- ture in which all nodes are labelled with species a resolved feature structure and call a set of resolved feature structures that have the same underlying graph (that is, they differ only in their node labellings) 
a disjunctive resolved feature structure. We write fS, ~vf8 and 'D~.)c$ for the collections of feature structures, resolved feature structures and disjunctive resolved feature structures respectively. Say that F' 6 "l~f$ is a resolvaat of F C f,"? ill' F and .F' have the same underlying graph and F subsumes 1 ''l. Let taype resolution be the total flmction ~: f5" --+ DgfS such that 7~(1,') is the set of all resolvants of l i'. 
Guided by the llartition and all-or-nothing coMitions, King [13] has fOl'inti- lated a semantics of feature structures and developed a notion of a satisfiable feature structure such that l'7 C .T$ is satisfial~le if[' 7~(F) 7 ~ (7). C, erdemann ,% King [8] have also shown that a feature strtlcture l]leets all encoded FCRs ifl" the feature structure is satisfiable. The Troll system, which is based on this idea, effectively inqflements type resolution. 
Why does type resohttion succeed where. type inferencing fails? Consider again the encoding of p and the feature structure 9~. Loosely speaking, the appropriate-ness sl)eeifieations for type t encode the part of p that sta, tes that an object of tyl)e t deserves features f and g, both with boolean vahles. However, the ap-propriateness specifications for the speci- ate sul)types t' and t" of type t encode the part of p that states that these val-lies lnust agree. Well-typability only con-siders species if forced to. In the case of ~, well-typability can be estahlished by consklering type t alone, without the l)artition condition forcing one to find a well-typed species subsumed hy t. Conse-quently, well-tyl)ahility overlooks the part offl exehisively encoded by the ai)propri- ateness specifications for t' and t". Type resolution, on the other hand, always con- siders species. Thus, type resolving 9o cannot overlook the part of p exclusively encoded by tile appropriateness specifica- tions for t' and t'. 


3 MAINTAINING 
APPROPRIATENES S 


CONDITIONS 
l[ow may these D~.TS be used ill an inl-plenmntation? A very important prop-erty of the class of "DT~fS is that they are closed under unification, i.e., if/" and F' 6 D~f8 then F U F' 6 D'PvfS. 4 Given this prol)erty , it would in princi-ple lie possible to list the disjunctive re-solved feature sl;ructures h/ an iinplemen- tal;ion withonl; any additional type infer- 01]¢hig proc0dnre to ma.hltahi satisfialfil-ity. It would, of course~ tier be very of[i- cieut 1.o work with such large disjunctions of featiil'e strtlctilres. These disjunetiorls of fea.ture structnres, however, have a sin- gular l)rol)erty: all of the disjuncts have the same shape. The disjuncts differ only in the types labeling i;he nodes. This prop- 

4In fa.ct., it ~:~rl~ I)~ SI~OW ~ that if t" a.nd 1'" 6 fS then "R ( F) tJ 1"(1"') = "R ( F tO F'). Uni/ication of sets of fca.ture structures is defined here ill the standard way: S t2 ,S" = {1"[ I"' 6 S and l"" G S" and 1" = 1"' H 1""}. 
(!rty a.llows a. disjultctivo fesolv(,d featur(, structti re to I)e r(;l)rosetd,(~d more et[icieutly a,s ~t sitlgle untyl)(~d l'eatur(' st.l'll(:l.llfe plus a, sel; of d(;pondlmt node la.h(~liugs, which ca.n be further (;oml)a,(:t(~d using mi, Nie(l dis. junction a.s in (',(~rdemann [(i], I)i'~['re t(: 
Fo]' exanH)le , SUl)l)OS(~ \v(~ I,,yl)(~ r(~solvc the [ea, l, urc st, ructure t[,f ; bool,fl; bool] us-ing our encoding of p. ()he can (rosily see tha.t this fea.tur(~ strut:fur(, has only two I'e solwl, nts, which ca, n I)e colla.ps(~d iuto one fea,1;ure strlll:ttlro with llallV2d d]sjunci.ion a,s shown below: 
f:k , : :> f: (I t -)



II'll;1} ["'"' ]


0:t-LU: J ,u: (I t ) 

We now ha,vo a, [;(mSolml)ly COml)a(:l l'q)-resentaJ;ion hi which t.ho l"(il{, ha.s lie(Hi tl';tllsl;I,t(~([ iul,o a. Ila, ill(!(I ([iS.]llll(:l.ioli. Ih,w O,V(H'> (Hie should note tha, t fills dis.iun(: l;ion is only l)l'eSeUl; b(~(:aats(~ the ['oaJ, tli'O~i .f a,]l(l g ha>l)l)en 1:o I)o Fir(~s(HIt. Tilt!S(! I(,a tures would .eed l;o Im l)res(mt il w(~ wtwe enforchl<ej (Jaxpcnl,(H"s [:7] lcil, al w(ql i.yl)iug r(xluiroti]oilt ~ whhth ,qa,y's 1.1ial [(!al:ilr('s I. lial a,l:e a.llowed ilillSt 1)o pres,.ml., lllil. Iol.a[ well I.yping is, hi fax:t> incoinl)a.lib]e ;villi lype 
resolul, ioli~ since I;hore lilil$' w(ql I)o all inli llit;(~ seL of tota, lly w(,ll iyl)od I'esolvalil.s of ;1 l'(;a, Lllr(J st]'llcttir('~, For (~xa.llipi(~, a.ll illi(lei'.- Sl)ocifiod list stl'u('tlir(' couhl be iT(~S()/v0(I 1.o ;~ list of length (L a. list of h:ngl.h 1, el.c, 
,qhlce I, ota.I well I,yliin g is liOt i'(!quir(!([, we lm~y i~s well a.ctiwqy un[il[ r0(lulid;lnt ['0a, tlires, 5 ill this (!Xalli[)l(!> i[ t, li(' f ail(l (7 fo.a, tllrOS ;~l'e reliiovod, we a,lO lell wil, h lh(, simple, disjunction {if,/'~}: which is (!quiv- a,lent, to l;]le or(lillaJ'y l,Yl)(' l.(; Thus, iu lliis ca, so> ]lO (lisjtulcl, ion a.t all ix rc!(llliro(l 10 (!11" force the I"CIL All th',tt is requirc(I is tim 
~qntuil, ively, [eat, ui'cs arc rodundaui it Ilwir val llCS art'. eul,h'cl 5 predictaldc fl'oui ihc approluiaic 
.ross Sl>eCificatim,..%'c GStz [1)], (',cr,lemam, [7] k,r ;I. IIlOl;('. [HXX:iHCforUllllalioii. °[n this casc, il. would also have b(:ml l)~>,~iblc 
to unlill Lhc oi'i<eiuai teal, life Sll'tl<ltllc I,.I.ie I*' solviug. /Snforl, unai,e, ly, llmvcvcr, this i~; l.>i ;ihvay~. the (:asc, as C;lll |)(! S(!t'II in the [ollowiug (!Xalll])lC: t{j: +] :> {C/: +]} ~ ~'. 
asSUml)tion tha.t t will only be ext(mded 
I)y unil'ying il with a.lmther (t;Oml)a.ct(~d) 
m(mll)(!r o[' "l)']?.Jr,_c,. 
This, h.w(wer, wa.s a. simple ca.se iu which a.I1 of the named dis.jun(:tion could ho removed. It would not lmve I)('en i)os sihle to relnov(' tim fea.tur('s f ~tll(I g if thest~ 17,atu['es had I)oen involved iu re(m-tranci(+s of i[' tlt(,se lim.tures ha.d ha.d t:om- i)h+x va.lu('s, lu gt+tlera.I, howover, our eXl)e- ri(!ll(:(~ ha,s I)(~(ql that, eV(;l! wil, li very (:()tit pl('x type hi(~ra, rchi(~s a.nd |'(m, tur(; SLI'UC-l, lll'eS [()1" liPS(i, very i'ow named (lisjunc-lions a, re introdu('e(l. 7 q'hus~ uuilica.1;ion is e;(merally uo more (~xp(msive tha.n unifica.- 
li,:)H with unlylmd l(mt.ur(~ sl.fu(:l.ur('s. 
4 CONCLUSIONS 
\% havc~ sh,:Y, vu in this i~al),:~r tha.t the kind of consl raints ,:~Xl)r.t~ssihlo Ity api)Vol)rh~,l;o-r.~ss c~mdit.ions call he imlflemc'.nted iN a i.'actical .,.D, sle]n e,ul)loyinK typ,M featu r,:'~ st.ru(:t.uf(,s and utdlica.Lion a.s I.he I:,ritna.ry Ol)(U'a,t, ic:,n on t(>;t,l, ur<+ ,'-;t, ruct, ure~. Ilut what. Of IIlOl'(' COIII[)I(~N l;yp(~ CC'IIH|,F.~LilI|,,q it~v'.)l',.' 
h~y; r(~enl;ram:ies': [ntro(IL~ciug reeJH.ra.ncies illl. ,::<rest ralid.s allows E.' the F,O~sihillty of d(~liNiu/,, recursivc l.yl),:~s ~ such a.s the (leli nitkm of append in [I]. (;lea['ly the re ~olv;-~nl.~, o[ such a. recursiv(~ l.yl)(', could Not I)(~ l,reCOmlfiled a.s r,.~quiI'oxl in Troll. 
Oue might, uew'rtholoss, considm' a l- [OWil]l[ f('(Hl(, f a, ll('y- ('OIls t f a hI| S oll lloll-
recursiv(qy defiltcd l.ypcs. A ])ro/)leul still arises; nantcly, il lhe l'eSo[va.itts of a Frail, till't1 .qll'tlCI411"(~ ill(:ludcd sonic with a pa.rticu 
lar r(~onll'all(:y a.nd s()Tn(~ \viLh(',ul, then the (:,.)mliti()ll iliad, a.II resc)lva.uts ha.v(~ th,:~ same shal)(~ would m)lon~e[' hold. ()ue v.,ottkl l.her(q'or,.~ no(~(l i.o eml)loy a moue COml)l(,x 
vorsion .r ,a.med (lis.it, f,t:tio, (Ill], [12], 
tit)I). It. ig (i,.L(~sti,.malfl(~ wh('thef such a.d ditional (:()mpl(~xit.y would I)e justified to 
'Our CXl)ericl~(:c is derived l,'imarily flora test-i.I" Ihc 'l'loll system (m a tat, her lar<e,e e, ramul;G for (',(!l>lll;lll imfiial vcrh I>lHases, which was wiit-t('n I)y I'hhard Ilillrichs a.d Tsum:ko Na, kazawa aud iinl)lclncut,cd by I)clmar McuH_:J's. 
handle this limited class of reentrancy- constraints. 
It seems then, that the class of con-straints that can be expressed by appro- priateness conditions corresponds closely to the class of constraints that can be effi- ciently preeompiled. We take this as a jus- tification for appropriateness formalisms in general. It makes sense to ~d)straet out the efficiently processable constraints and then allow another mechalfiSm, such as at- tachments of definite clauses, to express more complex constraints. 



References 
[1] l[asmn 	Ait-Kaci. A New Model of Computation Based on a Calculus of Type Subsum, ption. Phi) thesis, Uni- versity of Pennsylvania, 1985. 
[2] Bob 	Carpenter. the Logic of "]!qped l;~ature ,5'tructurcs. (~ambridge q>acts in Theoretical Computer Science :{2. Cambridge University Press, 1992. 
[3] Bob Carpenter. 	AI,E The Attribute Logic Engine, U.ser'.s Guide, 1993. 
[4] Ann 	Copestake, Antonio Saniilippo, Ted Briscoe, and Valeria De Paiwl.. The ACQUILEX IA{B: An introduc- tion. In Ted l/riseoe, Valeria l)e Paiva, and Ann (Jopesta.ke, editors, 
Inheritance, Defaults, and the Lea:i-con., pages 148-1163. (,'ambridge UI ), t993. 
[5] Jochen 	Darre and Andrea.s Eisele. Feature logic with disjunctive unifi-cation. In COLING-90 vol, 2, pages 100-105, 1990. 
[6] Gerald Gazdar, Ewan Klein, (~eoffrey Pullum, a.nd Iva.n Sag. Generalized Phrase Structure G'romm, ar. lla.rvar(l University Press, C'ambridge, Mass, 1985. 
[7] Dale Gerdemann. 	Parsing and (;c~.- eration of UniJieation Gram, roots. 
PhD thesis, University of Illinois, 
11991. Published as Beckman Insti-tute Cognitive Science Technical Re-port CS-91-06. 
[8] l)ale Cerdem~nn. Trolh Type resolu- tion system, user's guide, [994. M~ut- hal for tile Troll system implelnented by Dale Gerdemann & Thilo G6tz. 
[9] Dale 	Gerdemann and Paul John King. Typed feature structures for expressing and computationally im-plementing feature cooccurence re-strictions. In Proceedings of ~. Fach- tagun(i der Sektion Computer- linguistik dc'r Deulsehen Gesell- seh.aj't J'~Tr ,~'prachwis.~cnsehaft, pages 33 39, 1993. 
[10] Thilo GStz. A normal form for typed feature structures. Master's thesis, Universit/it Tiibingen, 11993. 
It l] John (~riffith. Di,@metion and l'/f-ficient Processing of 1,'eature De- seription.~. I'hl) thesis, UniversitS~t Tiibingen, i1994. 'llmtative Title. 
[12] l)aul .John King. Tyl)ed feature struc- tures as descriptions, 1994. hi these proceedings. 
[13] .h)hn T. 	Ma.xwell III and I{onahl M Kapla.n. An overview of disjunctive constraint satisfa.ction. In lhvccedings of h~ternational Workshop on Pars-in 9 Teelmologies , pages 18-27, 1989. 
[14] Carl l'ollard and [win Sag. Head Driven Phrase Structure Grammar. CSI,I Lecture Notes. Chicago Univer- silly Press, C'hicago, forthcoming. 


