Citance Number,Citation Marker,Citation Marker Offset,Citation Offset,Citation Text,Citation Text Clean,Citing Article,Discourse Facet,Reference Article,Reference Offset,Reference Text
1.0,"Collins and Singer, 1999",0,0,"Co-Training has been used before in applications like word-sense disambiguation (Yarowsky, 1995), web-page classification (Blum and Mitchell, 1998) and named entity identification (Collins and Singer, 1999)","Co-Training has been used before in applications like word-sense disambiguation (Yarowsky, 1995), web-page classification (Blum and Mitchell, 1998) and named entity identification (Collins and Singer, 1999)",N01-1023,"Method_Citation,Hypothesis_Citation,Implication_Citation",W99-0613,"'55','47','28'","<S sid=""55"" ssid=""9"">In addition to the named-entity string (Maury Cooper or Georgia), a contextual predictor was also extracted.</S><S sid=""47"" ssid=""1"">971,746 sentences of New York Times text were parsed using the parser of (Collins 96).1 Word sequences that met the following criteria were then extracted as named entity examples: whose head is a singular noun (tagged NN).</S><S sid=""28"" ssid=""22"">(Yarowsky 95) describes an algorithm for word-sense disambiguation that exploits redundancy in contextual features, and gives impressive performance.</S>"
2.0,"Collins and Singer, 1999",0,0,"They also discuss an application of classifying web pages by using their method of mutually constrained models. (Collins and Singer, 1999) further extend the use of classifiers that have mutual constraints by adding terms toAdaBoost which force the classifiers to agree (called Co Boosting)","(Collins and Singer, 1999) further extend the use of classifiers that have mutual constraints by adding terms to AdaBoost which force the classifiers to agree (called Co Boosting)",N01-1023,"Method_Citation,Hypothesis_Citation,Results_Citation,Implication_Citation",W99-0613,"'137','174','248'","<S sid=""137"" ssid=""4"">The new algorithm, which we call CoBoost, uses labeled and unlabeled data and builds two classifiers in parallel.</S><S sid=""174"" ssid=""41"">The two new terms force the two classifiers to agree, as much as possible, on the unlabeled examples.</S><S sid=""248"" ssid=""15"">With each iteration more examples are assigned labels by both classifiers, while a high level of agreement (> 94%) is maintained between them.</S>"
3.0,Collins and Singer 1999,0,0,"Recent methods for English NER focus on machine-learning algorithms such as DL-CoTrain, CoBoost [Collins and Singer 1999], HMM [Daniel M. Bikel 1997], maximum entropy model [Borthwick, et al 1999] and so on","Recent methods for English NER focus on machine-learning algorithms such as DL-CoTrain, CoBoost [Collins and Singer 1999], HMM [Daniel M. Bikel 1997], maximum entropy model [Borthwick, et al 1999] and so on",W03-1509,"Method_Citation,Hypothesis_Citation,Implication_Citation",W99-0613,"'91','7','33'","<S sid=""91"" ssid=""24"">There are two differences between this method and the DL-CoTrain algorithm: spelling and contextual features, alternating between labeling and learning with the two types of features.</S><S sid=""7"" ssid=""1"">Many statistical or machine-learning approaches for natural language problems require a relatively large amount of supervision, in the form of labeled training examples.</S><S sid=""33"" ssid=""27"">The second algorithm builds on a boosting algorithm called AdaBoost (Freund and Schapire 97; Schapire and Singer 98).</S>"
4.0,"Collins and Singer, 1999",0,0,"DL-CoTrain, (Collins and Singer, 1999), learns capitalized proper name NEs from a syn tactically analyzed corpus","DL-CoTrain, (Collins and Singer, 1999), learns capitalized proper name NEs from a syntactically analyzed corpus",C02-1154,"Method_Citation,Hypothesis_Citation,Implication_Citation",W99-0613,"'10','79','91'","<S sid=""10"" ssid=""4"">The task is to learn a function from an input string (proper name) to its type, which we will assume to be one of the categories Person, Organization, or Location.</S><S sid=""79"" ssid=""12"">2 We now introduce a new algorithm for learning from unlabeled examples, which we will call DLCoTrain (DL stands for decision list, the term Cotrain is taken from (Blum and Mitchell 98)).</S><S sid=""91"" ssid=""24"">There are two differences between this method and the DL-CoTrain algorithm: spelling and contextual features, alternating between labeling and learning with the two types of features.</S>"
5.0,"Collins and Singer, 1999",0,0,"(Collins and Singer, 1999) also makes use of competing categories (person, organization, and location), which cover 96% of all the instances itset out to classify","(Collins and Singer, 1999) also makes use of competing categories (person, organization, and location), which cover 96% of all the instances it set out to classify",C02-1154,"Method_Citation,Hypothesis_Citation,Implication_Citation",W99-0613,"'236','77','10'","<S sid=""236"" ssid=""3"">We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.</S><S sid=""77"" ssid=""10"">In this paper k = 3 (the three labels are person, organization, location), and we set a = 0.1.</S><S sid=""10"" ssid=""4"">The task is to learn a function from an input string (proper name) to its type, which we will assume to be one of the categories Person, Organization, or Location.</S>"
6.0,"Collins and Singer, 1999",0,0,"In (Collins and Singer, 1999) Collins and Singer show that unlabeled data can be used to reduce the level of supervision required for named entity classification","In (Collins and Singer, 1999) Collins and Singer show that unlabeled data can be used to reduce the level of supervision required for named entity classification",W06-2204,"Method_Citation,Hypothesis_Citation,Results_Citation,Implication_Citation",W99-0613,"'250','0','2'","<S sid=""250"" ssid=""1"">Unlabeled examples in the named-entity classification problem can reduce the need for supervision to a handful of seed rules.</S><S sid=""0"" ssid=""0"">Unsupervised Models for Named Entity Classification Collins</S><S sid=""2"" ssid=""2"">A large number of rules is needed for coverage of the domain, suggesting that a fairly large number of labeled examples should be required to train a classi- However, we show that the use of data can reduce the requirements for supervision to just 7 simple &quot;seed&quot; rules.</S>"
8.0,"Collins and Singer, 1999",0,0,"Collins and Singer (1999) for example report that 88% of the named entities occurring in their data set belong to these three categories (Collins and Singer, 1999)","Collins and Singer (1999) for example report that 88% of the named entities occurring in their data set belong to these three categories (Collins and Singer, 1999)",W03-1022,"Method_Citation,Hypothesis_Citation,Implication_Citation",W99-0613,"'236','19','248'","<S sid=""236"" ssid=""3"">We chose one of four labels for each example: location, person, organization, or noise where the noise category was used for items that were outside the three categories.</S><S sid=""19"" ssid=""13"">Given around 90,000 unlabeled examples, the methods described in this paper classify names with over 91% accuracy.</S><S sid=""248"" ssid=""15"">With each iteration more examples are assigned labels by both classifiers, while a high level of agreement (> 94%) is maintained between them.</S>"
9.0,"Collinsand Singer, 1999",0,0,"While EM has worked quite well for a few tasks, notably ma chine translations (starting with the IBM models 1-5 (Brown et al, 1993), it has not had success inmost others, such as part-of-speech tagging (Merialdo, 1991), named-entity recognition (Collinsand Singer, 1999) and context-free-grammar induction (numerous attempts, too many to mention)","While EM has worked quite well for a few tasks, notably machine translations (starting with the IBM models 1-5 (Brown et al, 1993), it has not had success in most others, such as part-of-speech tagging (Merialdo, 1991), named-entity recognition (Collinsand Singer, 1999) and context-free-grammar induction (numerous attempts, too many to mention)",E09-1018,"Method_Citation,Aim_Citation,Results_Citation,Implication_Citation",W99-0613,"'16','55','57'","<S sid=""16"" ssid=""10"">Supervised methods have been applied quite successfully to the full MUC named-entity task (Bikel et al. 97).</S><S sid=""55"" ssid=""9"">In addition to the named-entity string (Maury Cooper or Georgia), a contextual predictor was also extracted.</S><S sid=""57"" ssid=""11"">From here on we will refer to the named-entity string itself as the spelling of the entity, and the contextual predicate as the context.</S>"
11.0,"Collins and Singer, 1999",0,0,"In addition, we would also like to explore the semi-supervised techniques such as co-training and self-training (Collins and Singer, 1999)","In addition, we would also like to explore the semi-supervised techniques such as co-training and self-training (Collins and Singer, 1999)",W07-1712,"Results_Citation,Hypothesis_Citation,Implication_Citation,Method_Citation,Aim_Citation",W99-0613,"'7','251','107'","<S sid=""7"" ssid=""1"">Many statistical or machine-learning approaches for natural language problems require a relatively large amount of supervision, in the form of labeled training examples.</S><S sid=""251"" ssid=""2"">In addition to a heuristic based on decision list learning, we also presented a boosting-like framework that builds on ideas from (Blum and Mitchell 98).</S><S sid=""107"" ssid=""40"">In a fully supervised setting, the task is to learn a function f such that for all i = 1...m, f (xi,i, 12,i) = yz.</S>"
12.0,"Collins and Singer, 1999",0,0,"Collins et al (Collins and Singer, 1999) proposed two algorithms for NER by modifying Yarowsky ?smethod (Yarowsky, 1995) and the framework suggested by (Blum and Mitchell, 1998)","Collins et al (Collins and Singer, 1999) proposed two algorithms for NER by modifying Yarowsky's method (Yarowsky, 1995) and the framework suggested by (Blum and Mitchell, 1998)",W09-2208,"Method_Citation,Hypothesis_Citation,Implication_Citation",W99-0613,"'4','26','31'","<S sid=""4"" ssid=""4"">We present two algorithms.</S><S sid=""26"" ssid=""20"">We present two algorithms.</S><S sid=""31"" ssid=""25"">Our first algorithm is similar to Yarowsky's, but with some important modifications motivated by (Blum and Mitchell 98).</S>"
13.0,"Collins and Singer, 1999",0,0,"This approach was shown to perform well on real-world natural language problems (Collins and Singer, 1999)","This approach was shown to perform well on real-world natural language problems (Collins and Singer, 1999)",W06-2207,"Results_Citation,Hypothesis_Citation,Implication_Citation,Method_Citation,Aim_Citation",W99-0613,"'7','251','37'","<S sid=""7"" ssid=""1"">Many statistical or machine-learning approaches for natural language problems require a relatively large amount of supervision, in the form of labeled training examples.</S><S sid=""251"" ssid=""2"">In addition to a heuristic based on decision list learning, we also presented a boosting-like framework that builds on ideas from (Blum and Mitchell 98).</S><S sid=""37"" ssid=""31"">The algorithm builds two classifiers iteratively: each iteration involves minimization of a continuously differential function which bounds the number of examples on which the two classifiers disagree.</S>"
15.0,"Collins and Singer, 1999",0,0,"(6) Similarly to (Collins and Singer, 1999) we used T= 0.95 for all experiments reported here","(6) Similarly to (Collins and Singer, 1999) we used T= 0.95 for all experiments reported here",W06-2207,"Method_Citation,Hypothesis_Citation,Implication_Citation",W99-0613,"'77','85','133'","<S sid=""77"" ssid=""10"">In this paper k = 3 (the three labels are person, organization, location), and we set a = 0.1.</S><S sid=""85"" ssid=""18"">(If fewer than n rules have Precision greater than pin, we 3Note that taking tlie top n most frequent rules already makes the method robut to low count events, hence we do not use smoothing, allowing low-count high-precision features to be chosen on later iterations. keep only those rules which exceed the precision threshold.) pm,n was fixed at 0.95 in all experiments in this paper.</S><S sid=""133"" ssid=""66"">Fort= 1,...,T:</S>"
16.0,1999,0,0,We use Collins and Singer (1999) for our exact specification of Yarowsky.2 It uses DL rule scores ?fj?| ?fj |+ |? f |+ L (1) where  is a smoothing constant,We use Collins and Singer (1999) for our exact specification of Yarowsky,P12-1065,"Method_Citation,Hypothesis_Citation,Implication_Citation",W99-0613,"'4','26','31'","<S sid=""4"" ssid=""4"">We present two algorithms.</S><S sid=""26"" ssid=""20"">We present two algorithms.</S><S sid=""31"" ssid=""25"">Our first algorithm is similar to Yarowsky's, but with some important modifications motivated by (Blum and Mitchell 98).</S>"
