 The authors presented, in this paper, KenLM, a library that implemented two data structures for efficient language model queries, reducing both time and costs. The structure used linear probing hash tables and was designed for speed. The PROBING model was 2.4 times as fast as the fastest alternative, SRILM, and used less memory too. The TRIE model used less memory than the smallest lossless alternative and was still faster than SRILM. These performance gained transfer to improved system run time performance. Though they focused on Moses, their code was the best lossless option with cdec and Joshua. They attained these results using several optimizations: hashing, custom look up tables, bit-level packing, and state for left-to-right query patterns. The code was open source, had minimal dependencies, and offered both C++ and Java interfaces for integration.